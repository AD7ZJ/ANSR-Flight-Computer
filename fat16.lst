ARM GAS  /tmp/ccNwMSzu.s 			page 1


   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"fat16.cpp"
  12              	@ GNU C++ (Sourcery G++ Lite 2011.03-42) version 4.5.2 (arm-none-eabi)
  13              	@	compiled by GNU C version 4.3.2, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  14              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  15              	@ options passed:  -I . -I../arm/arm7lib -iprefix
  16              	@ /home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/
  17              	@ -isysroot
  18              	@ /home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../arm-none-eabi -MD
  19              	@ fat16.d -MF .dep/fat16.o.d -MP -MQ fat16.o -D__USES_INITFINI__
  20              	@ -D__CS_SOURCERYGXX_MAJ__=2011 -D__CS_SOURCERYGXX_MIN__=3
  21              	@ -D__CS_SOURCERYGXX_REV__=42 fat16.cpp -mcpu=arm7tdmi -auxbase-strip
  22              	@ fat16.o -gdwarf-2 -O0 -Wall -fno-rtti -fno-exceptions
  23              	@ -fomit-frame-pointer -ffunction-sections -fverbose-asm
  24              	@ options enabled:  -falign-loops -fargument-alias -fauto-inc-dec
  25              	@ -fbranch-count-reg -fcommon -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  26              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  27              	@ -ffunction-sections -fgcse-lm -fident -finline-functions-called-once
  28              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  29              	@ -fkeep-static-consts -fleading-underscore -fmath-errno
  30              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  31              	@ -fpeephole -fpromote-loop-indices -freg-struct-return
  32              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  33              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  34              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  35              	@ -fsched-stalled-insns-dep -fshow-column -fsigned-zeros
  36              	@ -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -ftrapping-math
  37              	@ -ftree-cselim -ftree-forwprop -ftree-loop-im -ftree-loop-ivcanon
  38              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pta
  39              	@ -ftree-reassoc -ftree-scev-cprop -ftree-slp-vectorize
  40              	@ -ftree-vect-loop-version -funit-at-a-time -fverbose-asm
  41              	@ -fzero-initialized-in-bss -mlittle-endian -msched-prolog
  42              	@ -mthumb-interwork
  43              	
  44              		.section	.debug_abbrev,"",%progbits
  45              	.Ldebug_abbrev0:
  46              		.section	.debug_info,"",%progbits
  47              	.Ldebug_info0:
  48              		.section	.debug_line,"",%progbits
  49              	.Ldebug_line0:
  50 0000 800C0000 		.text
  50      02009003 
  50      00000201 
  50      FB0E0D00 
  50      01010101 
  51              	.Ltext0:
  52              	@ Compiler executable checksum: cfdaeede3ac8e9b2b599068efabc405c
  53              	
ARM GAS  /tmp/ccNwMSzu.s 			page 2


  54              		.cfi_sections	.debug_frame
  55              		.bss
  56              		.align	2
  57              	_ZL20FAT16SingletonObject:
  58 0000 00000000 		.space	580
  58      00000000 
  58      00000000 
  58      00000000 
  58      00000000 
  59              		.section	.text._ZN5FAT1611GetInstanceEv,"ax",%progbits
  60              		.align	2
  61              		.global	_ZN5FAT1611GetInstanceEv
  62              		.type	_ZN5FAT1611GetInstanceEv, %function
  63              	_ZN5FAT1611GetInstanceEv:
  64              	.LFB109:
  65              		.file 1 "fat16.cpp"
   1:fat16.cpp     **** /* This program is free software; you can redistribute it and/or modify
   2:fat16.cpp     ****  * it under the terms of the GNU General Public License version 2 as
   3:fat16.cpp     ****  * published by the Free Software Foundation.
   4:fat16.cpp     ****  */
   5:fat16.cpp     **** 
   6:fat16.cpp     **** //#include "armlib.h"
   7:fat16.cpp     **** //#include "partition.h"
   8:fat16.cpp     **** //#include "fat16.h"
   9:fat16.cpp     **** //#include "fat16_config.h"
  10:fat16.cpp     **** //#include "sd_raw.h"
  11:fat16.cpp     **** 
  12:fat16.cpp     **** #include "main.h"
  13:fat16.cpp     **** 
  14:fat16.cpp     **** 
  15:fat16.cpp     **** /**
  16:fat16.cpp     ****  * \addtogroup fat16 FAT16 support
  17:fat16.cpp     ****  *
  18:fat16.cpp     ****  * This module implements FAT16 read and write access.
  19:fat16.cpp     ****  *
  20:fat16.cpp     ****  * The following features are supported:
  21:fat16.cpp     ****  * - File names up to 31 characters long.
  22:fat16.cpp     ****  * - Unlimited depth of subdirectories.
  23:fat16.cpp     ****  * - Short 8.3 and long filenames.
  24:fat16.cpp     ****  * - Creating and deleting files.
  25:fat16.cpp     ****  * - Reading and writing from and to files.
  26:fat16.cpp     ****  * - File resizing.
  27:fat16.cpp     ****  * - File sizes of up to 4 gigabytes.
  28:fat16.cpp     ****  *
  29:fat16.cpp     ****  * @{
  30:fat16.cpp     ****  */
  31:fat16.cpp     **** /**
  32:fat16.cpp     ****  * \file
  33:fat16.cpp     ****  * FAT16 implementation.
  34:fat16.cpp     ****  *
  35:fat16.cpp     ****  * \author Roland Riegel
  36:fat16.cpp     ****  */
  37:fat16.cpp     **** 
  38:fat16.cpp     **** /**
  39:fat16.cpp     ****  * \addtogroup fat16_config FAT16 configuration
  40:fat16.cpp     ****  * Preprocessor defines to configure the FAT16 implementation.
  41:fat16.cpp     ****  */
ARM GAS  /tmp/ccNwMSzu.s 			page 3


  42:fat16.cpp     **** 
  43:fat16.cpp     **** /**
  44:fat16.cpp     ****  * \addtogroup fat16_fs FAT16 access
  45:fat16.cpp     ****  * Basic functions for handling a FAT16 filesystem.
  46:fat16.cpp     ****  */
  47:fat16.cpp     **** 
  48:fat16.cpp     **** /**
  49:fat16.cpp     ****  * \addtogroup fat16_file FAT16 file functions
  50:fat16.cpp     ****  * Functions for managing files.
  51:fat16.cpp     ****  */
  52:fat16.cpp     **** 
  53:fat16.cpp     **** /**
  54:fat16.cpp     ****  * \addtogroup fat16_dir FAT16 directory functions
  55:fat16.cpp     ****  * Functions for managing directories.
  56:fat16.cpp     ****  */
  57:fat16.cpp     **** 
  58:fat16.cpp     **** /**
  59:fat16.cpp     ****  * @}
  60:fat16.cpp     ****  */
  61:fat16.cpp     **** 
  62:fat16.cpp     **** /// Reserve memory for singleton object.
  63:fat16.cpp     **** static FAT16 FAT16SingletonObject;
  64:fat16.cpp     **** 
  65:fat16.cpp     **** /**
  66:fat16.cpp     ****  *  Get a pointer to the FAT16 object.
  67:fat16.cpp     ****  */
  68:fat16.cpp     **** FAT16 * FAT16::GetInstance()
  69:fat16.cpp     **** {
  66              		.loc 1 69 0
  67              		.cfi_startproc
  68              		@ Function supports interworking.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  70:fat16.cpp     ****     return  &FAT16SingletonObject;
  72              		.loc 1 70 0
  73 0000 04309FE5 		ldr	r3, .L2	@ D.12559,
  71:fat16.cpp     **** }
  74              		.loc 1 71 0
  75 0004 0300A0E1 		mov	r0, r3	@, <retval>
  76 0008 1EFF2FE1 		bx	lr	@
  77              	.L3:
  78              		.align	2
  79              	.L2:
  80 000c 00000000 		.word	_ZL20FAT16SingletonObject
  81              		.cfi_endproc
  82              	.LFE109:
  83              		.size	_ZN5FAT1611GetInstanceEv, .-_ZN5FAT1611GetInstanceEv
  84              		.section	.rodata
  85              		.align	2
  86              	.LC0:
  87 0000 4D414C4C 		.ascii	"MALLOC FAILS\012\015\000"
  87      4F432046 
  87      41494C53 
  87      0A0D00
  88 000f 00       		.align	2
  89              	.LC1:
ARM GAS  /tmp/ccNwMSzu.s 			page 4


  90 0010 4661696C 		.ascii	"Failed Reading Header\012\015\000"
  90      65642052 
  90      65616469 
  90      6E672048 
  90      65616465 
  91              		.section	.text._ZN5FAT1610fat16_openEPNS_16partition_structE,"ax",%progbits
  92              		.align	2
  93              		.global	_ZN5FAT1610fat16_openEPNS_16partition_structE
  94              		.type	_ZN5FAT1610fat16_openEPNS_16partition_structE, %function
  95              	_ZN5FAT1610fat16_openEPNS_16partition_structE:
  96              	.LFB110:
  72:fat16.cpp     **** 
  73:fat16.cpp     **** #define FAT16_CLUSTER_FREE 0x0000
  74:fat16.cpp     **** #define FAT16_CLUSTER_RESERVED_MIN (uint16_t)0xfff0
  75:fat16.cpp     **** #define FAT16_CLUSTER_RESERVED_MAX (uint16_t)0xfff6
  76:fat16.cpp     **** #define FAT16_CLUSTER_BAD (uint16_t)0xfff7
  77:fat16.cpp     **** #define FAT16_CLUSTER_LAST_MIN (uint16_t)0xfff8
  78:fat16.cpp     **** #define FAT16_CLUSTER_LAST_MAX (uint16_t)0xffff
  79:fat16.cpp     **** 
  80:fat16.cpp     **** #define FAT16_DIRENTRY_DELETED 0xe5
  81:fat16.cpp     **** #define FAT16_DIRENTRY_LFNLAST (1 << 6)
  82:fat16.cpp     **** #define FAT16_DIRENTRY_LFNSEQMASK ((1 << 6) - 1)
  83:fat16.cpp     **** 
  84:fat16.cpp     **** 
  85:fat16.cpp     **** 
  86:fat16.cpp     **** 
  87:fat16.cpp     **** 
  88:fat16.cpp     **** /**
  89:fat16.cpp     ****  * \ingroup fat16_fs
  90:fat16.cpp     ****  * Opens a FAT16 filesystem.
  91:fat16.cpp     ****  *
  92:fat16.cpp     ****  * \param[in] partition Discriptor of partition on which the filesystem resides.
  93:fat16.cpp     ****  * \returns 0 on error, a FAT16 filesystem descriptor on success.
  94:fat16.cpp     ****  * \see fat16_open
  95:fat16.cpp     ****  */
  96:fat16.cpp     **** FAT16::fat16_fs_struct* FAT16::fat16_open(struct partition_struct* partition)
  97:fat16.cpp     **** {
  97              		.loc 1 97 0
  98              		.cfi_startproc
  99              		@ Function supports interworking.
 100              		@ args = 0, pretend = 0, frame = 16
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 103              	.LCFI0:
 104              		.cfi_def_cfa_offset 4
 105 0004 14D04DE2 		sub	sp, sp, #20	@,,
 106              	.LCFI1:
 107              		.cfi_def_cfa_offset 24
 108 0008 04008DE5 		str	r0, [sp, #4]	@ this, this
 109 000c 00108DE5 		str	r1, [sp, #0]	@ partition, partition
 110              	.LBB2:
  98:fat16.cpp     **** 	UART0 * uart = UART0::GetInstance();
 111              		.loc 1 98 0
 112              		.cfi_offset 14, -4
 113 0010 FEFFFFEB 		bl	_ZN5UART011GetInstanceEv	@
 114 0014 0C008DE5 		str	r0, [sp, #12]	@, uart
  99:fat16.cpp     ****     if(!partition ||
ARM GAS  /tmp/ccNwMSzu.s 			page 5


 115              		.loc 1 99 0
 116 0018 00309DE5 		ldr	r3, [sp, #0]	@ tmp141, partition
 117 001c 000053E3 		cmp	r3, #0	@ tmp141,
 118 0020 0800000A 		beq	.L5	@,
 100:fat16.cpp     ****         #if FAT16_WRITE_SUPPORT
 101:fat16.cpp     ****         !partition->device_write
 119              		.loc 1 101 0 discriminator 1
 120 0024 00309DE5 		ldr	r3, [sp, #0]	@ tmp142, partition
 121 0028 103093E5 		ldr	r3, [r3, #16]	@ D.12546, partition_3(D)->device_write.__pfn
  99:fat16.cpp     ****     if(!partition ||
 122              		.loc 1 99 0 discriminator 1
 123 002c 000053E3 		cmp	r3, #0	@ D.12546,
 124 0030 0600001A 		bne	.L6	@,
 125              		.loc 1 101 0
 126 0034 00309DE5 		ldr	r3, [sp, #0]	@ tmp143, partition
 127 0038 143093E5 		ldr	r3, [r3, #20]	@ D.12548, partition_3(D)->device_write.__delta
 128 003c 013003E2 		and	r3, r3, #1	@ D.12549, D.12548,
 129 0040 000053E3 		cmp	r3, #0	@ D.12549,
 130 0044 0100001A 		bne	.L6	@,
 131              	.L5:
 102:fat16.cpp     ****        #else
 103:fat16.cpp     ****         0
 104:fat16.cpp     ****        #endif
 105:fat16.cpp     ****        )
 106:fat16.cpp     ****     return 0;
 132              		.loc 1 106 0
 133 0048 0030A0E3 		mov	r3, #0	@ D.12550,
 134 004c 240000EA 		b	.L7	@
 135              	.L6:
 107:fat16.cpp     **** 
 108:fat16.cpp     ****     struct fat16_fs_struct* fs = (fat16_fs_struct*)malloc(sizeof(*fs));
 136              		.loc 1 108 0
 137 0050 1C00A0E3 		mov	r0, #28	@,
 138 0054 FEFFFFEB 		bl	malloc	@
 139 0058 0030A0E1 		mov	r3, r0	@ tmp144,
 140 005c 08308DE5 		str	r3, [sp, #8]	@ D.12551, fs
 109:fat16.cpp     ****     if(!fs)
 141              		.loc 1 109 0
 142 0060 08309DE5 		ldr	r3, [sp, #8]	@ tmp145, fs
 143 0064 000053E3 		cmp	r3, #0	@ tmp145,
 144 0068 0400001A 		bne	.L8	@,
 110:fat16.cpp     ****     {
 111:fat16.cpp     ****     	uart->WriteLine("MALLOC FAILS\n\r");
 145              		.loc 1 111 0
 146 006c 0C009DE5 		ldr	r0, [sp, #12]	@, uart
 147 0070 7C109FE5 		ldr	r1, .L10	@,
 148 0074 FEFFFFEB 		bl	_ZN5UART09WriteLineEPKcz	@
 112:fat16.cpp     ****         return 0;
 149              		.loc 1 112 0
 150 0078 0030A0E3 		mov	r3, #0	@ D.12550,
 151 007c 180000EA 		b	.L7	@
 152              	.L8:
 113:fat16.cpp     ****     }
 114:fat16.cpp     ****     memset(fs, 0, sizeof(*fs));
 153              		.loc 1 114 0
 154 0080 08009DE5 		ldr	r0, [sp, #8]	@, fs
 155 0084 0010A0E3 		mov	r1, #0	@,
ARM GAS  /tmp/ccNwMSzu.s 			page 6


 156 0088 1C20A0E3 		mov	r2, #28	@,
 157 008c FEFFFFEB 		bl	memset	@
 115:fat16.cpp     **** 
 116:fat16.cpp     ****     fs->partition = partition;
 158              		.loc 1 116 0
 159 0090 08309DE5 		ldr	r3, [sp, #8]	@ tmp146, fs
 160 0094 00209DE5 		ldr	r2, [sp, #0]	@ tmp147, partition
 161 0098 002083E5 		str	r2, [r3, #0]	@ tmp147, fs_8->partition
 117:fat16.cpp     ****     if(!fat16_read_header(fs))
 162              		.loc 1 117 0
 163 009c 04009DE5 		ldr	r0, [sp, #4]	@, this
 164 00a0 08109DE5 		ldr	r1, [sp, #8]	@, fs
 165 00a4 FEFFFFEB 		bl	_ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE	@
 166 00a8 0030A0E1 		mov	r3, r0	@ tmp148,
 167 00ac 000053E3 		cmp	r3, #0	@ D.12555,
 168 00b0 0030A013 		movne	r3, #0	@, tmp150
 169 00b4 0130A003 		moveq	r3, #1	@, tmp150
 170 00b8 FF3003E2 		and	r3, r3, #255	@ retval.65, tmp149,
 171 00bc 000053E3 		cmp	r3, #0	@ retval.65,
 172 00c0 0600000A 		beq	.L9	@,
 118:fat16.cpp     ****     {
 119:fat16.cpp     ****     	uart->WriteLine("Failed Reading Header\n\r");
 173              		.loc 1 119 0
 174 00c4 0C009DE5 		ldr	r0, [sp, #12]	@, uart
 175 00c8 28109FE5 		ldr	r1, .L10+4	@,
 176 00cc FEFFFFEB 		bl	_ZN5UART09WriteLineEPKcz	@
 120:fat16.cpp     ****         free(fs);
 177              		.loc 1 120 0
 178 00d0 08009DE5 		ldr	r0, [sp, #8]	@, fs
 179 00d4 FEFFFFEB 		bl	free	@
 121:fat16.cpp     ****         return 0;
 180              		.loc 1 121 0
 181 00d8 0030A0E3 		mov	r3, #0	@ D.12550,
 182 00dc 000000EA 		b	.L7	@
 183              	.L9:
 122:fat16.cpp     ****     }
 123:fat16.cpp     **** 
 124:fat16.cpp     ****     return fs;
 184              		.loc 1 124 0
 185 00e0 08309DE5 		ldr	r3, [sp, #8]	@ D.12550, fs
 186              	.L7:
 187              	.LBE2:
 125:fat16.cpp     **** }
 188              		.loc 1 125 0
 189 00e4 0300A0E1 		mov	r0, r3	@, <retval>
 190 00e8 14D08DE2 		add	sp, sp, #20	@,,
 191 00ec 04E09DE4 		ldr	lr, [sp], #4
 192 00f0 1EFF2FE1 		bx	lr
 193              	.L11:
 194              		.align	2
 195              	.L10:
 196 00f4 00000000 		.word	.LC0
 197 00f8 10000000 		.word	.LC1
 198              		.cfi_endproc
 199              	.LFE110:
 200              		.size	_ZN5FAT1610fat16_openEPNS_16partition_structE, .-_ZN5FAT1610fat16_openEPNS_16partition_struc
 201              		.section	.text._ZN5FAT1611fat16_closeEPNS_15fat16_fs_structE,"ax",%progbits
ARM GAS  /tmp/ccNwMSzu.s 			page 7


 202              		.align	2
 203              		.global	_ZN5FAT1611fat16_closeEPNS_15fat16_fs_structE
 204              		.type	_ZN5FAT1611fat16_closeEPNS_15fat16_fs_structE, %function
 205              	_ZN5FAT1611fat16_closeEPNS_15fat16_fs_structE:
 206              	.LFB111:
 126:fat16.cpp     **** 
 127:fat16.cpp     **** /**
 128:fat16.cpp     ****  * \ingroup fat16_fs
 129:fat16.cpp     ****  * Closes a FAT16 filesystem.
 130:fat16.cpp     ****  *
 131:fat16.cpp     ****  * When this function returns, the given filesystem descriptor
 132:fat16.cpp     ****  * will be invalid.
 133:fat16.cpp     ****  *
 134:fat16.cpp     ****  * \param[in] fs The filesystem to close.
 135:fat16.cpp     ****  * \see fat16_open
 136:fat16.cpp     ****  */
 137:fat16.cpp     **** void FAT16::fat16_close(struct fat16_fs_struct* fs)
 138:fat16.cpp     **** {
 207              		.loc 1 138 0
 208              		.cfi_startproc
 209              		@ Function supports interworking.
 210              		@ args = 0, pretend = 0, frame = 8
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 213              	.LCFI2:
 214              		.cfi_def_cfa_offset 4
 215 0004 0CD04DE2 		sub	sp, sp, #12	@,,
 216              	.LCFI3:
 217              		.cfi_def_cfa_offset 16
 218 0008 04008DE5 		str	r0, [sp, #4]	@ this, this
 219 000c 00108DE5 		str	r1, [sp, #0]	@ fs, fs
 139:fat16.cpp     ****     if(!fs)
 220              		.loc 1 139 0
 221 0010 00309DE5 		ldr	r3, [sp, #0]	@ tmp133, fs
 222 0014 000053E3 		cmp	r3, #0	@ tmp133,
 223 0018 0200000A 		beq	.L15	@,
 224              		.cfi_offset 14, -4
 225              	.L13:
 140:fat16.cpp     ****         return;
 141:fat16.cpp     **** 
 142:fat16.cpp     ****     free(fs);
 226              		.loc 1 142 0
 227 001c 00009DE5 		ldr	r0, [sp, #0]	@, fs
 228 0020 FEFFFFEB 		bl	free	@
 229 0024 000000EA 		b	.L12	@
 230              	.L15:
 140:fat16.cpp     ****         return;
 231              		.loc 1 140 0
 232 0028 0000A0E1 		mov	r0, r0	@ nop
 233              	.L12:
 143:fat16.cpp     **** }
 234              		.loc 1 143 0
 235 002c 0CD08DE2 		add	sp, sp, #12	@,,
 236 0030 04E09DE4 		ldr	lr, [sp], #4
 237 0034 1EFF2FE1 		bx	lr
 238              		.cfi_endproc
 239              	.LFE111:
ARM GAS  /tmp/ccNwMSzu.s 			page 8


 240              		.size	_ZN5FAT1611fat16_closeEPNS_15fat16_fs_structE, .-_ZN5FAT1611fat16_closeEPNS_15fat16_fs_struc
 241              		.section	.rodata
 242              		.align	2
 243              	.LC2:
 244 0028 50617274 		.ascii	"Partition = 0\012\015\000"
 244      6974696F 
 244      6E203D20 
 244      300A0D00 
 245              		.global	__aeabi_idiv
 246              		.global	__aeabi_uidiv
 247              		.section	.text._ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE,"ax",%progbits
 248              		.align	2
 249              		.global	_ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE
 250              		.type	_ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE, %function
 251              	_ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE:
 252              	.LFB112:
 144:fat16.cpp     **** 
 145:fat16.cpp     **** /**
 146:fat16.cpp     ****  * \ingroup fat16_fs
 147:fat16.cpp     ****  * Reads and parses the header of a FAT16 filesystem.
 148:fat16.cpp     ****  *
 149:fat16.cpp     ****  * \param[inout] fs The filesystem for which to parse the header.
 150:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
 151:fat16.cpp     ****  */
 152:fat16.cpp     **** uint8_t FAT16::fat16_read_header(struct fat16_fs_struct* fs)
 153:fat16.cpp     **** {
 253              		.loc 1 153 0
 254              		.cfi_startproc
 255              		@ Function supports interworking.
 256              		@ args = 0, pretend = 0, frame = 80
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 10402DE9 		stmfd	sp!, {r4, lr}	@,
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 8
 261 0004 50D04DE2 		sub	sp, sp, #80	@,,
 262              	.LCFI5:
 263              		.cfi_def_cfa_offset 88
 264 0008 04008DE5 		str	r0, [sp, #4]	@ this, this
 265 000c 00108DE5 		str	r1, [sp, #0]	@ fs, fs
 266              	.LBB3:
 154:fat16.cpp     **** 	UART0 * uart = UART0::GetInstance();
 267              		.loc 1 154 0
 268              		.cfi_offset 14, -4
 269              		.cfi_offset 4, -8
 270 0010 FEFFFFEB 		bl	_ZN5UART011GetInstanceEv	@
 271 0014 48008DE5 		str	r0, [sp, #72]	@, uart
 155:fat16.cpp     ****     if(!fs)
 272              		.loc 1 155 0
 273 0018 00309DE5 		ldr	r3, [sp, #0]	@ tmp242, fs
 274 001c 000053E3 		cmp	r3, #0	@ tmp242,
 275 0020 0100001A 		bne	.L17	@,
 156:fat16.cpp     ****         return 0;
 276              		.loc 1 156 0
 277 0024 0030A0E3 		mov	r3, #0	@ D.12414,
 278 0028 E60000EA 		b	.L18	@
 279              	.L17:
 157:fat16.cpp     **** 
ARM GAS  /tmp/ccNwMSzu.s 			page 9


 158:fat16.cpp     ****     struct partition_struct* partition = fs->partition;
 280              		.loc 1 158 0
 281 002c 00309DE5 		ldr	r3, [sp, #0]	@ tmp243, fs
 282 0030 003093E5 		ldr	r3, [r3, #0]	@ tmp244, fs_5(D)->partition
 283 0034 44308DE5 		str	r3, [sp, #68]	@ tmp244, partition
 159:fat16.cpp     ****     if(!partition)
 284              		.loc 1 159 0
 285 0038 44309DE5 		ldr	r3, [sp, #68]	@ tmp245, partition
 286 003c 000053E3 		cmp	r3, #0	@ tmp245,
 287 0040 0400001A 		bne	.L19	@,
 160:fat16.cpp     ****     {
 161:fat16.cpp     ****     	uart->WriteLine("Partition = 0\n\r");
 288              		.loc 1 161 0
 289 0044 48009DE5 		ldr	r0, [sp, #72]	@, uart
 290 0048 88139FE5 		ldr	r1, .L28	@,
 291 004c FEFFFFEB 		bl	_ZN5UART09WriteLineEPKcz	@
 162:fat16.cpp     ****         return 0;
 292              		.loc 1 162 0
 293 0050 0030A0E3 		mov	r3, #0	@ D.12414,
 294 0054 DB0000EA 		b	.L18	@
 295              	.L19:
 163:fat16.cpp     ****     }
 164:fat16.cpp     **** 
 165:fat16.cpp     ****     /* read fat parameters */
 166:fat16.cpp     ****     uint8_t buffer[25];
 167:fat16.cpp     ****     uint32_t partition_offset = partition->offset * 512;
 296              		.loc 1 167 0
 297 0058 44309DE5 		ldr	r3, [sp, #68]	@ tmp246, partition
 298 005c 1C3093E5 		ldr	r3, [r3, #28]	@ D.12417, partition_7->offset
 299 0060 8334A0E1 		mov	r3, r3, asl #9	@ tmp247, D.12417,
 300 0064 40308DE5 		str	r3, [sp, #64]	@ tmp247, partition_offset
 168:fat16.cpp     **** 
 169:fat16.cpp     ****     if(!(GetInstance()->*partition->device_read)(partition_offset + 0x0b, buffer, sizeof(buffer)))
 301              		.loc 1 169 0
 302 0068 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 303 006c 0030A0E1 		mov	r3, r0	@ D.12419,
 304 0070 44209DE5 		ldr	r2, [sp, #68]	@ tmp248, partition
 305 0074 042092E5 		ldr	r2, [r2, #4]	@ D.12421, partition_7->device_read.__delta
 306 0078 012002E2 		and	r2, r2, #1	@ D.12422, D.12421,
 307 007c FF2002E2 		and	r2, r2, #255	@ D.12423, D.12422,
 308 0080 000052E3 		cmp	r2, #0	@ D.12423,
 309 0084 0A00000A 		beq	.L20	@,
 310              		.loc 1 169 0 is_stmt 0 discriminator 1
 311 0088 44209DE5 		ldr	r2, [sp, #68]	@ tmp249, partition
 312 008c 042092E5 		ldr	r2, [r2, #4]	@ D.12426, partition_7->device_read.__delta
 313 0090 C220A0E1 		mov	r2, r2, asr #1	@ D.12427, D.12426,
 314 0094 022083E0 		add	r2, r3, r2	@ D.12429, D.12419, D.12428
 315 0098 001092E5 		ldr	r1, [r2, #0]	@ D.12431,* D.12430
 316 009c 44209DE5 		ldr	r2, [sp, #68]	@ tmp250, partition
 317 00a0 002092E5 		ldr	r2, [r2, #0]	@ D.12432, partition_7->device_read.__pfn
 318 00a4 022081E0 		add	r2, r1, r2	@ D.12434, D.12431, D.12433
 319 00a8 002092E5 		ldr	r2, [r2, #0]	@ D.12435,* D.12434
 320 00ac 02C0A0E1 		mov	ip, r2	@ iftmp.64, D.12435
 321 00b0 010000EA 		b	.L21	@
 322              	.L20:
 323              		.loc 1 169 0 discriminator 2
 324 00b4 44209DE5 		ldr	r2, [sp, #68]	@ tmp251, partition
ARM GAS  /tmp/ccNwMSzu.s 			page 10


 325 00b8 00C092E5 		ldr	ip, [r2, #0]	@ iftmp.64, partition_7->device_read.__pfn
 326              	.L21:
 327              		.loc 1 169 0 discriminator 3
 328 00bc 44209DE5 		ldr	r2, [sp, #68]	@ tmp252, partition
 329 00c0 042092E5 		ldr	r2, [r2, #4]	@ D.12437, partition_7->device_read.__delta
 330 00c4 C220A0E1 		mov	r2, r2, asr #1	@ D.12438, D.12437,
 331 00c8 021083E0 		add	r1, r3, r2	@ D.12440, D.12419, D.12439
 332 00cc 40309DE5 		ldr	r3, [sp, #64]	@ tmp253, partition_offset
 333 00d0 0B2083E2 		add	r2, r3, #11	@ D.12441, tmp253,
 334 00d4 08308DE2 		add	r3, sp, #8	@ tmp254,,
 335 00d8 0100A0E1 		mov	r0, r1	@, D.12440
 336 00dc 0210A0E1 		mov	r1, r2	@, D.12441
 337 00e0 0320A0E1 		mov	r2, r3	@, tmp254
 338 00e4 1930A0E3 		mov	r3, #25	@,
 339 00e8 0FE0A0E1 		mov	lr, pc
 340 00ec 1CFF2FE1 		bx	ip	@ iftmp.64
 341 00f0 0030A0E1 		mov	r3, r0	@ tmp255,
 342 00f4 000053E3 		cmp	r3, #0	@ D.12442,
 343 00f8 0030A013 		movne	r3, #0	@, tmp257
 344 00fc 0130A003 		moveq	r3, #1	@, tmp257
 345 0100 FF3003E2 		and	r3, r3, #255	@ retval.63, tmp256,
 346 0104 000053E3 		cmp	r3, #0	@ retval.63,
 347 0108 0100000A 		beq	.L22	@,
 170:fat16.cpp     ****         return 0;
 348              		.loc 1 170 0 is_stmt 1
 349 010c 0030A0E3 		mov	r3, #0	@ D.12414,
 350 0110 AC0000EA 		b	.L18	@
 351              	.L22:
 171:fat16.cpp     **** 
 172:fat16.cpp     ****     uint16_t bytes_per_sector = ((uint16_t) buffer[0x00]) |
 352              		.loc 1 172 0
 353 0114 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2	@ D.12445, buffer
 173:fat16.cpp     ****     ((uint16_t) buffer[0x01] << 8);
 354              		.loc 1 173 0
 355 0118 0320A0E1 		mov	r2, r3	@ D.12446, D.12445
 356 011c 0930DDE5 		ldrb	r3, [sp, #9]	@ zero_extendqisi2	@ D.12447, buffer
 357 0120 0334A0E1 		mov	r3, r3, asl #8	@ D.12449, D.12448,
 358 0124 0338A0E1 		mov	r3, r3, asl #16	@ tmp258, D.12449,
 359 0128 2338A0E1 		mov	r3, r3, lsr #16	@ D.12450, tmp258,
 360 012c 033082E1 		orr	r3, r2, r3	@ tmp261, tmp259, tmp260
 361 0130 0338A0E1 		mov	r3, r3, asl #16	@ tmp262, tmp261,
 362 0134 2338A0E1 		mov	r3, r3, lsr #16	@ D.12451, tmp262,
 363 0138 BE33CDE1 		strh	r3, [sp, #62]	@ movhi	@ D.12451, bytes_per_sector
 174:fat16.cpp     ****     uint8_t sectors_per_cluster = buffer[0x02];
 364              		.loc 1 174 0
 365 013c 0A30DDE5 		ldrb	r3, [sp, #10]	@ tmp263, buffer
 366 0140 3D30CDE5 		strb	r3, [sp, #61]	@ tmp263, sectors_per_cluster
 175:fat16.cpp     ****     uint16_t reserved_sectors = ((uint16_t) buffer[0x03]) |
 367              		.loc 1 175 0
 368 0144 0B30DDE5 		ldrb	r3, [sp, #11]	@ zero_extendqisi2	@ D.12452, buffer
 176:fat16.cpp     ****     ((uint16_t) buffer[0x04] << 8);
 369              		.loc 1 176 0
 370 0148 0320A0E1 		mov	r2, r3	@ D.12453, D.12452
 371 014c 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ D.12454, buffer
 372 0150 0334A0E1 		mov	r3, r3, asl #8	@ D.12456, D.12455,
 373 0154 0338A0E1 		mov	r3, r3, asl #16	@ tmp264, D.12456,
 374 0158 2338A0E1 		mov	r3, r3, lsr #16	@ D.12457, tmp264,
ARM GAS  /tmp/ccNwMSzu.s 			page 11


 375 015c 033082E1 		orr	r3, r2, r3	@ tmp267, tmp265, tmp266
 376 0160 0338A0E1 		mov	r3, r3, asl #16	@ tmp268, tmp267,
 377 0164 2338A0E1 		mov	r3, r3, lsr #16	@ D.12458, tmp268,
 378 0168 BA33CDE1 		strh	r3, [sp, #58]	@ movhi	@ D.12458, reserved_sectors
 177:fat16.cpp     ****     uint8_t fat_copies = buffer[0x05];
 379              		.loc 1 177 0
 380 016c 0D30DDE5 		ldrb	r3, [sp, #13]	@ tmp269, buffer
 381 0170 3930CDE5 		strb	r3, [sp, #57]	@ tmp269, fat_copies
 178:fat16.cpp     ****     uint16_t max_root_entries = ((uint16_t) buffer[0x06]) |
 382              		.loc 1 178 0
 383 0174 0E30DDE5 		ldrb	r3, [sp, #14]	@ zero_extendqisi2	@ D.12459, buffer
 179:fat16.cpp     ****     ((uint16_t) buffer[0x07] << 8);
 384              		.loc 1 179 0
 385 0178 0320A0E1 		mov	r2, r3	@ D.12460, D.12459
 386 017c 0F30DDE5 		ldrb	r3, [sp, #15]	@ zero_extendqisi2	@ D.12461, buffer
 387 0180 0334A0E1 		mov	r3, r3, asl #8	@ D.12463, D.12462,
 388 0184 0338A0E1 		mov	r3, r3, asl #16	@ tmp270, D.12463,
 389 0188 2338A0E1 		mov	r3, r3, lsr #16	@ D.12464, tmp270,
 390 018c 033082E1 		orr	r3, r2, r3	@ tmp273, tmp271, tmp272
 391 0190 0338A0E1 		mov	r3, r3, asl #16	@ tmp274, tmp273,
 392 0194 2338A0E1 		mov	r3, r3, lsr #16	@ D.12465, tmp274,
 393 0198 B633CDE1 		strh	r3, [sp, #54]	@ movhi	@ D.12465, max_root_entries
 180:fat16.cpp     ****     uint16_t sector_count_16 = ((uint16_t) buffer[0x08]) |
 394              		.loc 1 180 0
 395 019c 1030DDE5 		ldrb	r3, [sp, #16]	@ zero_extendqisi2	@ D.12466, buffer
 181:fat16.cpp     ****     ((uint16_t) buffer[0x09] << 8);
 396              		.loc 1 181 0
 397 01a0 0320A0E1 		mov	r2, r3	@ D.12467, D.12466
 398 01a4 1130DDE5 		ldrb	r3, [sp, #17]	@ zero_extendqisi2	@ D.12468, buffer
 399 01a8 0334A0E1 		mov	r3, r3, asl #8	@ D.12470, D.12469,
 400 01ac 0338A0E1 		mov	r3, r3, asl #16	@ tmp275, D.12470,
 401 01b0 2338A0E1 		mov	r3, r3, lsr #16	@ D.12471, tmp275,
 402 01b4 033082E1 		orr	r3, r2, r3	@ tmp278, tmp276, tmp277
 403 01b8 0338A0E1 		mov	r3, r3, asl #16	@ tmp279, tmp278,
 404 01bc 2338A0E1 		mov	r3, r3, lsr #16	@ D.12472, tmp279,
 405 01c0 B433CDE1 		strh	r3, [sp, #52]	@ movhi	@ D.12472, sector_count_16
 182:fat16.cpp     ****     uint16_t sectors_per_fat = ((uint16_t) buffer[0x0b]) |
 406              		.loc 1 182 0
 407 01c4 1330DDE5 		ldrb	r3, [sp, #19]	@ zero_extendqisi2	@ D.12473, buffer
 183:fat16.cpp     ****     ((uint16_t) buffer[0x0c] << 8);
 408              		.loc 1 183 0
 409 01c8 0320A0E1 		mov	r2, r3	@ D.12474, D.12473
 410 01cc 1430DDE5 		ldrb	r3, [sp, #20]	@ zero_extendqisi2	@ D.12475, buffer
 411 01d0 0334A0E1 		mov	r3, r3, asl #8	@ D.12477, D.12476,
 412 01d4 0338A0E1 		mov	r3, r3, asl #16	@ tmp280, D.12477,
 413 01d8 2338A0E1 		mov	r3, r3, lsr #16	@ D.12478, tmp280,
 414 01dc 033082E1 		orr	r3, r2, r3	@ tmp283, tmp281, tmp282
 415 01e0 0338A0E1 		mov	r3, r3, asl #16	@ tmp284, tmp283,
 416 01e4 2338A0E1 		mov	r3, r3, lsr #16	@ D.12479, tmp284,
 417 01e8 B233CDE1 		strh	r3, [sp, #50]	@ movhi	@ D.12479, sectors_per_fat
 184:fat16.cpp     ****     uint32_t sector_count = ((uint32_t) buffer[0x15]) |
 418              		.loc 1 184 0
 419 01ec 1D30DDE5 		ldrb	r3, [sp, #29]	@ zero_extendqisi2	@ D.12480, buffer
 185:fat16.cpp     ****     ((uint32_t) buffer[0x16] << 8) |
 186:fat16.cpp     ****     ((uint32_t) buffer[0x17] << 16) |
 187:fat16.cpp     ****     ((uint32_t) buffer[0x18] << 24);
 420              		.loc 1 187 0
ARM GAS  /tmp/ccNwMSzu.s 			page 12


 421 01f0 0320A0E1 		mov	r2, r3	@ D.12481, D.12480
 185:fat16.cpp     ****     ((uint32_t) buffer[0x16] << 8) |
 422              		.loc 1 185 0
 423 01f4 1E30DDE5 		ldrb	r3, [sp, #30]	@ zero_extendqisi2	@ D.12482, buffer
 424              		.loc 1 187 0
 425 01f8 0334A0E1 		mov	r3, r3, asl #8	@ D.12484, D.12483,
 426 01fc 032082E1 		orr	r2, r2, r3	@ D.12485, D.12481, D.12484
 186:fat16.cpp     ****     ((uint32_t) buffer[0x17] << 16) |
 427              		.loc 1 186 0
 428 0200 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ D.12486, buffer
 429              		.loc 1 187 0
 430 0204 0338A0E1 		mov	r3, r3, asl #16	@ D.12488, D.12487,
 431 0208 032082E1 		orr	r2, r2, r3	@ D.12489, D.12485, D.12488
 432 020c 2030DDE5 		ldrb	r3, [sp, #32]	@ zero_extendqisi2	@ D.12490, buffer
 433 0210 033CA0E1 		mov	r3, r3, asl #24	@ D.12492, D.12491,
 434 0214 033082E1 		orr	r3, r2, r3	@ tmp285, D.12489, D.12492
 435 0218 4C308DE5 		str	r3, [sp, #76]	@ tmp285, sector_count
 188:fat16.cpp     **** 
 189:fat16.cpp     ****     if(sectors_per_fat == 0)
 436              		.loc 1 189 0
 437 021c B233DDE1 		ldrh	r3, [sp, #50]	@ tmp286, sectors_per_fat
 438 0220 000053E3 		cmp	r3, #0	@ tmp286,
 439 0224 0100001A 		bne	.L23	@,
 190:fat16.cpp     ****     /* this is not a FAT16 */
 191:fat16.cpp     ****         return 0;
 440              		.loc 1 191 0
 441 0228 0030A0E3 		mov	r3, #0	@ D.12414,
 442 022c 650000EA 		b	.L18	@
 443              	.L23:
 192:fat16.cpp     **** 
 193:fat16.cpp     ****     if(sector_count == 0)
 444              		.loc 1 193 0
 445 0230 4C309DE5 		ldr	r3, [sp, #76]	@ tmp287, sector_count
 446 0234 000053E3 		cmp	r3, #0	@ tmp287,
 447 0238 0600001A 		bne	.L24	@,
 194:fat16.cpp     ****     {
 195:fat16.cpp     ****         if(sector_count_16 == 0)
 448              		.loc 1 195 0
 449 023c B433DDE1 		ldrh	r3, [sp, #52]	@ tmp288, sector_count_16
 450 0240 000053E3 		cmp	r3, #0	@ tmp288,
 451 0244 0100001A 		bne	.L25	@,
 196:fat16.cpp     ****     /* illegal volume size */
 197:fat16.cpp     ****             return 0;
 452              		.loc 1 197 0
 453 0248 0030A0E3 		mov	r3, #0	@ D.12414,
 454 024c 5D0000EA 		b	.L18	@
 455              	.L25:
 198:fat16.cpp     ****         else
 199:fat16.cpp     ****             sector_count = sector_count_16;
 456              		.loc 1 199 0
 457 0250 B433DDE1 		ldrh	r3, [sp, #52]	@ tmp289, sector_count_16
 458 0254 4C308DE5 		str	r3, [sp, #76]	@ tmp289, sector_count
 459              	.L24:
 200:fat16.cpp     ****     }
 201:fat16.cpp     **** 
 202:fat16.cpp     ****     /* ensure we really have a FAT16 fs here */
 203:fat16.cpp     ****     uint32_t data_sector_count = sector_count
ARM GAS  /tmp/ccNwMSzu.s 			page 13


 204:fat16.cpp     ****     - reserved_sectors
 205:fat16.cpp     ****     - (uint32_t) sectors_per_fat * fat_copies
 206:fat16.cpp     ****     - ((max_root_entries * 32 + bytes_per_sector - 1) / bytes_per_sector);
 460              		.loc 1 206 0
 461 0258 BA33DDE1 		ldrh	r3, [sp, #58]	@ D.12500, reserved_sectors
 462 025c 4C209DE5 		ldr	r2, [sp, #76]	@ tmp290, sector_count
 463 0260 022063E0 		rsb	r2, r3, r2	@ D.12501, D.12500, tmp290
 464 0264 B233DDE1 		ldrh	r3, [sp, #50]	@ D.12502, sectors_per_fat
 465 0268 3910DDE5 		ldrb	r1, [sp, #57]	@ zero_extendqisi2	@ D.12503, fat_copies
 466 026c 910303E0 		mul	r3, r1, r3	@ D.12504, D.12503, D.12502
 467 0270 024063E0 		rsb	r4, r3, r2	@ D.12505, D.12504, D.12501
 468 0274 B633DDE1 		ldrh	r3, [sp, #54]	@ D.12506, max_root_entries
 469 0278 8322A0E1 		mov	r2, r3, asl #5	@ D.12507, D.12506,
 470 027c BE33DDE1 		ldrh	r3, [sp, #62]	@ D.12508, bytes_per_sector
 471 0280 033082E0 		add	r3, r2, r3	@ D.12509, D.12507, D.12508
 472 0284 012043E2 		sub	r2, r3, #1	@ D.12510, D.12509,
 473 0288 BE33DDE1 		ldrh	r3, [sp, #62]	@ D.12511, bytes_per_sector
 474 028c 0200A0E1 		mov	r0, r2	@, D.12510
 475 0290 0310A0E1 		mov	r1, r3	@, D.12511
 476 0294 FEFFFFEB 		bl	__aeabi_idiv	@
 477 0298 0030A0E1 		mov	r3, r0	@ tmp293,
 478 029c 043063E0 		rsb	r3, r3, r4	@ tmp294, D.12513, D.12505
 479 02a0 2C308DE5 		str	r3, [sp, #44]	@ tmp294, data_sector_count
 207:fat16.cpp     ****     uint32_t data_cluster_count = data_sector_count / sectors_per_cluster;
 480              		.loc 1 207 0
 481 02a4 3D30DDE5 		ldrb	r3, [sp, #61]	@ zero_extendqisi2	@ D.12514, sectors_per_cluster
 482 02a8 2C009DE5 		ldr	r0, [sp, #44]	@, data_sector_count
 483 02ac 0310A0E1 		mov	r1, r3	@, D.12514
 484 02b0 FEFFFFEB 		bl	__aeabi_uidiv	@
 485 02b4 0030A0E1 		mov	r3, r0	@ tmp297,
 486 02b8 28308DE5 		str	r3, [sp, #40]	@ tmp297, data_cluster_count
 208:fat16.cpp     ****     if(data_cluster_count < 4085 || data_cluster_count >= 65525)
 487              		.loc 1 208 0
 488 02bc 28209DE5 		ldr	r2, [sp, #40]	@ tmp298, data_cluster_count
 489 02c0 14319FE5 		ldr	r3, .L28+4	@ tmp299,
 490 02c4 030052E1 		cmp	r2, r3	@ tmp298, tmp299
 491 02c8 0300009A 		bls	.L26	@,
 492              		.loc 1 208 0 is_stmt 0 discriminator 1
 493 02cc 28209DE5 		ldr	r2, [sp, #40]	@ tmp300, data_cluster_count
 494 02d0 08319FE5 		ldr	r3, .L28+8	@ tmp301,
 495 02d4 030052E1 		cmp	r2, r3	@ tmp300, tmp301
 496 02d8 0100009A 		bls	.L27	@,
 497              	.L26:
 209:fat16.cpp     ****     /* this is not a FAT16 */
 210:fat16.cpp     ****         return 0;
 498              		.loc 1 210 0 is_stmt 1
 499 02dc 0030A0E3 		mov	r3, #0	@ D.12414,
 500 02e0 380000EA 		b	.L18	@
 501              	.L27:
 211:fat16.cpp     **** 
 212:fat16.cpp     ****     partition->type = PARTITION_TYPE_FAT16;
 502              		.loc 1 212 0
 503 02e4 44309DE5 		ldr	r3, [sp, #68]	@ tmp302, partition
 504 02e8 0620A0E3 		mov	r2, #6	@ tmp303,
 505 02ec 1820C3E5 		strb	r2, [r3, #24]	@ tmp304, partition_7->type
 213:fat16.cpp     **** 
 214:fat16.cpp     ****     /* fill header information */
ARM GAS  /tmp/ccNwMSzu.s 			page 14


 215:fat16.cpp     ****     struct fat16_header_struct* header = &fs->header;
 506              		.loc 1 215 0
 507 02f0 00309DE5 		ldr	r3, [sp, #0]	@ tmp305, fs
 508 02f4 043083E2 		add	r3, r3, #4	@ tmp306, tmp305,
 509 02f8 24308DE5 		str	r3, [sp, #36]	@ tmp306, header
 216:fat16.cpp     ****     memset(header, 0, sizeof(*header));
 510              		.loc 1 216 0
 511 02fc 24009DE5 		ldr	r0, [sp, #36]	@, header
 512 0300 0010A0E3 		mov	r1, #0	@,
 513 0304 1820A0E3 		mov	r2, #24	@,
 514 0308 FEFFFFEB 		bl	memset	@
 217:fat16.cpp     **** 
 218:fat16.cpp     ****     header->size = sector_count * bytes_per_sector;
 515              		.loc 1 218 0
 516 030c BE33DDE1 		ldrh	r3, [sp, #62]	@ D.12518, bytes_per_sector
 517 0310 4C209DE5 		ldr	r2, [sp, #76]	@ tmp307, sector_count
 518 0314 930202E0 		mul	r2, r3, r2	@ D.12519, D.12518, tmp307
 519 0318 24309DE5 		ldr	r3, [sp, #36]	@ tmp308, header
 520 031c 002083E5 		str	r2, [r3, #0]	@ D.12519, header_111->size
 219:fat16.cpp     **** 
 220:fat16.cpp     ****     header->fat_offset = /* jump to partition */
 221:fat16.cpp     ****     partition_offset +
 222:fat16.cpp     ****     /* jump to fat */
 223:fat16.cpp     ****     (uint32_t) reserved_sectors * bytes_per_sector;
 521              		.loc 1 223 0
 522 0320 BA33DDE1 		ldrh	r3, [sp, #58]	@ D.12520, reserved_sectors
 523 0324 BE23DDE1 		ldrh	r2, [sp, #62]	@ D.12521, bytes_per_sector
 524 0328 930202E0 		mul	r2, r3, r2	@ D.12522, D.12520, D.12521
 525 032c 40309DE5 		ldr	r3, [sp, #64]	@ tmp309, partition_offset
 526 0330 032082E0 		add	r2, r2, r3	@ D.12523, D.12522, tmp309
 527 0334 24309DE5 		ldr	r3, [sp, #36]	@ tmp310, header
 528 0338 042083E5 		str	r2, [r3, #4]	@ D.12523, header_111->fat_offset
 224:fat16.cpp     ****     header->fat_size = (data_cluster_count + 2) * 2;
 529              		.loc 1 224 0
 530 033c 28309DE5 		ldr	r3, [sp, #40]	@ tmp311, data_cluster_count
 531 0340 023083E2 		add	r3, r3, #2	@ D.12524, tmp311,
 532 0344 8320A0E1 		mov	r2, r3, asl #1	@ D.12525, D.12524,
 533 0348 24309DE5 		ldr	r3, [sp, #36]	@ tmp312, header
 534 034c 082083E5 		str	r2, [r3, #8]	@ D.12525, header_111->fat_size
 225:fat16.cpp     **** 
 226:fat16.cpp     ****     header->sector_size = bytes_per_sector;
 535              		.loc 1 226 0
 536 0350 24309DE5 		ldr	r3, [sp, #36]	@ tmp313, header
 537 0354 BE23DDE1 		ldrh	r2, [sp, #62]	@ movhi	@ tmp314, bytes_per_sector
 538 0358 BC20C3E1 		strh	r2, [r3, #12]	@ movhi	@ tmp314, header_111->sector_size
 227:fat16.cpp     ****     header->cluster_size = (uint32_t) bytes_per_sector * sectors_per_cluster;
 539              		.loc 1 227 0
 540 035c 3D30DDE5 		ldrb	r3, [sp, #61]	@ zero_extendqisi2	@ tmp316, sectors_per_cluster
 541 0360 0338A0E1 		mov	r3, r3, asl #16	@ tmp317, tmp315,
 542 0364 2338A0E1 		mov	r3, r3, lsr #16	@ D.12526, tmp317,
 543 0368 BE23DDE1 		ldrh	r2, [sp, #62]	@ movhi	@ tmp318, bytes_per_sector
 544 036c 920303E0 		mul	r3, r2, r3	@ tmp319, tmp318, D.12526
 545 0370 0338A0E1 		mov	r3, r3, asl #16	@ tmp320, tmp319,
 546 0374 2328A0E1 		mov	r2, r3, lsr #16	@ D.12527, tmp320,
 547 0378 24309DE5 		ldr	r3, [sp, #36]	@ tmp321, header
 548 037c BE20C3E1 		strh	r2, [r3, #14]	@ movhi	@ D.12527, header_111->cluster_size
 228:fat16.cpp     **** 
ARM GAS  /tmp/ccNwMSzu.s 			page 15


 229:fat16.cpp     ****     header->root_dir_offset = /* jump to fats */
 230:fat16.cpp     ****     header->fat_offset +
 231:fat16.cpp     ****     /* jump to root directory entries */
 232:fat16.cpp     ****     (uint32_t) fat_copies * sectors_per_fat * bytes_per_sector;
 549              		.loc 1 232 0
 550 0380 24309DE5 		ldr	r3, [sp, #36]	@ tmp322, header
 551 0384 042093E5 		ldr	r2, [r3, #4]	@ D.12528, header_111->fat_offset
 552 0388 3930DDE5 		ldrb	r3, [sp, #57]	@ zero_extendqisi2	@ D.12529, fat_copies
 553 038c B213DDE1 		ldrh	r1, [sp, #50]	@ D.12530, sectors_per_fat
 554 0390 910303E0 		mul	r3, r1, r3	@ D.12531, D.12530, D.12529
 555 0394 BE13DDE1 		ldrh	r1, [sp, #62]	@ D.12532, bytes_per_sector
 556 0398 910303E0 		mul	r3, r1, r3	@ D.12533, D.12532, D.12531
 557 039c 032082E0 		add	r2, r2, r3	@ D.12534, D.12528, D.12533
 558 03a0 24309DE5 		ldr	r3, [sp, #36]	@ tmp323, header
 559 03a4 102083E5 		str	r2, [r3, #16]	@ D.12534, header_111->root_dir_offset
 233:fat16.cpp     **** 
 234:fat16.cpp     ****     header->cluster_zero_offset = /* jump to root directory entries */
 235:fat16.cpp     ****     header->root_dir_offset +
 236:fat16.cpp     ****     /* skip root directory entries */
 237:fat16.cpp     ****     (uint32_t) max_root_entries * 32;
 560              		.loc 1 237 0
 561 03a8 24309DE5 		ldr	r3, [sp, #36]	@ tmp324, header
 562 03ac 102093E5 		ldr	r2, [r3, #16]	@ D.12535, header_111->root_dir_offset
 563 03b0 B633DDE1 		ldrh	r3, [sp, #54]	@ D.12536, max_root_entries
 564 03b4 8332A0E1 		mov	r3, r3, asl #5	@ D.12537, D.12536,
 565 03b8 032082E0 		add	r2, r2, r3	@ D.12538, D.12535, D.12537
 566 03bc 24309DE5 		ldr	r3, [sp, #36]	@ tmp325, header
 567 03c0 142083E5 		str	r2, [r3, #20]	@ D.12538, header_111->cluster_zero_offset
 238:fat16.cpp     **** 
 239:fat16.cpp     ****     return 1;
 568              		.loc 1 239 0
 569 03c4 0130A0E3 		mov	r3, #1	@ D.12414,
 570              	.L18:
 571              	.LBE3:
 240:fat16.cpp     **** }
 572              		.loc 1 240 0
 573 03c8 0300A0E1 		mov	r0, r3	@, <retval>
 574 03cc 50D08DE2 		add	sp, sp, #80	@,,
 575 03d0 1040BDE8 		ldmfd	sp!, {r4, lr}
 576 03d4 1EFF2FE1 		bx	lr
 577              	.L29:
 578              		.align	2
 579              	.L28:
 580 03d8 28000000 		.word	.LC2
 581 03dc F40F0000 		.word	4084
 582 03e0 F4FF0000 		.word	65524
 583              		.cfi_endproc
 584              	.LFE112:
 585              		.size	_ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE, .-_ZN5FAT1617fat16_read_headerEPNS_15fa
 586              		.section	.text._ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_
 587              		.align	2
 588              		.global	_ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_structE
 589              		.type	_ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_structE, 
 590              	_ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_structE:
 591              	.LFB113:
 241:fat16.cpp     **** 
 242:fat16.cpp     **** /**
ARM GAS  /tmp/ccNwMSzu.s 			page 16


 243:fat16.cpp     ****  * \ingroup fat16_fs
 244:fat16.cpp     ****  * Reads a directory entry of the root directory.
 245:fat16.cpp     ****  *
 246:fat16.cpp     ****  * \param[in] fs Descriptor of file system to use.
 247:fat16.cpp     ****  * \param[in] entry_num The index of the directory entry to read.
 248:fat16.cpp     ****  * \param[out] dir_entry Directory entry descriptor which will get filled.
 249:fat16.cpp     ****  * \returns 0 on failure, 1 on success
 250:fat16.cpp     ****  * \see fat16_read_sub_dir_entry, fat16_read_dir_entry_by_path
 251:fat16.cpp     ****  */
 252:fat16.cpp     **** uint8_t FAT16::fat16_read_root_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, stru
 253:fat16.cpp     **** {
 592              		.loc 1 253 0
 593              		.cfi_startproc
 594              		@ Function supports interworking.
 595              		@ args = 0, pretend = 0, frame = 88
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597 0000 10402DE9 		stmfd	sp!, {r4, lr}	@,
 598              	.LCFI6:
 599              		.cfi_def_cfa_offset 8
 600 0004 68D04DE2 		sub	sp, sp, #104	@,,
 601              	.LCFI7:
 602              		.cfi_def_cfa_offset 112
 603 0008 1C008DE5 		str	r0, [sp, #28]	@ this, this
 604 000c 18108DE5 		str	r1, [sp, #24]	@ fs, fs
 605 0010 10308DE5 		str	r3, [sp, #16]	@ dir_entry, dir_entry
 606 0014 B621CDE1 		strh	r2, [sp, #22]	@ movhi	@ tmp191, entry_num
 607              	.LBB4:
 254:fat16.cpp     ****     if(!fs || !dir_entry)
 608              		.loc 1 254 0
 609 0018 18309DE5 		ldr	r3, [sp, #24]	@ tmp192, fs
 610 001c 000053E3 		cmp	r3, #0	@ tmp192,
 611 0020 0200000A 		beq	.L31	@,
 612              		.cfi_offset 14, -4
 613              		.cfi_offset 4, -8
 614              		.loc 1 254 0 is_stmt 0 discriminator 1
 615 0024 10309DE5 		ldr	r3, [sp, #16]	@ tmp193, dir_entry
 616 0028 000053E3 		cmp	r3, #0	@ tmp193,
 617 002c 0100001A 		bne	.L32	@,
 618              	.L31:
 255:fat16.cpp     ****         return 0;
 619              		.loc 1 255 0 is_stmt 1
 620 0030 0030A0E3 		mov	r3, #0	@ D.12335,
 621 0034 8C0000EA 		b	.L33	@
 622              	.L32:
 256:fat16.cpp     **** 
 257:fat16.cpp     ****     /* we read from the root directory entry */
 258:fat16.cpp     ****     const struct fat16_header_struct* header = &fs->header;
 623              		.loc 1 258 0
 624 0038 18309DE5 		ldr	r3, [sp, #24]	@ tmp194, fs
 625 003c 043083E2 		add	r3, r3, #4	@ tmp195, tmp194,
 626 0040 64308DE5 		str	r3, [sp, #100]	@ tmp195, header
 259:fat16.cpp     ****     device_read_interval_t device_read_interval = fs->partition->device_read_interval;
 627              		.loc 1 259 0
 628 0044 18309DE5 		ldr	r3, [sp, #24]	@ tmp196, fs
 629 0048 002093E5 		ldr	r2, [r3, #0]	@ D.12336, fs_6(D)->partition
 630 004c 4C308DE2 		add	r3, sp, #76	@ tmp197,,
 631 0050 082082E2 		add	r2, r2, #8	@ tmp198, D.12336,
ARM GAS  /tmp/ccNwMSzu.s 			page 17


 632 0054 030092E8 		ldmia	r2, {r0, r1}	@ tmp198,,
 633 0058 030083E8 		stmia	r3, {r0, r1}	@ tmp197,,
 260:fat16.cpp     ****     uint8_t buffer[32];
 261:fat16.cpp     **** 
 262:fat16.cpp     ****     /* seek to the n-th entry */
 263:fat16.cpp     ****     struct fat16_read_callback_arg arg;
 264:fat16.cpp     ****     memset(&arg, 0, sizeof(arg));
 634              		.loc 1 264 0
 635 005c 40308DE2 		add	r3, sp, #64	@ tmp199,,
 636 0060 0300A0E1 		mov	r0, r3	@, tmp199
 637 0064 0010A0E3 		mov	r1, #0	@,
 638 0068 0C20A0E3 		mov	r2, #12	@,
 639 006c FEFFFFEB 		bl	memset	@
 265:fat16.cpp     ****     arg.entry_num = entry_num;
 640              		.loc 1 265 0
 641 0070 B631DDE1 		ldrh	r3, [sp, #22]	@ movhi	@ tmp200, entry_num
 642 0074 B234CDE1 		strh	r3, [sp, #66]	@ movhi	@ tmp200, arg.entry_num
 266:fat16.cpp     ****     if(!(GetInstance()->*device_read_interval)(header->root_dir_offset,
 643              		.loc 1 266 0
 644 0078 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 645 007c 0030A0E1 		mov	r3, r0	@ D.12342,
 267:fat16.cpp     ****         buffer,
 268:fat16.cpp     ****        sizeof(buffer),
 269:fat16.cpp     ****        header->cluster_zero_offset - header->root_dir_offset,
 270:fat16.cpp     ****        (device_read_callback_t) &FAT16::fat16_dir_entry_seek_callback,
 271:fat16.cpp     ****        &arg) ||
 646              		.loc 1 271 0
 647 0080 50209DE5 		ldr	r2, [sp, #80]	@ D.12344, device_read_interval.__delta
 648 0084 012002E2 		and	r2, r2, #1	@ D.12345, D.12344,
 649 0088 FF2002E2 		and	r2, r2, #255	@ D.12346, D.12345,
 650 008c 000052E3 		cmp	r2, #0	@ D.12346,
 651 0090 0800000A 		beq	.L34	@,
 652              		.loc 1 271 0 is_stmt 0 discriminator 1
 653 0094 50209DE5 		ldr	r2, [sp, #80]	@ D.12349, device_read_interval.__delta
 654 0098 C220A0E1 		mov	r2, r2, asr #1	@ D.12350, D.12349,
 655 009c 022083E0 		add	r2, r3, r2	@ D.12352, D.12342, D.12351
 656 00a0 001092E5 		ldr	r1, [r2, #0]	@ D.12354,* D.12353
 657 00a4 4C209DE5 		ldr	r2, [sp, #76]	@ D.12355, device_read_interval.__pfn
 658 00a8 022081E0 		add	r2, r1, r2	@ D.12357, D.12354, D.12356
 659 00ac 002092E5 		ldr	r2, [r2, #0]	@ D.12358,* D.12357
 660 00b0 02C0A0E1 		mov	ip, r2	@ iftmp.59, D.12358
 661 00b4 000000EA 		b	.L35	@
 662              	.L34:
 663              		.loc 1 271 0 discriminator 2
 664 00b8 4CC09DE5 		ldr	ip, [sp, #76]	@ iftmp.59, device_read_interval.__pfn
 665              	.L35:
 666              		.loc 1 271 0 discriminator 3
 667 00bc 50209DE5 		ldr	r2, [sp, #80]	@ D.12360, device_read_interval.__delta
 668 00c0 C220A0E1 		mov	r2, r2, asr #1	@ D.12361, D.12360,
 669 00c4 02E083E0 		add	lr, r3, r2	@ D.12363, D.12342, D.12362
 670 00c8 64309DE5 		ldr	r3, [sp, #100]	@ tmp201, header
 671 00cc 102093E5 		ldr	r2, [r3, #16]	@ D.12364, header_8->root_dir_offset
 672 00d0 64309DE5 		ldr	r3, [sp, #100]	@ tmp202, header
 673 00d4 143093E5 		ldr	r3, [r3, #20]	@ D.12365, header_8->cluster_zero_offset
 674 00d8 0338A0E1 		mov	r3, r3, asl #16	@ tmp203, D.12365,
 675 00dc 2318A0E1 		mov	r1, r3, lsr #16	@ D.12366, tmp203,
 676 00e0 64309DE5 		ldr	r3, [sp, #100]	@ tmp204, header
ARM GAS  /tmp/ccNwMSzu.s 			page 18


 677 00e4 103093E5 		ldr	r3, [r3, #16]	@ D.12367, header_8->root_dir_offset
 678 00e8 0338A0E1 		mov	r3, r3, asl #16	@ tmp205, D.12367,
 679 00ec 2338A0E1 		mov	r3, r3, lsr #16	@ D.12368, tmp205,
 680 00f0 013063E0 		rsb	r3, r3, r1	@ tmp206, D.12368, D.12366
 681 00f4 0338A0E1 		mov	r3, r3, asl #16	@ tmp207, tmp206,
 682 00f8 2318A0E1 		mov	r1, r3, lsr #16	@ D.12369, tmp207,
 683 00fc 78319FE5 		ldr	r3, .L45	@ tmp208,
 684 0100 54308DE5 		str	r3, [sp, #84]	@ tmp208, D.12370.__pfn
 685 0104 0030A0E3 		mov	r3, #0	@ tmp209,
 686 0108 58308DE5 		str	r3, [sp, #88]	@ tmp209, D.12370.__delta
 687 010c 20308DE2 		add	r3, sp, #32	@ tmp210,,
 688 0110 00108DE5 		str	r1, [sp, #0]	@ D.12369,
 689 0114 04408DE2 		add	r4, sp, #4	@ tmp211,,
 690 0118 54108DE2 		add	r1, sp, #84	@ tmp212,,
 691 011c 030091E8 		ldmia	r1, {r0, r1}	@ tmp212,,
 692 0120 030084E8 		stmia	r4, {r0, r1}	@ tmp211,,
 693 0124 40108DE2 		add	r1, sp, #64	@ tmp213,,
 694 0128 0C108DE5 		str	r1, [sp, #12]	@ tmp213,
 695 012c 0E00A0E1 		mov	r0, lr	@, D.12363
 696 0130 0210A0E1 		mov	r1, r2	@, D.12364
 697 0134 0320A0E1 		mov	r2, r3	@, tmp210
 698 0138 2030A0E3 		mov	r3, #32	@,
 699 013c 0FE0A0E1 		mov	lr, pc
 700 0140 1CFF2FE1 		bx	ip	@ iftmp.59
 701 0144 0030A0E1 		mov	r3, r0	@ tmp214,
 266:fat16.cpp     ****     if(!(GetInstance()->*device_read_interval)(header->root_dir_offset,
 702              		.loc 1 266 0 is_stmt 1 discriminator 3
 703 0148 000053E3 		cmp	r3, #0	@ D.12371,
 704 014c 0200000A 		beq	.L36	@,
 266:fat16.cpp     ****     if(!(GetInstance()->*device_read_interval)(header->root_dir_offset,
 705              		.loc 1 266 0 is_stmt 0 discriminator 2
 706 0150 44309DE5 		ldr	r3, [sp, #68]	@ D.12373, arg.entry_offset
 707 0154 000053E3 		cmp	r3, #0	@ D.12373,
 708 0158 0100001A 		bne	.L37	@,
 709              	.L36:
 266:fat16.cpp     ****     if(!(GetInstance()->*device_read_interval)(header->root_dir_offset,
 710              		.loc 1 266 0 discriminator 1
 711 015c 0130A0E3 		mov	r3, #1	@ iftmp.58,
 712 0160 000000EA 		b	.L38	@
 713              	.L37:
 266:fat16.cpp     ****     if(!(GetInstance()->*device_read_interval)(header->root_dir_offset,
 714              		.loc 1 266 0 discriminator 3
 715 0164 0030A0E3 		mov	r3, #0	@ iftmp.58,
 716              	.L38:
 266:fat16.cpp     ****     if(!(GetInstance()->*device_read_interval)(header->root_dir_offset,
 717              		.loc 1 266 0 discriminator 4
 718 0168 000053E3 		cmp	r3, #0	@ retval.57,
 719 016c 0100000A 		beq	.L39	@,
 272:fat16.cpp     ****        arg.entry_offset == 0
 273:fat16.cpp     ****        )
 274:fat16.cpp     ****     return 0;
 720              		.loc 1 274 0 is_stmt 1
 721 0170 0030A0E3 		mov	r3, #0	@ D.12335,
 722 0174 3C0000EA 		b	.L33	@
 723              	.L39:
 275:fat16.cpp     **** 
 276:fat16.cpp     ****     /* read entry */
ARM GAS  /tmp/ccNwMSzu.s 			page 19


 277:fat16.cpp     ****     memset(dir_entry, 0, sizeof(*dir_entry));
 724              		.loc 1 277 0
 725 0178 10009DE5 		ldr	r0, [sp, #16]	@, dir_entry
 726 017c 0010A0E3 		mov	r1, #0	@,
 727 0180 2C20A0E3 		mov	r2, #44	@,
 728 0184 FEFFFFEB 		bl	memset	@
 278:fat16.cpp     ****     if(!(GetInstance()->*device_read_interval)(arg.entry_offset,
 729              		.loc 1 278 0
 730 0188 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 731 018c 0030A0E1 		mov	r3, r0	@ D.12377,
 279:fat16.cpp     ****         buffer,
 280:fat16.cpp     ****        sizeof(buffer),
 281:fat16.cpp     ****        arg.byte_count,
 282:fat16.cpp     ****        (device_read_callback_t) &FAT16::fat16_dir_entry_read_callback,
 283:fat16.cpp     ****        dir_entry))
 732              		.loc 1 283 0
 733 0190 50209DE5 		ldr	r2, [sp, #80]	@ D.12379, device_read_interval.__delta
 734 0194 012002E2 		and	r2, r2, #1	@ D.12380, D.12379,
 735 0198 FF2002E2 		and	r2, r2, #255	@ D.12381, D.12380,
 736 019c 000052E3 		cmp	r2, #0	@ D.12381,
 737 01a0 0800000A 		beq	.L40	@,
 738              		.loc 1 283 0 is_stmt 0 discriminator 1
 739 01a4 50209DE5 		ldr	r2, [sp, #80]	@ D.12384, device_read_interval.__delta
 740 01a8 C220A0E1 		mov	r2, r2, asr #1	@ D.12385, D.12384,
 741 01ac 022083E0 		add	r2, r3, r2	@ D.12387, D.12377, D.12386
 742 01b0 001092E5 		ldr	r1, [r2, #0]	@ D.12389,* D.12388
 743 01b4 4C209DE5 		ldr	r2, [sp, #76]	@ D.12390, device_read_interval.__pfn
 744 01b8 022081E0 		add	r2, r1, r2	@ D.12392, D.12389, D.12391
 745 01bc 002092E5 		ldr	r2, [r2, #0]	@ D.12393,* D.12392
 746 01c0 02C0A0E1 		mov	ip, r2	@ iftmp.61, D.12393
 747 01c4 000000EA 		b	.L41	@
 748              	.L40:
 749              		.loc 1 283 0 discriminator 2
 750 01c8 4CC09DE5 		ldr	ip, [sp, #76]	@ iftmp.61, device_read_interval.__pfn
 751              	.L41:
 752              		.loc 1 283 0 discriminator 3
 753 01cc 50209DE5 		ldr	r2, [sp, #80]	@ D.12395, device_read_interval.__delta
 754 01d0 C220A0E1 		mov	r2, r2, asr #1	@ D.12396, D.12395,
 755 01d4 02E083E0 		add	lr, r3, r2	@ D.12398, D.12377, D.12397
 756 01d8 44209DE5 		ldr	r2, [sp, #68]	@ D.12399, arg.entry_offset
 757 01dc 4830DDE5 		ldrb	r3, [sp, #72]	@ zero_extendqisi2	@ D.12400, arg.byte_count
 758 01e0 0310A0E1 		mov	r1, r3	@ D.12401, D.12400
 759 01e4 94309FE5 		ldr	r3, .L45+4	@ tmp215,
 760 01e8 5C308DE5 		str	r3, [sp, #92]	@ tmp215, D.12402.__pfn
 761 01ec 0030A0E3 		mov	r3, #0	@ tmp216,
 762 01f0 60308DE5 		str	r3, [sp, #96]	@ tmp216, D.12402.__delta
 763 01f4 20308DE2 		add	r3, sp, #32	@ tmp217,,
 764 01f8 00108DE5 		str	r1, [sp, #0]	@ D.12401,
 765 01fc 04408DE2 		add	r4, sp, #4	@ tmp218,,
 766 0200 5C108DE2 		add	r1, sp, #92	@ tmp219,,
 767 0204 030091E8 		ldmia	r1, {r0, r1}	@ tmp219,,
 768 0208 030084E8 		stmia	r4, {r0, r1}	@ tmp218,,
 769 020c 10109DE5 		ldr	r1, [sp, #16]	@ tmp220, dir_entry
 770 0210 0C108DE5 		str	r1, [sp, #12]	@ tmp220,
 771 0214 0E00A0E1 		mov	r0, lr	@, D.12398
 772 0218 0210A0E1 		mov	r1, r2	@, D.12399
 773 021c 0320A0E1 		mov	r2, r3	@, tmp217
ARM GAS  /tmp/ccNwMSzu.s 			page 20


 774 0220 2030A0E3 		mov	r3, #32	@,
 775 0224 0FE0A0E1 		mov	lr, pc
 776 0228 1CFF2FE1 		bx	ip	@ iftmp.61
 777 022c 0030A0E1 		mov	r3, r0	@ tmp221,
 278:fat16.cpp     ****     if(!(GetInstance()->*device_read_interval)(arg.entry_offset,
 778              		.loc 1 278 0 is_stmt 1 discriminator 3
 779 0230 000053E3 		cmp	r3, #0	@ D.12403,
 780 0234 0030A013 		movne	r3, #0	@, tmp223
 781 0238 0130A003 		moveq	r3, #1	@, tmp223
 782 023c FF3003E2 		and	r3, r3, #255	@ retval.60, tmp222,
 783 0240 000053E3 		cmp	r3, #0	@ retval.60,
 784 0244 0100000A 		beq	.L42	@,
 284:fat16.cpp     ****     return 0;
 785              		.loc 1 284 0
 786 0248 0030A0E3 		mov	r3, #0	@ D.12335,
 787 024c 060000EA 		b	.L33	@
 788              	.L42:
 285:fat16.cpp     **** 
 286:fat16.cpp     ****     return dir_entry->long_name[0] != '\0' ? 1 : 0;
 789              		.loc 1 286 0
 790 0250 10309DE5 		ldr	r3, [sp, #16]	@ tmp224, dir_entry
 791 0254 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12407, dir_entry_7(D)->long_name
 792 0258 000053E3 		cmp	r3, #0	@ D.12407,
 793 025c 0100000A 		beq	.L43	@,
 794              		.loc 1 286 0 is_stmt 0 discriminator 1
 795 0260 0130A0E3 		mov	r3, #1	@ iftmp.62,
 796 0264 000000EA 		b	.L44	@
 797              	.L43:
 798              		.loc 1 286 0 discriminator 2
 799 0268 0030A0E3 		mov	r3, #0	@ iftmp.62,
 800              	.L44:
 801              	.L33:
 802              	.LBE4:
 287:fat16.cpp     **** }
 803              		.loc 1 287 0 is_stmt 1
 804 026c 0300A0E1 		mov	r0, r3	@, <retval>
 805 0270 68D08DE2 		add	sp, sp, #104	@,,
 806 0274 1040BDE8 		ldmfd	sp!, {r4, lr}
 807 0278 1EFF2FE1 		bx	lr
 808              	.L46:
 809              		.align	2
 810              	.L45:
 811 027c 00000000 		.word	_ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv
 812 0280 00000000 		.word	_ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv
 813              		.cfi_endproc
 814              	.LFE113:
 815              		.size	_ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_structE, 
 816              		.section	.text._ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_
 817              		.align	2
 818              		.global	_ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_structE
 819              		.type	_ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_structEPS
 820              	_ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_structEPS3_:
 821              	.LFB114:
 288:fat16.cpp     **** 
 289:fat16.cpp     **** /**
 290:fat16.cpp     ****  * \ingroup fat16_fs
 291:fat16.cpp     ****  * Reads a directory entry of a given parent directory.
ARM GAS  /tmp/ccNwMSzu.s 			page 21


 292:fat16.cpp     ****  *
 293:fat16.cpp     ****  * \param[in] fs Descriptor of file system to use.
 294:fat16.cpp     ****  * \param[in] entry_num The index of the directory entry to read.
 295:fat16.cpp     ****  * \param[in] parent Directory entry descriptor in which to read directory entry.
 296:fat16.cpp     ****  * \param[out] dir_entry Directory entry descriptor which will get filled.
 297:fat16.cpp     ****  * \returns 0 on failure, 1 on success
 298:fat16.cpp     ****  * \see fat16_read_root_dir_entry, fat16_read_dir_entry_by_path
 299:fat16.cpp     ****  */
 300:fat16.cpp     **** uint8_t FAT16::fat16_read_sub_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, const
 301:fat16.cpp     **** {
 822              		.loc 1 301 0
 823              		.cfi_startproc
 824              		@ Function supports interworking.
 825              		@ args = 4, pretend = 0, frame = 88
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827 0000 10402DE9 		stmfd	sp!, {r4, lr}	@,
 828              	.LCFI8:
 829              		.cfi_def_cfa_offset 8
 830 0004 68D04DE2 		sub	sp, sp, #104	@,,
 831              	.LCFI9:
 832              		.cfi_def_cfa_offset 112
 833 0008 1C008DE5 		str	r0, [sp, #28]	@ this, this
 834 000c 18108DE5 		str	r1, [sp, #24]	@ fs, fs
 835 0010 10308DE5 		str	r3, [sp, #16]	@ parent, parent
 836 0014 B621CDE1 		strh	r2, [sp, #22]	@ movhi	@ tmp203, entry_num
 837              	.LBB5:
 302:fat16.cpp     ****     if(!fs || !parent || !dir_entry)
 838              		.loc 1 302 0
 839 0018 18309DE5 		ldr	r3, [sp, #24]	@ tmp204, fs
 840 001c 000053E3 		cmp	r3, #0	@ tmp204,
 841 0020 0500000A 		beq	.L48	@,
 842              		.cfi_offset 14, -4
 843              		.cfi_offset 4, -8
 844              		.loc 1 302 0 is_stmt 0 discriminator 1
 845 0024 10309DE5 		ldr	r3, [sp, #16]	@ tmp205, parent
 846 0028 000053E3 		cmp	r3, #0	@ tmp205,
 847 002c 0200000A 		beq	.L48	@,
 848              		.loc 1 302 0 discriminator 2
 849 0030 70309DE5 		ldr	r3, [sp, #112]	@ tmp206, dir_entry
 850 0034 000053E3 		cmp	r3, #0	@ tmp206,
 851 0038 0100001A 		bne	.L49	@,
 852              	.L48:
 303:fat16.cpp     ****         return 0;
 853              		.loc 1 303 0 is_stmt 1
 854 003c 0030A0E3 		mov	r3, #0	@ D.12238,
 855 0040 B20000EA 		b	.L50	@
 856              	.L49:
 304:fat16.cpp     **** 
 305:fat16.cpp     ****     /* we are in a parent directory and want to search within its directory entry table */
 306:fat16.cpp     ****     if(!(parent->attributes & FAT16_ATTRIB_DIR))
 857              		.loc 1 306 0
 858 0044 10309DE5 		ldr	r3, [sp, #16]	@ tmp207, parent
 859 0048 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.12239, parent_7(D)->attributes
 860 004c 103003E2 		and	r3, r3, #16	@ D.12241, D.12240,
 861 0050 000053E3 		cmp	r3, #0	@ D.12241,
 862 0054 0100001A 		bne	.L51	@,
 307:fat16.cpp     ****         return 0;
ARM GAS  /tmp/ccNwMSzu.s 			page 22


 863              		.loc 1 307 0
 864 0058 0030A0E3 		mov	r3, #0	@ D.12238,
 865 005c AB0000EA 		b	.L50	@
 866              	.L51:
 308:fat16.cpp     **** 
 309:fat16.cpp     ****     /* loop through all clusters of the directory */
 310:fat16.cpp     ****     uint8_t buffer[32];
 311:fat16.cpp     ****     uint32_t cluster_offset;
 312:fat16.cpp     ****     uint16_t cluster_size = fs->header.cluster_size;
 867              		.loc 1 312 0
 868 0060 18309DE5 		ldr	r3, [sp, #24]	@ tmp208, fs
 869 0064 B231D3E1 		ldrh	r3, [r3, #18]	@ movhi	@ tmp209, fs_6(D)->header.cluster_size
 870 0068 B436CDE1 		strh	r3, [sp, #100]	@ movhi	@ tmp209, cluster_size
 313:fat16.cpp     ****     uint16_t cluster_num = parent->cluster;
 871              		.loc 1 313 0
 872 006c 10309DE5 		ldr	r3, [sp, #16]	@ tmp210, parent
 873 0070 B232D3E1 		ldrh	r3, [r3, #34]	@ movhi	@ tmp211, parent_7(D)->cluster
 874 0074 B636CDE1 		strh	r3, [sp, #102]	@ movhi	@ tmp211, cluster_num
 875 0078 000000EA 		b	.L59	@
 876              	.L65:
 314:fat16.cpp     ****     struct fat16_read_callback_arg arg;
 315:fat16.cpp     **** 
 316:fat16.cpp     ****     while(1)
 877              		.loc 1 316 0
 878 007c 0000A0E1 		mov	r0, r0	@ nop
 879              	.L59:
 317:fat16.cpp     ****     {
 318:fat16.cpp     ****         /* calculate new cluster offset */
 319:fat16.cpp     ****         cluster_offset = fs->header.cluster_zero_offset + (uint32_t) (cluster_num - 2) * cluster_si
 880              		.loc 1 319 0
 881 0080 18309DE5 		ldr	r3, [sp, #24]	@ tmp212, fs
 882 0084 182093E5 		ldr	r2, [r3, #24]	@ D.12247, fs_6(D)->header.cluster_zero_offset
 883 0088 B636DDE1 		ldrh	r3, [sp, #102]	@ D.12248, cluster_num
 884 008c 023043E2 		sub	r3, r3, #2	@ D.12249, D.12248,
 885 0090 B416DDE1 		ldrh	r1, [sp, #100]	@ D.12251, cluster_size
 886 0094 910303E0 		mul	r3, r1, r3	@ D.12252, D.12251, D.12250
 887 0098 033082E0 		add	r3, r2, r3	@ tmp213, D.12247, D.12252
 888 009c 60308DE5 		str	r3, [sp, #96]	@ tmp213, cluster_offset
 320:fat16.cpp     **** 
 321:fat16.cpp     ****         /* seek to the n-th entry */
 322:fat16.cpp     ****         memset(&arg, 0, sizeof(arg));
 889              		.loc 1 322 0
 890 00a0 44308DE2 		add	r3, sp, #68	@ tmp214,,
 891 00a4 0300A0E1 		mov	r0, r3	@, tmp214
 892 00a8 0010A0E3 		mov	r1, #0	@,
 893 00ac 0C20A0E3 		mov	r2, #12	@,
 894 00b0 FEFFFFEB 		bl	memset	@
 323:fat16.cpp     ****         arg.entry_num = entry_num;
 895              		.loc 1 323 0
 896 00b4 B631DDE1 		ldrh	r3, [sp, #22]	@ movhi	@ tmp215, entry_num
 897 00b8 B634CDE1 		strh	r3, [sp, #70]	@ movhi	@ tmp215, arg.entry_num
 324:fat16.cpp     ****         if(!(GetInstance()->*fs->partition->device_read_interval)(cluster_offset,
 898              		.loc 1 324 0
 899 00bc FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 900 00c0 0030A0E1 		mov	r3, r0	@ D.12254,
 325:fat16.cpp     ****             buffer,
 326:fat16.cpp     ****            sizeof(buffer),
ARM GAS  /tmp/ccNwMSzu.s 			page 23


 327:fat16.cpp     ****            cluster_size,
 328:fat16.cpp     ****            &FAT16::fat16_dir_entry_seek_callback,
 329:fat16.cpp     ****            &arg)
 901              		.loc 1 329 0
 902 00c4 18209DE5 		ldr	r2, [sp, #24]	@ tmp216, fs
 903 00c8 002092E5 		ldr	r2, [r2, #0]	@ D.12256, fs_6(D)->partition
 904 00cc 0C2092E5 		ldr	r2, [r2, #12]	@ D.12257, D.12256_24->device_read_interval.__delta
 905 00d0 012002E2 		and	r2, r2, #1	@ D.12258, D.12257,
 906 00d4 FF2002E2 		and	r2, r2, #255	@ D.12259, D.12258,
 907 00d8 000052E3 		cmp	r2, #0	@ D.12259,
 908 00dc 0C00000A 		beq	.L52	@,
 909              		.loc 1 329 0 is_stmt 0 discriminator 1
 910 00e0 18209DE5 		ldr	r2, [sp, #24]	@ tmp217, fs
 911 00e4 002092E5 		ldr	r2, [r2, #0]	@ D.12262, fs_6(D)->partition
 912 00e8 0C2092E5 		ldr	r2, [r2, #12]	@ D.12263, D.12262_28->device_read_interval.__delta
 913 00ec C220A0E1 		mov	r2, r2, asr #1	@ D.12264, D.12263,
 914 00f0 022083E0 		add	r2, r3, r2	@ D.12266, D.12254, D.12265
 915 00f4 001092E5 		ldr	r1, [r2, #0]	@ D.12268,* D.12267
 916 00f8 18209DE5 		ldr	r2, [sp, #24]	@ tmp218, fs
 917 00fc 002092E5 		ldr	r2, [r2, #0]	@ D.12269, fs_6(D)->partition
 918 0100 082092E5 		ldr	r2, [r2, #8]	@ D.12270, D.12269_35->device_read_interval.__pfn
 919 0104 022081E0 		add	r2, r1, r2	@ D.12272, D.12268, D.12271
 920 0108 002092E5 		ldr	r2, [r2, #0]	@ D.12273,* D.12272
 921 010c 02C0A0E1 		mov	ip, r2	@ iftmp.52, D.12273
 922 0110 020000EA 		b	.L53	@
 923              	.L52:
 924              		.loc 1 329 0 discriminator 2
 925 0114 18209DE5 		ldr	r2, [sp, #24]	@ tmp219, fs
 926 0118 002092E5 		ldr	r2, [r2, #0]	@ D.12275, fs_6(D)->partition
 927 011c 08C092E5 		ldr	ip, [r2, #8]	@ iftmp.52, D.12275_41->device_read_interval.__pfn
 928              	.L53:
 929              		.loc 1 329 0 discriminator 3
 930 0120 18209DE5 		ldr	r2, [sp, #24]	@ tmp220, fs
 931 0124 002092E5 		ldr	r2, [r2, #0]	@ D.12276, fs_6(D)->partition
 932 0128 0C2092E5 		ldr	r2, [r2, #12]	@ D.12277, D.12276_43->device_read_interval.__delta
 933 012c C220A0E1 		mov	r2, r2, asr #1	@ D.12278, D.12277,
 934 0130 022083E0 		add	r2, r3, r2	@ D.12280, D.12254, D.12279
 935 0134 E4319FE5 		ldr	r3, .L66	@ tmp221,
 936 0138 50308DE5 		str	r3, [sp, #80]	@ tmp221, D.12281.__pfn
 937 013c 0030A0E3 		mov	r3, #0	@ tmp222,
 938 0140 54308DE5 		str	r3, [sp, #84]	@ tmp222, D.12281.__delta
 939 0144 24308DE2 		add	r3, sp, #36	@ tmp223,,
 940 0148 B416DDE1 		ldrh	r1, [sp, #100]	@ tmp224, cluster_size
 941 014c 00108DE5 		str	r1, [sp, #0]	@ tmp224,
 942 0150 04E08DE2 		add	lr, sp, #4	@ tmp225,,
 943 0154 50108DE2 		add	r1, sp, #80	@ tmp226,,
 944 0158 030091E8 		ldmia	r1, {r0, r1}	@ tmp226,,
 945 015c 03008EE8 		stmia	lr, {r0, r1}	@ tmp225,,
 946 0160 44108DE2 		add	r1, sp, #68	@ tmp227,,
 947 0164 0C108DE5 		str	r1, [sp, #12]	@ tmp227,
 948 0168 0200A0E1 		mov	r0, r2	@, D.12280
 949 016c 60109DE5 		ldr	r1, [sp, #96]	@, cluster_offset
 950 0170 0320A0E1 		mov	r2, r3	@, tmp223
 951 0174 2030A0E3 		mov	r3, #32	@,
 952 0178 0FE0A0E1 		mov	lr, pc
 953 017c 1CFF2FE1 		bx	ip	@ iftmp.52
 954 0180 0030A0E1 		mov	r3, r0	@ tmp228,
ARM GAS  /tmp/ccNwMSzu.s 			page 24


 324:fat16.cpp     ****         if(!(GetInstance()->*fs->partition->device_read_interval)(cluster_offset,
 955              		.loc 1 324 0 is_stmt 1 discriminator 3
 956 0184 000053E3 		cmp	r3, #0	@ D.12282,
 957 0188 0030A013 		movne	r3, #0	@, tmp230
 958 018c 0130A003 		moveq	r3, #1	@, tmp230
 959 0190 FF3003E2 		and	r3, r3, #255	@ retval.51, tmp229,
 960 0194 000053E3 		cmp	r3, #0	@ retval.51,
 961 0198 0100000A 		beq	.L54	@,
 330:fat16.cpp     ****            )
 331:fat16.cpp     ****         return 0;
 962              		.loc 1 331 0
 963 019c 0030A0E3 		mov	r3, #0	@ D.12238,
 964 01a0 5A0000EA 		b	.L50	@
 965              	.L54:
 332:fat16.cpp     **** 
 333:fat16.cpp     ****         /* check if we found the entry */
 334:fat16.cpp     ****         if(arg.entry_offset)
 966              		.loc 1 334 0
 967 01a4 48309DE5 		ldr	r3, [sp, #72]	@ D.12285, arg.entry_offset
 968 01a8 000053E3 		cmp	r3, #0	@ D.12285,
 969 01ac 0D00000A 		beq	.L55	@,
 335:fat16.cpp     ****             break;
 336:fat16.cpp     **** 
 337:fat16.cpp     ****         /* get number of next cluster */
 338:fat16.cpp     ****         if(!(cluster_num = fat16_get_next_cluster(fs, cluster_num)))
 339:fat16.cpp     ****             return 0; /* directory entry not found */
 340:fat16.cpp     ****     }
 341:fat16.cpp     **** 
 342:fat16.cpp     ****     memset(dir_entry, 0, sizeof(*dir_entry));
 970              		.loc 1 342 0
 971 01b0 70009DE5 		ldr	r0, [sp, #112]	@, dir_entry
 972 01b4 0010A0E3 		mov	r1, #0	@,
 973 01b8 2C20A0E3 		mov	r2, #44	@,
 974 01bc FEFFFFEB 		bl	memset	@
 343:fat16.cpp     **** 
 344:fat16.cpp     ****     /* read entry */
 345:fat16.cpp     ****     if(!(GetInstance()->*fs->partition->device_read_interval)(arg.entry_offset,
 975              		.loc 1 345 0
 976 01c0 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 977 01c4 0030A0E1 		mov	r3, r0	@ D.12292,
 346:fat16.cpp     ****         buffer,
 347:fat16.cpp     ****        sizeof(buffer),
 348:fat16.cpp     ****        arg.byte_count,
 349:fat16.cpp     ****        (device_read_callback_t) &FAT16::fat16_dir_entry_read_callback,
 350:fat16.cpp     ****        dir_entry))
 978              		.loc 1 350 0
 979 01c8 18209DE5 		ldr	r2, [sp, #24]	@ tmp231, fs
 980 01cc 002092E5 		ldr	r2, [r2, #0]	@ D.12294, fs_6(D)->partition
 981 01d0 0C2092E5 		ldr	r2, [r2, #12]	@ D.12295, D.12294_53->device_read_interval.__delta
 982 01d4 012002E2 		and	r2, r2, #1	@ D.12296, D.12295,
 983 01d8 FF2002E2 		and	r2, r2, #255	@ D.12297, D.12296,
 984 01dc 000052E3 		cmp	r2, #0	@ D.12297,
 985 01e0 1000001A 		bne	.L56	@,
 986 01e4 1C0000EA 		b	.L64	@
 987              	.L55:
 338:fat16.cpp     ****         if(!(cluster_num = fat16_get_next_cluster(fs, cluster_num)))
 988              		.loc 1 338 0
ARM GAS  /tmp/ccNwMSzu.s 			page 25


 989 01e8 B636DDE1 		ldrh	r3, [sp, #102]	@ tmp232, cluster_num
 990 01ec 1C009DE5 		ldr	r0, [sp, #28]	@, this
 991 01f0 18109DE5 		ldr	r1, [sp, #24]	@, fs
 992 01f4 0320A0E1 		mov	r2, r3	@, tmp232
 993 01f8 FEFFFFEB 		bl	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt	@
 994 01fc 0030A0E1 		mov	r3, r0	@ tmp233,
 995 0200 B636CDE1 		strh	r3, [sp, #102]	@ movhi	@ tmp233, cluster_num
 996 0204 B636DDE1 		ldrh	r3, [sp, #102]	@ tmp235, cluster_num
 997 0208 000053E3 		cmp	r3, #0	@ tmp235,
 998 020c 0030A013 		movne	r3, #0	@, tmp236
 999 0210 0130A003 		moveq	r3, #1	@, tmp236
 1000 0214 FF3003E2 		and	r3, r3, #255	@ retval.53, tmp234,
 1001 0218 000053E3 		cmp	r3, #0	@ retval.53,
 1002 021c 96FFFF0A 		beq	.L65	@,
 339:fat16.cpp     ****             return 0; /* directory entry not found */
 1003              		.loc 1 339 0
 1004 0220 0030A0E3 		mov	r3, #0	@ D.12238,
 1005 0224 390000EA 		b	.L50	@
 1006              	.L56:
 1007              		.loc 1 350 0 discriminator 1
 1008 0228 18209DE5 		ldr	r2, [sp, #24]	@ tmp237, fs
 1009 022c 002092E5 		ldr	r2, [r2, #0]	@ D.12300, fs_6(D)->partition
 1010 0230 0C2092E5 		ldr	r2, [r2, #12]	@ D.12301, D.12300_57->device_read_interval.__delta
 1011 0234 C220A0E1 		mov	r2, r2, asr #1	@ D.12302, D.12301,
 1012 0238 022083E0 		add	r2, r3, r2	@ D.12304, D.12292, D.12303
 1013 023c 001092E5 		ldr	r1, [r2, #0]	@ D.12306,* D.12305
 1014 0240 18209DE5 		ldr	r2, [sp, #24]	@ tmp238, fs
 1015 0244 002092E5 		ldr	r2, [r2, #0]	@ D.12307, fs_6(D)->partition
 1016 0248 082092E5 		ldr	r2, [r2, #8]	@ D.12308, D.12307_64->device_read_interval.__pfn
 1017 024c 022081E0 		add	r2, r1, r2	@ D.12310, D.12306, D.12309
 1018 0250 002092E5 		ldr	r2, [r2, #0]	@ D.12311,* D.12310
 1019 0254 02C0A0E1 		mov	ip, r2	@ iftmp.55, D.12311
 1020 0258 020000EA 		b	.L60	@
 1021              	.L64:
 1022              		.loc 1 350 0 is_stmt 0 discriminator 2
 1023 025c 18209DE5 		ldr	r2, [sp, #24]	@ tmp239, fs
 1024 0260 002092E5 		ldr	r2, [r2, #0]	@ D.12313, fs_6(D)->partition
 1025 0264 08C092E5 		ldr	ip, [r2, #8]	@ iftmp.55, D.12313_70->device_read_interval.__pfn
 1026              	.L60:
 1027              		.loc 1 350 0 discriminator 3
 1028 0268 18209DE5 		ldr	r2, [sp, #24]	@ tmp240, fs
 1029 026c 002092E5 		ldr	r2, [r2, #0]	@ D.12314, fs_6(D)->partition
 1030 0270 0C2092E5 		ldr	r2, [r2, #12]	@ D.12315, D.12314_72->device_read_interval.__delta
 1031 0274 C220A0E1 		mov	r2, r2, asr #1	@ D.12316, D.12315,
 1032 0278 02E083E0 		add	lr, r3, r2	@ D.12318, D.12292, D.12317
 1033 027c 48209DE5 		ldr	r2, [sp, #72]	@ D.12319, arg.entry_offset
 1034 0280 4C30DDE5 		ldrb	r3, [sp, #76]	@ zero_extendqisi2	@ D.12320, arg.byte_count
 1035 0284 0310A0E1 		mov	r1, r3	@ D.12321, D.12320
 1036 0288 94309FE5 		ldr	r3, .L66+4	@ tmp241,
 1037 028c 58308DE5 		str	r3, [sp, #88]	@ tmp241, D.12322.__pfn
 1038 0290 0030A0E3 		mov	r3, #0	@ tmp242,
 1039 0294 5C308DE5 		str	r3, [sp, #92]	@ tmp242, D.12322.__delta
 1040 0298 24308DE2 		add	r3, sp, #36	@ tmp243,,
 1041 029c 00108DE5 		str	r1, [sp, #0]	@ D.12321,
 1042 02a0 04408DE2 		add	r4, sp, #4	@ tmp244,,
 1043 02a4 58108DE2 		add	r1, sp, #88	@ tmp245,,
 1044 02a8 030091E8 		ldmia	r1, {r0, r1}	@ tmp245,,
ARM GAS  /tmp/ccNwMSzu.s 			page 26


 1045 02ac 030084E8 		stmia	r4, {r0, r1}	@ tmp244,,
 1046 02b0 70109DE5 		ldr	r1, [sp, #112]	@ tmp246, dir_entry
 1047 02b4 0C108DE5 		str	r1, [sp, #12]	@ tmp246,
 1048 02b8 0E00A0E1 		mov	r0, lr	@, D.12318
 1049 02bc 0210A0E1 		mov	r1, r2	@, D.12319
 1050 02c0 0320A0E1 		mov	r2, r3	@, tmp243
 1051 02c4 2030A0E3 		mov	r3, #32	@,
 1052 02c8 0FE0A0E1 		mov	lr, pc
 1053 02cc 1CFF2FE1 		bx	ip	@ iftmp.55
 1054 02d0 0030A0E1 		mov	r3, r0	@ tmp247,
 345:fat16.cpp     ****     if(!(GetInstance()->*fs->partition->device_read_interval)(arg.entry_offset,
 1055              		.loc 1 345 0 is_stmt 1 discriminator 3
 1056 02d4 000053E3 		cmp	r3, #0	@ D.12323,
 1057 02d8 0030A013 		movne	r3, #0	@, tmp249
 1058 02dc 0130A003 		moveq	r3, #1	@, tmp249
 1059 02e0 FF3003E2 		and	r3, r3, #255	@ retval.54, tmp248,
 1060 02e4 000053E3 		cmp	r3, #0	@ retval.54,
 1061 02e8 0100000A 		beq	.L61	@,
 351:fat16.cpp     ****     return 0;
 1062              		.loc 1 351 0
 1063 02ec 0030A0E3 		mov	r3, #0	@ D.12238,
 1064 02f0 060000EA 		b	.L50	@
 1065              	.L61:
 352:fat16.cpp     **** 
 353:fat16.cpp     ****     return dir_entry->long_name[0] != '\0' ? 1 : 0;
 1066              		.loc 1 353 0
 1067 02f4 70309DE5 		ldr	r3, [sp, #112]	@ tmp250, dir_entry
 1068 02f8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12327, dir_entry_8(D)->long_name
 1069 02fc 000053E3 		cmp	r3, #0	@ D.12327,
 1070 0300 0100000A 		beq	.L62	@,
 1071              		.loc 1 353 0 is_stmt 0 discriminator 1
 1072 0304 0130A0E3 		mov	r3, #1	@ iftmp.56,
 1073 0308 000000EA 		b	.L63	@
 1074              	.L62:
 1075              		.loc 1 353 0 discriminator 2
 1076 030c 0030A0E3 		mov	r3, #0	@ iftmp.56,
 1077              	.L63:
 1078              	.L50:
 1079              	.LBE5:
 354:fat16.cpp     **** }
 1080              		.loc 1 354 0 is_stmt 1
 1081 0310 0300A0E1 		mov	r0, r3	@, <retval>
 1082 0314 68D08DE2 		add	sp, sp, #104	@,,
 1083 0318 1040BDE8 		ldmfd	sp!, {r4, lr}
 1084 031c 1EFF2FE1 		bx	lr
 1085              	.L67:
 1086              		.align	2
 1087              	.L66:
 1088 0320 00000000 		.word	_ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv
 1089 0324 00000000 		.word	_ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv
 1090              		.cfi_endproc
 1091              	.LFE114:
 1092              		.size	_ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_structEPS
 1093              		.section	.text._ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv,"ax",%progbits
 1094              		.align	2
 1095              		.global	_ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv
 1096              		.type	_ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv, %function
ARM GAS  /tmp/ccNwMSzu.s 			page 27


 1097              	_ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv:
 1098              	.LFB115:
 355:fat16.cpp     **** 
 356:fat16.cpp     **** /**
 357:fat16.cpp     ****  * \ingroup fat16_fs
 358:fat16.cpp     ****  * Callback function for seeking through subdirectory entries.
 359:fat16.cpp     ****  */
 360:fat16.cpp     **** uint8_t FAT16::fat16_dir_entry_seek_callback(uint8_t* buffer, uint32_t offset, void* p)
 361:fat16.cpp     **** {
 1099              		.loc 1 361 0
 1100              		.cfi_startproc
 1101              		@ Function supports interworking.
 1102              		@ args = 0, pretend = 0, frame = 24
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 1105 0000 18D04DE2 		sub	sp, sp, #24	@,,
 1106              	.LCFI10:
 1107              		.cfi_def_cfa_offset 24
 1108 0004 0C008DE5 		str	r0, [sp, #12]	@ this, this
 1109 0008 08108DE5 		str	r1, [sp, #8]	@ buffer, buffer
 1110 000c 04208DE5 		str	r2, [sp, #4]	@ offset, offset
 1111 0010 00308DE5 		str	r3, [sp, #0]	@ p, p
 1112              	.LBB6:
 362:fat16.cpp     ****     struct fat16_read_callback_arg* arg = (fat16_read_callback_arg*)p;
 1113              		.loc 1 362 0
 1114 0014 00309DE5 		ldr	r3, [sp, #0]	@ tmp151, p
 1115 0018 14308DE5 		str	r3, [sp, #20]	@ tmp151, arg
 363:fat16.cpp     **** 
 364:fat16.cpp     ****     /* skip deleted or empty entries */
 365:fat16.cpp     ****     if(buffer[0] == FAT16_DIRENTRY_DELETED || !buffer[0])
 1116              		.loc 1 365 0
 1117 001c 08309DE5 		ldr	r3, [sp, #8]	@ tmp152, buffer
 1118 0020 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12207,
 1119 0024 E50053E3 		cmp	r3, #229	@ D.12207,
 1120 0028 0300000A 		beq	.L69	@,
 1121              		.loc 1 365 0 is_stmt 0 discriminator 1
 1122 002c 08309DE5 		ldr	r3, [sp, #8]	@ tmp153, buffer
 1123 0030 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12209,
 1124 0034 000053E3 		cmp	r3, #0	@ D.12209,
 1125 0038 0100001A 		bne	.L70	@,
 1126              	.L69:
 366:fat16.cpp     ****         return 1;
 1127              		.loc 1 366 0 is_stmt 1
 1128 003c 0130A0E3 		mov	r3, #1	@ D.12210,
 1129 0040 270000EA 		b	.L71	@
 1130              	.L70:
 367:fat16.cpp     **** 
 368:fat16.cpp     ****     if(arg->entry_cur == arg->entry_num)
 1131              		.loc 1 368 0
 1132 0044 14309DE5 		ldr	r3, [sp, #20]	@ tmp154, arg
 1133 0048 B020D3E1 		ldrh	r2, [r3, #0]	@ D.12211, arg_4->entry_cur
 1134 004c 14309DE5 		ldr	r3, [sp, #20]	@ tmp155, arg
 1135 0050 B230D3E1 		ldrh	r3, [r3, #2]	@ D.12212, arg_4->entry_num
 1136 0054 030052E1 		cmp	r2, r3	@ D.12211, D.12212
 1137 0058 1400001A 		bne	.L72	@,
 369:fat16.cpp     ****     {
 370:fat16.cpp     ****         arg->entry_offset = offset;
ARM GAS  /tmp/ccNwMSzu.s 			page 28


 1138              		.loc 1 370 0
 1139 005c 14309DE5 		ldr	r3, [sp, #20]	@ tmp156, arg
 1140 0060 04209DE5 		ldr	r2, [sp, #4]	@ tmp157, offset
 1141 0064 042083E5 		str	r2, [r3, #4]	@ tmp157, arg_4->entry_offset
 371:fat16.cpp     ****         arg->byte_count = buffer[11] == 0x0f ?
 1142              		.loc 1 371 0
 1143 0068 08309DE5 		ldr	r3, [sp, #8]	@ tmp158, buffer
 1144 006c 0B3083E2 		add	r3, r3, #11	@ D.12216, tmp158,
 1145 0070 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12217,* D.12216
 372:fat16.cpp     ****         ((buffer[0] & FAT16_DIRENTRY_LFNSEQMASK) + 1) * 32 :
 373:fat16.cpp     ****         32;
 1146              		.loc 1 373 0
 1147 0074 0F0053E3 		cmp	r3, #15	@ D.12217,
 1148 0078 0700001A 		bne	.L73	@,
 372:fat16.cpp     ****         ((buffer[0] & FAT16_DIRENTRY_LFNSEQMASK) + 1) * 32 :
 1149              		.loc 1 372 0
 1150 007c 08309DE5 		ldr	r3, [sp, #8]	@ tmp159, buffer
 1151 0080 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12220,
 1152              		.loc 1 373 0
 1153 0084 3F3003E2 		and	r3, r3, #63	@ D.12222, D.12221,
 1154 0088 013083E2 		add	r3, r3, #1	@ D.12223, D.12222,
 1155 008c FF3003E2 		and	r3, r3, #255	@ D.12224, D.12223,
 1156 0090 8332A0E1 		mov	r3, r3, asl #5	@ tmp160, D.12224,
 1157 0094 FF3003E2 		and	r3, r3, #255	@ iftmp.50, tmp160,
 1158 0098 000000EA 		b	.L74	@
 1159              	.L73:
 1160              		.loc 1 373 0 is_stmt 0 discriminator 1
 1161 009c 2030A0E3 		mov	r3, #32	@ iftmp.50,
 1162              	.L74:
 1163              		.loc 1 373 0 discriminator 2
 1164 00a0 14209DE5 		ldr	r2, [sp, #20]	@ tmp161, arg
 1165 00a4 0830C2E5 		strb	r3, [r2, #8]	@ tmp162, arg_4->byte_count
 374:fat16.cpp     ****         return 0;
 1166              		.loc 1 374 0 is_stmt 1 discriminator 2
 1167 00a8 0030A0E3 		mov	r3, #0	@ D.12210,
 1168 00ac 0C0000EA 		b	.L71	@
 1169              	.L72:
 375:fat16.cpp     ****     }
 376:fat16.cpp     **** 
 377:fat16.cpp     ****     /* if we read a 8.3 entry, we reached a new directory entry */
 378:fat16.cpp     ****     if(buffer[11] != 0x0f)
 1170              		.loc 1 378 0
 1171 00b0 08309DE5 		ldr	r3, [sp, #8]	@ tmp163, buffer
 1172 00b4 0B3083E2 		add	r3, r3, #11	@ D.12226, tmp163,
 1173 00b8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12227,* D.12226
 1174 00bc 0F0053E3 		cmp	r3, #15	@ D.12227,
 1175 00c0 0600000A 		beq	.L75	@,
 379:fat16.cpp     ****         ++arg->entry_cur;
 1176              		.loc 1 379 0
 1177 00c4 14309DE5 		ldr	r3, [sp, #20]	@ tmp164, arg
 1178 00c8 B030D3E1 		ldrh	r3, [r3, #0]	@ D.12230, arg_4->entry_cur
 1179 00cc 013083E2 		add	r3, r3, #1	@ tmp165, D.12230,
 1180 00d0 0338A0E1 		mov	r3, r3, asl #16	@ tmp166, tmp165,
 1181 00d4 2328A0E1 		mov	r2, r3, lsr #16	@ D.12231, tmp166,
 1182 00d8 14309DE5 		ldr	r3, [sp, #20]	@ tmp167, arg
 1183 00dc B020C3E1 		strh	r2, [r3, #0]	@ movhi	@ D.12231, arg_4->entry_cur
 1184              	.L75:
ARM GAS  /tmp/ccNwMSzu.s 			page 29


 380:fat16.cpp     **** 
 381:fat16.cpp     ****     return 1;
 1185              		.loc 1 381 0
 1186 00e0 0130A0E3 		mov	r3, #1	@ D.12210,
 1187              	.L71:
 1188              	.LBE6:
 382:fat16.cpp     **** }
 1189              		.loc 1 382 0
 1190 00e4 0300A0E1 		mov	r0, r3	@, <retval>
 1191 00e8 18D08DE2 		add	sp, sp, #24	@,,
 1192 00ec 1EFF2FE1 		bx	lr
 1193              		.cfi_endproc
 1194              	.LFE115:
 1195              		.size	_ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv, .-_ZN5FAT1629fat16_dir_entry_seek_callbackEP
 1196              		.section	.text._ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv,"ax",%progbits
 1197              		.align	2
 1198              		.global	_ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv
 1199              		.type	_ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv, %function
 1200              	_ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv:
 1201              	.LFB116:
 383:fat16.cpp     **** 
 384:fat16.cpp     **** /**
 385:fat16.cpp     ****  * \ingroup fat16_fs
 386:fat16.cpp     ****  * Callback function for reading a directory entry.
 387:fat16.cpp     ****  */
 388:fat16.cpp     **** uint8_t FAT16::fat16_dir_entry_read_callback(uint8_t* buffer, uint32_t offset, void* p)
 389:fat16.cpp     **** {
 1202              		.loc 1 389 0
 1203              		.cfi_startproc
 1204              		@ Function supports interworking.
 1205              		@ args = 0, pretend = 0, frame = 24
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 1208              	.LCFI11:
 1209              		.cfi_def_cfa_offset 4
 1210 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 1211              	.LCFI12:
 1212              		.cfi_def_cfa_offset 32
 1213 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 1214 000c 08108DE5 		str	r1, [sp, #8]	@ buffer, buffer
 1215 0010 04208DE5 		str	r2, [sp, #4]	@ offset, offset
 1216 0014 00308DE5 		str	r3, [sp, #0]	@ p, p
 1217              	.LBB7:
 390:fat16.cpp     ****     struct fat16_dir_entry_struct* dir_entry = (fat16_dir_entry_struct*)p;
 1218              		.loc 1 390 0
 1219 0018 00309DE5 		ldr	r3, [sp, #0]	@ tmp140, p
 1220 001c 14308DE5 		str	r3, [sp, #20]	@ tmp140, dir_entry
 391:fat16.cpp     **** 
 392:fat16.cpp     ****     /* there should not be any deleted or empty entries */
 393:fat16.cpp     ****     if(buffer[0] == FAT16_DIRENTRY_DELETED || !buffer[0])
 1221              		.loc 1 393 0
 1222 0020 08309DE5 		ldr	r3, [sp, #8]	@ tmp141, buffer
 1223 0024 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12192,
 1224 0028 E50053E3 		cmp	r3, #229	@ D.12192,
 1225 002c 0300000A 		beq	.L77	@,
 1226              		.cfi_offset 14, -4
 1227              		.loc 1 393 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccNwMSzu.s 			page 30


 1228 0030 08309DE5 		ldr	r3, [sp, #8]	@ tmp142, buffer
 1229 0034 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12194,
 1230 0038 000053E3 		cmp	r3, #0	@ D.12194,
 1231 003c 0100001A 		bne	.L78	@,
 1232              	.L77:
 394:fat16.cpp     ****         return 0;
 1233              		.loc 1 394 0 is_stmt 1
 1234 0040 0030A0E3 		mov	r3, #0	@ D.12195,
 1235 0044 180000EA 		b	.L79	@
 1236              	.L78:
 395:fat16.cpp     **** 
 396:fat16.cpp     ****     if(!dir_entry->entry_offset)
 1237              		.loc 1 396 0
 1238 0048 14309DE5 		ldr	r3, [sp, #20]	@ tmp143, dir_entry
 1239 004c 283093E5 		ldr	r3, [r3, #40]	@ D.12196, dir_entry_3->entry_offset
 1240 0050 000053E3 		cmp	r3, #0	@ D.12196,
 1241 0054 0200001A 		bne	.L80	@,
 397:fat16.cpp     ****         dir_entry->entry_offset = offset;
 1242              		.loc 1 397 0
 1243 0058 14309DE5 		ldr	r3, [sp, #20]	@ tmp144, dir_entry
 1244 005c 04209DE5 		ldr	r2, [sp, #4]	@ tmp145, offset
 1245 0060 282083E5 		str	r2, [r3, #40]	@ tmp145, dir_entry_3->entry_offset
 1246              	.L80:
 398:fat16.cpp     **** 
 399:fat16.cpp     ****     switch(fat16_interpret_dir_entry(dir_entry, buffer))
 1247              		.loc 1 399 0
 1248 0064 0C009DE5 		ldr	r0, [sp, #12]	@, this
 1249 0068 14109DE5 		ldr	r1, [sp, #20]	@, dir_entry
 1250 006c 08209DE5 		ldr	r2, [sp, #8]	@, buffer
 1251 0070 FEFFFFEB 		bl	_ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_dir_entry_structEPKh	@
 1252 0074 0030A0E1 		mov	r3, r0	@ tmp146,
 1253 0078 010053E3 		cmp	r3, #1	@ retval.49,
 1254 007c 0500000A 		beq	.L83	@,
 1255 0080 020053E3 		cmp	r3, #2	@ retval.49,
 1256 0084 0500000A 		beq	.L84	@,
 1257 0088 000053E3 		cmp	r3, #0	@ retval.49,
 1258 008c 0500001A 		bne	.L85	@,
 1259              	.L82:
 400:fat16.cpp     ****     {
 401:fat16.cpp     ****         case 0: /* failure */
 402:fat16.cpp     ****             return 0;
 1260              		.loc 1 402 0
 1261 0090 0030A0E3 		mov	r3, #0	@ D.12195,
 1262 0094 040000EA 		b	.L79	@
 1263              	.L83:
 403:fat16.cpp     ****             case 1: /* buffer successfully parsed, continue */
 404:fat16.cpp     ****             return 1;
 1264              		.loc 1 404 0
 1265 0098 0130A0E3 		mov	r3, #1	@ D.12195,
 1266 009c 020000EA 		b	.L79	@
 1267              	.L84:
 405:fat16.cpp     ****             case 2: /* directory entry complete, finish */
 406:fat16.cpp     ****             return 0;
 1268              		.loc 1 406 0
 1269 00a0 0030A0E3 		mov	r3, #0	@ D.12195,
 1270 00a4 000000EA 		b	.L79	@
 1271              	.L85:
ARM GAS  /tmp/ccNwMSzu.s 			page 31


 407:fat16.cpp     ****         }
 408:fat16.cpp     **** 
 409:fat16.cpp     ****     return 0;
 1272              		.loc 1 409 0
 1273 00a8 0030A0E3 		mov	r3, #0	@ D.12195,
 1274              	.L79:
 1275              	.LBE7:
 410:fat16.cpp     **** }
 1276              		.loc 1 410 0
 1277 00ac 0300A0E1 		mov	r0, r3	@, <retval>
 1278 00b0 1CD08DE2 		add	sp, sp, #28	@,,
 1279 00b4 04E09DE4 		ldr	lr, [sp], #4
 1280 00b8 1EFF2FE1 		bx	lr
 1281              		.cfi_endproc
 1282              	.LFE116:
 1283              		.size	_ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv, .-_ZN5FAT1629fat16_dir_entry_read_callbackEP
 1284              		.section	.text._ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_dir_entry_structEPKh,"ax",%progbit
 1285              		.align	2
 1286              		.global	_ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_dir_entry_structEPKh
 1287              		.type	_ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_dir_entry_structEPKh, %function
 1288              	_ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_dir_entry_structEPKh:
 1289              	.LFB117:
 411:fat16.cpp     **** 
 412:fat16.cpp     **** /**
 413:fat16.cpp     ****  * \ingroup fat16_fs
 414:fat16.cpp     ****  * Interprets a raw directory entry and puts the contained
 415:fat16.cpp     ****  * information into the directory entry.
 416:fat16.cpp     ****  *
 417:fat16.cpp     ****  * For a single file there may exist multiple directory
 418:fat16.cpp     ****  * entries. All except the last one are lfn entries, which
 419:fat16.cpp     ****  * contain parts of the long filename. The last directory
 420:fat16.cpp     ****  * entry is a traditional 8.3 style one. It contains all
 421:fat16.cpp     ****  * other information like size, cluster, date and time.
 422:fat16.cpp     ****  *
 423:fat16.cpp     ****  * \param[in,out] dir_entry The directory entry to fill.
 424:fat16.cpp     ****  * \param[in] raw_entry A pointer to 32 bytes of raw data.
 425:fat16.cpp     ****  * \returns 0 on failure, 1 on success and 2 if the
 426:fat16.cpp     ****  *          directory entry is complete.
 427:fat16.cpp     ****  */
 428:fat16.cpp     **** uint8_t FAT16::fat16_interpret_dir_entry(struct fat16_dir_entry_struct* dir_entry, const uint8_t* r
 429:fat16.cpp     **** {
 1290              		.loc 1 429 0
 1291              		.cfi_startproc
 1292              		@ Function supports interworking.
 1293              		@ args = 0, pretend = 0, frame = 32
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295              		@ link register save eliminated.
 1296 0000 20D04DE2 		sub	sp, sp, #32	@,,
 1297              	.LCFI13:
 1298              		.cfi_def_cfa_offset 32
 1299 0004 0C008DE5 		str	r0, [sp, #12]	@ this, this
 1300 0008 08108DE5 		str	r1, [sp, #8]	@ dir_entry, dir_entry
 1301 000c 04208DE5 		str	r2, [sp, #4]	@ raw_entry, raw_entry
 1302              	.LBB8:
 430:fat16.cpp     ****     if(!dir_entry || !raw_entry || !raw_entry[0])
 1303              		.loc 1 430 0
 1304 0010 08309DE5 		ldr	r3, [sp, #8]	@ tmp265, dir_entry
ARM GAS  /tmp/ccNwMSzu.s 			page 32


 1305 0014 000053E3 		cmp	r3, #0	@ tmp265,
 1306 0018 0600000A 		beq	.L87	@,
 1307              		.loc 1 430 0 is_stmt 0 discriminator 1
 1308 001c 04309DE5 		ldr	r3, [sp, #4]	@ tmp266, raw_entry
 1309 0020 000053E3 		cmp	r3, #0	@ tmp266,
 1310 0024 0300000A 		beq	.L87	@,
 1311              		.loc 1 430 0 discriminator 2
 1312 0028 04309DE5 		ldr	r3, [sp, #4]	@ tmp267, raw_entry
 1313 002c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12034,
 1314 0030 000053E3 		cmp	r3, #0	@ D.12034,
 1315 0034 0100001A 		bne	.L88	@,
 1316              	.L87:
 431:fat16.cpp     ****         return 0;
 1317              		.loc 1 431 0 is_stmt 1
 1318 0038 0030A0E3 		mov	r3, #0	@ D.12035,
 1319 003c FE0000EA 		b	.L89	@
 1320              	.L88:
 432:fat16.cpp     **** 
 433:fat16.cpp     ****     char* long_name = dir_entry->long_name;
 1321              		.loc 1 433 0
 1322 0040 08309DE5 		ldr	r3, [sp, #8]	@ tmp268, dir_entry
 1323 0044 18308DE5 		str	r3, [sp, #24]	@ tmp268, long_name
 1324              	.LBB9:
 434:fat16.cpp     ****     if(raw_entry[11] == 0x0f)
 1325              		.loc 1 434 0
 1326 0048 04309DE5 		ldr	r3, [sp, #4]	@ tmp269, raw_entry
 1327 004c 0B3083E2 		add	r3, r3, #11	@ D.12036, tmp269,
 1328 0050 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12037,* D.12036
 1329 0054 0F0053E3 		cmp	r3, #15	@ D.12037,
 1330 0058 7800001A 		bne	.L90	@,
 1331              	.LBB10:
 435:fat16.cpp     ****     {
 436:fat16.cpp     ****         uint16_t char_offset = ((raw_entry[0] & 0x3f) - 1) * 13;
 1332              		.loc 1 436 0
 1333 005c 04309DE5 		ldr	r3, [sp, #4]	@ tmp270, raw_entry
 1334 0060 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12040,
 1335 0064 3F3003E2 		and	r3, r3, #63	@ D.12042, D.12041,
 1336 0068 013043E2 		sub	r3, r3, #1	@ D.12043, D.12042,
 1337 006c 0338A0E1 		mov	r3, r3, asl #16	@ tmp271, D.12043,
 1338 0070 2338A0E1 		mov	r3, r3, lsr #16	@ D.12044, tmp271,
 1339 0074 0320A0E1 		mov	r2, r3	@ movhi	@ tmp273, tmp272
 1340 0078 8220A0E1 		mov	r2, r2, asl #1	@ tmp274, tmp273,
 1341 007c 032082E0 		add	r2, r2, r3	@ tmp276, tmp275, tmp272
 1342 0080 0221A0E1 		mov	r2, r2, asl #2	@ tmp278, tmp277,
 1343 0084 033082E0 		add	r3, r2, r3	@ tmp280, tmp279, tmp272
 1344 0088 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp280, char_offset
 437:fat16.cpp     **** 
 438:fat16.cpp     ****         if(char_offset + 12 < sizeof(dir_entry->long_name))
 1345              		.loc 1 438 0
 1346 008c B631DDE1 		ldrh	r3, [sp, #22]	@ D.12045, char_offset
 1347 0090 0C3083E2 		add	r3, r3, #12	@ D.12046, D.12045,
 1348 0094 1F0053E3 		cmp	r3, #31	@ D.12047,
 1349 0098 6600008A 		bhi	.L91	@,
 439:fat16.cpp     ****         {
 440:fat16.cpp     ****             /* Lfn supports unicode, but we do not, for now.
 441:fat16.cpp     ****                                                  * So we assume pure ascii and read only every
 442:fat16.cpp     ****                                                  * second byte.
ARM GAS  /tmp/ccNwMSzu.s 			page 33


 443:fat16.cpp     ****                                                  */
 444:fat16.cpp     ****             long_name[char_offset + 0] = raw_entry[1];
 1350              		.loc 1 444 0
 1351 009c B631DDE1 		ldrh	r3, [sp, #22]	@ D.12050, char_offset
 1352 00a0 18209DE5 		ldr	r2, [sp, #24]	@ tmp281, long_name
 1353 00a4 033082E0 		add	r3, r2, r3	@ D.12051, tmp281, D.12050
 1354 00a8 04209DE5 		ldr	r2, [sp, #4]	@ tmp282, raw_entry
 1355 00ac 012082E2 		add	r2, r2, #1	@ D.12052, tmp282,
 1356 00b0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12053,* D.12052
 1357 00b4 0020C3E5 		strb	r2, [r3, #0]	@ tmp283,* D.12051
 445:fat16.cpp     ****             long_name[char_offset + 1] = raw_entry[3];
 1358              		.loc 1 445 0
 1359 00b8 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12054, char_offset
 1360 00bc 013083E2 		add	r3, r3, #1	@ D.12055, D.12054,
 1361 00c0 18209DE5 		ldr	r2, [sp, #24]	@ tmp284, long_name
 1362 00c4 033082E0 		add	r3, r2, r3	@ D.12056, tmp284, D.12055
 1363 00c8 04209DE5 		ldr	r2, [sp, #4]	@ tmp285, raw_entry
 1364 00cc 032082E2 		add	r2, r2, #3	@ D.12057, tmp285,
 1365 00d0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12058,* D.12057
 1366 00d4 0020C3E5 		strb	r2, [r3, #0]	@ tmp286,* D.12056
 446:fat16.cpp     ****             long_name[char_offset + 2] = raw_entry[5];
 1367              		.loc 1 446 0
 1368 00d8 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12059, char_offset
 1369 00dc 023083E2 		add	r3, r3, #2	@ D.12060, D.12059,
 1370 00e0 18209DE5 		ldr	r2, [sp, #24]	@ tmp287, long_name
 1371 00e4 033082E0 		add	r3, r2, r3	@ D.12061, tmp287, D.12060
 1372 00e8 04209DE5 		ldr	r2, [sp, #4]	@ tmp288, raw_entry
 1373 00ec 052082E2 		add	r2, r2, #5	@ D.12062, tmp288,
 1374 00f0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12063,* D.12062
 1375 00f4 0020C3E5 		strb	r2, [r3, #0]	@ tmp289,* D.12061
 447:fat16.cpp     ****             long_name[char_offset + 3] = raw_entry[7];
 1376              		.loc 1 447 0
 1377 00f8 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12064, char_offset
 1378 00fc 033083E2 		add	r3, r3, #3	@ D.12065, D.12064,
 1379 0100 18209DE5 		ldr	r2, [sp, #24]	@ tmp290, long_name
 1380 0104 033082E0 		add	r3, r2, r3	@ D.12066, tmp290, D.12065
 1381 0108 04209DE5 		ldr	r2, [sp, #4]	@ tmp291, raw_entry
 1382 010c 072082E2 		add	r2, r2, #7	@ D.12067, tmp291,
 1383 0110 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12068,* D.12067
 1384 0114 0020C3E5 		strb	r2, [r3, #0]	@ tmp292,* D.12066
 448:fat16.cpp     ****             long_name[char_offset + 4] = raw_entry[9];
 1385              		.loc 1 448 0
 1386 0118 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12069, char_offset
 1387 011c 043083E2 		add	r3, r3, #4	@ D.12070, D.12069,
 1388 0120 18209DE5 		ldr	r2, [sp, #24]	@ tmp293, long_name
 1389 0124 033082E0 		add	r3, r2, r3	@ D.12071, tmp293, D.12070
 1390 0128 04209DE5 		ldr	r2, [sp, #4]	@ tmp294, raw_entry
 1391 012c 092082E2 		add	r2, r2, #9	@ D.12072, tmp294,
 1392 0130 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12073,* D.12072
 1393 0134 0020C3E5 		strb	r2, [r3, #0]	@ tmp295,* D.12071
 449:fat16.cpp     ****             long_name[char_offset + 5] = raw_entry[14];
 1394              		.loc 1 449 0
 1395 0138 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12074, char_offset
 1396 013c 053083E2 		add	r3, r3, #5	@ D.12075, D.12074,
 1397 0140 18209DE5 		ldr	r2, [sp, #24]	@ tmp296, long_name
 1398 0144 033082E0 		add	r3, r2, r3	@ D.12076, tmp296, D.12075
 1399 0148 04209DE5 		ldr	r2, [sp, #4]	@ tmp297, raw_entry
ARM GAS  /tmp/ccNwMSzu.s 			page 34


 1400 014c 0E2082E2 		add	r2, r2, #14	@ D.12077, tmp297,
 1401 0150 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12078,* D.12077
 1402 0154 0020C3E5 		strb	r2, [r3, #0]	@ tmp298,* D.12076
 450:fat16.cpp     ****             long_name[char_offset + 6] = raw_entry[16];
 1403              		.loc 1 450 0
 1404 0158 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12079, char_offset
 1405 015c 063083E2 		add	r3, r3, #6	@ D.12080, D.12079,
 1406 0160 18209DE5 		ldr	r2, [sp, #24]	@ tmp299, long_name
 1407 0164 033082E0 		add	r3, r2, r3	@ D.12081, tmp299, D.12080
 1408 0168 04209DE5 		ldr	r2, [sp, #4]	@ tmp300, raw_entry
 1409 016c 102082E2 		add	r2, r2, #16	@ D.12082, tmp300,
 1410 0170 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12083,* D.12082
 1411 0174 0020C3E5 		strb	r2, [r3, #0]	@ tmp301,* D.12081
 451:fat16.cpp     ****             long_name[char_offset + 7] = raw_entry[18];
 1412              		.loc 1 451 0
 1413 0178 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12084, char_offset
 1414 017c 073083E2 		add	r3, r3, #7	@ D.12085, D.12084,
 1415 0180 18209DE5 		ldr	r2, [sp, #24]	@ tmp302, long_name
 1416 0184 033082E0 		add	r3, r2, r3	@ D.12086, tmp302, D.12085
 1417 0188 04209DE5 		ldr	r2, [sp, #4]	@ tmp303, raw_entry
 1418 018c 122082E2 		add	r2, r2, #18	@ D.12087, tmp303,
 1419 0190 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12088,* D.12087
 1420 0194 0020C3E5 		strb	r2, [r3, #0]	@ tmp304,* D.12086
 452:fat16.cpp     ****             long_name[char_offset + 8] = raw_entry[20];
 1421              		.loc 1 452 0
 1422 0198 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12089, char_offset
 1423 019c 083083E2 		add	r3, r3, #8	@ D.12090, D.12089,
 1424 01a0 18209DE5 		ldr	r2, [sp, #24]	@ tmp305, long_name
 1425 01a4 033082E0 		add	r3, r2, r3	@ D.12091, tmp305, D.12090
 1426 01a8 04209DE5 		ldr	r2, [sp, #4]	@ tmp306, raw_entry
 1427 01ac 142082E2 		add	r2, r2, #20	@ D.12092, tmp306,
 1428 01b0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12093,* D.12092
 1429 01b4 0020C3E5 		strb	r2, [r3, #0]	@ tmp307,* D.12091
 453:fat16.cpp     ****             long_name[char_offset + 9] = raw_entry[22];
 1430              		.loc 1 453 0
 1431 01b8 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12094, char_offset
 1432 01bc 093083E2 		add	r3, r3, #9	@ D.12095, D.12094,
 1433 01c0 18209DE5 		ldr	r2, [sp, #24]	@ tmp308, long_name
 1434 01c4 033082E0 		add	r3, r2, r3	@ D.12096, tmp308, D.12095
 1435 01c8 04209DE5 		ldr	r2, [sp, #4]	@ tmp309, raw_entry
 1436 01cc 162082E2 		add	r2, r2, #22	@ D.12097, tmp309,
 1437 01d0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12098,* D.12097
 1438 01d4 0020C3E5 		strb	r2, [r3, #0]	@ tmp310,* D.12096
 454:fat16.cpp     ****             long_name[char_offset + 10] = raw_entry[24];
 1439              		.loc 1 454 0
 1440 01d8 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12099, char_offset
 1441 01dc 0A3083E2 		add	r3, r3, #10	@ D.12100, D.12099,
 1442 01e0 18209DE5 		ldr	r2, [sp, #24]	@ tmp311, long_name
 1443 01e4 033082E0 		add	r3, r2, r3	@ D.12101, tmp311, D.12100
 1444 01e8 04209DE5 		ldr	r2, [sp, #4]	@ tmp312, raw_entry
 1445 01ec 182082E2 		add	r2, r2, #24	@ D.12102, tmp312,
 1446 01f0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12103,* D.12102
 1447 01f4 0020C3E5 		strb	r2, [r3, #0]	@ tmp313,* D.12101
 455:fat16.cpp     ****             long_name[char_offset + 11] = raw_entry[28];
 1448              		.loc 1 455 0
 1449 01f8 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12104, char_offset
 1450 01fc 0B3083E2 		add	r3, r3, #11	@ D.12105, D.12104,
ARM GAS  /tmp/ccNwMSzu.s 			page 35


 1451 0200 18209DE5 		ldr	r2, [sp, #24]	@ tmp314, long_name
 1452 0204 033082E0 		add	r3, r2, r3	@ D.12106, tmp314, D.12105
 1453 0208 04209DE5 		ldr	r2, [sp, #4]	@ tmp315, raw_entry
 1454 020c 1C2082E2 		add	r2, r2, #28	@ D.12107, tmp315,
 1455 0210 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12108,* D.12107
 1456 0214 0020C3E5 		strb	r2, [r3, #0]	@ tmp316,* D.12106
 456:fat16.cpp     ****             long_name[char_offset + 12] = raw_entry[30];
 1457              		.loc 1 456 0
 1458 0218 B631DDE1 		ldrh	r3, [sp, #22]	@ D.12109, char_offset
 1459 021c 0C3083E2 		add	r3, r3, #12	@ D.12110, D.12109,
 1460 0220 18209DE5 		ldr	r2, [sp, #24]	@ tmp317, long_name
 1461 0224 033082E0 		add	r3, r2, r3	@ D.12111, tmp317, D.12110
 1462 0228 04209DE5 		ldr	r2, [sp, #4]	@ tmp318, raw_entry
 1463 022c 1E2082E2 		add	r2, r2, #30	@ D.12112, tmp318,
 1464 0230 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12113,* D.12112
 1465 0234 0020C3E5 		strb	r2, [r3, #0]	@ tmp319,* D.12111
 1466              	.L91:
 457:fat16.cpp     ****         }
 458:fat16.cpp     **** 
 459:fat16.cpp     ****         return 1;
 1467              		.loc 1 459 0
 1468 0238 0130A0E3 		mov	r3, #1	@ D.12035,
 1469 023c 7E0000EA 		b	.L89	@
 1470              	.L90:
 1471              	.LBE10:
 1472              	.LBB11:
 1473              	.LBB12:
 460:fat16.cpp     ****     }
 461:fat16.cpp     ****     else
 462:fat16.cpp     ****     {
 463:fat16.cpp     ****         /* if we do not have a long name, take the short one */
 464:fat16.cpp     ****         if(long_name[0] == '\0')
 1474              		.loc 1 464 0
 1475 0240 18309DE5 		ldr	r3, [sp, #24]	@ tmp320, long_name
 1476 0244 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12115,
 1477 0248 000053E3 		cmp	r3, #0	@ D.12115,
 1478 024c 4E00001A 		bne	.L92	@,
 1479              	.LBB13:
 465:fat16.cpp     ****         {
 466:fat16.cpp     ****             uint8_t i;
 467:fat16.cpp     ****             for(i = 0; i < 8; ++i)
 1480              		.loc 1 467 0
 1481 0250 0030A0E3 		mov	r3, #0	@ tmp321,
 1482 0254 1F30CDE5 		strb	r3, [sp, #31]	@ tmp322, i
 1483 0258 100000EA 		b	.L93	@
 1484              	.L96:
 468:fat16.cpp     ****             {
 469:fat16.cpp     ****                 if(raw_entry[i] == ' ')
 1485              		.loc 1 469 0
 1486 025c 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ D.12123, i
 1487 0260 04209DE5 		ldr	r2, [sp, #4]	@ tmp323, raw_entry
 1488 0264 033082E0 		add	r3, r2, r3	@ D.12124, tmp323, D.12123
 1489 0268 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12125,* D.12124
 1490 026c 200053E3 		cmp	r3, #32	@ D.12125,
 1491 0270 1200000A 		beq	.L102	@,
 1492              	.L94:
 470:fat16.cpp     ****                     break;
ARM GAS  /tmp/ccNwMSzu.s 			page 36


 471:fat16.cpp     ****                 long_name[i] = raw_entry[i];
 1493              		.loc 1 471 0
 1494 0274 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ D.12128, i
 1495 0278 18209DE5 		ldr	r2, [sp, #24]	@ tmp324, long_name
 1496 027c 033082E0 		add	r3, r2, r3	@ D.12129, tmp324, D.12128
 1497 0280 1F20DDE5 		ldrb	r2, [sp, #31]	@ zero_extendqisi2	@ D.12130, i
 1498 0284 04109DE5 		ldr	r1, [sp, #4]	@ tmp325, raw_entry
 1499 0288 022081E0 		add	r2, r1, r2	@ D.12131, tmp325, D.12130
 1500 028c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12132,* D.12131
 1501 0290 0020C3E5 		strb	r2, [r3, #0]	@ tmp326,* D.12129
 467:fat16.cpp     ****             for(i = 0; i < 8; ++i)
 1502              		.loc 1 467 0
 1503 0294 1F30DDE5 		ldrb	r3, [sp, #31]	@ tmp327, i
 1504 0298 013083E2 		add	r3, r3, #1	@ tmp328, tmp327,
 1505 029c 1F30CDE5 		strb	r3, [sp, #31]	@ tmp329, i
 1506              	.L93:
 467:fat16.cpp     ****             for(i = 0; i < 8; ++i)
 1507              		.loc 1 467 0 is_stmt 0 discriminator 1
 1508 02a0 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ tmp331, i
 1509 02a4 070053E3 		cmp	r3, #7	@ tmp331,
 1510 02a8 0030A083 		movhi	r3, #0	@, tmp332
 1511 02ac 0130A093 		movls	r3, #1	@, tmp332
 1512 02b0 FF3003E2 		and	r3, r3, #255	@ D.12121, tmp330,
 1513 02b4 000053E3 		cmp	r3, #0	@ D.12121,
 1514 02b8 E7FFFF1A 		bne	.L96	@,
 1515 02bc 000000EA 		b	.L95	@
 1516              	.L102:
 470:fat16.cpp     ****                     break;
 1517              		.loc 1 470 0 is_stmt 1
 1518 02c0 0000A0E1 		mov	r0, r0	@ nop
 1519              	.L95:
 1520              	.LBB14:
 472:fat16.cpp     ****             }
 473:fat16.cpp     ****             if(raw_entry[8] != ' ')
 1521              		.loc 1 473 0
 1522 02c4 04309DE5 		ldr	r3, [sp, #4]	@ tmp333, raw_entry
 1523 02c8 083083E2 		add	r3, r3, #8	@ D.12133, tmp333,
 1524 02cc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12134,* D.12133
 1525 02d0 200053E3 		cmp	r3, #32	@ D.12134,
 1526 02d4 2700000A 		beq	.L97	@,
 1527              	.LBB15:
 474:fat16.cpp     ****             {
 475:fat16.cpp     ****                 long_name[i++] = '.';
 1528              		.loc 1 475 0
 1529 02d8 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ D.12137, i
 1530 02dc 18209DE5 		ldr	r2, [sp, #24]	@ tmp334, long_name
 1531 02e0 033082E0 		add	r3, r2, r3	@ D.12138, tmp334, D.12137
 1532 02e4 2E20A0E3 		mov	r2, #46	@ tmp335,
 1533 02e8 0020C3E5 		strb	r2, [r3, #0]	@ tmp336,* D.12138
 1534 02ec 1F30DDE5 		ldrb	r3, [sp, #31]	@ tmp337, i
 1535 02f0 013083E2 		add	r3, r3, #1	@ tmp338, tmp337,
 1536 02f4 1F30CDE5 		strb	r3, [sp, #31]	@ tmp339, i
 476:fat16.cpp     **** 
 477:fat16.cpp     ****                 uint8_t j = 8;
 1537              		.loc 1 477 0
 1538 02f8 0830A0E3 		mov	r3, #8	@ tmp340,
 1539 02fc 1E30CDE5 		strb	r3, [sp, #30]	@ tmp341, j
ARM GAS  /tmp/ccNwMSzu.s 			page 37


 478:fat16.cpp     ****                 for(; j < 11; ++j)
 1540              		.loc 1 478 0
 1541 0300 130000EA 		b	.L98	@
 1542              	.L101:
 479:fat16.cpp     ****                 {
 480:fat16.cpp     ****                     if(raw_entry[j] != ' ')
 1543              		.loc 1 480 0
 1544 0304 1E30DDE5 		ldrb	r3, [sp, #30]	@ zero_extendqisi2	@ D.12144, j
 1545 0308 04209DE5 		ldr	r2, [sp, #4]	@ tmp342, raw_entry
 1546 030c 033082E0 		add	r3, r2, r3	@ D.12145, tmp342, D.12144
 1547 0310 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12146,* D.12145
 1548 0314 200053E3 		cmp	r3, #32	@ D.12146,
 1549 0318 1500000A 		beq	.L103	@,
 481:fat16.cpp     ****                     {
 482:fat16.cpp     ****                         long_name[i++] = raw_entry[j];
 1550              		.loc 1 482 0
 1551 031c 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ D.12149, i
 1552 0320 18209DE5 		ldr	r2, [sp, #24]	@ tmp343, long_name
 1553 0324 033082E0 		add	r3, r2, r3	@ D.12150, tmp343, D.12149
 1554 0328 1E20DDE5 		ldrb	r2, [sp, #30]	@ zero_extendqisi2	@ D.12151, j
 1555 032c 04109DE5 		ldr	r1, [sp, #4]	@ tmp344, raw_entry
 1556 0330 022081E0 		add	r2, r1, r2	@ D.12152, tmp344, D.12151
 1557 0334 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.12153,* D.12152
 1558 0338 0020C3E5 		strb	r2, [r3, #0]	@ tmp345,* D.12150
 1559 033c 1F30DDE5 		ldrb	r3, [sp, #31]	@ tmp346, i
 1560 0340 013083E2 		add	r3, r3, #1	@ tmp347, tmp346,
 1561 0344 1F30CDE5 		strb	r3, [sp, #31]	@ tmp348, i
 478:fat16.cpp     ****                 for(; j < 11; ++j)
 1562              		.loc 1 478 0
 1563 0348 1E30DDE5 		ldrb	r3, [sp, #30]	@ tmp349, j
 1564 034c 013083E2 		add	r3, r3, #1	@ tmp350, tmp349,
 1565 0350 1E30CDE5 		strb	r3, [sp, #30]	@ tmp351, j
 1566              	.L98:
 478:fat16.cpp     ****                 for(; j < 11; ++j)
 1567              		.loc 1 478 0 is_stmt 0 discriminator 1
 1568 0354 1E30DDE5 		ldrb	r3, [sp, #30]	@ zero_extendqisi2	@ tmp353, j
 1569 0358 0A0053E3 		cmp	r3, #10	@ tmp353,
 1570 035c 0030A083 		movhi	r3, #0	@, tmp354
 1571 0360 0130A093 		movls	r3, #1	@, tmp354
 1572 0364 FF3003E2 		and	r3, r3, #255	@ D.12142, tmp352,
 1573 0368 000053E3 		cmp	r3, #0	@ D.12142,
 1574 036c E4FFFF1A 		bne	.L101	@,
 1575 0370 000000EA 		b	.L97	@
 1576              	.L103:
 483:fat16.cpp     ****                     }
 484:fat16.cpp     ****                     else
 485:fat16.cpp     ****                     {
 486:fat16.cpp     ****                         break;
 1577              		.loc 1 486 0 is_stmt 1
 1578 0374 0000A0E1 		mov	r0, r0	@ nop
 1579              	.L97:
 1580              	.LBE15:
 1581              	.LBE14:
 487:fat16.cpp     ****                     }
 488:fat16.cpp     ****                 }
 489:fat16.cpp     ****             }
 490:fat16.cpp     **** 
ARM GAS  /tmp/ccNwMSzu.s 			page 38


 491:fat16.cpp     ****             long_name[i] = '\0';
 1582              		.loc 1 491 0
 1583 0378 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ D.12156, i
 1584 037c 18209DE5 		ldr	r2, [sp, #24]	@ tmp355, long_name
 1585 0380 033082E0 		add	r3, r2, r3	@ D.12157, tmp355, D.12156
 1586 0384 0020A0E3 		mov	r2, #0	@ tmp356,
 1587 0388 0020C3E5 		strb	r2, [r3, #0]	@ tmp357,* D.12157
 1588              	.L92:
 1589              	.LBE13:
 1590              	.LBE12:
 492:fat16.cpp     ****         }
 493:fat16.cpp     **** 
 494:fat16.cpp     ****         /* extract properties of file and store them within the structure */
 495:fat16.cpp     ****         dir_entry->attributes = raw_entry[11];
 1591              		.loc 1 495 0
 1592 038c 04309DE5 		ldr	r3, [sp, #4]	@ tmp358, raw_entry
 1593 0390 0B3083E2 		add	r3, r3, #11	@ D.12159, tmp358,
 1594 0394 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ D.12160,* D.12159
 1595 0398 08309DE5 		ldr	r3, [sp, #8]	@ tmp359, dir_entry
 1596 039c 2020C3E5 		strb	r2, [r3, #32]	@ tmp360, dir_entry_6(D)->attributes
 496:fat16.cpp     ****         dir_entry->cluster = ((uint16_t) raw_entry[26]) |
 1597              		.loc 1 496 0
 1598 03a0 04309DE5 		ldr	r3, [sp, #4]	@ tmp361, raw_entry
 1599 03a4 1A3083E2 		add	r3, r3, #26	@ D.12161, tmp361,
 1600 03a8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12162,* D.12161
 497:fat16.cpp     ****         ((uint16_t) raw_entry[27] << 8);
 1601              		.loc 1 497 0
 1602 03ac 0320A0E1 		mov	r2, r3	@ D.12163, D.12162
 1603 03b0 04309DE5 		ldr	r3, [sp, #4]	@ tmp362, raw_entry
 1604 03b4 1B3083E2 		add	r3, r3, #27	@ D.12164, tmp362,
 1605 03b8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12165,* D.12164
 1606 03bc 0334A0E1 		mov	r3, r3, asl #8	@ D.12167, D.12166,
 1607 03c0 0338A0E1 		mov	r3, r3, asl #16	@ tmp363, D.12167,
 1608 03c4 2338A0E1 		mov	r3, r3, lsr #16	@ D.12168, tmp363,
 1609 03c8 033082E1 		orr	r3, r2, r3	@ tmp366, tmp364, tmp365
 1610 03cc 0338A0E1 		mov	r3, r3, asl #16	@ tmp367, tmp366,
 1611 03d0 2338A0E1 		mov	r3, r3, lsr #16	@ D.12169, tmp367,
 1612 03d4 0338A0E1 		mov	r3, r3, asl #16	@ tmp368, D.12169,
 1613 03d8 2328A0E1 		mov	r2, r3, lsr #16	@ D.12170, tmp368,
 1614 03dc 08309DE5 		ldr	r3, [sp, #8]	@ tmp369, dir_entry
 1615 03e0 B222C3E1 		strh	r2, [r3, #34]	@ movhi	@ D.12170, dir_entry_6(D)->cluster
 498:fat16.cpp     ****         dir_entry->file_size = ((uint32_t) raw_entry[28]) |
 1616              		.loc 1 498 0
 1617 03e4 04309DE5 		ldr	r3, [sp, #4]	@ tmp370, raw_entry
 1618 03e8 1C3083E2 		add	r3, r3, #28	@ D.12171, tmp370,
 1619 03ec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12172,* D.12171
 499:fat16.cpp     ****         ((uint32_t) raw_entry[29] << 8) |
 500:fat16.cpp     ****         ((uint32_t) raw_entry[30] << 16) |
 501:fat16.cpp     ****         ((uint32_t) raw_entry[31] << 24);
 1620              		.loc 1 501 0
 1621 03f0 0320A0E1 		mov	r2, r3	@ D.12173, D.12172
 499:fat16.cpp     ****         ((uint32_t) raw_entry[29] << 8) |
 1622              		.loc 1 499 0
 1623 03f4 04309DE5 		ldr	r3, [sp, #4]	@ tmp371, raw_entry
 1624 03f8 1D3083E2 		add	r3, r3, #29	@ D.12174, tmp371,
 1625 03fc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12175,* D.12174
 1626              		.loc 1 501 0
ARM GAS  /tmp/ccNwMSzu.s 			page 39


 1627 0400 0334A0E1 		mov	r3, r3, asl #8	@ D.12177, D.12176,
 1628 0404 032082E1 		orr	r2, r2, r3	@ D.12178, D.12173, D.12177
 500:fat16.cpp     ****         ((uint32_t) raw_entry[30] << 16) |
 1629              		.loc 1 500 0
 1630 0408 04309DE5 		ldr	r3, [sp, #4]	@ tmp372, raw_entry
 1631 040c 1E3083E2 		add	r3, r3, #30	@ D.12179, tmp372,
 1632 0410 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12180,* D.12179
 1633              		.loc 1 501 0
 1634 0414 0338A0E1 		mov	r3, r3, asl #16	@ D.12182, D.12181,
 1635 0418 032082E1 		orr	r2, r2, r3	@ D.12183, D.12178, D.12182
 1636 041c 04309DE5 		ldr	r3, [sp, #4]	@ tmp373, raw_entry
 1637 0420 1F3083E2 		add	r3, r3, #31	@ D.12184, tmp373,
 1638 0424 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12185,* D.12184
 1639 0428 033CA0E1 		mov	r3, r3, asl #24	@ D.12187, D.12186,
 1640 042c 032082E1 		orr	r2, r2, r3	@ D.12188, D.12183, D.12187
 1641 0430 08309DE5 		ldr	r3, [sp, #8]	@ tmp374, dir_entry
 1642 0434 242083E5 		str	r2, [r3, #36]	@ D.12188, dir_entry_6(D)->file_size
 502:fat16.cpp     **** 
 503:fat16.cpp     ****         return 2;
 1643              		.loc 1 503 0
 1644 0438 0230A0E3 		mov	r3, #2	@ D.12035,
 1645              	.L89:
 1646              	.LBE11:
 1647              	.LBE9:
 1648              	.LBE8:
 504:fat16.cpp     ****     }
 505:fat16.cpp     **** }
 1649              		.loc 1 505 0
 1650 043c 0300A0E1 		mov	r0, r3	@, <retval>
 1651 0440 20D08DE2 		add	sp, sp, #32	@,,
 1652 0444 1EFF2FE1 		bx	lr
 1653              		.cfi_endproc
 1654              	.LFE117:
 1655              		.size	_ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_dir_entry_structEPKh, .-_ZN5FAT1625fat16_in
 1656              		.section	.text._ZN5FAT1627fat16_get_dir_entry_of_pathEPNS_15fat16_fs_structEPKcPNS_22fat16_dir_ent
 1657              		.align	2
 1658              		.global	_ZN5FAT1627fat16_get_dir_entry_of_pathEPNS_15fat16_fs_structEPKcPNS_22fat16_dir_entry_stru
 1659              		.type	_ZN5FAT1627fat16_get_dir_entry_of_pathEPNS_15fat16_fs_structEPKcPNS_22fat16_dir_entry_struct
 1660              	_ZN5FAT1627fat16_get_dir_entry_of_pathEPNS_15fat16_fs_structEPKcPNS_22fat16_dir_entry_structE:
 1661              	.LFB118:
 506:fat16.cpp     **** 
 507:fat16.cpp     **** /**
 508:fat16.cpp     ****  * \ingroup fat16_file
 509:fat16.cpp     ****  * Retrieves the directory entry of a path.
 510:fat16.cpp     ****  *
 511:fat16.cpp     ****  * The given path may both describe a file or a directory.
 512:fat16.cpp     ****  *
 513:fat16.cpp     ****  * \param[in] fs The FAT16 filesystem on which to search.
 514:fat16.cpp     ****  * \param[in] path The path of which to read the directory entry.
 515:fat16.cpp     ****  * \param[out] dir_entry The directory entry to fill.
 516:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
 517:fat16.cpp     ****  * \see fat16_read_dir
 518:fat16.cpp     ****  */
 519:fat16.cpp     **** uint8_t FAT16::fat16_get_dir_entry_of_path(struct fat16_fs_struct* fs, const char* path, struct fat
 520:fat16.cpp     **** {
 1662              		.loc 1 520 0
 1663              		.cfi_startproc
ARM GAS  /tmp/ccNwMSzu.s 			page 40


 1664              		@ Function supports interworking.
 1665              		@ args = 0, pretend = 0, frame = 32
 1666              		@ frame_needed = 0, uses_anonymous_args = 0
 1667 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 1668              	.LCFI14:
 1669              		.cfi_def_cfa_offset 4
 1670 0004 24D04DE2 		sub	sp, sp, #36	@,,
 1671              	.LCFI15:
 1672              		.cfi_def_cfa_offset 40
 1673 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 1674 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 1675 0010 04208DE5 		str	r2, [sp, #4]	@ path, path
 1676 0014 00308DE5 		str	r3, [sp, #0]	@ dir_entry, dir_entry
 1677              	.LBB16:
 521:fat16.cpp     ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 1678              		.loc 1 521 0
 1679 0018 08309DE5 		ldr	r3, [sp, #8]	@ tmp157, fs
 1680 001c 000053E3 		cmp	r3, #0	@ tmp157,
 1681 0020 0900000A 		beq	.L105	@,
 1682              		.cfi_offset 14, -4
 1683              		.loc 1 521 0 is_stmt 0 discriminator 1
 1684 0024 04309DE5 		ldr	r3, [sp, #4]	@ tmp158, path
 1685 0028 000053E3 		cmp	r3, #0	@ tmp158,
 1686 002c 0600000A 		beq	.L105	@,
 1687              		.loc 1 521 0 discriminator 2
 1688 0030 04309DE5 		ldr	r3, [sp, #4]	@ tmp159, path
 1689 0034 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11982,
 1690 0038 000053E3 		cmp	r3, #0	@ D.11982,
 1691 003c 0200000A 		beq	.L105	@,
 1692              		.loc 1 521 0 discriminator 3
 1693 0040 00309DE5 		ldr	r3, [sp, #0]	@ tmp160, dir_entry
 1694 0044 000053E3 		cmp	r3, #0	@ tmp160,
 1695 0048 0100001A 		bne	.L106	@,
 1696              	.L105:
 522:fat16.cpp     ****         return 0;
 1697              		.loc 1 522 0 is_stmt 1
 1698 004c 0030A0E3 		mov	r3, #0	@ D.11984,
 1699 0050 6B0000EA 		b	.L107	@
 1700              	.L106:
 523:fat16.cpp     **** 
 524:fat16.cpp     ****     if(path[0] == '/')
 1701              		.loc 1 524 0
 1702 0054 04309DE5 		ldr	r3, [sp, #4]	@ tmp161, path
 1703 0058 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11985,
 1704 005c 2F0053E3 		cmp	r3, #47	@ D.11985,
 1705 0060 0200001A 		bne	.L108	@,
 525:fat16.cpp     ****         ++path;
 1706              		.loc 1 525 0
 1707 0064 04309DE5 		ldr	r3, [sp, #4]	@ tmp162, path
 1708 0068 013083E2 		add	r3, r3, #1	@ tmp163, tmp162,
 1709 006c 04308DE5 		str	r3, [sp, #4]	@ tmp163, path
 1710              	.L108:
 526:fat16.cpp     **** 
 527:fat16.cpp     ****     /* begin with the root directory */
 528:fat16.cpp     ****     memset(dir_entry, 0, sizeof(*dir_entry));
 1711              		.loc 1 528 0
 1712 0070 00009DE5 		ldr	r0, [sp, #0]	@, dir_entry
ARM GAS  /tmp/ccNwMSzu.s 			page 41


 1713 0074 0010A0E3 		mov	r1, #0	@,
 1714 0078 2C20A0E3 		mov	r2, #44	@,
 1715 007c FEFFFFEB 		bl	memset	@
 529:fat16.cpp     ****     dir_entry->attributes = FAT16_ATTRIB_DIR;
 1716              		.loc 1 529 0
 1717 0080 00309DE5 		ldr	r3, [sp, #0]	@ tmp164, dir_entry
 1718 0084 1020A0E3 		mov	r2, #16	@ tmp165,
 1719 0088 2020C3E5 		strb	r2, [r3, #32]	@ tmp166, dir_entry_10(D)->attributes
 530:fat16.cpp     **** 
 531:fat16.cpp     ****     if(path[0] == '\0')
 1720              		.loc 1 531 0
 1721 008c 04309DE5 		ldr	r3, [sp, #4]	@ tmp167, path
 1722 0090 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11989,
 1723 0094 000053E3 		cmp	r3, #0	@ D.11989,
 1724 0098 0100001A 		bne	.L109	@,
 532:fat16.cpp     ****         return 1;
 1725              		.loc 1 532 0
 1726 009c 0130A0E3 		mov	r3, #1	@ D.11984,
 1727 00a0 570000EA 		b	.L107	@
 1728              	.L109:
 1729              	.LBB17:
 533:fat16.cpp     **** 
 534:fat16.cpp     ****     while(1)
 535:fat16.cpp     ****     {
 536:fat16.cpp     ****         struct fat16_dir_struct* dd = fat16_open_dir(fs, dir_entry);
 1730              		.loc 1 536 0
 1731 00a4 0C009DE5 		ldr	r0, [sp, #12]	@, this
 1732 00a8 08109DE5 		ldr	r1, [sp, #8]	@, fs
 1733 00ac 00209DE5 		ldr	r2, [sp, #0]	@, dir_entry
 1734 00b0 FEFFFFEB 		bl	_ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE	@
 1735 00b4 1C008DE5 		str	r0, [sp, #28]	@, dd
 537:fat16.cpp     ****         if(!dd)
 1736              		.loc 1 537 0
 1737 00b8 1C309DE5 		ldr	r3, [sp, #28]	@ tmp168, dd
 1738 00bc 000053E3 		cmp	r3, #0	@ tmp168,
 1739 00c0 0100001A 		bne	.L110	@,
 1740              	.LBE17:
 538:fat16.cpp     ****             break;
 539:fat16.cpp     **** 
 540:fat16.cpp     ****         /* extract the next hierarchy we will search for */
 541:fat16.cpp     ****         const char* sep_pos = strchr(path, '/');
 542:fat16.cpp     ****         if(!sep_pos)
 543:fat16.cpp     ****             sep_pos = path + strlen(path);
 544:fat16.cpp     ****         uint8_t length_to_sep = sep_pos - path;
 545:fat16.cpp     **** 
 546:fat16.cpp     ****         /* read directory entries */
 547:fat16.cpp     ****         while(fat16_read_dir(dd, dir_entry))
 548:fat16.cpp     ****         {
 549:fat16.cpp     ****             /* check if we have found the next hierarchy */
 550:fat16.cpp     ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 551:fat16.cpp     ****                 strncmp(path, dir_entry->long_name, length_to_sep) != 0))
 552:fat16.cpp     ****             continue;
 553:fat16.cpp     **** 
 554:fat16.cpp     ****             fat16_close_dir(dd);
 555:fat16.cpp     ****             dd = 0;
 556:fat16.cpp     **** 
 557:fat16.cpp     ****             if(path[length_to_sep] == '\0')
ARM GAS  /tmp/ccNwMSzu.s 			page 42


 558:fat16.cpp     ****     /* we iterated through the whole path and have found the file */
 559:fat16.cpp     ****                 return 1;
 560:fat16.cpp     **** 
 561:fat16.cpp     ****             if(dir_entry->attributes & FAT16_ATTRIB_DIR)
 562:fat16.cpp     ****             {
 563:fat16.cpp     ****                 /* we found a parent directory of the file we are searching for */
 564:fat16.cpp     ****                 path = sep_pos + 1;
 565:fat16.cpp     ****                 break;
 566:fat16.cpp     ****             }
 567:fat16.cpp     **** 
 568:fat16.cpp     ****             /* a parent of the file exists, but not the file itself */
 569:fat16.cpp     ****             return 0;
 570:fat16.cpp     ****         }
 571:fat16.cpp     **** 
 572:fat16.cpp     ****         fat16_close_dir(dd);
 573:fat16.cpp     ****     }
 574:fat16.cpp     **** 
 575:fat16.cpp     ****     return 0;
 1741              		.loc 1 575 0
 1742 00c4 0030A0E3 		mov	r3, #0	@ D.11984,
 1743 00c8 4D0000EA 		b	.L107	@
 1744              	.L110:
 1745              	.LBB18:
 541:fat16.cpp     ****         const char* sep_pos = strchr(path, '/');
 1746              		.loc 1 541 0
 1747 00cc 04009DE5 		ldr	r0, [sp, #4]	@, path
 1748 00d0 2F10A0E3 		mov	r1, #47	@,
 1749 00d4 FEFFFFEB 		bl	strchr	@
 1750 00d8 18008DE5 		str	r0, [sp, #24]	@, sep_pos
 542:fat16.cpp     ****         if(!sep_pos)
 1751              		.loc 1 542 0
 1752 00dc 18309DE5 		ldr	r3, [sp, #24]	@ tmp169, sep_pos
 1753 00e0 000053E3 		cmp	r3, #0	@ tmp169,
 1754 00e4 0500001A 		bne	.L111	@,
 543:fat16.cpp     ****             sep_pos = path + strlen(path);
 1755              		.loc 1 543 0
 1756 00e8 04009DE5 		ldr	r0, [sp, #4]	@, path
 1757 00ec FEFFFFEB 		bl	strlen	@
 1758 00f0 0030A0E1 		mov	r3, r0	@ tmp170,
 1759 00f4 04209DE5 		ldr	r2, [sp, #4]	@ tmp171, path
 1760 00f8 033082E0 		add	r3, r2, r3	@ tmp172, tmp171, D.11999
 1761 00fc 18308DE5 		str	r3, [sp, #24]	@ tmp172, sep_pos
 1762              	.L111:
 544:fat16.cpp     ****         uint8_t length_to_sep = sep_pos - path;
 1763              		.loc 1 544 0
 1764 0100 18309DE5 		ldr	r3, [sp, #24]	@ sep_pos.46, sep_pos
 1765 0104 FF2003E2 		and	r2, r3, #255	@ D.12002, sep_pos.46,
 1766 0108 04309DE5 		ldr	r3, [sp, #4]	@ path.47, path
 1767 010c FF3003E2 		and	r3, r3, #255	@ D.12004, path.47,
 1768 0110 023063E0 		rsb	r3, r3, r2	@ tmp173, D.12004, D.12002
 1769 0114 1730CDE5 		strb	r3, [sp, #23]	@ tmp174, length_to_sep
 547:fat16.cpp     ****         while(fat16_read_dir(dd, dir_entry))
 1770              		.loc 1 547 0
 1771 0118 2A0000EA 		b	.L112	@
 1772              	.L118:
 550:fat16.cpp     ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 1773              		.loc 1 550 0
ARM GAS  /tmp/ccNwMSzu.s 			page 43


 1774 011c 00309DE5 		ldr	r3, [sp, #0]	@ D.12012, dir_entry
 1775 0120 0300A0E1 		mov	r0, r3	@, D.12012
 1776 0124 FEFFFFEB 		bl	strlen	@
 1777 0128 0020A0E1 		mov	r2, r0	@ D.12013,
 1778 012c 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.12014, length_to_sep
 1779 0130 030052E1 		cmp	r2, r3	@ D.12013, D.12014
 1780 0134 2000001A 		bne	.L119	@,
 551:fat16.cpp     ****                 strncmp(path, dir_entry->long_name, length_to_sep) != 0))
 1781              		.loc 1 551 0 discriminator 1
 1782 0138 00209DE5 		ldr	r2, [sp, #0]	@ D.12016, dir_entry
 1783 013c 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.12017, length_to_sep
 1784 0140 04009DE5 		ldr	r0, [sp, #4]	@, path
 1785 0144 0210A0E1 		mov	r1, r2	@, D.12016
 1786 0148 0320A0E1 		mov	r2, r3	@, D.12017
 1787 014c FEFFFFEB 		bl	strncmp	@
 1788 0150 0030A0E1 		mov	r3, r0	@ tmp175,
 550:fat16.cpp     ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 1789              		.loc 1 550 0 discriminator 1
 1790 0154 000053E3 		cmp	r3, #0	@ D.12018,
 1791 0158 1900001A 		bne	.L120	@,
 1792              	.L114:
 554:fat16.cpp     ****             fat16_close_dir(dd);
 1793              		.loc 1 554 0
 1794 015c 0C009DE5 		ldr	r0, [sp, #12]	@, this
 1795 0160 1C109DE5 		ldr	r1, [sp, #28]	@, dd
 1796 0164 FEFFFFEB 		bl	_ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE	@
 555:fat16.cpp     ****             dd = 0;
 1797              		.loc 1 555 0
 1798 0168 0030A0E3 		mov	r3, #0	@ tmp176,
 1799 016c 1C308DE5 		str	r3, [sp, #28]	@ tmp176, dd
 557:fat16.cpp     ****             if(path[length_to_sep] == '\0')
 1800              		.loc 1 557 0
 1801 0170 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.12019, length_to_sep
 1802 0174 04209DE5 		ldr	r2, [sp, #4]	@ tmp177, path
 1803 0178 033082E0 		add	r3, r2, r3	@ D.12020, tmp177, D.12019
 1804 017c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.12021,* D.12020
 1805 0180 000053E3 		cmp	r3, #0	@ D.12021,
 1806 0184 0100001A 		bne	.L115	@,
 559:fat16.cpp     ****                 return 1;
 1807              		.loc 1 559 0
 1808 0188 0130A0E3 		mov	r3, #1	@ D.11984,
 1809 018c 1C0000EA 		b	.L107	@
 1810              	.L115:
 561:fat16.cpp     ****             if(dir_entry->attributes & FAT16_ATTRIB_DIR)
 1811              		.loc 1 561 0
 1812 0190 00309DE5 		ldr	r3, [sp, #0]	@ tmp178, dir_entry
 1813 0194 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.12024, dir_entry_10(D)->attributes
 1814 0198 103003E2 		and	r3, r3, #16	@ D.12026, D.12025,
 1815 019c 000053E3 		cmp	r3, #0	@ D.12026,
 1816 01a0 0300000A 		beq	.L116	@,
 564:fat16.cpp     ****                 path = sep_pos + 1;
 1817              		.loc 1 564 0
 1818 01a4 18309DE5 		ldr	r3, [sp, #24]	@ tmp179, sep_pos
 1819 01a8 013083E2 		add	r3, r3, #1	@ tmp180, tmp179,
 1820 01ac 04308DE5 		str	r3, [sp, #4]	@ tmp180, path
 565:fat16.cpp     ****                 break;
 1821              		.loc 1 565 0
ARM GAS  /tmp/ccNwMSzu.s 			page 44


 1822 01b0 0F0000EA 		b	.L117	@
 1823              	.L116:
 569:fat16.cpp     ****             return 0;
 1824              		.loc 1 569 0
 1825 01b4 0030A0E3 		mov	r3, #0	@ D.11984,
 1826 01b8 110000EA 		b	.L107	@
 1827              	.L119:
 552:fat16.cpp     ****             continue;
 1828              		.loc 1 552 0
 1829 01bc 0000A0E1 		mov	r0, r0	@ nop
 1830 01c0 000000EA 		b	.L112	@
 1831              	.L120:
 1832 01c4 0000A0E1 		mov	r0, r0	@ nop
 1833              	.L112:
 547:fat16.cpp     ****         while(fat16_read_dir(dd, dir_entry))
 1834              		.loc 1 547 0 discriminator 1
 1835 01c8 0C009DE5 		ldr	r0, [sp, #12]	@, this
 1836 01cc 1C109DE5 		ldr	r1, [sp, #28]	@, dd
 1837 01d0 00209DE5 		ldr	r2, [sp, #0]	@, dir_entry
 1838 01d4 FEFFFFEB 		bl	_ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE	@
 1839 01d8 0030A0E1 		mov	r3, r0	@ tmp181,
 1840 01dc 000053E3 		cmp	r3, #0	@ D.12009,
 1841 01e0 0030A003 		moveq	r3, #0	@, tmp183
 1842 01e4 0130A013 		movne	r3, #1	@, tmp183
 1843 01e8 FF3003E2 		and	r3, r3, #255	@ retval.48, tmp182,
 1844 01ec 000053E3 		cmp	r3, #0	@ retval.48,
 1845 01f0 C9FFFF1A 		bne	.L118	@,
 1846              	.L117:
 572:fat16.cpp     ****         fat16_close_dir(dd);
 1847              		.loc 1 572 0
 1848 01f4 0C009DE5 		ldr	r0, [sp, #12]	@, this
 1849 01f8 1C109DE5 		ldr	r1, [sp, #28]	@, dd
 1850 01fc FEFFFFEB 		bl	_ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE	@
 1851              	.LBE18:
 534:fat16.cpp     ****     while(1)
 1852              		.loc 1 534 0
 1853 0200 A7FFFFEA 		b	.L109	@
 1854              	.L107:
 1855              	.LBE16:
 576:fat16.cpp     **** }
 1856              		.loc 1 576 0
 1857 0204 0300A0E1 		mov	r0, r3	@, <retval>
 1858 0208 24D08DE2 		add	sp, sp, #36	@,,
 1859 020c 04E09DE4 		ldr	lr, [sp], #4
 1860 0210 1EFF2FE1 		bx	lr
 1861              		.cfi_endproc
 1862              	.LFE118:
 1863              		.size	_ZN5FAT1627fat16_get_dir_entry_of_pathEPNS_15fat16_fs_structEPKcPNS_22fat16_dir_entry_struct
 1864              		.section	.text._ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt,"ax",%progbits
 1865              		.align	2
 1866              		.global	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt
 1867              		.type	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt, %function
 1868              	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt:
 1869              	.LFB119:
 577:fat16.cpp     **** 
 578:fat16.cpp     **** /**
 579:fat16.cpp     ****  * \ingroup fat16_fs
ARM GAS  /tmp/ccNwMSzu.s 			page 45


 580:fat16.cpp     ****  * Retrieves the next following cluster of a given cluster.
 581:fat16.cpp     ****  *
 582:fat16.cpp     ****  * Using the filesystem file allocation table, this function returns
 583:fat16.cpp     ****  * the number of the cluster containing the data directly following
 584:fat16.cpp     ****  * the data within the cluster with the given number.
 585:fat16.cpp     ****  *
 586:fat16.cpp     ****  * \param[in] fs The filesystem for which to determine the next cluster.
 587:fat16.cpp     ****  * \param[in] cluster_num The number of the cluster for which to determine its successor.
 588:fat16.cpp     ****  * \returns The wanted cluster number, or 0 on error.
 589:fat16.cpp     ****  */
 590:fat16.cpp     **** uint16_t FAT16::fat16_get_next_cluster(const struct fat16_fs_struct* fs, uint16_t cluster_num)
 591:fat16.cpp     **** {
 1870              		.loc 1 591 0
 1871              		.cfi_startproc
 1872              		@ Function supports interworking.
 1873              		@ args = 0, pretend = 0, frame = 24
 1874              		@ frame_needed = 0, uses_anonymous_args = 0
 1875 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 1876              	.LCFI16:
 1877              		.cfi_def_cfa_offset 4
 1878 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 1879              	.LCFI17:
 1880              		.cfi_def_cfa_offset 32
 1881 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 1882 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 1883 0010 0230A0E1 		mov	r3, r2	@ tmp173, cluster_num
 1884 0014 B630CDE1 		strh	r3, [sp, #6]	@ movhi	@ tmp173, cluster_num
 1885              	.LBB19:
 592:fat16.cpp     ****     if(!fs || cluster_num < 2)
 1886              		.loc 1 592 0
 1887 0018 08309DE5 		ldr	r3, [sp, #8]	@ tmp174, fs
 1888 001c 000053E3 		cmp	r3, #0	@ tmp174,
 1889 0020 0200000A 		beq	.L122	@,
 1890              		.cfi_offset 14, -4
 1891              		.loc 1 592 0 is_stmt 0 discriminator 1
 1892 0024 B630DDE1 		ldrh	r3, [sp, #6]	@ tmp175, cluster_num
 1893 0028 010053E3 		cmp	r3, #1	@ tmp175,
 1894 002c 0100008A 		bhi	.L123	@,
 1895              	.L122:
 593:fat16.cpp     ****         return 0;
 1896              		.loc 1 593 0 is_stmt 1
 1897 0030 0030A0E3 		mov	r3, #0	@ D.11927,
 1898 0034 520000EA 		b	.L124	@
 1899              	.L123:
 594:fat16.cpp     **** 
 595:fat16.cpp     ****     /* read appropriate fat entry */
 596:fat16.cpp     ****     uint8_t fat_entry[2];
 597:fat16.cpp     ****     if(!(GetInstance()->*fs->partition->device_read)(fs->header.fat_offset + 2 * cluster_num, fat_e
 1900              		.loc 1 597 0
 1901 0038 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 1902 003c 0030A0E1 		mov	r3, r0	@ D.11929,
 1903 0040 08209DE5 		ldr	r2, [sp, #8]	@ tmp176, fs
 1904 0044 002092E5 		ldr	r2, [r2, #0]	@ D.11931, fs_3(D)->partition
 1905 0048 042092E5 		ldr	r2, [r2, #4]	@ D.11932, D.11931_6->device_read.__delta
 1906 004c 012002E2 		and	r2, r2, #1	@ D.11933, D.11932,
 1907 0050 FF2002E2 		and	r2, r2, #255	@ D.11934, D.11933,
 1908 0054 000052E3 		cmp	r2, #0	@ D.11934,
ARM GAS  /tmp/ccNwMSzu.s 			page 46


 1909 0058 0C00000A 		beq	.L125	@,
 1910              		.loc 1 597 0 is_stmt 0 discriminator 1
 1911 005c 08209DE5 		ldr	r2, [sp, #8]	@ tmp177, fs
 1912 0060 002092E5 		ldr	r2, [r2, #0]	@ D.11937, fs_3(D)->partition
 1913 0064 042092E5 		ldr	r2, [r2, #4]	@ D.11938, D.11937_10->device_read.__delta
 1914 0068 C220A0E1 		mov	r2, r2, asr #1	@ D.11939, D.11938,
 1915 006c 022083E0 		add	r2, r3, r2	@ D.11941, D.11929, D.11940
 1916 0070 001092E5 		ldr	r1, [r2, #0]	@ D.11943,* D.11942
 1917 0074 08209DE5 		ldr	r2, [sp, #8]	@ tmp178, fs
 1918 0078 002092E5 		ldr	r2, [r2, #0]	@ D.11944, fs_3(D)->partition
 1919 007c 002092E5 		ldr	r2, [r2, #0]	@ D.11945, D.11944_17->device_read.__pfn
 1920 0080 022081E0 		add	r2, r1, r2	@ D.11947, D.11943, D.11946
 1921 0084 002092E5 		ldr	r2, [r2, #0]	@ D.11948,* D.11947
 1922 0088 02C0A0E1 		mov	ip, r2	@ iftmp.45, D.11948
 1923 008c 020000EA 		b	.L126	@
 1924              	.L125:
 1925              		.loc 1 597 0 discriminator 2
 1926 0090 08209DE5 		ldr	r2, [sp, #8]	@ tmp179, fs
 1927 0094 002092E5 		ldr	r2, [r2, #0]	@ D.11950, fs_3(D)->partition
 1928 0098 00C092E5 		ldr	ip, [r2, #0]	@ iftmp.45, D.11950_23->device_read.__pfn
 1929              	.L126:
 1930              		.loc 1 597 0 discriminator 3
 1931 009c 08209DE5 		ldr	r2, [sp, #8]	@ tmp180, fs
 1932 00a0 002092E5 		ldr	r2, [r2, #0]	@ D.11951, fs_3(D)->partition
 1933 00a4 042092E5 		ldr	r2, [r2, #4]	@ D.11952, D.11951_25->device_read.__delta
 1934 00a8 C220A0E1 		mov	r2, r2, asr #1	@ D.11953, D.11952,
 1935 00ac 021083E0 		add	r1, r3, r2	@ D.11955, D.11929, D.11954
 1936 00b0 08309DE5 		ldr	r3, [sp, #8]	@ tmp181, fs
 1937 00b4 082093E5 		ldr	r2, [r3, #8]	@ D.11956, fs_3(D)->header.fat_offset
 1938 00b8 B630DDE1 		ldrh	r3, [sp, #6]	@ D.11957, cluster_num
 1939 00bc 8330A0E1 		mov	r3, r3, asl #1	@ D.11958, D.11957,
 1940 00c0 032082E0 		add	r2, r2, r3	@ D.11960, D.11956, D.11959
 1941 00c4 14308DE2 		add	r3, sp, #20	@ tmp182,,
 1942 00c8 0100A0E1 		mov	r0, r1	@, D.11955
 1943 00cc 0210A0E1 		mov	r1, r2	@, D.11960
 1944 00d0 0320A0E1 		mov	r2, r3	@, tmp182
 1945 00d4 0230A0E3 		mov	r3, #2	@,
 1946 00d8 0FE0A0E1 		mov	lr, pc
 1947 00dc 1CFF2FE1 		bx	ip	@ iftmp.45
 1948 00e0 0030A0E1 		mov	r3, r0	@ tmp183,
 1949 00e4 000053E3 		cmp	r3, #0	@ D.11961,
 1950 00e8 0030A013 		movne	r3, #0	@, tmp185
 1951 00ec 0130A003 		moveq	r3, #1	@, tmp185
 1952 00f0 FF3003E2 		and	r3, r3, #255	@ retval.44, tmp184,
 1953 00f4 000053E3 		cmp	r3, #0	@ retval.44,
 1954 00f8 0100000A 		beq	.L127	@,
 598:fat16.cpp     ****         return 0;
 1955              		.loc 1 598 0 is_stmt 1
 1956 00fc 0030A0E3 		mov	r3, #0	@ D.11927,
 1957 0100 1F0000EA 		b	.L124	@
 1958              	.L127:
 599:fat16.cpp     **** 
 600:fat16.cpp     ****     /* determine next cluster from fat */
 601:fat16.cpp     ****     cluster_num = ((uint16_t) fat_entry[0]) |
 1959              		.loc 1 601 0
 1960 0104 1430DDE5 		ldrb	r3, [sp, #20]	@ zero_extendqisi2	@ D.11964, fat_entry
 602:fat16.cpp     ****     ((uint16_t) fat_entry[1] << 8);
ARM GAS  /tmp/ccNwMSzu.s 			page 47


 1961              		.loc 1 602 0
 1962 0108 0320A0E1 		mov	r2, r3	@ D.11965, D.11964
 1963 010c 1530DDE5 		ldrb	r3, [sp, #21]	@ zero_extendqisi2	@ D.11966, fat_entry
 1964 0110 0334A0E1 		mov	r3, r3, asl #8	@ D.11968, D.11967,
 1965 0114 0338A0E1 		mov	r3, r3, asl #16	@ tmp186, D.11968,
 1966 0118 2338A0E1 		mov	r3, r3, lsr #16	@ D.11969, tmp186,
 1967 011c 033082E1 		orr	r3, r2, r3	@ tmp189, tmp187, tmp188
 1968 0120 0338A0E1 		mov	r3, r3, asl #16	@ tmp190, tmp189,
 1969 0124 2338A0E1 		mov	r3, r3, lsr #16	@ D.11970, tmp190,
 1970 0128 B630CDE1 		strh	r3, [sp, #6]	@ movhi	@ D.11970, cluster_num
 603:fat16.cpp     **** 	///*
 604:fat16.cpp     ****     if(cluster_num == FAT16_CLUSTER_FREE ||
 1971              		.loc 1 604 0
 1972 012c B630DDE1 		ldrh	r3, [sp, #6]	@ tmp191, cluster_num
 1973 0130 000053E3 		cmp	r3, #0	@ tmp191,
 1974 0134 0F00000A 		beq	.L128	@,
 1975              		.loc 1 604 0 is_stmt 0 discriminator 1
 1976 0138 B620DDE1 		ldrh	r2, [sp, #6]	@ tmp192, cluster_num
 1977 013c 50309FE5 		ldr	r3, .L131	@ tmp193,
 1978 0140 030052E1 		cmp	r2, r3	@ tmp192, tmp193
 1979 0144 0B00000A 		beq	.L128	@,
 1980              		.loc 1 604 0 discriminator 2
 1981 0148 B620DDE1 		ldrh	r2, [sp, #6]	@ tmp194, cluster_num
 1982 014c 44309FE5 		ldr	r3, .L131+4	@ tmp195,
 1983 0150 030052E1 		cmp	r2, r3	@ tmp194, tmp195
 1984 0154 0300009A 		bls	.L129	@,
 1985              		.loc 1 604 0 discriminator 3
 1986 0158 B620DDE1 		ldrh	r2, [sp, #6]	@ tmp196, cluster_num
 1987 015c 38309FE5 		ldr	r3, .L131+8	@ tmp197,
 1988 0160 030052E1 		cmp	r2, r3	@ tmp196, tmp197
 1989 0164 0300009A 		bls	.L128	@,
 1990              	.L129:
 1991              		.loc 1 604 0 discriminator 4
 1992 0168 B620DDE1 		ldrh	r2, [sp, #6]	@ tmp198, cluster_num
 1993 016c 20309FE5 		ldr	r3, .L131	@ tmp199,
 1994 0170 030052E1 		cmp	r2, r3	@ tmp198, tmp199
 1995 0174 0100009A 		bls	.L130	@,
 1996              	.L128:
 605:fat16.cpp     ****         cluster_num == FAT16_CLUSTER_BAD ||
 606:fat16.cpp     ****        (cluster_num >= FAT16_CLUSTER_RESERVED_MIN && cluster_num <= FAT16_CLUSTER_RESERVED_MAX) ||
 607:fat16.cpp     ****        (cluster_num >= FAT16_CLUSTER_LAST_MIN && cluster_num <= FAT16_CLUSTER_LAST_MAX))
 608:fat16.cpp     ****     //*/
 609:fat16.cpp     **** 	return 0;
 1997              		.loc 1 609 0 is_stmt 1
 1998 0178 0030A0E3 		mov	r3, #0	@ D.11927,
 1999 017c 000000EA 		b	.L124	@
 2000              	.L130:
 610:fat16.cpp     **** 
 611:fat16.cpp     ****     return cluster_num;
 2001              		.loc 1 611 0
 2002 0180 B630DDE1 		ldrh	r3, [sp, #6]	@ D.11927, cluster_num
 2003              	.L124:
 2004              	.LBE19:
 612:fat16.cpp     **** }
 2005              		.loc 1 612 0
 2006 0184 0300A0E1 		mov	r0, r3	@, <retval>
 2007 0188 1CD08DE2 		add	sp, sp, #28	@,,
ARM GAS  /tmp/ccNwMSzu.s 			page 48


 2008 018c 04E09DE4 		ldr	lr, [sp], #4
 2009 0190 1EFF2FE1 		bx	lr
 2010              	.L132:
 2011              		.align	2
 2012              	.L131:
 2013 0194 F7FF0000 		.word	65527
 2014 0198 EFFF0000 		.word	65519
 2015 019c F6FF0000 		.word	65526
 2016              		.cfi_endproc
 2017              	.LFE119:
 2018              		.size	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt, .-_ZN5FAT1622fat16_get_next_clus
 2019              		.section	.text._ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt,"ax",%progbits
 2020              		.align	2
 2021              		.global	_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt
 2022              		.type	_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt, %function
 2023              	_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt:
 2024              	.LFB120:
 613:fat16.cpp     **** 
 614:fat16.cpp     **** /**
 615:fat16.cpp     ****  * \ingroup fat16_fs
 616:fat16.cpp     ****  * Appends a new cluster chain to an existing one.
 617:fat16.cpp     ****  *
 618:fat16.cpp     ****  * Set cluster_num to zero to create a completely new one.
 619:fat16.cpp     ****  *
 620:fat16.cpp     ****  * \param[in] fs The file system on which to operate.
 621:fat16.cpp     ****  * \param[in] cluster_num The cluster to which to append the new chain.
 622:fat16.cpp     ****  * \param[in] count The number of clusters to allocate.
 623:fat16.cpp     ****  * \returns 0 on failure, the number of the first new cluster on success.
 624:fat16.cpp     ****  */
 625:fat16.cpp     **** uint16_t FAT16::fat16_append_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num, uint1
 626:fat16.cpp     **** {
 2025              		.loc 1 626 0
 2026              		.cfi_startproc
 2027              		@ Function supports interworking.
 2028              		@ args = 0, pretend = 0, frame = 56
 2029              		@ frame_needed = 0, uses_anonymous_args = 0
 2030 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2031              	.LCFI18:
 2032              		.cfi_def_cfa_offset 4
 2033 0004 3CD04DE2 		sub	sp, sp, #60	@,,
 2034              	.LCFI19:
 2035              		.cfi_def_cfa_offset 64
 2036 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 2037 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 2038 0010 B620CDE1 		strh	r2, [sp, #6]	@ movhi	@ tmp224, cluster_num
 2039 0014 B430CDE1 		strh	r3, [sp, #4]	@ movhi	@ tmp225, count
 2040              	.LBB20:
 627:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
 628:fat16.cpp     ****         if(!fs)
 2041              		.loc 1 628 0
 2042 0018 08309DE5 		ldr	r3, [sp, #8]	@ tmp226, fs
 2043 001c 000053E3 		cmp	r3, #0	@ tmp226,
 2044 0020 0100001A 		bne	.L134	@,
 2045              		.cfi_offset 14, -4
 629:fat16.cpp     ****             return 0;
 2046              		.loc 1 629 0
 2047 0024 0030A0E3 		mov	r3, #0	@ D.11797,
ARM GAS  /tmp/ccNwMSzu.s 			page 49


 2048 0028 DC0000EA 		b	.L135	@
 2049              	.L134:
 630:fat16.cpp     ****     
 631:fat16.cpp     ****         device_read_t device_read = fs->partition->device_read;
 2050              		.loc 1 631 0
 2051 002c 08309DE5 		ldr	r3, [sp, #8]	@ tmp227, fs
 2052 0030 002093E5 		ldr	r2, [r3, #0]	@ D.11798, fs_12(D)->partition
 2053 0034 20308DE2 		add	r3, sp, #32	@ tmp228,,
 2054 0038 030092E8 		ldmia	r2, {r0, r1}	@ tmp229,,
 2055 003c 030083E8 		stmia	r3, {r0, r1}	@ tmp228,,
 632:fat16.cpp     ****         device_write_t device_write = fs->partition->device_write;
 2056              		.loc 1 632 0
 2057 0040 08309DE5 		ldr	r3, [sp, #8]	@ tmp230, fs
 2058 0044 002093E5 		ldr	r2, [r3, #0]	@ D.11799, fs_12(D)->partition
 2059 0048 18308DE2 		add	r3, sp, #24	@ tmp231,,
 2060 004c 102082E2 		add	r2, r2, #16	@ tmp232, D.11799,
 2061 0050 030092E8 		ldmia	r2, {r0, r1}	@ tmp232,,
 2062 0054 030083E8 		stmia	r3, {r0, r1}	@ tmp231,,
 633:fat16.cpp     ****         uint32_t fat_offset = fs->header.fat_offset;
 2063              		.loc 1 633 0
 2064 0058 08309DE5 		ldr	r3, [sp, #8]	@ tmp233, fs
 2065 005c 083093E5 		ldr	r3, [r3, #8]	@ tmp234, fs_12(D)->header.fat_offset
 2066 0060 2C308DE5 		str	r3, [sp, #44]	@ tmp234, fat_offset
 634:fat16.cpp     ****         uint16_t cluster_max = fs->header.fat_size / 2;
 2067              		.loc 1 634 0
 2068 0064 08309DE5 		ldr	r3, [sp, #8]	@ tmp235, fs
 2069 0068 0C3093E5 		ldr	r3, [r3, #12]	@ D.11800, fs_12(D)->header.fat_size
 2070 006c A330A0E1 		mov	r3, r3, lsr #1	@ D.11801, D.11800,
 2071 0070 BA32CDE1 		strh	r3, [sp, #42]	@ movhi	@ D.11801, cluster_max
 635:fat16.cpp     ****         uint16_t cluster_next = 0;
 2072              		.loc 1 635 0
 2073 0074 0030A0E3 		mov	r3, #0	@ tmp237,
 2074 0078 B633CDE1 		strh	r3, [sp, #54]	@ movhi	@ tmp236, cluster_next
 636:fat16.cpp     ****         uint16_t count_left = count;
 2075              		.loc 1 636 0
 2076 007c B430DDE1 		ldrh	r3, [sp, #4]	@ movhi	@ tmp238, count
 2077 0080 B433CDE1 		strh	r3, [sp, #52]	@ movhi	@ tmp238, count_left
 637:fat16.cpp     ****         uint8_t buffer[2];
 638:fat16.cpp     ****         uint16_t cluster_new;
 639:fat16.cpp     ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 2078              		.loc 1 639 0
 2079 0084 0030A0E3 		mov	r3, #0	@ tmp240,
 2080 0088 B233CDE1 		strh	r3, [sp, #50]	@ movhi	@ tmp239, cluster_new
 2081 008c 760000EA 		b	.L136	@
 2082              	.L147:
 640:fat16.cpp     ****         {
 641:fat16.cpp     ****             if(!(GetInstance()->*device_read)(fat_offset + 2 * cluster_new, buffer, sizeof(buffer))
 2083              		.loc 1 641 0
 2084 0090 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 2085 0094 0030A0E1 		mov	r3, r0	@ D.11808,
 2086 0098 24209DE5 		ldr	r2, [sp, #36]	@ D.11810, device_read.__delta
 2087 009c 012002E2 		and	r2, r2, #1	@ D.11811, D.11810,
 2088 00a0 FF2002E2 		and	r2, r2, #255	@ D.11812, D.11811,
 2089 00a4 000052E3 		cmp	r2, #0	@ D.11812,
 2090 00a8 0800000A 		beq	.L137	@,
 2091              		.loc 1 641 0 is_stmt 0 discriminator 1
 2092 00ac 24209DE5 		ldr	r2, [sp, #36]	@ D.11815, device_read.__delta
ARM GAS  /tmp/ccNwMSzu.s 			page 50


 2093 00b0 C220A0E1 		mov	r2, r2, asr #1	@ D.11816, D.11815,
 2094 00b4 022083E0 		add	r2, r3, r2	@ D.11818, D.11808, D.11817
 2095 00b8 001092E5 		ldr	r1, [r2, #0]	@ D.11820,* D.11819
 2096 00bc 20209DE5 		ldr	r2, [sp, #32]	@ D.11821, device_read.__pfn
 2097 00c0 022081E0 		add	r2, r1, r2	@ D.11823, D.11820, D.11822
 2098 00c4 002092E5 		ldr	r2, [r2, #0]	@ D.11824,* D.11823
 2099 00c8 02C0A0E1 		mov	ip, r2	@ iftmp.38, D.11824
 2100 00cc 000000EA 		b	.L138	@
 2101              	.L137:
 2102              		.loc 1 641 0 discriminator 2
 2103 00d0 20C09DE5 		ldr	ip, [sp, #32]	@ iftmp.38, device_read.__pfn
 2104              	.L138:
 2105              		.loc 1 641 0 discriminator 3
 2106 00d4 24209DE5 		ldr	r2, [sp, #36]	@ D.11826, device_read.__delta
 2107 00d8 C220A0E1 		mov	r2, r2, asr #1	@ D.11827, D.11826,
 2108 00dc 021083E0 		add	r1, r3, r2	@ D.11829, D.11808, D.11828
 2109 00e0 B233DDE1 		ldrh	r3, [sp, #50]	@ D.11830, cluster_new
 2110 00e4 8330A0E1 		mov	r3, r3, asl #1	@ D.11831, D.11830,
 2111 00e8 0320A0E1 		mov	r2, r3	@ D.11832, D.11831
 2112 00ec 2C309DE5 		ldr	r3, [sp, #44]	@ tmp241, fat_offset
 2113 00f0 032082E0 		add	r2, r2, r3	@ D.11833, D.11832, tmp241
 2114 00f4 14308DE2 		add	r3, sp, #20	@ tmp242,,
 2115 00f8 0100A0E1 		mov	r0, r1	@, D.11829
 2116 00fc 0210A0E1 		mov	r1, r2	@, D.11833
 2117 0100 0320A0E1 		mov	r2, r3	@, tmp242
 2118 0104 0230A0E3 		mov	r3, #2	@,
 2119 0108 0FE0A0E1 		mov	lr, pc
 2120 010c 1CFF2FE1 		bx	ip	@ iftmp.38
 2121 0110 0030A0E1 		mov	r3, r0	@ tmp243,
 2122 0114 000053E3 		cmp	r3, #0	@ D.11834,
 2123 0118 0030A013 		movne	r3, #0	@, tmp245
 2124 011c 0130A003 		moveq	r3, #1	@, tmp245
 2125 0120 FF3003E2 		and	r3, r3, #255	@ retval.37, tmp244,
 2126 0124 000053E3 		cmp	r3, #0	@ retval.37,
 2127 0128 0100000A 		beq	.L139	@,
 642:fat16.cpp     ****                 return 0;
 2128              		.loc 1 642 0 is_stmt 1
 2129 012c 0030A0E3 		mov	r3, #0	@ D.11797,
 2130 0130 9A0000EA 		b	.L135	@
 2131              	.L139:
 643:fat16.cpp     ****     
 644:fat16.cpp     ****             /* check if this is a free cluster */
 645:fat16.cpp     ****             if(buffer[0] == (FAT16_CLUSTER_FREE & 0xff) &&
 2132              		.loc 1 645 0
 2133 0134 1430DDE5 		ldrb	r3, [sp, #20]	@ zero_extendqisi2	@ D.11837, buffer
 2134 0138 000053E3 		cmp	r3, #0	@ D.11837,
 2135 013c 4700001A 		bne	.L140	@,
 646:fat16.cpp     ****                 buffer[1] == ((FAT16_CLUSTER_FREE >> 8) & 0xff))
 2136              		.loc 1 646 0 discriminator 1
 2137 0140 1530DDE5 		ldrb	r3, [sp, #21]	@ zero_extendqisi2	@ D.11840, buffer
 645:fat16.cpp     ****             if(buffer[0] == (FAT16_CLUSTER_FREE & 0xff) &&
 2138              		.loc 1 645 0 discriminator 1
 2139 0144 000053E3 		cmp	r3, #0	@ D.11840,
 2140 0148 4400001A 		bne	.L140	@,
 647:fat16.cpp     ****             {
 648:fat16.cpp     ****                 /* allocate cluster */
 649:fat16.cpp     ****                 if(count_left == count)
ARM GAS  /tmp/ccNwMSzu.s 			page 51


 2141              		.loc 1 649 0
 2142 014c B423DDE1 		ldrh	r2, [sp, #52]	@ tmp246, count_left
 2143 0150 B430DDE1 		ldrh	r3, [sp, #4]	@ tmp247, count
 2144 0154 030052E1 		cmp	r2, r3	@ tmp246, tmp247
 2145 0158 0400001A 		bne	.L141	@,
 650:fat16.cpp     ****                 {
 651:fat16.cpp     ****                     buffer[0] = FAT16_CLUSTER_LAST_MAX & 0xff;
 2146              		.loc 1 651 0
 2147 015c 0030E0E3 		mvn	r3, #0	@ tmp248,
 2148 0160 1430CDE5 		strb	r3, [sp, #20]	@ tmp249, buffer
 652:fat16.cpp     ****                     buffer[1] = (FAT16_CLUSTER_LAST_MAX >> 8) & 0xff;
 2149              		.loc 1 652 0
 2150 0164 0030E0E3 		mvn	r3, #0	@ tmp250,
 2151 0168 1530CDE5 		strb	r3, [sp, #21]	@ tmp251, buffer
 2152 016c 080000EA 		b	.L142	@
 2153              	.L141:
 653:fat16.cpp     ****                 }
 654:fat16.cpp     ****                 else
 655:fat16.cpp     ****                 {
 656:fat16.cpp     ****                     buffer[0] = cluster_next & 0xff;
 2154              		.loc 1 656 0
 2155 0170 B633DDE1 		ldrh	r3, [sp, #54]	@ movhi	@ tmp252, cluster_next
 2156 0174 FF3003E2 		and	r3, r3, #255	@ D.11846, tmp252,
 2157 0178 1430CDE5 		strb	r3, [sp, #20]	@ tmp253, buffer
 657:fat16.cpp     ****                     buffer[1] = (cluster_next >> 8) & 0xff;
 2158              		.loc 1 657 0
 2159 017c B633DDE1 		ldrh	r3, [sp, #54]	@ tmp254, cluster_next
 2160 0180 2334A0E1 		mov	r3, r3, lsr #8	@ tmp255, tmp254,
 2161 0184 0338A0E1 		mov	r3, r3, asl #16	@ tmp256, tmp255,
 2162 0188 2338A0E1 		mov	r3, r3, lsr #16	@ D.11847, tmp256,
 2163 018c FF3003E2 		and	r3, r3, #255	@ D.11848, D.11847,
 2164 0190 1530CDE5 		strb	r3, [sp, #21]	@ tmp257, buffer
 2165              	.L142:
 658:fat16.cpp     ****                 }
 659:fat16.cpp     ****     
 660:fat16.cpp     ****                 if(!(GetInstance()->*device_write)(fat_offset + 2 * cluster_new, buffer, sizeof(buf
 2166              		.loc 1 660 0
 2167 0194 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 2168 0198 0030A0E1 		mov	r3, r0	@ D.11850,
 2169 019c 1C209DE5 		ldr	r2, [sp, #28]	@ D.11852, device_write.__delta
 2170 01a0 012002E2 		and	r2, r2, #1	@ D.11853, D.11852,
 2171 01a4 FF2002E2 		and	r2, r2, #255	@ D.11854, D.11853,
 2172 01a8 000052E3 		cmp	r2, #0	@ D.11854,
 2173 01ac 0800000A 		beq	.L143	@,
 2174              		.loc 1 660 0 is_stmt 0 discriminator 1
 2175 01b0 1C209DE5 		ldr	r2, [sp, #28]	@ D.11857, device_write.__delta
 2176 01b4 C220A0E1 		mov	r2, r2, asr #1	@ D.11858, D.11857,
 2177 01b8 022083E0 		add	r2, r3, r2	@ D.11860, D.11850, D.11859
 2178 01bc 001092E5 		ldr	r1, [r2, #0]	@ D.11862,* D.11861
 2179 01c0 18209DE5 		ldr	r2, [sp, #24]	@ D.11863, device_write.__pfn
 2180 01c4 022081E0 		add	r2, r1, r2	@ D.11865, D.11862, D.11864
 2181 01c8 002092E5 		ldr	r2, [r2, #0]	@ D.11866,* D.11865
 2182 01cc 02C0A0E1 		mov	ip, r2	@ iftmp.40, D.11866
 2183 01d0 000000EA 		b	.L144	@
 2184              	.L143:
 2185              		.loc 1 660 0 discriminator 2
 2186 01d4 18C09DE5 		ldr	ip, [sp, #24]	@ iftmp.40, device_write.__pfn
ARM GAS  /tmp/ccNwMSzu.s 			page 52


 2187              	.L144:
 2188              		.loc 1 660 0 discriminator 3
 2189 01d8 1C209DE5 		ldr	r2, [sp, #28]	@ D.11868, device_write.__delta
 2190 01dc C220A0E1 		mov	r2, r2, asr #1	@ D.11869, D.11868,
 2191 01e0 021083E0 		add	r1, r3, r2	@ D.11871, D.11850, D.11870
 2192 01e4 B233DDE1 		ldrh	r3, [sp, #50]	@ D.11872, cluster_new
 2193 01e8 8330A0E1 		mov	r3, r3, asl #1	@ D.11873, D.11872,
 2194 01ec 0320A0E1 		mov	r2, r3	@ D.11874, D.11873
 2195 01f0 2C309DE5 		ldr	r3, [sp, #44]	@ tmp258, fat_offset
 2196 01f4 032082E0 		add	r2, r2, r3	@ D.11875, D.11874, tmp258
 2197 01f8 14308DE2 		add	r3, sp, #20	@ tmp259,,
 2198 01fc 0100A0E1 		mov	r0, r1	@, D.11871
 2199 0200 0210A0E1 		mov	r1, r2	@, D.11875
 2200 0204 0320A0E1 		mov	r2, r3	@, tmp259
 2201 0208 0230A0E3 		mov	r3, #2	@,
 2202 020c 0FE0A0E1 		mov	lr, pc
 2203 0210 1CFF2FE1 		bx	ip	@ iftmp.40
 2204 0214 0030A0E1 		mov	r3, r0	@ tmp260,
 2205 0218 000053E3 		cmp	r3, #0	@ D.11876,
 2206 021c 0030A013 		movne	r3, #0	@, tmp262
 2207 0220 0130A003 		moveq	r3, #1	@, tmp262
 2208 0224 FF3003E2 		and	r3, r3, #255	@ retval.39, tmp261,
 2209 0228 000053E3 		cmp	r3, #0	@ retval.39,
 2210 022c 1700001A 		bne	.L153	@,
 2211              	.L145:
 661:fat16.cpp     ****                     break;
 662:fat16.cpp     ****     
 663:fat16.cpp     ****                 cluster_next = cluster_new;
 2212              		.loc 1 663 0 is_stmt 1
 2213 0230 B233DDE1 		ldrh	r3, [sp, #50]	@ movhi	@ tmp263, cluster_new
 2214 0234 B633CDE1 		strh	r3, [sp, #54]	@ movhi	@ tmp263, cluster_next
 664:fat16.cpp     ****                 if(--count_left == 0)
 2215              		.loc 1 664 0
 2216 0238 B433DDE1 		ldrh	r3, [sp, #52]	@ movhi	@ tmp264, count_left
 2217 023c 013043E2 		sub	r3, r3, #1	@ tmp265, tmp264,
 2218 0240 B433CDE1 		strh	r3, [sp, #52]	@ movhi	@ tmp265, count_left
 2219 0244 B433DDE1 		ldrh	r3, [sp, #52]	@ tmp267, count_left
 2220 0248 000053E3 		cmp	r3, #0	@ tmp267,
 2221 024c 0030A013 		movne	r3, #0	@, tmp268
 2222 0250 0130A003 		moveq	r3, #1	@, tmp268
 2223 0254 FF3003E2 		and	r3, r3, #255	@ retval.41, tmp266,
 2224 0258 000053E3 		cmp	r3, #0	@ retval.41,
 2225 025c 0D00001A 		bne	.L154	@,
 2226              	.L140:
 639:fat16.cpp     ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 2227              		.loc 1 639 0
 2228 0260 B233DDE1 		ldrh	r3, [sp, #50]	@ movhi	@ tmp269, cluster_new
 2229 0264 013083E2 		add	r3, r3, #1	@ tmp270, tmp269,
 2230 0268 B233CDE1 		strh	r3, [sp, #50]	@ movhi	@ tmp270, cluster_new
 2231              	.L136:
 639:fat16.cpp     ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 2232              		.loc 1 639 0 is_stmt 0 discriminator 1
 2233 026c B223DDE1 		ldrh	r2, [sp, #50]	@ tmp272, cluster_new
 2234 0270 BA32DDE1 		ldrh	r3, [sp, #42]	@ tmp273, cluster_max
 2235 0274 030052E1 		cmp	r2, r3	@ tmp272, tmp273
 2236 0278 0030A023 		movcs	r3, #0	@, tmp274
 2237 027c 0130A033 		movcc	r3, #1	@, tmp274
ARM GAS  /tmp/ccNwMSzu.s 			page 53


 2238 0280 FF3003E2 		and	r3, r3, #255	@ D.11805, tmp271,
 2239 0284 000053E3 		cmp	r3, #0	@ D.11805,
 2240 0288 80FFFF1A 		bne	.L147	@,
 2241 028c 020000EA 		b	.L146	@
 2242              	.L153:
 661:fat16.cpp     ****                     break;
 2243              		.loc 1 661 0 is_stmt 1
 2244 0290 0000A0E1 		mov	r0, r0	@ nop
 2245 0294 000000EA 		b	.L146	@
 2246              	.L154:
 665:fat16.cpp     ****                     break;
 2247              		.loc 1 665 0
 2248 0298 0000A0E1 		mov	r0, r0	@ nop
 2249              	.L146:
 666:fat16.cpp     ****             }
 667:fat16.cpp     ****         }
 668:fat16.cpp     ****     
 669:fat16.cpp     ****         do
 670:fat16.cpp     ****         {
 671:fat16.cpp     ****             if(count_left > 0)
 2250              		.loc 1 671 0
 2251 029c B433DDE1 		ldrh	r3, [sp, #52]	@ tmp275, count_left
 2252 02a0 000053E3 		cmp	r3, #0	@ tmp275,
 2253 02a4 3400001A 		bne	.L155	@,
 2254              	.L148:
 672:fat16.cpp     ****                 break;
 673:fat16.cpp     ****     
 674:fat16.cpp     ****             /* We allocated a new cluster chain. Now join
 675:fat16.cpp     ****                                              * it with the existing one.
 676:fat16.cpp     ****                                              */
 677:fat16.cpp     ****             if(cluster_num >= 2)
 2255              		.loc 1 677 0
 2256 02a8 B630DDE1 		ldrh	r3, [sp, #6]	@ tmp276, cluster_num
 2257 02ac 010053E3 		cmp	r3, #1	@ tmp276,
 2258 02b0 2F00009A 		bls	.L150	@,
 678:fat16.cpp     ****             {
 679:fat16.cpp     ****                 buffer[0] = cluster_next & 0xff;
 2259              		.loc 1 679 0
 2260 02b4 B633DDE1 		ldrh	r3, [sp, #54]	@ movhi	@ tmp277, cluster_next
 2261 02b8 FF3003E2 		and	r3, r3, #255	@ D.11889, tmp277,
 2262 02bc 1430CDE5 		strb	r3, [sp, #20]	@ tmp278, buffer
 680:fat16.cpp     ****                 buffer[1] = (cluster_next >> 8) & 0xff;
 2263              		.loc 1 680 0
 2264 02c0 B633DDE1 		ldrh	r3, [sp, #54]	@ tmp279, cluster_next
 2265 02c4 2334A0E1 		mov	r3, r3, lsr #8	@ tmp280, tmp279,
 2266 02c8 0338A0E1 		mov	r3, r3, asl #16	@ tmp281, tmp280,
 2267 02cc 2338A0E1 		mov	r3, r3, lsr #16	@ D.11890, tmp281,
 2268 02d0 FF3003E2 		and	r3, r3, #255	@ D.11891, D.11890,
 2269 02d4 1530CDE5 		strb	r3, [sp, #21]	@ tmp282, buffer
 681:fat16.cpp     ****                 if(!(GetInstance()->*device_write)(fat_offset + 2 * cluster_num, buffer, sizeof(buf
 2270              		.loc 1 681 0
 2271 02d8 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 2272 02dc 0030A0E1 		mov	r3, r0	@ D.11893,
 2273 02e0 1C209DE5 		ldr	r2, [sp, #28]	@ D.11895, device_write.__delta
 2274 02e4 012002E2 		and	r2, r2, #1	@ D.11896, D.11895,
 2275 02e8 FF2002E2 		and	r2, r2, #255	@ D.11897, D.11896,
 2276 02ec 000052E3 		cmp	r2, #0	@ D.11897,
ARM GAS  /tmp/ccNwMSzu.s 			page 54


 2277 02f0 0800000A 		beq	.L151	@,
 2278              		.loc 1 681 0 is_stmt 0 discriminator 1
 2279 02f4 1C209DE5 		ldr	r2, [sp, #28]	@ D.11900, device_write.__delta
 2280 02f8 C220A0E1 		mov	r2, r2, asr #1	@ D.11901, D.11900,
 2281 02fc 022083E0 		add	r2, r3, r2	@ D.11903, D.11893, D.11902
 2282 0300 001092E5 		ldr	r1, [r2, #0]	@ D.11905,* D.11904
 2283 0304 18209DE5 		ldr	r2, [sp, #24]	@ D.11906, device_write.__pfn
 2284 0308 022081E0 		add	r2, r1, r2	@ D.11908, D.11905, D.11907
 2285 030c 002092E5 		ldr	r2, [r2, #0]	@ D.11909,* D.11908
 2286 0310 02C0A0E1 		mov	ip, r2	@ iftmp.43, D.11909
 2287 0314 000000EA 		b	.L152	@
 2288              	.L151:
 2289              		.loc 1 681 0 discriminator 2
 2290 0318 18C09DE5 		ldr	ip, [sp, #24]	@ iftmp.43, device_write.__pfn
 2291              	.L152:
 2292              		.loc 1 681 0 discriminator 3
 2293 031c 1C209DE5 		ldr	r2, [sp, #28]	@ D.11911, device_write.__delta
 2294 0320 C220A0E1 		mov	r2, r2, asr #1	@ D.11912, D.11911,
 2295 0324 021083E0 		add	r1, r3, r2	@ D.11914, D.11893, D.11913
 2296 0328 B630DDE1 		ldrh	r3, [sp, #6]	@ D.11915, cluster_num
 2297 032c 8330A0E1 		mov	r3, r3, asl #1	@ D.11916, D.11915,
 2298 0330 0320A0E1 		mov	r2, r3	@ D.11917, D.11916
 2299 0334 2C309DE5 		ldr	r3, [sp, #44]	@ tmp283, fat_offset
 2300 0338 032082E0 		add	r2, r2, r3	@ D.11918, D.11917, tmp283
 2301 033c 14308DE2 		add	r3, sp, #20	@ tmp284,,
 2302 0340 0100A0E1 		mov	r0, r1	@, D.11914
 2303 0344 0210A0E1 		mov	r1, r2	@, D.11918
 2304 0348 0320A0E1 		mov	r2, r3	@, tmp284
 2305 034c 0230A0E3 		mov	r3, #2	@,
 2306 0350 0FE0A0E1 		mov	lr, pc
 2307 0354 1CFF2FE1 		bx	ip	@ iftmp.43
 2308 0358 0030A0E1 		mov	r3, r0	@ tmp285,
 2309 035c 000053E3 		cmp	r3, #0	@ D.11919,
 2310 0360 0030A013 		movne	r3, #0	@, tmp287
 2311 0364 0130A003 		moveq	r3, #1	@, tmp287
 2312 0368 FF3003E2 		and	r3, r3, #255	@ retval.42, tmp286,
 2313 036c 000053E3 		cmp	r3, #0	@ retval.42,
 2314 0370 0300001A 		bne	.L156	@,
 2315              	.L150:
 682:fat16.cpp     ****                     break;
 683:fat16.cpp     ****             }
 684:fat16.cpp     ****     
 685:fat16.cpp     ****             return cluster_next;
 2316              		.loc 1 685 0 is_stmt 1
 2317 0374 B633DDE1 		ldrh	r3, [sp, #54]	@ D.11797, cluster_next
 2318 0378 080000EA 		b	.L135	@
 2319              	.L155:
 672:fat16.cpp     ****                 break;
 2320              		.loc 1 672 0
 2321 037c 0000A0E1 		mov	r0, r0	@ nop
 2322 0380 000000EA 		b	.L149	@
 2323              	.L156:
 682:fat16.cpp     ****                     break;
 2324              		.loc 1 682 0
 2325 0384 0000A0E1 		mov	r0, r0	@ nop
 2326              	.L149:
 686:fat16.cpp     ****     
ARM GAS  /tmp/ccNwMSzu.s 			page 55


 687:fat16.cpp     ****         }
 688:fat16.cpp     ****         while(0);
 689:fat16.cpp     ****     
 690:fat16.cpp     ****         /* No space left on device or writing error.
 691:fat16.cpp     ****                              * Free up all clusters already allocated.
 692:fat16.cpp     ****                              */
 693:fat16.cpp     ****         fat16_free_clusters(fs, cluster_next);
 2327              		.loc 1 693 0
 2328 0388 B633DDE1 		ldrh	r3, [sp, #54]	@ tmp288, cluster_next
 2329 038c 0C009DE5 		ldr	r0, [sp, #12]	@, this
 2330 0390 08109DE5 		ldr	r1, [sp, #8]	@, fs
 2331 0394 0320A0E1 		mov	r2, r3	@, tmp288
 2332 0398 FEFFFFEB 		bl	_ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt	@
 694:fat16.cpp     ****     
 695:fat16.cpp     ****         return 0;
 2333              		.loc 1 695 0
 2334 039c 0030A0E3 		mov	r3, #0	@ D.11797,
 2335              	.L135:
 2336              	.LBE20:
 696:fat16.cpp     ****     #else
 697:fat16.cpp     ****         return 0;
 698:fat16.cpp     ****     #endif
 699:fat16.cpp     **** }
 2337              		.loc 1 699 0
 2338 03a0 0300A0E1 		mov	r0, r3	@, <retval>
 2339 03a4 3CD08DE2 		add	sp, sp, #60	@,,
 2340 03a8 04E09DE4 		ldr	lr, [sp], #4
 2341 03ac 1EFF2FE1 		bx	lr
 2342              		.cfi_endproc
 2343              	.LFE120:
 2344              		.size	_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt, .-_ZN5FAT1621fat16_append_cluste
 2345              		.section	.text._ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt,"ax",%progbits
 2346              		.align	2
 2347              		.global	_ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt
 2348              		.type	_ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt, %function
 2349              	_ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt:
 2350              	.LFB121:
 700:fat16.cpp     **** 
 701:fat16.cpp     **** /**
 702:fat16.cpp     ****  * \ingroup fat16_fs
 703:fat16.cpp     ****  * Frees a cluster chain, or a part thereof.
 704:fat16.cpp     ****  *
 705:fat16.cpp     ****  * Marks the specified cluster and all clusters which are sequentially
 706:fat16.cpp     ****  * referenced by it as free. They may then be used again for future
 707:fat16.cpp     ****  * file allocations.
 708:fat16.cpp     ****  *
 709:fat16.cpp     ****  * \note If this function is used for freeing just a part of a cluster
 710:fat16.cpp     ****  *       chain, the new end of the chain is not correctly terminated
 711:fat16.cpp     ****  *       within the FAT. Use fat16_terminate_clusters() instead.
 712:fat16.cpp     ****  *
 713:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
 714:fat16.cpp     ****  * \param[in] cluster_num The starting cluster of the chain which to free.
 715:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
 716:fat16.cpp     ****  * \see fat16_terminate_clusters
 717:fat16.cpp     ****  */
 718:fat16.cpp     **** uint8_t FAT16::fat16_free_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num)
 719:fat16.cpp     **** {
ARM GAS  /tmp/ccNwMSzu.s 			page 56


 2351              		.loc 1 719 0
 2352              		.cfi_startproc
 2353              		@ Function supports interworking.
 2354              		@ args = 0, pretend = 0, frame = 32
 2355              		@ frame_needed = 0, uses_anonymous_args = 0
 2356 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2357              	.LCFI20:
 2358              		.cfi_def_cfa_offset 4
 2359 0004 24D04DE2 		sub	sp, sp, #36	@,,
 2360              	.LCFI21:
 2361              		.cfi_def_cfa_offset 40
 2362 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 2363 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 2364 0010 0230A0E1 		mov	r3, r2	@ tmp201, cluster_num
 2365 0014 B630CDE1 		strh	r3, [sp, #6]	@ movhi	@ tmp201, cluster_num
 2366              	.LBB21:
 720:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
 721:fat16.cpp     ****         if(!fs || cluster_num < 2)
 2367              		.loc 1 721 0
 2368 0018 08309DE5 		ldr	r3, [sp, #8]	@ tmp202, fs
 2369 001c 000053E3 		cmp	r3, #0	@ tmp202,
 2370 0020 0200000A 		beq	.L158	@,
 2371              		.cfi_offset 14, -4
 2372              		.loc 1 721 0 is_stmt 0 discriminator 1
 2373 0024 B630DDE1 		ldrh	r3, [sp, #6]	@ tmp203, cluster_num
 2374 0028 010053E3 		cmp	r3, #1	@ tmp203,
 2375 002c 0100008A 		bhi	.L159	@,
 2376              	.L158:
 722:fat16.cpp     ****             return 0;
 2377              		.loc 1 722 0 is_stmt 1
 2378 0030 0030A0E3 		mov	r3, #0	@ D.11707,
 2379 0034 910000EA 		b	.L160	@
 2380              	.L159:
 723:fat16.cpp     ****     
 724:fat16.cpp     ****         uint32_t fat_offset = fs->header.fat_offset;
 2381              		.loc 1 724 0
 2382 0038 08309DE5 		ldr	r3, [sp, #8]	@ tmp204, fs
 2383 003c 083093E5 		ldr	r3, [r3, #8]	@ tmp205, fs_6(D)->header.fat_offset
 2384 0040 18308DE5 		str	r3, [sp, #24]	@ tmp205, fat_offset
 725:fat16.cpp     ****         uint8_t buffer[2];
 726:fat16.cpp     ****         while(cluster_num)
 2385              		.loc 1 726 0
 2386 0044 850000EA 		b	.L161	@
 2387              	.L171:
 2388              	.LBB22:
 727:fat16.cpp     ****         {
 728:fat16.cpp     ****             if(!(GetInstance()->*fs->partition->device_read)(fat_offset + 2 * cluster_num, buffer, 
 2389              		.loc 1 728 0
 2390 0048 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 2391 004c 0030A0E1 		mov	r3, r0	@ D.11713,
 2392 0050 08209DE5 		ldr	r2, [sp, #8]	@ tmp206, fs
 2393 0054 002092E5 		ldr	r2, [r2, #0]	@ D.11715, fs_6(D)->partition
 2394 0058 042092E5 		ldr	r2, [r2, #4]	@ D.11716, D.11715_11->device_read.__delta
 2395 005c 012002E2 		and	r2, r2, #1	@ D.11717, D.11716,
 2396 0060 FF2002E2 		and	r2, r2, #255	@ D.11718, D.11717,
 2397 0064 000052E3 		cmp	r2, #0	@ D.11718,
 2398 0068 0C00000A 		beq	.L162	@,
ARM GAS  /tmp/ccNwMSzu.s 			page 57


 2399              		.loc 1 728 0 is_stmt 0 discriminator 1
 2400 006c 08209DE5 		ldr	r2, [sp, #8]	@ tmp207, fs
 2401 0070 002092E5 		ldr	r2, [r2, #0]	@ D.11721, fs_6(D)->partition
 2402 0074 042092E5 		ldr	r2, [r2, #4]	@ D.11722, D.11721_15->device_read.__delta
 2403 0078 C220A0E1 		mov	r2, r2, asr #1	@ D.11723, D.11722,
 2404 007c 022083E0 		add	r2, r3, r2	@ D.11725, D.11713, D.11724
 2405 0080 001092E5 		ldr	r1, [r2, #0]	@ D.11727,* D.11726
 2406 0084 08209DE5 		ldr	r2, [sp, #8]	@ tmp208, fs
 2407 0088 002092E5 		ldr	r2, [r2, #0]	@ D.11728, fs_6(D)->partition
 2408 008c 002092E5 		ldr	r2, [r2, #0]	@ D.11729, D.11728_22->device_read.__pfn
 2409 0090 022081E0 		add	r2, r1, r2	@ D.11731, D.11727, D.11730
 2410 0094 002092E5 		ldr	r2, [r2, #0]	@ D.11732,* D.11731
 2411 0098 02C0A0E1 		mov	ip, r2	@ iftmp.35, D.11732
 2412 009c 020000EA 		b	.L163	@
 2413              	.L162:
 2414              		.loc 1 728 0 discriminator 2
 2415 00a0 08209DE5 		ldr	r2, [sp, #8]	@ tmp209, fs
 2416 00a4 002092E5 		ldr	r2, [r2, #0]	@ D.11734, fs_6(D)->partition
 2417 00a8 00C092E5 		ldr	ip, [r2, #0]	@ iftmp.35, D.11734_28->device_read.__pfn
 2418              	.L163:
 2419              		.loc 1 728 0 discriminator 3
 2420 00ac 08209DE5 		ldr	r2, [sp, #8]	@ tmp210, fs
 2421 00b0 002092E5 		ldr	r2, [r2, #0]	@ D.11735, fs_6(D)->partition
 2422 00b4 042092E5 		ldr	r2, [r2, #4]	@ D.11736, D.11735_30->device_read.__delta
 2423 00b8 C220A0E1 		mov	r2, r2, asr #1	@ D.11737, D.11736,
 2424 00bc 021083E0 		add	r1, r3, r2	@ D.11739, D.11713, D.11738
 2425 00c0 B630DDE1 		ldrh	r3, [sp, #6]	@ D.11740, cluster_num
 2426 00c4 8330A0E1 		mov	r3, r3, asl #1	@ D.11741, D.11740,
 2427 00c8 0320A0E1 		mov	r2, r3	@ D.11742, D.11741
 2428 00cc 18309DE5 		ldr	r3, [sp, #24]	@ tmp211, fat_offset
 2429 00d0 032082E0 		add	r2, r2, r3	@ D.11743, D.11742, tmp211
 2430 00d4 14308DE2 		add	r3, sp, #20	@ tmp212,,
 2431 00d8 0100A0E1 		mov	r0, r1	@, D.11739
 2432 00dc 0210A0E1 		mov	r1, r2	@, D.11743
 2433 00e0 0320A0E1 		mov	r2, r3	@, tmp212
 2434 00e4 0230A0E3 		mov	r3, #2	@,
 2435 00e8 0FE0A0E1 		mov	lr, pc
 2436 00ec 1CFF2FE1 		bx	ip	@ iftmp.35
 2437 00f0 0030A0E1 		mov	r3, r0	@ tmp213,
 2438 00f4 000053E3 		cmp	r3, #0	@ D.11744,
 2439 00f8 0030A013 		movne	r3, #0	@, tmp215
 2440 00fc 0130A003 		moveq	r3, #1	@, tmp215
 2441 0100 FF3003E2 		and	r3, r3, #255	@ retval.34, tmp214,
 2442 0104 000053E3 		cmp	r3, #0	@ retval.34,
 2443 0108 0100000A 		beq	.L164	@,
 729:fat16.cpp     ****                 return 0;
 2444              		.loc 1 729 0 is_stmt 1
 2445 010c 0030A0E3 		mov	r3, #0	@ D.11707,
 2446 0110 5A0000EA 		b	.L160	@
 2447              	.L164:
 730:fat16.cpp     ****     
 731:fat16.cpp     ****             /* get next cluster of current cluster before freeing current cluster */
 732:fat16.cpp     ****             uint16_t cluster_num_next = ((uint16_t) buffer[0]) |
 2448              		.loc 1 732 0
 2449 0114 1430DDE5 		ldrb	r3, [sp, #20]	@ zero_extendqisi2	@ D.11747, buffer
 733:fat16.cpp     ****             ((uint16_t) buffer[1] << 8);
 2450              		.loc 1 733 0
ARM GAS  /tmp/ccNwMSzu.s 			page 58


 2451 0118 0320A0E1 		mov	r2, r3	@ D.11748, D.11747
 2452 011c 1530DDE5 		ldrb	r3, [sp, #21]	@ zero_extendqisi2	@ D.11749, buffer
 2453 0120 0334A0E1 		mov	r3, r3, asl #8	@ D.11751, D.11750,
 2454 0124 0338A0E1 		mov	r3, r3, asl #16	@ tmp216, D.11751,
 2455 0128 2338A0E1 		mov	r3, r3, lsr #16	@ D.11752, tmp216,
 2456 012c 033082E1 		orr	r3, r2, r3	@ tmp219, tmp217, tmp218
 2457 0130 0338A0E1 		mov	r3, r3, asl #16	@ tmp220, tmp219,
 2458 0134 2338A0E1 		mov	r3, r3, lsr #16	@ D.11753, tmp220,
 2459 0138 BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ D.11753, cluster_num_next
 734:fat16.cpp     ****     
 735:fat16.cpp     ****             if(cluster_num_next == FAT16_CLUSTER_FREE)
 2460              		.loc 1 735 0
 2461 013c BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp221, cluster_num_next
 2462 0140 000053E3 		cmp	r3, #0	@ tmp221,
 2463 0144 0100001A 		bne	.L165	@,
 736:fat16.cpp     ****                 return 1;
 2464              		.loc 1 736 0
 2465 0148 0130A0E3 		mov	r3, #1	@ D.11707,
 2466 014c 4B0000EA 		b	.L160	@
 2467              	.L165:
 737:fat16.cpp     ****             if(cluster_num_next == FAT16_CLUSTER_BAD ||
 2468              		.loc 1 737 0
 2469 0150 BE21DDE1 		ldrh	r2, [sp, #30]	@ tmp222, cluster_num_next
 2470 0154 34319FE5 		ldr	r3, .L172	@ tmp223,
 2471 0158 030052E1 		cmp	r2, r3	@ tmp222, tmp223
 2472 015c 0700000A 		beq	.L166	@,
 2473              		.loc 1 737 0 is_stmt 0 discriminator 1
 2474 0160 BE21DDE1 		ldrh	r2, [sp, #30]	@ tmp224, cluster_num_next
 2475 0164 28319FE5 		ldr	r3, .L172+4	@ tmp225,
 2476 0168 030052E1 		cmp	r2, r3	@ tmp224, tmp225
 2477 016c 0500009A 		bls	.L167	@,
 2478              		.loc 1 737 0 discriminator 2
 2479 0170 BE21DDE1 		ldrh	r2, [sp, #30]	@ tmp226, cluster_num_next
 2480 0174 1C319FE5 		ldr	r3, .L172+8	@ tmp227,
 2481 0178 030052E1 		cmp	r2, r3	@ tmp226, tmp227
 2482 017c 0100008A 		bhi	.L167	@,
 2483              	.L166:
 738:fat16.cpp     ****                 (cluster_num_next >= FAT16_CLUSTER_RESERVED_MIN &&
 739:fat16.cpp     ****                cluster_num_next <= FAT16_CLUSTER_RESERVED_MAX
 740:fat16.cpp     ****                )
 741:fat16.cpp     ****                )
 742:fat16.cpp     ****             return 0;
 2484              		.loc 1 742 0 is_stmt 1
 2485 0180 0030A0E3 		mov	r3, #0	@ D.11707,
 2486 0184 3D0000EA 		b	.L160	@
 2487              	.L167:
 743:fat16.cpp     **** 			///*
 744:fat16.cpp     ****             if((cluster_num_next >= FAT16_CLUSTER_LAST_MIN) &&
 2488              		.loc 1 744 0
 2489 0188 BE21DDE1 		ldrh	r2, [sp, #30]	@ tmp228, cluster_num_next
 2490 018c FC309FE5 		ldr	r3, .L172	@ tmp229,
 2491 0190 030052E1 		cmp	r2, r3	@ tmp228, tmp229
 2492 0194 0100009A 		bls	.L168	@,
 745:fat16.cpp     ****                 (cluster_num_next <= FAT16_CLUSTER_LAST_MAX)
 746:fat16.cpp     ****                )
 747:fat16.cpp     **** 			//*/
 748:fat16.cpp     ****             cluster_num_next = 0;
ARM GAS  /tmp/ccNwMSzu.s 			page 59


 2493              		.loc 1 748 0
 2494 0198 0030A0E3 		mov	r3, #0	@ tmp231,
 2495 019c BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp230, cluster_num_next
 2496              	.L168:
 749:fat16.cpp     ****     
 750:fat16.cpp     ****             /* free cluster */
 751:fat16.cpp     ****             buffer[0] = FAT16_CLUSTER_FREE & 0xff;
 2497              		.loc 1 751 0
 2498 01a0 0030A0E3 		mov	r3, #0	@ tmp232,
 2499 01a4 1430CDE5 		strb	r3, [sp, #20]	@ tmp233, buffer
 752:fat16.cpp     ****             buffer[1] = (FAT16_CLUSTER_FREE >> 8) & 0xff;
 2500              		.loc 1 752 0
 2501 01a8 0030A0E3 		mov	r3, #0	@ tmp234,
 2502 01ac 1530CDE5 		strb	r3, [sp, #21]	@ tmp235, buffer
 753:fat16.cpp     ****             (GetInstance()->*fs->partition->device_write)(fat_offset + 2 * cluster_num, buffer, 2);
 2503              		.loc 1 753 0
 2504 01b0 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 2505 01b4 0030A0E1 		mov	r3, r0	@ D.11763,
 2506 01b8 08209DE5 		ldr	r2, [sp, #8]	@ tmp236, fs
 2507 01bc 002092E5 		ldr	r2, [r2, #0]	@ D.11765, fs_6(D)->partition
 2508 01c0 142092E5 		ldr	r2, [r2, #20]	@ D.11766, D.11765_53->device_write.__delta
 2509 01c4 012002E2 		and	r2, r2, #1	@ D.11767, D.11766,
 2510 01c8 FF2002E2 		and	r2, r2, #255	@ D.11768, D.11767,
 2511 01cc 000052E3 		cmp	r2, #0	@ D.11768,
 2512 01d0 0C00000A 		beq	.L169	@,
 2513              		.loc 1 753 0 is_stmt 0 discriminator 1
 2514 01d4 08209DE5 		ldr	r2, [sp, #8]	@ tmp237, fs
 2515 01d8 002092E5 		ldr	r2, [r2, #0]	@ D.11771, fs_6(D)->partition
 2516 01dc 142092E5 		ldr	r2, [r2, #20]	@ D.11772, D.11771_57->device_write.__delta
 2517 01e0 C220A0E1 		mov	r2, r2, asr #1	@ D.11773, D.11772,
 2518 01e4 022083E0 		add	r2, r3, r2	@ D.11775, D.11763, D.11774
 2519 01e8 001092E5 		ldr	r1, [r2, #0]	@ D.11777,* D.11776
 2520 01ec 08209DE5 		ldr	r2, [sp, #8]	@ tmp238, fs
 2521 01f0 002092E5 		ldr	r2, [r2, #0]	@ D.11778, fs_6(D)->partition
 2522 01f4 102092E5 		ldr	r2, [r2, #16]	@ D.11779, D.11778_64->device_write.__pfn
 2523 01f8 022081E0 		add	r2, r1, r2	@ D.11781, D.11777, D.11780
 2524 01fc 002092E5 		ldr	r2, [r2, #0]	@ D.11782,* D.11781
 2525 0200 02C0A0E1 		mov	ip, r2	@ iftmp.36, D.11782
 2526 0204 020000EA 		b	.L170	@
 2527              	.L169:
 2528              		.loc 1 753 0 discriminator 2
 2529 0208 08209DE5 		ldr	r2, [sp, #8]	@ tmp239, fs
 2530 020c 002092E5 		ldr	r2, [r2, #0]	@ D.11784, fs_6(D)->partition
 2531 0210 10C092E5 		ldr	ip, [r2, #16]	@ iftmp.36, D.11784_70->device_write.__pfn
 2532              	.L170:
 2533              		.loc 1 753 0 discriminator 3
 2534 0214 08209DE5 		ldr	r2, [sp, #8]	@ tmp240, fs
 2535 0218 002092E5 		ldr	r2, [r2, #0]	@ D.11785, fs_6(D)->partition
 2536 021c 142092E5 		ldr	r2, [r2, #20]	@ D.11786, D.11785_72->device_write.__delta
 2537 0220 C220A0E1 		mov	r2, r2, asr #1	@ D.11787, D.11786,
 2538 0224 021083E0 		add	r1, r3, r2	@ D.11789, D.11763, D.11788
 2539 0228 B630DDE1 		ldrh	r3, [sp, #6]	@ D.11790, cluster_num
 2540 022c 8330A0E1 		mov	r3, r3, asl #1	@ D.11791, D.11790,
 2541 0230 0320A0E1 		mov	r2, r3	@ D.11792, D.11791
 2542 0234 18309DE5 		ldr	r3, [sp, #24]	@ tmp241, fat_offset
 2543 0238 032082E0 		add	r2, r2, r3	@ D.11793, D.11792, tmp241
 2544 023c 14308DE2 		add	r3, sp, #20	@ tmp242,,
ARM GAS  /tmp/ccNwMSzu.s 			page 60


 2545 0240 0100A0E1 		mov	r0, r1	@, D.11789
 2546 0244 0210A0E1 		mov	r1, r2	@, D.11793
 2547 0248 0320A0E1 		mov	r2, r3	@, tmp242
 2548 024c 0230A0E3 		mov	r3, #2	@,
 2549 0250 0FE0A0E1 		mov	lr, pc
 2550 0254 1CFF2FE1 		bx	ip	@ iftmp.36
 754:fat16.cpp     ****     
 755:fat16.cpp     ****             /* We continue in any case here, even if freeing the cluster failed.
 756:fat16.cpp     ****                                              * The cluster is lost, but maybe we can still free up 
 757:fat16.cpp     ****                                              */
 758:fat16.cpp     ****     
 759:fat16.cpp     ****             cluster_num = cluster_num_next;
 2551              		.loc 1 759 0 is_stmt 1 discriminator 3
 2552 0258 BE31DDE1 		ldrh	r3, [sp, #30]	@ movhi	@ tmp243, cluster_num_next
 2553 025c B630CDE1 		strh	r3, [sp, #6]	@ movhi	@ tmp243, cluster_num
 2554              	.L161:
 2555              	.LBE22:
 726:fat16.cpp     ****         while(cluster_num)
 2556              		.loc 1 726 0 discriminator 1
 2557 0260 B630DDE1 		ldrh	r3, [sp, #6]	@ tmp245, cluster_num
 2558 0264 000053E3 		cmp	r3, #0	@ tmp245,
 2559 0268 0030A003 		moveq	r3, #0	@, tmp246
 2560 026c 0130A013 		movne	r3, #1	@, tmp246
 2561 0270 FF3003E2 		and	r3, r3, #255	@ D.11711, tmp244,
 2562 0274 000053E3 		cmp	r3, #0	@ D.11711,
 2563 0278 72FFFF1A 		bne	.L171	@,
 760:fat16.cpp     ****         }
 761:fat16.cpp     ****     
 762:fat16.cpp     ****         return 1;
 2564              		.loc 1 762 0
 2565 027c 0130A0E3 		mov	r3, #1	@ D.11707,
 2566              	.L160:
 2567              	.LBE21:
 763:fat16.cpp     ****     #else
 764:fat16.cpp     ****         return 0;
 765:fat16.cpp     ****     #endif
 766:fat16.cpp     **** }
 2568              		.loc 1 766 0
 2569 0280 0300A0E1 		mov	r0, r3	@, <retval>
 2570 0284 24D08DE2 		add	sp, sp, #36	@,,
 2571 0288 04E09DE4 		ldr	lr, [sp], #4
 2572 028c 1EFF2FE1 		bx	lr
 2573              	.L173:
 2574              		.align	2
 2575              	.L172:
 2576 0290 F7FF0000 		.word	65527
 2577 0294 EFFF0000 		.word	65519
 2578 0298 F6FF0000 		.word	65526
 2579              		.cfi_endproc
 2580              	.LFE121:
 2581              		.size	_ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt, .-_ZN5FAT1619fat16_free_clustersEPK
 2582              		.section	.text._ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs_structEt,"ax",%progbits
 2583              		.align	2
 2584              		.global	_ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs_structEt
 2585              		.type	_ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs_structEt, %function
 2586              	_ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs_structEt:
 2587              	.LFB122:
ARM GAS  /tmp/ccNwMSzu.s 			page 61


 767:fat16.cpp     **** 
 768:fat16.cpp     **** /**
 769:fat16.cpp     ****  * \ingroup fat16_fs
 770:fat16.cpp     ****  * Frees a part of a cluster chain and correctly terminates the rest.
 771:fat16.cpp     ****  *
 772:fat16.cpp     ****  * Marks the specified cluster as the new end of a cluster chain and
 773:fat16.cpp     ****  * frees all following clusters.
 774:fat16.cpp     ****  *
 775:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
 776:fat16.cpp     ****  * \param[in] cluster_num The new end of the cluster chain.
 777:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
 778:fat16.cpp     ****  * \see fat16_free_clusters
 779:fat16.cpp     ****  */
 780:fat16.cpp     **** uint8_t FAT16::fat16_terminate_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num)
 781:fat16.cpp     **** {
 2588              		.loc 1 781 0
 2589              		.cfi_startproc
 2590              		@ Function supports interworking.
 2591              		@ args = 0, pretend = 0, frame = 24
 2592              		@ frame_needed = 0, uses_anonymous_args = 0
 2593 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2594              	.LCFI22:
 2595              		.cfi_def_cfa_offset 4
 2596 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 2597              	.LCFI23:
 2598              		.cfi_def_cfa_offset 32
 2599 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 2600 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 2601 0010 0230A0E1 		mov	r3, r2	@ tmp166, cluster_num
 2602 0014 B630CDE1 		strh	r3, [sp, #6]	@ movhi	@ tmp166, cluster_num
 2603              	.LBB23:
 782:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
 783:fat16.cpp     ****         if(!fs || cluster_num < 2)
 2604              		.loc 1 783 0
 2605 0018 08309DE5 		ldr	r3, [sp, #8]	@ tmp167, fs
 2606 001c 000053E3 		cmp	r3, #0	@ tmp167,
 2607 0020 0200000A 		beq	.L175	@,
 2608              		.cfi_offset 14, -4
 2609              		.loc 1 783 0 is_stmt 0 discriminator 1
 2610 0024 B630DDE1 		ldrh	r3, [sp, #6]	@ tmp168, cluster_num
 2611 0028 010053E3 		cmp	r3, #1	@ tmp168,
 2612 002c 0100008A 		bhi	.L176	@,
 2613              	.L175:
 784:fat16.cpp     ****             return 0;
 2614              		.loc 1 784 0 is_stmt 1
 2615 0030 0030A0E3 		mov	r3, #0	@ D.11664,
 2616 0034 480000EA 		b	.L177	@
 2617              	.L176:
 785:fat16.cpp     ****     
 786:fat16.cpp     ****         /* fetch next cluster before overwriting the cluster entry */
 787:fat16.cpp     ****         uint16_t cluster_num_next = fat16_get_next_cluster(fs, cluster_num);
 2618              		.loc 1 787 0
 2619 0038 B630DDE1 		ldrh	r3, [sp, #6]	@ tmp169, cluster_num
 2620 003c 0C009DE5 		ldr	r0, [sp, #12]	@, this
 2621 0040 08109DE5 		ldr	r1, [sp, #8]	@, fs
 2622 0044 0320A0E1 		mov	r2, r3	@, tmp169
 2623 0048 FEFFFFEB 		bl	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt	@
ARM GAS  /tmp/ccNwMSzu.s 			page 62


 2624 004c 0030A0E1 		mov	r3, r0	@ tmp170,
 2625 0050 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp170, cluster_num_next
 788:fat16.cpp     ****     
 789:fat16.cpp     ****         /* mark cluster as the last one */
 790:fat16.cpp     ****         uint8_t buffer[2];
 791:fat16.cpp     ****         buffer[0] = FAT16_CLUSTER_LAST_MAX & 0xff;
 2626              		.loc 1 791 0
 2627 0054 0030E0E3 		mvn	r3, #0	@ tmp171,
 2628 0058 1430CDE5 		strb	r3, [sp, #20]	@ tmp172, buffer
 792:fat16.cpp     ****         buffer[1] = (FAT16_CLUSTER_LAST_MAX >> 8) & 0xff;
 2629              		.loc 1 792 0
 2630 005c 0030E0E3 		mvn	r3, #0	@ tmp173,
 2631 0060 1530CDE5 		strb	r3, [sp, #21]	@ tmp174, buffer
 793:fat16.cpp     ****         if(!(GetInstance()->*fs->partition->device_write)(fs->header.fat_offset + 2 * cluster_num, 
 2632              		.loc 1 793 0
 2633 0064 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 2634 0068 0030A0E1 		mov	r3, r0	@ D.11666,
 2635 006c 08209DE5 		ldr	r2, [sp, #8]	@ tmp175, fs
 2636 0070 002092E5 		ldr	r2, [r2, #0]	@ D.11668, fs_3(D)->partition
 2637 0074 142092E5 		ldr	r2, [r2, #20]	@ D.11669, D.11668_8->device_write.__delta
 2638 0078 012002E2 		and	r2, r2, #1	@ D.11670, D.11669,
 2639 007c FF2002E2 		and	r2, r2, #255	@ D.11671, D.11670,
 2640 0080 000052E3 		cmp	r2, #0	@ D.11671,
 2641 0084 0C00000A 		beq	.L178	@,
 2642              		.loc 1 793 0 is_stmt 0 discriminator 1
 2643 0088 08209DE5 		ldr	r2, [sp, #8]	@ tmp176, fs
 2644 008c 002092E5 		ldr	r2, [r2, #0]	@ D.11674, fs_3(D)->partition
 2645 0090 142092E5 		ldr	r2, [r2, #20]	@ D.11675, D.11674_12->device_write.__delta
 2646 0094 C220A0E1 		mov	r2, r2, asr #1	@ D.11676, D.11675,
 2647 0098 022083E0 		add	r2, r3, r2	@ D.11678, D.11666, D.11677
 2648 009c 001092E5 		ldr	r1, [r2, #0]	@ D.11680,* D.11679
 2649 00a0 08209DE5 		ldr	r2, [sp, #8]	@ tmp177, fs
 2650 00a4 002092E5 		ldr	r2, [r2, #0]	@ D.11681, fs_3(D)->partition
 2651 00a8 102092E5 		ldr	r2, [r2, #16]	@ D.11682, D.11681_19->device_write.__pfn
 2652 00ac 022081E0 		add	r2, r1, r2	@ D.11684, D.11680, D.11683
 2653 00b0 002092E5 		ldr	r2, [r2, #0]	@ D.11685,* D.11684
 2654 00b4 02C0A0E1 		mov	ip, r2	@ iftmp.33, D.11685
 2655 00b8 020000EA 		b	.L179	@
 2656              	.L178:
 2657              		.loc 1 793 0 discriminator 2
 2658 00bc 08209DE5 		ldr	r2, [sp, #8]	@ tmp178, fs
 2659 00c0 002092E5 		ldr	r2, [r2, #0]	@ D.11687, fs_3(D)->partition
 2660 00c4 10C092E5 		ldr	ip, [r2, #16]	@ iftmp.33, D.11687_25->device_write.__pfn
 2661              	.L179:
 2662              		.loc 1 793 0 discriminator 3
 2663 00c8 08209DE5 		ldr	r2, [sp, #8]	@ tmp179, fs
 2664 00cc 002092E5 		ldr	r2, [r2, #0]	@ D.11688, fs_3(D)->partition
 2665 00d0 142092E5 		ldr	r2, [r2, #20]	@ D.11689, D.11688_27->device_write.__delta
 2666 00d4 C220A0E1 		mov	r2, r2, asr #1	@ D.11690, D.11689,
 2667 00d8 021083E0 		add	r1, r3, r2	@ D.11692, D.11666, D.11691
 2668 00dc 08309DE5 		ldr	r3, [sp, #8]	@ tmp180, fs
 2669 00e0 082093E5 		ldr	r2, [r3, #8]	@ D.11693, fs_3(D)->header.fat_offset
 2670 00e4 B630DDE1 		ldrh	r3, [sp, #6]	@ D.11694, cluster_num
 2671 00e8 8330A0E1 		mov	r3, r3, asl #1	@ D.11695, D.11694,
 2672 00ec 032082E0 		add	r2, r2, r3	@ D.11697, D.11693, D.11696
 2673 00f0 14308DE2 		add	r3, sp, #20	@ tmp181,,
 2674 00f4 0100A0E1 		mov	r0, r1	@, D.11692
ARM GAS  /tmp/ccNwMSzu.s 			page 63


 2675 00f8 0210A0E1 		mov	r1, r2	@, D.11697
 2676 00fc 0320A0E1 		mov	r2, r3	@, tmp181
 2677 0100 0230A0E3 		mov	r3, #2	@,
 2678 0104 0FE0A0E1 		mov	lr, pc
 2679 0108 1CFF2FE1 		bx	ip	@ iftmp.33
 2680 010c 0030A0E1 		mov	r3, r0	@ tmp182,
 2681 0110 000053E3 		cmp	r3, #0	@ D.11698,
 2682 0114 0030A013 		movne	r3, #0	@, tmp184
 2683 0118 0130A003 		moveq	r3, #1	@, tmp184
 2684 011c FF3003E2 		and	r3, r3, #255	@ retval.32, tmp183,
 2685 0120 000053E3 		cmp	r3, #0	@ retval.32,
 2686 0124 0100000A 		beq	.L180	@,
 794:fat16.cpp     ****             return 0;
 2687              		.loc 1 794 0 is_stmt 1
 2688 0128 0030A0E3 		mov	r3, #0	@ D.11664,
 2689 012c 0A0000EA 		b	.L177	@
 2690              	.L180:
 795:fat16.cpp     ****     
 796:fat16.cpp     ****         /* free remaining clusters */
 797:fat16.cpp     ****         if(cluster_num_next)
 2691              		.loc 1 797 0
 2692 0130 B631DDE1 		ldrh	r3, [sp, #22]	@ tmp185, cluster_num_next
 2693 0134 000053E3 		cmp	r3, #0	@ tmp185,
 2694 0138 0600000A 		beq	.L181	@,
 798:fat16.cpp     ****             return fat16_free_clusters(fs, cluster_num_next);
 2695              		.loc 1 798 0
 2696 013c B631DDE1 		ldrh	r3, [sp, #22]	@ tmp186, cluster_num_next
 2697 0140 0C009DE5 		ldr	r0, [sp, #12]	@, this
 2698 0144 08109DE5 		ldr	r1, [sp, #8]	@, fs
 2699 0148 0320A0E1 		mov	r2, r3	@, tmp186
 2700 014c FEFFFFEB 		bl	_ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt	@
 2701 0150 0030A0E1 		mov	r3, r0	@ tmp187,
 2702 0154 000000EA 		b	.L177	@
 2703              	.L181:
 799:fat16.cpp     ****         else
 800:fat16.cpp     ****             return 1;
 2704              		.loc 1 800 0
 2705 0158 0130A0E3 		mov	r3, #1	@ D.11664,
 2706              	.L177:
 2707              	.LBE23:
 801:fat16.cpp     ****     #else
 802:fat16.cpp     ****         return 0;
 803:fat16.cpp     ****     #endif
 804:fat16.cpp     **** }
 2708              		.loc 1 804 0
 2709 015c 0300A0E1 		mov	r0, r3	@, <retval>
 2710 0160 1CD08DE2 		add	sp, sp, #28	@,,
 2711 0164 04E09DE4 		ldr	lr, [sp], #4
 2712 0168 1EFF2FE1 		bx	lr
 2713              		.cfi_endproc
 2714              	.LFE122:
 2715              		.size	_ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs_structEt, .-_ZN5FAT1624fat16_terminate_c
 2716              		.section	.text._ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE,"ax
 2717              		.align	2
 2718              		.global	_ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE
 2719              		.type	_ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE, %function
 2720              	_ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:
ARM GAS  /tmp/ccNwMSzu.s 			page 64


 2721              	.LFB123:
 805:fat16.cpp     **** 
 806:fat16.cpp     **** /**
 807:fat16.cpp     ****  * \ingroup fat16_file
 808:fat16.cpp     ****  * Opens a file on a FAT16 filesystem.
 809:fat16.cpp     ****  *
 810:fat16.cpp     ****  * \param[in] fs The filesystem on which the file to open lies.
 811:fat16.cpp     ****  * \param[in] dir_entry The directory entry of the file to open.
 812:fat16.cpp     ****  * \returns The file handle, or 0 on failure.
 813:fat16.cpp     ****  * \see fat16_close_file
 814:fat16.cpp     ****  */
 815:fat16.cpp     **** FAT16::fat16_file_struct* FAT16::fat16_open_file(struct fat16_fs_struct* fs, const struct fat16_dir
 816:fat16.cpp     **** {
 2722              		.loc 1 816 0
 2723              		.cfi_startproc
 2724              		@ Function supports interworking.
 2725              		@ args = 0, pretend = 0, frame = 24
 2726              		@ frame_needed = 0, uses_anonymous_args = 0
 2727 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2728              	.LCFI24:
 2729              		.cfi_def_cfa_offset 4
 2730 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 2731              	.LCFI25:
 2732              		.cfi_def_cfa_offset 32
 2733 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 2734 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 2735 0010 04208DE5 		str	r2, [sp, #4]	@ dir_entry, dir_entry
 2736              	.LBB24:
 817:fat16.cpp     ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT16_ATTRIB_DIR))
 2737              		.loc 1 817 0
 2738 0014 08309DE5 		ldr	r3, [sp, #8]	@ tmp141, fs
 2739 0018 000053E3 		cmp	r3, #0	@ tmp141,
 2740 001c 0700000A 		beq	.L183	@,
 2741              		.cfi_offset 14, -4
 2742              		.loc 1 817 0 is_stmt 0 discriminator 1
 2743 0020 04309DE5 		ldr	r3, [sp, #4]	@ tmp142, dir_entry
 2744 0024 000053E3 		cmp	r3, #0	@ tmp142,
 2745 0028 0400000A 		beq	.L183	@,
 2746              		.loc 1 817 0 discriminator 2
 2747 002c 04309DE5 		ldr	r3, [sp, #4]	@ tmp143, dir_entry
 2748 0030 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.11651, dir_entry_3(D)->attributes
 2749 0034 103003E2 		and	r3, r3, #16	@ D.11653, D.11652,
 2750 0038 000053E3 		cmp	r3, #0	@ D.11653,
 2751 003c 0100000A 		beq	.L184	@,
 2752              	.L183:
 818:fat16.cpp     ****         return 0;
 2753              		.loc 1 818 0 is_stmt 1
 2754 0040 0030A0E3 		mov	r3, #0	@ D.11654,
 2755 0044 190000EA 		b	.L185	@
 2756              	.L184:
 819:fat16.cpp     **** 
 820:fat16.cpp     ****     struct fat16_file_struct* fd = (fat16_file_struct*)malloc(sizeof(*fd));
 2757              		.loc 1 820 0
 2758 0048 3800A0E3 		mov	r0, #56	@,
 2759 004c FEFFFFEB 		bl	malloc	@
 2760 0050 0030A0E1 		mov	r3, r0	@ tmp144,
 2761 0054 14308DE5 		str	r3, [sp, #20]	@ D.11655, fd
ARM GAS  /tmp/ccNwMSzu.s 			page 65


 821:fat16.cpp     ****     if(!fd)
 2762              		.loc 1 821 0
 2763 0058 14309DE5 		ldr	r3, [sp, #20]	@ tmp145, fd
 2764 005c 000053E3 		cmp	r3, #0	@ tmp145,
 2765 0060 0100001A 		bne	.L186	@,
 822:fat16.cpp     ****         return 0;
 2766              		.loc 1 822 0
 2767 0064 0030A0E3 		mov	r3, #0	@ D.11654,
 2768 0068 100000EA 		b	.L185	@
 2769              	.L186:
 823:fat16.cpp     **** 
 824:fat16.cpp     ****     memcpy(&fd->dir_entry, dir_entry, sizeof(*dir_entry));
 2770              		.loc 1 824 0
 2771 006c 14309DE5 		ldr	r3, [sp, #20]	@ tmp146, fd
 2772 0070 043083E2 		add	r3, r3, #4	@ D.11658, tmp146,
 2773 0074 0300A0E1 		mov	r0, r3	@, D.11658
 2774 0078 04109DE5 		ldr	r1, [sp, #4]	@, dir_entry
 2775 007c 2C20A0E3 		mov	r2, #44	@,
 2776 0080 FEFFFFEB 		bl	memcpy	@
 825:fat16.cpp     ****     fd->fs = fs;
 2777              		.loc 1 825 0
 2778 0084 14309DE5 		ldr	r3, [sp, #20]	@ tmp147, fd
 2779 0088 08209DE5 		ldr	r2, [sp, #8]	@ tmp148, fs
 2780 008c 002083E5 		str	r2, [r3, #0]	@ tmp148, fd_8->fs
 826:fat16.cpp     ****     fd->pos = 0;
 2781              		.loc 1 826 0
 2782 0090 14309DE5 		ldr	r3, [sp, #20]	@ tmp149, fd
 2783 0094 0020A0E3 		mov	r2, #0	@ tmp150,
 2784 0098 302083E5 		str	r2, [r3, #48]	@ tmp150, fd_8->pos
 827:fat16.cpp     ****     fd->pos_cluster = dir_entry->cluster;
 2785              		.loc 1 827 0
 2786 009c 04309DE5 		ldr	r3, [sp, #4]	@ tmp151, dir_entry
 2787 00a0 B222D3E1 		ldrh	r2, [r3, #34]	@ D.11659, dir_entry_3(D)->cluster
 2788 00a4 14309DE5 		ldr	r3, [sp, #20]	@ tmp152, fd
 2789 00a8 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ D.11659, fd_8->pos_cluster
 828:fat16.cpp     **** 
 829:fat16.cpp     ****     return fd;
 2790              		.loc 1 829 0
 2791 00ac 14309DE5 		ldr	r3, [sp, #20]	@ D.11654, fd
 2792              	.L185:
 2793              	.LBE24:
 830:fat16.cpp     **** }
 2794              		.loc 1 830 0
 2795 00b0 0300A0E1 		mov	r0, r3	@, <retval>
 2796 00b4 1CD08DE2 		add	sp, sp, #28	@,,
 2797 00b8 04E09DE4 		ldr	lr, [sp], #4
 2798 00bc 1EFF2FE1 		bx	lr
 2799              		.cfi_endproc
 2800              	.LFE123:
 2801              		.size	_ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE, .-_ZN5FAT16
 2802              		.section	.text._ZN5FAT1616fat16_close_fileEPNS_17fat16_file_structE,"ax",%progbits
 2803              		.align	2
 2804              		.global	_ZN5FAT1616fat16_close_fileEPNS_17fat16_file_structE
 2805              		.type	_ZN5FAT1616fat16_close_fileEPNS_17fat16_file_structE, %function
 2806              	_ZN5FAT1616fat16_close_fileEPNS_17fat16_file_structE:
 2807              	.LFB124:
 831:fat16.cpp     **** 
ARM GAS  /tmp/ccNwMSzu.s 			page 66


 832:fat16.cpp     **** /**
 833:fat16.cpp     ****  * \ingroup fat16_file
 834:fat16.cpp     ****  * Closes a file.
 835:fat16.cpp     ****  *
 836:fat16.cpp     ****  * \param[in] fd The file handle of the file to close.
 837:fat16.cpp     ****  * \see fat16_open_file
 838:fat16.cpp     ****  */
 839:fat16.cpp     **** void FAT16::fat16_close_file(struct fat16_file_struct* fd)
 840:fat16.cpp     **** {
 2808              		.loc 1 840 0
 2809              		.cfi_startproc
 2810              		@ Function supports interworking.
 2811              		@ args = 0, pretend = 0, frame = 8
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
 2813 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2814              	.LCFI26:
 2815              		.cfi_def_cfa_offset 4
 2816 0004 0CD04DE2 		sub	sp, sp, #12	@,,
 2817              	.LCFI27:
 2818              		.cfi_def_cfa_offset 16
 2819 0008 04008DE5 		str	r0, [sp, #4]	@ this, this
 2820 000c 00108DE5 		str	r1, [sp, #0]	@ fd, fd
 841:fat16.cpp     ****     if(fd)
 2821              		.loc 1 841 0
 2822 0010 00309DE5 		ldr	r3, [sp, #0]	@ tmp133, fd
 2823 0014 000053E3 		cmp	r3, #0	@ tmp133,
 2824 0018 0100000A 		beq	.L187	@,
 2825              		.cfi_offset 14, -4
 842:fat16.cpp     ****         free(fd);
 2826              		.loc 1 842 0
 2827 001c 00009DE5 		ldr	r0, [sp, #0]	@, fd
 2828 0020 FEFFFFEB 		bl	free	@
 2829              	.L187:
 843:fat16.cpp     **** }
 2830              		.loc 1 843 0
 2831 0024 0CD08DE2 		add	sp, sp, #12	@,,
 2832 0028 04E09DE4 		ldr	lr, [sp], #4
 2833 002c 1EFF2FE1 		bx	lr
 2834              		.cfi_endproc
 2835              	.LFE124:
 2836              		.size	_ZN5FAT1616fat16_close_fileEPNS_17fat16_file_structE, .-_ZN5FAT1616fat16_close_fileEPNS_17fa
 2837              		.global	__aeabi_uidivmod
 2838              		.section	.text._ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structEPht,"ax",%progbits
 2839              		.align	2
 2840              		.global	_ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structEPht
 2841              		.type	_ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structEPht, %function
 2842              	_ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structEPht:
 2843              	.LFB125:
 844:fat16.cpp     **** 
 845:fat16.cpp     **** /**
 846:fat16.cpp     ****  * \ingroup fat16_file
 847:fat16.cpp     ****  * Reads data from a file.
 848:fat16.cpp     ****  *
 849:fat16.cpp     ****  * The data requested is read from the current file location.
 850:fat16.cpp     ****  *
 851:fat16.cpp     ****  * \param[in] fd The file handle of the file from which to read.
 852:fat16.cpp     ****  * \param[out] buffer The buffer into which to write.
ARM GAS  /tmp/ccNwMSzu.s 			page 67


 853:fat16.cpp     ****  * \param[in] buffer_len The amount of data to read.
 854:fat16.cpp     ****  * \returns The number of bytes read, 0 on end of file, or -1 on failure.
 855:fat16.cpp     ****  * \see fat16_write_file
 856:fat16.cpp     ****  */
 857:fat16.cpp     **** int16_t FAT16::fat16_read_file(struct fat16_file_struct* fd, uint8_t* buffer, uint16_t buffer_len)
 858:fat16.cpp     **** {
 2844              		.loc 1 858 0
 2845              		.cfi_startproc
 2846              		@ Function supports interworking.
 2847              		@ args = 0, pretend = 0, frame = 40
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
 2849 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2850              	.LCFI28:
 2851              		.cfi_def_cfa_offset 4
 2852 0004 2CD04DE2 		sub	sp, sp, #44	@,,
 2853              	.LCFI29:
 2854              		.cfi_def_cfa_offset 48
 2855 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 2856 000c 08108DE5 		str	r1, [sp, #8]	@ fd, fd
 2857 0010 04208DE5 		str	r2, [sp, #4]	@ buffer, buffer
 2858 0014 B230CDE1 		strh	r3, [sp, #2]	@ movhi	@ tmp206, buffer_len
 2859              	.LBB25:
 859:fat16.cpp     ****     /* check arguments */
 860:fat16.cpp     ****     if(!fd || !buffer || buffer_len < 1)
 2860              		.loc 1 860 0
 2861 0018 08309DE5 		ldr	r3, [sp, #8]	@ tmp207, fd
 2862 001c 000053E3 		cmp	r3, #0	@ tmp207,
 2863 0020 0500000A 		beq	.L190	@,
 2864              		.cfi_offset 14, -4
 2865              		.loc 1 860 0 is_stmt 0 discriminator 1
 2866 0024 04309DE5 		ldr	r3, [sp, #4]	@ tmp208, buffer
 2867 0028 000053E3 		cmp	r3, #0	@ tmp208,
 2868 002c 0200000A 		beq	.L190	@,
 2869              		.loc 1 860 0 discriminator 2
 2870 0030 B230DDE1 		ldrh	r3, [sp, #2]	@ tmp209, buffer_len
 2871 0034 000053E3 		cmp	r3, #0	@ tmp209,
 2872 0038 0100001A 		bne	.L191	@,
 2873              	.L190:
 861:fat16.cpp     ****         return -1;
 2874              		.loc 1 861 0 is_stmt 1
 2875 003c AC339FE5 		ldr	r3, .L206	@ D.11534,
 2876 0040 E40000EA 		b	.L192	@
 2877              	.L191:
 862:fat16.cpp     **** 
 863:fat16.cpp     ****     /* determine number of bytes to read */
 864:fat16.cpp     ****     if(fd->pos + buffer_len > fd->dir_entry.file_size)
 2878              		.loc 1 864 0
 2879 0044 08309DE5 		ldr	r3, [sp, #8]	@ tmp210, fd
 2880 0048 302093E5 		ldr	r2, [r3, #48]	@ D.11535, fd_13(D)->pos
 2881 004c B230DDE1 		ldrh	r3, [sp, #2]	@ D.11536, buffer_len
 2882 0050 032082E0 		add	r2, r2, r3	@ D.11537, D.11535, D.11536
 2883 0054 08309DE5 		ldr	r3, [sp, #8]	@ tmp211, fd
 2884 0058 283093E5 		ldr	r3, [r3, #40]	@ D.11538, fd_13(D)->dir_entry.file_size
 2885 005c 030052E1 		cmp	r2, r3	@ D.11537, D.11538
 2886 0060 0900009A 		bls	.L193	@,
 865:fat16.cpp     ****         buffer_len = fd->dir_entry.file_size - fd->pos;
 2887              		.loc 1 865 0
ARM GAS  /tmp/ccNwMSzu.s 			page 68


 2888 0064 08309DE5 		ldr	r3, [sp, #8]	@ tmp212, fd
 2889 0068 283093E5 		ldr	r3, [r3, #40]	@ D.11541, fd_13(D)->dir_entry.file_size
 2890 006c 0338A0E1 		mov	r3, r3, asl #16	@ tmp213, D.11541,
 2891 0070 2328A0E1 		mov	r2, r3, lsr #16	@ D.11542, tmp213,
 2892 0074 08309DE5 		ldr	r3, [sp, #8]	@ tmp214, fd
 2893 0078 303093E5 		ldr	r3, [r3, #48]	@ D.11543, fd_13(D)->pos
 2894 007c 0338A0E1 		mov	r3, r3, asl #16	@ tmp215, D.11543,
 2895 0080 2338A0E1 		mov	r3, r3, lsr #16	@ D.11544, tmp215,
 2896 0084 023063E0 		rsb	r3, r3, r2	@ tmp216, D.11544, D.11542
 2897 0088 B230CDE1 		strh	r3, [sp, #2]	@ movhi	@ tmp216, buffer_len
 2898              	.L193:
 866:fat16.cpp     ****     if(buffer_len == 0)
 2899              		.loc 1 866 0
 2900 008c B230DDE1 		ldrh	r3, [sp, #2]	@ tmp217, buffer_len
 2901 0090 000053E3 		cmp	r3, #0	@ tmp217,
 2902 0094 0100001A 		bne	.L194	@,
 867:fat16.cpp     ****         return 0;
 2903              		.loc 1 867 0
 2904 0098 0030A0E3 		mov	r3, #0	@ D.11534,
 2905 009c CD0000EA 		b	.L192	@
 2906              	.L194:
 868:fat16.cpp     **** 
 869:fat16.cpp     ****     uint16_t cluster_size = fd->fs->header.cluster_size;
 2907              		.loc 1 869 0
 2908 00a0 08309DE5 		ldr	r3, [sp, #8]	@ tmp218, fd
 2909 00a4 003093E5 		ldr	r3, [r3, #0]	@ D.11548, fd_13(D)->fs
 2910 00a8 B231D3E1 		ldrh	r3, [r3, #18]	@ movhi	@ tmp219, D.11548_26->header.cluster_size
 2911 00ac B831CDE1 		strh	r3, [sp, #24]	@ movhi	@ tmp219, cluster_size
 870:fat16.cpp     ****     uint16_t cluster_num = fd->pos_cluster;
 2912              		.loc 1 870 0
 2913 00b0 08309DE5 		ldr	r3, [sp, #8]	@ tmp220, fd
 2914 00b4 B433D3E1 		ldrh	r3, [r3, #52]	@ movhi	@ tmp221, fd_13(D)->pos_cluster
 2915 00b8 B632CDE1 		strh	r3, [sp, #38]	@ movhi	@ tmp221, cluster_num
 871:fat16.cpp     ****     uint16_t buffer_left = buffer_len;
 2916              		.loc 1 871 0
 2917 00bc B230DDE1 		ldrh	r3, [sp, #2]	@ movhi	@ tmp222, buffer_len
 2918 00c0 B432CDE1 		strh	r3, [sp, #36]	@ movhi	@ tmp222, buffer_left
 872:fat16.cpp     ****     uint16_t first_cluster_offset = fd->pos % cluster_size;
 2919              		.loc 1 872 0
 2920 00c4 08309DE5 		ldr	r3, [sp, #8]	@ tmp223, fd
 2921 00c8 302093E5 		ldr	r2, [r3, #48]	@ D.11549, fd_13(D)->pos
 2922 00cc B831DDE1 		ldrh	r3, [sp, #24]	@ D.11550, cluster_size
 2923 00d0 0200A0E1 		mov	r0, r2	@, D.11549
 2924 00d4 0310A0E1 		mov	r1, r3	@, D.11550
 2925 00d8 FEFFFFEB 		bl	__aeabi_uidivmod	@
 2926 00dc 0130A0E1 		mov	r3, r1	@ tmp228,
 2927 00e0 B232CDE1 		strh	r3, [sp, #34]	@ movhi	@ D.11551, first_cluster_offset
 2928              	.LBB26:
 873:fat16.cpp     **** 
 874:fat16.cpp     ****     /* find cluster in which to start reading */
 875:fat16.cpp     ****     if(!cluster_num)
 2929              		.loc 1 875 0
 2930 00e4 B632DDE1 		ldrh	r3, [sp, #38]	@ tmp229, cluster_num
 2931 00e8 000053E3 		cmp	r3, #0	@ tmp229,
 2932 00ec 2F00001A 		bne	.L195	@,
 2933              	.LBB27:
 876:fat16.cpp     ****     {
ARM GAS  /tmp/ccNwMSzu.s 			page 69


 877:fat16.cpp     ****         cluster_num = fd->dir_entry.cluster;
 2934              		.loc 1 877 0
 2935 00f0 08309DE5 		ldr	r3, [sp, #8]	@ tmp230, fd
 2936 00f4 B632D3E1 		ldrh	r3, [r3, #38]	@ movhi	@ tmp231, fd_13(D)->dir_entry.cluster
 2937 00f8 B632CDE1 		strh	r3, [sp, #38]	@ movhi	@ tmp231, cluster_num
 878:fat16.cpp     **** 
 879:fat16.cpp     ****         if(!cluster_num)
 2938              		.loc 1 879 0
 2939 00fc B632DDE1 		ldrh	r3, [sp, #38]	@ tmp232, cluster_num
 2940 0100 000053E3 		cmp	r3, #0	@ tmp232,
 2941 0104 0700001A 		bne	.L196	@,
 880:fat16.cpp     ****         {
 881:fat16.cpp     ****             if(!fd->pos)
 2942              		.loc 1 881 0
 2943 0108 08309DE5 		ldr	r3, [sp, #8]	@ tmp233, fd
 2944 010c 303093E5 		ldr	r3, [r3, #48]	@ D.11556, fd_13(D)->pos
 2945 0110 000053E3 		cmp	r3, #0	@ D.11556,
 2946 0114 0100001A 		bne	.L197	@,
 882:fat16.cpp     ****                 return 0;
 2947              		.loc 1 882 0
 2948 0118 0030A0E3 		mov	r3, #0	@ D.11534,
 2949 011c AD0000EA 		b	.L192	@
 2950              	.L197:
 883:fat16.cpp     ****             else
 884:fat16.cpp     ****                 return -1;
 2951              		.loc 1 884 0
 2952 0120 C8329FE5 		ldr	r3, .L206	@ D.11534,
 2953 0124 AB0000EA 		b	.L192	@
 2954              	.L196:
 2955              	.LBB28:
 885:fat16.cpp     ****         }
 886:fat16.cpp     **** 
 887:fat16.cpp     ****         if(fd->pos)
 2956              		.loc 1 887 0
 2957 0128 08309DE5 		ldr	r3, [sp, #8]	@ tmp234, fd
 2958 012c 303093E5 		ldr	r3, [r3, #48]	@ D.11559, fd_13(D)->pos
 2959 0130 000053E3 		cmp	r3, #0	@ D.11559,
 2960 0134 1D00000A 		beq	.L195	@,
 2961              	.LBB29:
 888:fat16.cpp     ****         {
 889:fat16.cpp     ****             uint32_t pos = fd->pos;
 2962              		.loc 1 889 0
 2963 0138 08309DE5 		ldr	r3, [sp, #8]	@ tmp235, fd
 2964 013c 303093E5 		ldr	r3, [r3, #48]	@ tmp236, fd_13(D)->pos
 2965 0140 1C308DE5 		str	r3, [sp, #28]	@ tmp236, pos
 890:fat16.cpp     ****             while(pos >= cluster_size)
 2966              		.loc 1 890 0
 2967 0144 110000EA 		b	.L198	@
 2968              	.L199:
 891:fat16.cpp     ****             {
 892:fat16.cpp     ****                 pos -= cluster_size;
 2969              		.loc 1 892 0
 2970 0148 B831DDE1 		ldrh	r3, [sp, #24]	@ D.11567, cluster_size
 2971 014c 1C209DE5 		ldr	r2, [sp, #28]	@ tmp237, pos
 2972 0150 023063E0 		rsb	r3, r3, r2	@ tmp238, D.11567, tmp237
 2973 0154 1C308DE5 		str	r3, [sp, #28]	@ tmp238, pos
 893:fat16.cpp     ****                 cluster_num = fat16_get_next_cluster(fd->fs, cluster_num);
ARM GAS  /tmp/ccNwMSzu.s 			page 70


 2974              		.loc 1 893 0
 2975 0158 08309DE5 		ldr	r3, [sp, #8]	@ tmp239, fd
 2976 015c 002093E5 		ldr	r2, [r3, #0]	@ D.11568, fd_13(D)->fs
 2977 0160 B632DDE1 		ldrh	r3, [sp, #38]	@ tmp240, cluster_num
 2978 0164 0C009DE5 		ldr	r0, [sp, #12]	@, this
 2979 0168 0210A0E1 		mov	r1, r2	@, D.11568
 2980 016c 0320A0E1 		mov	r2, r3	@, tmp240
 2981 0170 FEFFFFEB 		bl	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt	@
 2982 0174 0030A0E1 		mov	r3, r0	@ tmp241,
 2983 0178 B632CDE1 		strh	r3, [sp, #38]	@ movhi	@ tmp241, cluster_num
 894:fat16.cpp     ****                 if(!cluster_num)
 2984              		.loc 1 894 0
 2985 017c B632DDE1 		ldrh	r3, [sp, #38]	@ tmp242, cluster_num
 2986 0180 000053E3 		cmp	r3, #0	@ tmp242,
 2987 0184 0100001A 		bne	.L198	@,
 895:fat16.cpp     ****                     return -1;
 2988              		.loc 1 895 0
 2989 0188 60329FE5 		ldr	r3, .L206	@ D.11534,
 2990 018c 910000EA 		b	.L192	@
 2991              	.L198:
 890:fat16.cpp     ****             while(pos >= cluster_size)
 2992              		.loc 1 890 0 discriminator 1
 2993 0190 B821DDE1 		ldrh	r2, [sp, #24]	@ D.11565, cluster_size
 2994 0194 1C309DE5 		ldr	r3, [sp, #28]	@ tmp244, pos
 2995 0198 030052E1 		cmp	r2, r3	@ D.11565, tmp244
 2996 019c 0030A083 		movhi	r3, #0	@, tmp245
 2997 01a0 0130A093 		movls	r3, #1	@, tmp245
 2998 01a4 FF3003E2 		and	r3, r3, #255	@ D.11566, tmp243,
 2999 01a8 000053E3 		cmp	r3, #0	@ D.11566,
 3000 01ac E5FFFF1A 		bne	.L199	@,
 3001              	.L195:
 3002              	.LBE29:
 3003              	.LBE28:
 3004              	.LBE27:
 3005              	.LBE26:
 3006              	.LBB30:
 896:fat16.cpp     ****             }
 897:fat16.cpp     ****         }
 898:fat16.cpp     ****     }
 899:fat16.cpp     **** 
 900:fat16.cpp     ****     /* read data */
 901:fat16.cpp     ****     do
 902:fat16.cpp     ****     {
 903:fat16.cpp     ****         /* calculate data size to copy from cluster */
 904:fat16.cpp     ****         uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
 905:fat16.cpp     ****         (uint32_t) (cluster_num - 2) * cluster_size + first_cluster_offset;
 3007              		.loc 1 905 0
 3008 01b0 08309DE5 		ldr	r3, [sp, #8]	@ tmp246, fd
 3009 01b4 003093E5 		ldr	r3, [r3, #0]	@ D.11577, fd_13(D)->fs
 3010 01b8 182093E5 		ldr	r2, [r3, #24]	@ D.11578, D.11577_48->header.cluster_zero_offset
 3011 01bc B632DDE1 		ldrh	r3, [sp, #38]	@ D.11579, cluster_num
 3012 01c0 023043E2 		sub	r3, r3, #2	@ D.11580, D.11579,
 3013 01c4 B811DDE1 		ldrh	r1, [sp, #24]	@ D.11582, cluster_size
 3014 01c8 910303E0 		mul	r3, r1, r3	@ D.11583, D.11582, D.11581
 3015 01cc 032082E0 		add	r2, r2, r3	@ D.11584, D.11578, D.11583
 3016 01d0 B232DDE1 		ldrh	r3, [sp, #34]	@ D.11585, first_cluster_offset
 3017 01d4 033082E0 		add	r3, r2, r3	@ tmp247, D.11584, D.11585
ARM GAS  /tmp/ccNwMSzu.s 			page 71


 3018 01d8 14308DE5 		str	r3, [sp, #20]	@ tmp247, cluster_offset
 906:fat16.cpp     ****         uint16_t copy_length = cluster_size - first_cluster_offset;
 3019              		.loc 1 906 0
 3020 01dc B821DDE1 		ldrh	r2, [sp, #24]	@ movhi	@ tmp248, cluster_size
 3021 01e0 B232DDE1 		ldrh	r3, [sp, #34]	@ movhi	@ tmp249, first_cluster_offset
 3022 01e4 023063E0 		rsb	r3, r3, r2	@ tmp250, tmp249, tmp248
 3023 01e8 BA31CDE1 		strh	r3, [sp, #26]	@ movhi	@ tmp250, copy_length
 907:fat16.cpp     ****         if(copy_length > buffer_left)
 3024              		.loc 1 907 0
 3025 01ec BA21DDE1 		ldrh	r2, [sp, #26]	@ tmp251, copy_length
 3026 01f0 B432DDE1 		ldrh	r3, [sp, #36]	@ tmp252, buffer_left
 3027 01f4 030052E1 		cmp	r2, r3	@ tmp251, tmp252
 3028 01f8 0100009A 		bls	.L200	@,
 908:fat16.cpp     ****             copy_length = buffer_left;
 3029              		.loc 1 908 0
 3030 01fc B432DDE1 		ldrh	r3, [sp, #36]	@ movhi	@ tmp253, buffer_left
 3031 0200 BA31CDE1 		strh	r3, [sp, #26]	@ movhi	@ tmp253, copy_length
 3032              	.L200:
 909:fat16.cpp     **** 
 910:fat16.cpp     ****         /* read data */
 911:fat16.cpp     ****         if(!(GetInstance()->*fd->fs->partition->device_read)(cluster_offset, buffer, copy_length))
 3033              		.loc 1 911 0
 3034 0204 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 3035 0208 0030A0E1 		mov	r3, r0	@ D.11590,
 3036 020c 08209DE5 		ldr	r2, [sp, #8]	@ tmp254, fd
 3037 0210 002092E5 		ldr	r2, [r2, #0]	@ D.11592, fd_13(D)->fs
 3038 0214 002092E5 		ldr	r2, [r2, #0]	@ D.11593, D.11592_61->partition
 3039 0218 042092E5 		ldr	r2, [r2, #4]	@ D.11594, D.11593_62->device_read.__delta
 3040 021c 012002E2 		and	r2, r2, #1	@ D.11595, D.11594,
 3041 0220 FF2002E2 		and	r2, r2, #255	@ D.11596, D.11595,
 3042 0224 000052E3 		cmp	r2, #0	@ D.11596,
 3043 0228 0E00000A 		beq	.L201	@,
 3044              		.loc 1 911 0 is_stmt 0 discriminator 1
 3045 022c 08209DE5 		ldr	r2, [sp, #8]	@ tmp255, fd
 3046 0230 002092E5 		ldr	r2, [r2, #0]	@ D.11599, fd_13(D)->fs
 3047 0234 002092E5 		ldr	r2, [r2, #0]	@ D.11600, D.11599_66->partition
 3048 0238 042092E5 		ldr	r2, [r2, #4]	@ D.11601, D.11600_67->device_read.__delta
 3049 023c C220A0E1 		mov	r2, r2, asr #1	@ D.11602, D.11601,
 3050 0240 022083E0 		add	r2, r3, r2	@ D.11604, D.11590, D.11603
 3051 0244 001092E5 		ldr	r1, [r2, #0]	@ D.11606,* D.11605
 3052 0248 08209DE5 		ldr	r2, [sp, #8]	@ tmp256, fd
 3053 024c 002092E5 		ldr	r2, [r2, #0]	@ D.11607, fd_13(D)->fs
 3054 0250 002092E5 		ldr	r2, [r2, #0]	@ D.11608, D.11607_74->partition
 3055 0254 002092E5 		ldr	r2, [r2, #0]	@ D.11609, D.11608_75->device_read.__pfn
 3056 0258 022081E0 		add	r2, r1, r2	@ D.11611, D.11606, D.11610
 3057 025c 002092E5 		ldr	r2, [r2, #0]	@ D.11612,* D.11611
 3058 0260 02C0A0E1 		mov	ip, r2	@ iftmp.30, D.11612
 3059 0264 030000EA 		b	.L202	@
 3060              	.L201:
 3061              		.loc 1 911 0 discriminator 2
 3062 0268 08209DE5 		ldr	r2, [sp, #8]	@ tmp257, fd
 3063 026c 002092E5 		ldr	r2, [r2, #0]	@ D.11614, fd_13(D)->fs
 3064 0270 002092E5 		ldr	r2, [r2, #0]	@ D.11615, D.11614_81->partition
 3065 0274 00C092E5 		ldr	ip, [r2, #0]	@ iftmp.30, D.11615_82->device_read.__pfn
 3066              	.L202:
 3067              		.loc 1 911 0 discriminator 3
 3068 0278 08209DE5 		ldr	r2, [sp, #8]	@ tmp258, fd
ARM GAS  /tmp/ccNwMSzu.s 			page 72


 3069 027c 002092E5 		ldr	r2, [r2, #0]	@ D.11616, fd_13(D)->fs
 3070 0280 002092E5 		ldr	r2, [r2, #0]	@ D.11617, D.11616_84->partition
 3071 0284 042092E5 		ldr	r2, [r2, #4]	@ D.11618, D.11617_85->device_read.__delta
 3072 0288 C220A0E1 		mov	r2, r2, asr #1	@ D.11619, D.11618,
 3073 028c 022083E0 		add	r2, r3, r2	@ D.11621, D.11590, D.11620
 3074 0290 BA31DDE1 		ldrh	r3, [sp, #26]	@ tmp259, copy_length
 3075 0294 0200A0E1 		mov	r0, r2	@, D.11621
 3076 0298 14109DE5 		ldr	r1, [sp, #20]	@, cluster_offset
 3077 029c 04209DE5 		ldr	r2, [sp, #4]	@, buffer
 3078 02a0 0FE0A0E1 		mov	lr, pc
 3079 02a4 1CFF2FE1 		bx	ip	@ iftmp.30
 3080 02a8 0030A0E1 		mov	r3, r0	@ tmp260,
 3081 02ac 000053E3 		cmp	r3, #0	@ D.11622,
 3082 02b0 0030A013 		movne	r3, #0	@, tmp262
 3083 02b4 0130A003 		moveq	r3, #1	@, tmp262
 3084 02b8 FF3003E2 		and	r3, r3, #255	@ retval.29, tmp261,
 3085 02bc 000053E3 		cmp	r3, #0	@ retval.29,
 3086 02c0 0700000A 		beq	.L203	@,
 912:fat16.cpp     ****             return buffer_len - buffer_left;
 3087              		.loc 1 912 0 is_stmt 1
 3088 02c4 B220DDE1 		ldrh	r2, [sp, #2]	@ movhi	@ tmp263, buffer_len
 3089 02c8 B432DDE1 		ldrh	r3, [sp, #36]	@ movhi	@ tmp264, buffer_left
 3090 02cc 023063E0 		rsb	r3, r3, r2	@ tmp265, tmp264, tmp263
 3091 02d0 0338A0E1 		mov	r3, r3, asl #16	@ tmp266, tmp265,
 3092 02d4 2338A0E1 		mov	r3, r3, lsr #16	@ D.11625, tmp266,
 3093 02d8 0338A0E1 		mov	r3, r3, asl #16	@ tmp267, D.11625,
 3094 02dc 2338A0E1 		mov	r3, r3, lsr #16	@ D.11534, tmp267,
 3095 02e0 3C0000EA 		b	.L192	@
 3096              	.L203:
 913:fat16.cpp     **** 
 914:fat16.cpp     ****         /* calculate new file position */
 915:fat16.cpp     ****         buffer += copy_length;
 3097              		.loc 1 915 0
 3098 02e4 BA31DDE1 		ldrh	r3, [sp, #26]	@ D.11626, copy_length
 3099 02e8 04209DE5 		ldr	r2, [sp, #4]	@ tmp268, buffer
 3100 02ec 033082E0 		add	r3, r2, r3	@ tmp269, tmp268, D.11626
 3101 02f0 04308DE5 		str	r3, [sp, #4]	@ tmp269, buffer
 916:fat16.cpp     ****         buffer_left -= copy_length;
 3102              		.loc 1 916 0
 3103 02f4 B422DDE1 		ldrh	r2, [sp, #36]	@ movhi	@ tmp270, buffer_left
 3104 02f8 BA31DDE1 		ldrh	r3, [sp, #26]	@ movhi	@ tmp271, copy_length
 3105 02fc 023063E0 		rsb	r3, r3, r2	@ tmp272, tmp271, tmp270
 3106 0300 B432CDE1 		strh	r3, [sp, #36]	@ movhi	@ tmp272, buffer_left
 917:fat16.cpp     ****         fd->pos += copy_length;
 3107              		.loc 1 917 0
 3108 0304 08309DE5 		ldr	r3, [sp, #8]	@ tmp273, fd
 3109 0308 302093E5 		ldr	r2, [r3, #48]	@ D.11627, fd_13(D)->pos
 3110 030c BA31DDE1 		ldrh	r3, [sp, #26]	@ D.11628, copy_length
 3111 0310 032082E0 		add	r2, r2, r3	@ D.11629, D.11627, D.11628
 3112 0314 08309DE5 		ldr	r3, [sp, #8]	@ tmp274, fd
 3113 0318 302083E5 		str	r2, [r3, #48]	@ D.11629, fd_13(D)->pos
 918:fat16.cpp     **** 
 919:fat16.cpp     ****         if(first_cluster_offset + copy_length >= cluster_size)
 3114              		.loc 1 919 0
 3115 031c B222DDE1 		ldrh	r2, [sp, #34]	@ D.11630, first_cluster_offset
 3116 0320 BA31DDE1 		ldrh	r3, [sp, #26]	@ D.11631, copy_length
 3117 0324 032082E0 		add	r2, r2, r3	@ D.11632, D.11630, D.11631
ARM GAS  /tmp/ccNwMSzu.s 			page 73


 3118 0328 B831DDE1 		ldrh	r3, [sp, #24]	@ D.11633, cluster_size
 3119 032c 030052E1 		cmp	r2, r3	@ D.11632, D.11633
 3120 0330 1D0000BA 		blt	.L204	@,
 920:fat16.cpp     ****         {
 921:fat16.cpp     ****             /* we are on a cluster boundary, so get the next cluster */
 922:fat16.cpp     ****             if((cluster_num = fat16_get_next_cluster(fd->fs, cluster_num)))
 3121              		.loc 1 922 0
 3122 0334 08309DE5 		ldr	r3, [sp, #8]	@ tmp275, fd
 3123 0338 002093E5 		ldr	r2, [r3, #0]	@ D.11637, fd_13(D)->fs
 3124 033c B632DDE1 		ldrh	r3, [sp, #38]	@ tmp276, cluster_num
 3125 0340 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3126 0344 0210A0E1 		mov	r1, r2	@, D.11637
 3127 0348 0320A0E1 		mov	r2, r3	@, tmp276
 3128 034c FEFFFFEB 		bl	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt	@
 3129 0350 0030A0E1 		mov	r3, r0	@ tmp277,
 3130 0354 B632CDE1 		strh	r3, [sp, #38]	@ movhi	@ tmp277, cluster_num
 3131 0358 B632DDE1 		ldrh	r3, [sp, #38]	@ tmp279, cluster_num
 3132 035c 000053E3 		cmp	r3, #0	@ tmp279,
 3133 0360 0030A003 		moveq	r3, #0	@, tmp280
 3134 0364 0130A013 		movne	r3, #1	@, tmp280
 3135 0368 FF3003E2 		and	r3, r3, #255	@ retval.31, tmp278,
 3136 036c 000053E3 		cmp	r3, #0	@ retval.31,
 3137 0370 0200000A 		beq	.L205	@,
 923:fat16.cpp     ****             {
 924:fat16.cpp     ****                 first_cluster_offset = 0;
 3138              		.loc 1 924 0
 3139 0374 0030A0E3 		mov	r3, #0	@ tmp282,
 3140 0378 B232CDE1 		strh	r3, [sp, #34]	@ movhi	@ tmp281, first_cluster_offset
 3141 037c 0A0000EA 		b	.L204	@
 3142              	.L205:
 925:fat16.cpp     ****             }
 926:fat16.cpp     ****             else
 927:fat16.cpp     ****             {
 928:fat16.cpp     ****                 fd->pos_cluster = 0;
 3143              		.loc 1 928 0
 3144 0380 08309DE5 		ldr	r3, [sp, #8]	@ tmp283, fd
 3145 0384 0020A0E3 		mov	r2, #0	@ tmp285,
 3146 0388 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp284, fd_13(D)->pos_cluster
 929:fat16.cpp     ****                 return buffer_len - buffer_left;
 3147              		.loc 1 929 0
 3148 038c B220DDE1 		ldrh	r2, [sp, #2]	@ movhi	@ tmp286, buffer_len
 3149 0390 B432DDE1 		ldrh	r3, [sp, #36]	@ movhi	@ tmp287, buffer_left
 3150 0394 023063E0 		rsb	r3, r3, r2	@ tmp288, tmp287, tmp286
 3151 0398 0338A0E1 		mov	r3, r3, asl #16	@ tmp289, tmp288,
 3152 039c 2338A0E1 		mov	r3, r3, lsr #16	@ D.11641, tmp289,
 3153 03a0 0338A0E1 		mov	r3, r3, asl #16	@ tmp290, D.11641,
 3154 03a4 2338A0E1 		mov	r3, r3, lsr #16	@ D.11534, tmp290,
 3155 03a8 0A0000EA 		b	.L192	@
 3156              	.L204:
 930:fat16.cpp     ****             }
 931:fat16.cpp     ****         }
 932:fat16.cpp     **** 
 933:fat16.cpp     ****         fd->pos_cluster = cluster_num;
 3157              		.loc 1 933 0
 3158 03ac 08309DE5 		ldr	r3, [sp, #8]	@ tmp291, fd
 3159 03b0 B622DDE1 		ldrh	r2, [sp, #38]	@ movhi	@ tmp292, cluster_num
 3160 03b4 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp292, fd_13(D)->pos_cluster
ARM GAS  /tmp/ccNwMSzu.s 			page 74


 3161              	.LBE30:
 901:fat16.cpp     ****     do
 3162              		.loc 1 901 0
 3163 03b8 B432DDE1 		ldrh	r3, [sp, #36]	@ tmp294, buffer_left
 3164 03bc 000053E3 		cmp	r3, #0	@ tmp294,
 3165 03c0 0030A003 		moveq	r3, #0	@, tmp295
 3166 03c4 0130A013 		movne	r3, #1	@, tmp295
 3167 03c8 FF3003E2 		and	r3, r3, #255	@ D.11576, tmp293,
 3168 03cc 000053E3 		cmp	r3, #0	@ D.11576,
 3169 03d0 76FFFF1A 		bne	.L195	@,
 934:fat16.cpp     **** 
 935:fat16.cpp     ****     }
 936:fat16.cpp     ****     while(buffer_left > 0); /* check if we are done */
 937:fat16.cpp     **** 
 938:fat16.cpp     ****     return buffer_len;
 3170              		.loc 1 938 0
 3171 03d4 B230DDE1 		ldrh	r3, [sp, #2]	@ D.11534, buffer_len
 3172              	.L192:
 3173 03d8 0338A0E1 		mov	r3, r3, asl #16	@ tmp298, D.11534,
 3174 03dc 4338A0E1 		mov	r3, r3, asr #16	@ tmp297, tmp298,
 3175              	.LBE25:
 939:fat16.cpp     **** }
 3176              		.loc 1 939 0
 3177 03e0 0300A0E1 		mov	r0, r3	@, <retval>
 3178 03e4 2CD08DE2 		add	sp, sp, #44	@,,
 3179 03e8 04E09DE4 		ldr	lr, [sp], #4
 3180 03ec 1EFF2FE1 		bx	lr
 3181              	.L207:
 3182              		.align	2
 3183              	.L206:
 3184 03f0 FFFF0000 		.word	65535
 3185              		.cfi_endproc
 3186              	.LFE125:
 3187              		.size	_ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structEPht, .-_ZN5FAT1615fat16_read_fileEPNS_17f
 3188              		.section	.text._ZN5FAT1616fat16_write_fileEPNS_17fat16_file_structEPKht,"ax",%progbits
 3189              		.align	2
 3190              		.global	_ZN5FAT1616fat16_write_fileEPNS_17fat16_file_structEPKht
 3191              		.type	_ZN5FAT1616fat16_write_fileEPNS_17fat16_file_structEPKht, %function
 3192              	_ZN5FAT1616fat16_write_fileEPNS_17fat16_file_structEPKht:
 3193              	.LFB126:
 940:fat16.cpp     **** 
 941:fat16.cpp     **** /**
 942:fat16.cpp     ****  * \ingroup fat16_file
 943:fat16.cpp     ****  * Writes data to a file.
 944:fat16.cpp     ****  *
 945:fat16.cpp     ****  * The data is written to the current file location.
 946:fat16.cpp     ****  *
 947:fat16.cpp     ****  * \param[in] fd The file handle of the file to which to write.
 948:fat16.cpp     ****  * \param[in] buffer The buffer from which to read the data to be written.
 949:fat16.cpp     ****  * \param[in] buffer_len The amount of data to write.
 950:fat16.cpp     ****  * \returns The number of bytes written, 0 on disk full, or -1 on failure.
 951:fat16.cpp     ****  * \see fat16_read_file
 952:fat16.cpp     ****  */
 953:fat16.cpp     **** int16_t FAT16::fat16_write_file(struct fat16_file_struct* fd, const uint8_t* buffer, uint16_t buffe
 954:fat16.cpp     **** {
 3194              		.loc 1 954 0
 3195              		.cfi_startproc
ARM GAS  /tmp/ccNwMSzu.s 			page 75


 3196              		@ Function supports interworking.
 3197              		@ args = 0, pretend = 0, frame = 48
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
 3199 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 3200              	.LCFI30:
 3201              		.cfi_def_cfa_offset 4
 3202 0004 34D04DE2 		sub	sp, sp, #52	@,,
 3203              	.LCFI31:
 3204              		.cfi_def_cfa_offset 56
 3205 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 3206 000c 08108DE5 		str	r1, [sp, #8]	@ fd, fd
 3207 0010 04208DE5 		str	r2, [sp, #4]	@ buffer, buffer
 3208 0014 B230CDE1 		strh	r3, [sp, #2]	@ movhi	@ tmp211, buffer_len
 3209              	.LBB31:
 955:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
 956:fat16.cpp     ****         /* check arguments */
 957:fat16.cpp     ****         if(!fd || !buffer || buffer_len < 1)
 3210              		.loc 1 957 0
 3211 0018 08309DE5 		ldr	r3, [sp, #8]	@ tmp212, fd
 3212 001c 000053E3 		cmp	r3, #0	@ tmp212,
 3213 0020 0500000A 		beq	.L209	@,
 3214              		.cfi_offset 14, -4
 3215              		.loc 1 957 0 is_stmt 0 discriminator 1
 3216 0024 04309DE5 		ldr	r3, [sp, #4]	@ tmp213, buffer
 3217 0028 000053E3 		cmp	r3, #0	@ tmp213,
 3218 002c 0200000A 		beq	.L209	@,
 3219              		.loc 1 957 0 discriminator 2
 3220 0030 B230DDE1 		ldrh	r3, [sp, #2]	@ tmp214, buffer_len
 3221 0034 000053E3 		cmp	r3, #0	@ tmp214,
 3222 0038 0100001A 		bne	.L210	@,
 3223              	.L209:
 958:fat16.cpp     ****             return -1;
 3224              		.loc 1 958 0 is_stmt 1
 3225 003c AC349FE5 		ldr	r3, .L230	@ D.11399,
 3226 0040 240100EA 		b	.L211	@
 3227              	.L210:
 959:fat16.cpp     ****         if(fd->pos > fd->dir_entry.file_size)
 3228              		.loc 1 959 0
 3229 0044 08309DE5 		ldr	r3, [sp, #8]	@ tmp215, fd
 3230 0048 302093E5 		ldr	r2, [r3, #48]	@ D.11400, fd_17(D)->pos
 3231 004c 08309DE5 		ldr	r3, [sp, #8]	@ tmp216, fd
 3232 0050 283093E5 		ldr	r3, [r3, #40]	@ D.11401, fd_17(D)->dir_entry.file_size
 3233 0054 030052E1 		cmp	r2, r3	@ D.11400, D.11401
 3234 0058 0100009A 		bls	.L212	@,
 960:fat16.cpp     ****             return -1;
 3235              		.loc 1 960 0
 3236 005c 8C349FE5 		ldr	r3, .L230	@ D.11399,
 3237 0060 1C0100EA 		b	.L211	@
 3238              	.L212:
 961:fat16.cpp     ****     
 962:fat16.cpp     ****         uint16_t cluster_size = fd->fs->header.cluster_size;
 3239              		.loc 1 962 0
 3240 0064 08309DE5 		ldr	r3, [sp, #8]	@ tmp217, fd
 3241 0068 003093E5 		ldr	r3, [r3, #0]	@ D.11404, fd_17(D)->fs
 3242 006c B231D3E1 		ldrh	r3, [r3, #18]	@ movhi	@ tmp218, D.11404_23->header.cluster_size
 3243 0070 BC31CDE1 		strh	r3, [sp, #28]	@ movhi	@ tmp218, cluster_size
 963:fat16.cpp     ****         uint16_t cluster_num = fd->pos_cluster;
ARM GAS  /tmp/ccNwMSzu.s 			page 76


 3244              		.loc 1 963 0
 3245 0074 08309DE5 		ldr	r3, [sp, #8]	@ tmp219, fd
 3246 0078 B433D3E1 		ldrh	r3, [r3, #52]	@ movhi	@ tmp220, fd_17(D)->pos_cluster
 3247 007c BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp220, cluster_num
 964:fat16.cpp     ****         uint16_t buffer_left = buffer_len;
 3248              		.loc 1 964 0
 3249 0080 B230DDE1 		ldrh	r3, [sp, #2]	@ movhi	@ tmp221, buffer_len
 3250 0084 BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp221, buffer_left
 965:fat16.cpp     ****         uint16_t first_cluster_offset = fd->pos % cluster_size;
 3251              		.loc 1 965 0
 3252 0088 08309DE5 		ldr	r3, [sp, #8]	@ tmp222, fd
 3253 008c 302093E5 		ldr	r2, [r3, #48]	@ D.11405, fd_17(D)->pos
 3254 0090 BC31DDE1 		ldrh	r3, [sp, #28]	@ D.11406, cluster_size
 3255 0094 0200A0E1 		mov	r0, r2	@, D.11405
 3256 0098 0310A0E1 		mov	r1, r3	@, D.11406
 3257 009c FEFFFFEB 		bl	__aeabi_uidivmod	@
 3258 00a0 0130A0E1 		mov	r3, r1	@ tmp227,
 3259 00a4 BA32CDE1 		strh	r3, [sp, #42]	@ movhi	@ D.11407, first_cluster_offset
 3260              	.LBB32:
 966:fat16.cpp     ****     
 967:fat16.cpp     ****         /* find cluster in which to start writing */
 968:fat16.cpp     ****         if(!cluster_num)
 3261              		.loc 1 968 0
 3262 00a8 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp228, cluster_num
 3263 00ac 000053E3 		cmp	r3, #0	@ tmp228,
 3264 00b0 5000001A 		bne	.L213	@,
 3265              	.LBB33:
 969:fat16.cpp     ****         {
 970:fat16.cpp     ****             cluster_num = fd->dir_entry.cluster;
 3266              		.loc 1 970 0
 3267 00b4 08309DE5 		ldr	r3, [sp, #8]	@ tmp229, fd
 3268 00b8 B632D3E1 		ldrh	r3, [r3, #38]	@ movhi	@ tmp230, fd_17(D)->dir_entry.cluster
 3269 00bc BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp230, cluster_num
 971:fat16.cpp     ****     
 972:fat16.cpp     ****             if(!cluster_num)
 3270              		.loc 1 972 0
 3271 00c0 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp231, cluster_num
 3272 00c4 000053E3 		cmp	r3, #0	@ tmp231,
 3273 00c8 1600001A 		bne	.L214	@,
 973:fat16.cpp     ****             {
 974:fat16.cpp     ****                 if(!fd->pos)
 3274              		.loc 1 974 0
 3275 00cc 08309DE5 		ldr	r3, [sp, #8]	@ tmp232, fd
 3276 00d0 303093E5 		ldr	r3, [r3, #48]	@ D.11412, fd_17(D)->pos
 3277 00d4 000053E3 		cmp	r3, #0	@ D.11412,
 3278 00d8 1000001A 		bne	.L215	@,
 975:fat16.cpp     ****                 {
 976:fat16.cpp     ****                     /* empty file */
 977:fat16.cpp     ****                     fd->dir_entry.cluster = cluster_num = fat16_append_clusters(fd->fs, 0, 1);
 3279              		.loc 1 977 0
 3280 00dc 08309DE5 		ldr	r3, [sp, #8]	@ tmp233, fd
 3281 00e0 003093E5 		ldr	r3, [r3, #0]	@ D.11415, fd_17(D)->fs
 3282 00e4 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3283 00e8 0310A0E1 		mov	r1, r3	@, D.11415
 3284 00ec 0020A0E3 		mov	r2, #0	@,
 3285 00f0 0130A0E3 		mov	r3, #1	@,
 3286 00f4 FEFFFFEB 		bl	_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt	@
ARM GAS  /tmp/ccNwMSzu.s 			page 77


 3287 00f8 0030A0E1 		mov	r3, r0	@ tmp234,
 3288 00fc BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp234, cluster_num
 3289 0100 08309DE5 		ldr	r3, [sp, #8]	@ tmp235, fd
 3290 0104 BE22DDE1 		ldrh	r2, [sp, #46]	@ movhi	@ tmp236, cluster_num
 3291 0108 B622C3E1 		strh	r2, [r3, #38]	@ movhi	@ tmp236, fd_17(D)->dir_entry.cluster
 978:fat16.cpp     ****                     if(!cluster_num)
 3292              		.loc 1 978 0
 3293 010c BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp237, cluster_num
 3294 0110 000053E3 		cmp	r3, #0	@ tmp237,
 3295 0114 0300001A 		bne	.L214	@,
 979:fat16.cpp     ****                         return -1;
 3296              		.loc 1 979 0
 3297 0118 D0339FE5 		ldr	r3, .L230	@ D.11399,
 3298 011c ED0000EA 		b	.L211	@
 3299              	.L215:
 980:fat16.cpp     ****                 }
 981:fat16.cpp     ****                 else
 982:fat16.cpp     ****                 {
 983:fat16.cpp     ****                     return -1;
 3300              		.loc 1 983 0
 3301 0120 C8339FE5 		ldr	r3, .L230	@ D.11399,
 3302 0124 EB0000EA 		b	.L211	@
 3303              	.L214:
 3304              	.LBB34:
 984:fat16.cpp     ****                 }
 985:fat16.cpp     ****             }
 986:fat16.cpp     ****     
 987:fat16.cpp     ****             if(fd->pos)
 3305              		.loc 1 987 0
 3306 0128 08309DE5 		ldr	r3, [sp, #8]	@ tmp238, fd
 3307 012c 303093E5 		ldr	r3, [r3, #48]	@ D.11420, fd_17(D)->pos
 3308 0130 000053E3 		cmp	r3, #0	@ D.11420,
 3309 0134 2F00000A 		beq	.L213	@,
 3310              	.LBB35:
 988:fat16.cpp     ****             {
 989:fat16.cpp     ****                 uint32_t pos = fd->pos;
 3311              		.loc 1 989 0
 3312 0138 08309DE5 		ldr	r3, [sp, #8]	@ tmp239, fd
 3313 013c 303093E5 		ldr	r3, [r3, #48]	@ tmp240, fd_17(D)->pos
 3314 0140 24308DE5 		str	r3, [sp, #36]	@ tmp240, pos
 990:fat16.cpp     ****                 uint16_t cluster_num_next;
 991:fat16.cpp     ****                 while(pos >= cluster_size)
 3315              		.loc 1 991 0
 3316 0144 230000EA 		b	.L216	@
 3317              	.L219:
 992:fat16.cpp     ****                 {
 993:fat16.cpp     ****                     pos -= cluster_size;
 3318              		.loc 1 993 0
 3319 0148 BC31DDE1 		ldrh	r3, [sp, #28]	@ D.11428, cluster_size
 3320 014c 24209DE5 		ldr	r2, [sp, #36]	@ tmp241, pos
 3321 0150 023063E0 		rsb	r3, r3, r2	@ tmp242, D.11428, tmp241
 3322 0154 24308DE5 		str	r3, [sp, #36]	@ tmp242, pos
 994:fat16.cpp     ****                     cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
 3323              		.loc 1 994 0
 3324 0158 08309DE5 		ldr	r3, [sp, #8]	@ tmp243, fd
 3325 015c 002093E5 		ldr	r2, [r3, #0]	@ D.11429, fd_17(D)->fs
 3326 0160 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp244, cluster_num
ARM GAS  /tmp/ccNwMSzu.s 			page 78


 3327 0164 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3328 0168 0210A0E1 		mov	r1, r2	@, D.11429
 3329 016c 0320A0E1 		mov	r2, r3	@, tmp244
 3330 0170 FEFFFFEB 		bl	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt	@
 3331 0174 0030A0E1 		mov	r3, r0	@ tmp245,
 3332 0178 B232CDE1 		strh	r3, [sp, #34]	@ movhi	@ tmp245, cluster_num_next
 995:fat16.cpp     ****                     if(!cluster_num_next && pos == 0)
 3333              		.loc 1 995 0
 3334 017c B232DDE1 		ldrh	r3, [sp, #34]	@ tmp246, cluster_num_next
 3335 0180 000053E3 		cmp	r3, #0	@ tmp246,
 3336 0184 0C00001A 		bne	.L217	@,
 3337              		.loc 1 995 0 is_stmt 0 discriminator 1
 3338 0188 24309DE5 		ldr	r3, [sp, #36]	@ tmp247, pos
 3339 018c 000053E3 		cmp	r3, #0	@ tmp247,
 3340 0190 0900001A 		bne	.L217	@,
 996:fat16.cpp     ****         /* the file exactly ends on a cluster boundary, and we append to it */
 997:fat16.cpp     ****                         cluster_num_next = fat16_append_clusters(fd->fs, cluster_num, 1);
 3341              		.loc 1 997 0 is_stmt 1
 3342 0194 08309DE5 		ldr	r3, [sp, #8]	@ tmp248, fd
 3343 0198 002093E5 		ldr	r2, [r3, #0]	@ D.11434, fd_17(D)->fs
 3344 019c BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp249, cluster_num
 3345 01a0 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3346 01a4 0210A0E1 		mov	r1, r2	@, D.11434
 3347 01a8 0320A0E1 		mov	r2, r3	@, tmp249
 3348 01ac 0130A0E3 		mov	r3, #1	@,
 3349 01b0 FEFFFFEB 		bl	_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt	@
 3350 01b4 0030A0E1 		mov	r3, r0	@ tmp250,
 3351 01b8 B232CDE1 		strh	r3, [sp, #34]	@ movhi	@ tmp250, cluster_num_next
 3352              	.L217:
 998:fat16.cpp     ****                     if(!cluster_num_next)
 3353              		.loc 1 998 0
 3354 01bc B232DDE1 		ldrh	r3, [sp, #34]	@ tmp251, cluster_num_next
 3355 01c0 000053E3 		cmp	r3, #0	@ tmp251,
 3356 01c4 0100001A 		bne	.L218	@,
 999:fat16.cpp     ****                         return -1;
 3357              		.loc 1 999 0
 3358 01c8 20339FE5 		ldr	r3, .L230	@ D.11399,
 3359 01cc C10000EA 		b	.L211	@
 3360              	.L218:
1000:fat16.cpp     ****     
1001:fat16.cpp     ****                     cluster_num = cluster_num_next;
 3361              		.loc 1 1001 0
 3362 01d0 B232DDE1 		ldrh	r3, [sp, #34]	@ movhi	@ tmp252, cluster_num_next
 3363 01d4 BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp252, cluster_num
 3364              	.L216:
 991:fat16.cpp     ****                 while(pos >= cluster_size)
 3365              		.loc 1 991 0 discriminator 1
 3366 01d8 BC21DDE1 		ldrh	r2, [sp, #28]	@ D.11426, cluster_size
 3367 01dc 24309DE5 		ldr	r3, [sp, #36]	@ tmp254, pos
 3368 01e0 030052E1 		cmp	r2, r3	@ D.11426, tmp254
 3369 01e4 0030A083 		movhi	r3, #0	@, tmp255
 3370 01e8 0130A093 		movls	r3, #1	@, tmp255
 3371 01ec FF3003E2 		and	r3, r3, #255	@ D.11427, tmp253,
 3372 01f0 000053E3 		cmp	r3, #0	@ D.11427,
 3373 01f4 D3FFFF1A 		bne	.L219	@,
 3374              	.L213:
 3375              	.LBE35:
ARM GAS  /tmp/ccNwMSzu.s 			page 79


 3376              	.LBE34:
 3377              	.LBE33:
 3378              	.LBE32:
 3379              	.LBB36:
1002:fat16.cpp     ****                 }
1003:fat16.cpp     ****             }
1004:fat16.cpp     ****         }
1005:fat16.cpp     ****     
1006:fat16.cpp     ****         /* write data */
1007:fat16.cpp     ****         do
1008:fat16.cpp     ****         {
1009:fat16.cpp     ****             /* calculate data size to write to cluster */
1010:fat16.cpp     ****             uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
1011:fat16.cpp     ****             (uint32_t) (cluster_num - 2) * cluster_size + first_cluster_offset;
 3380              		.loc 1 1011 0
 3381 01f8 08309DE5 		ldr	r3, [sp, #8]	@ tmp256, fd
 3382 01fc 003093E5 		ldr	r3, [r3, #0]	@ D.11444, fd_17(D)->fs
 3383 0200 182093E5 		ldr	r2, [r3, #24]	@ D.11445, D.11444_50->header.cluster_zero_offset
 3384 0204 BE32DDE1 		ldrh	r3, [sp, #46]	@ D.11446, cluster_num
 3385 0208 023043E2 		sub	r3, r3, #2	@ D.11447, D.11446,
 3386 020c BC11DDE1 		ldrh	r1, [sp, #28]	@ D.11449, cluster_size
 3387 0210 910303E0 		mul	r3, r1, r3	@ D.11450, D.11449, D.11448
 3388 0214 032082E0 		add	r2, r2, r3	@ D.11451, D.11445, D.11450
 3389 0218 BA32DDE1 		ldrh	r3, [sp, #42]	@ D.11452, first_cluster_offset
 3390 021c 033082E0 		add	r3, r2, r3	@ tmp257, D.11451, D.11452
 3391 0220 18308DE5 		str	r3, [sp, #24]	@ tmp257, cluster_offset
1012:fat16.cpp     ****             uint16_t write_length = cluster_size - first_cluster_offset;
 3392              		.loc 1 1012 0
 3393 0224 BC21DDE1 		ldrh	r2, [sp, #28]	@ movhi	@ tmp258, cluster_size
 3394 0228 BA32DDE1 		ldrh	r3, [sp, #42]	@ movhi	@ tmp259, first_cluster_offset
 3395 022c 023063E0 		rsb	r3, r3, r2	@ tmp260, tmp259, tmp258
 3396 0230 B032CDE1 		strh	r3, [sp, #32]	@ movhi	@ tmp260, write_length
1013:fat16.cpp     ****             if(write_length > buffer_left)
 3397              		.loc 1 1013 0
 3398 0234 B022DDE1 		ldrh	r2, [sp, #32]	@ tmp261, write_length
 3399 0238 BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp262, buffer_left
 3400 023c 030052E1 		cmp	r2, r3	@ tmp261, tmp262
 3401 0240 0100009A 		bls	.L220	@,
1014:fat16.cpp     ****                 write_length = buffer_left;
 3402              		.loc 1 1014 0
 3403 0244 BC32DDE1 		ldrh	r3, [sp, #44]	@ movhi	@ tmp263, buffer_left
 3404 0248 B032CDE1 		strh	r3, [sp, #32]	@ movhi	@ tmp263, write_length
 3405              	.L220:
1015:fat16.cpp     ****     
1016:fat16.cpp     ****             /* write data which fits into the current cluster */
1017:fat16.cpp     ****             if(!(GetInstance()->*fd->fs->partition->device_write)(cluster_offset, buffer, write_len
 3406              		.loc 1 1017 0
 3407 024c FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 3408 0250 0030A0E1 		mov	r3, r0	@ D.11457,
 3409 0254 08209DE5 		ldr	r2, [sp, #8]	@ tmp264, fd
 3410 0258 002092E5 		ldr	r2, [r2, #0]	@ D.11459, fd_17(D)->fs
 3411 025c 002092E5 		ldr	r2, [r2, #0]	@ D.11460, D.11459_63->partition
 3412 0260 142092E5 		ldr	r2, [r2, #20]	@ D.11461, D.11460_64->device_write.__delta
 3413 0264 012002E2 		and	r2, r2, #1	@ D.11462, D.11461,
 3414 0268 FF2002E2 		and	r2, r2, #255	@ D.11463, D.11462,
 3415 026c 000052E3 		cmp	r2, #0	@ D.11463,
 3416 0270 0E00000A 		beq	.L221	@,
ARM GAS  /tmp/ccNwMSzu.s 			page 80


 3417              		.loc 1 1017 0 is_stmt 0 discriminator 1
 3418 0274 08209DE5 		ldr	r2, [sp, #8]	@ tmp265, fd
 3419 0278 002092E5 		ldr	r2, [r2, #0]	@ D.11466, fd_17(D)->fs
 3420 027c 002092E5 		ldr	r2, [r2, #0]	@ D.11467, D.11466_68->partition
 3421 0280 142092E5 		ldr	r2, [r2, #20]	@ D.11468, D.11467_69->device_write.__delta
 3422 0284 C220A0E1 		mov	r2, r2, asr #1	@ D.11469, D.11468,
 3423 0288 022083E0 		add	r2, r3, r2	@ D.11471, D.11457, D.11470
 3424 028c 001092E5 		ldr	r1, [r2, #0]	@ D.11473,* D.11472
 3425 0290 08209DE5 		ldr	r2, [sp, #8]	@ tmp266, fd
 3426 0294 002092E5 		ldr	r2, [r2, #0]	@ D.11474, fd_17(D)->fs
 3427 0298 002092E5 		ldr	r2, [r2, #0]	@ D.11475, D.11474_76->partition
 3428 029c 102092E5 		ldr	r2, [r2, #16]	@ D.11476, D.11475_77->device_write.__pfn
 3429 02a0 022081E0 		add	r2, r1, r2	@ D.11478, D.11473, D.11477
 3430 02a4 002092E5 		ldr	r2, [r2, #0]	@ D.11479,* D.11478
 3431 02a8 02C0A0E1 		mov	ip, r2	@ iftmp.27, D.11479
 3432 02ac 030000EA 		b	.L222	@
 3433              	.L221:
 3434              		.loc 1 1017 0 discriminator 2
 3435 02b0 08209DE5 		ldr	r2, [sp, #8]	@ tmp267, fd
 3436 02b4 002092E5 		ldr	r2, [r2, #0]	@ D.11481, fd_17(D)->fs
 3437 02b8 002092E5 		ldr	r2, [r2, #0]	@ D.11482, D.11481_83->partition
 3438 02bc 10C092E5 		ldr	ip, [r2, #16]	@ iftmp.27, D.11482_84->device_write.__pfn
 3439              	.L222:
 3440              		.loc 1 1017 0 discriminator 3
 3441 02c0 08209DE5 		ldr	r2, [sp, #8]	@ tmp268, fd
 3442 02c4 002092E5 		ldr	r2, [r2, #0]	@ D.11483, fd_17(D)->fs
 3443 02c8 002092E5 		ldr	r2, [r2, #0]	@ D.11484, D.11483_86->partition
 3444 02cc 142092E5 		ldr	r2, [r2, #20]	@ D.11485, D.11484_87->device_write.__delta
 3445 02d0 C220A0E1 		mov	r2, r2, asr #1	@ D.11486, D.11485,
 3446 02d4 022083E0 		add	r2, r3, r2	@ D.11488, D.11457, D.11487
 3447 02d8 B032DDE1 		ldrh	r3, [sp, #32]	@ tmp269, write_length
 3448 02dc 0200A0E1 		mov	r0, r2	@, D.11488
 3449 02e0 18109DE5 		ldr	r1, [sp, #24]	@, cluster_offset
 3450 02e4 04209DE5 		ldr	r2, [sp, #4]	@, buffer
 3451 02e8 0FE0A0E1 		mov	lr, pc
 3452 02ec 1CFF2FE1 		bx	ip	@ iftmp.27
 3453 02f0 0030A0E1 		mov	r3, r0	@ tmp270,
 3454 02f4 000053E3 		cmp	r3, #0	@ D.11489,
 3455 02f8 0030A013 		movne	r3, #0	@, tmp272
 3456 02fc 0130A003 		moveq	r3, #1	@, tmp272
 3457 0300 FF3003E2 		and	r3, r3, #255	@ retval.26, tmp271,
 3458 0304 000053E3 		cmp	r3, #0	@ retval.26,
 3459 0308 4200001A 		bne	.L229	@,
 3460              	.L223:
1018:fat16.cpp     ****                 break;
1019:fat16.cpp     ****     
1020:fat16.cpp     ****             /* calculate new file position */
1021:fat16.cpp     ****             buffer += write_length;
 3461              		.loc 1 1021 0 is_stmt 1
 3462 030c B032DDE1 		ldrh	r3, [sp, #32]	@ D.11492, write_length
 3463 0310 04209DE5 		ldr	r2, [sp, #4]	@ tmp273, buffer
 3464 0314 033082E0 		add	r3, r2, r3	@ tmp274, tmp273, D.11492
 3465 0318 04308DE5 		str	r3, [sp, #4]	@ tmp274, buffer
1022:fat16.cpp     ****             buffer_left -= write_length;
 3466              		.loc 1 1022 0
 3467 031c BC22DDE1 		ldrh	r2, [sp, #44]	@ movhi	@ tmp275, buffer_left
 3468 0320 B032DDE1 		ldrh	r3, [sp, #32]	@ movhi	@ tmp276, write_length
ARM GAS  /tmp/ccNwMSzu.s 			page 81


 3469 0324 023063E0 		rsb	r3, r3, r2	@ tmp277, tmp276, tmp275
 3470 0328 BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp277, buffer_left
1023:fat16.cpp     ****             fd->pos += write_length;
 3471              		.loc 1 1023 0
 3472 032c 08309DE5 		ldr	r3, [sp, #8]	@ tmp278, fd
 3473 0330 302093E5 		ldr	r2, [r3, #48]	@ D.11493, fd_17(D)->pos
 3474 0334 B032DDE1 		ldrh	r3, [sp, #32]	@ D.11494, write_length
 3475 0338 032082E0 		add	r2, r2, r3	@ D.11495, D.11493, D.11494
 3476 033c 08309DE5 		ldr	r3, [sp, #8]	@ tmp279, fd
 3477 0340 302083E5 		str	r2, [r3, #48]	@ D.11495, fd_17(D)->pos
 3478              	.LBB37:
1024:fat16.cpp     ****     
1025:fat16.cpp     ****             if(first_cluster_offset + write_length >= cluster_size)
 3479              		.loc 1 1025 0
 3480 0344 BA22DDE1 		ldrh	r2, [sp, #42]	@ D.11496, first_cluster_offset
 3481 0348 B032DDE1 		ldrh	r3, [sp, #32]	@ D.11497, write_length
 3482 034c 032082E0 		add	r2, r2, r3	@ D.11498, D.11496, D.11497
 3483 0350 BC31DDE1 		ldrh	r3, [sp, #28]	@ D.11499, cluster_size
 3484 0354 030052E1 		cmp	r2, r3	@ D.11498, D.11499
 3485 0358 230000BA 		blt	.L225	@,
 3486              	.LBB38:
1026:fat16.cpp     ****             {
1027:fat16.cpp     ****                 /* we are on a cluster boundary, so get the next cluster */
1028:fat16.cpp     ****                 uint16_t cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
 3487              		.loc 1 1028 0
 3488 035c 08309DE5 		ldr	r3, [sp, #8]	@ tmp280, fd
 3489 0360 002093E5 		ldr	r2, [r3, #0]	@ D.11502, fd_17(D)->fs
 3490 0364 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp281, cluster_num
 3491 0368 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3492 036c 0210A0E1 		mov	r1, r2	@, D.11502
 3493 0370 0320A0E1 		mov	r2, r3	@, tmp281
 3494 0374 FEFFFFEB 		bl	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt	@
 3495 0378 0030A0E1 		mov	r3, r0	@ tmp282,
 3496 037c BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp282, cluster_num_next
1029:fat16.cpp     ****                 if(!cluster_num_next && buffer_left > 0)
 3497              		.loc 1 1029 0
 3498 0380 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp283, cluster_num_next
 3499 0384 000053E3 		cmp	r3, #0	@ tmp283,
 3500 0388 0C00001A 		bne	.L226	@,
 3501              		.loc 1 1029 0 is_stmt 0 discriminator 1
 3502 038c BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp284, buffer_left
 3503 0390 000053E3 		cmp	r3, #0	@ tmp284,
 3504 0394 0900000A 		beq	.L226	@,
1030:fat16.cpp     ****         /* we reached the last cluster, append a new one */
1031:fat16.cpp     ****                     cluster_num_next = fat16_append_clusters(fd->fs, cluster_num, 1);
 3505              		.loc 1 1031 0 is_stmt 1
 3506 0398 08309DE5 		ldr	r3, [sp, #8]	@ tmp285, fd
 3507 039c 002093E5 		ldr	r2, [r3, #0]	@ D.11507, fd_17(D)->fs
 3508 03a0 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp286, cluster_num
 3509 03a4 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3510 03a8 0210A0E1 		mov	r1, r2	@, D.11507
 3511 03ac 0320A0E1 		mov	r2, r3	@, tmp286
 3512 03b0 0130A0E3 		mov	r3, #1	@,
 3513 03b4 FEFFFFEB 		bl	_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt	@
 3514 03b8 0030A0E1 		mov	r3, r0	@ tmp287,
 3515 03bc BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp287, cluster_num_next
 3516              	.L226:
ARM GAS  /tmp/ccNwMSzu.s 			page 82


1032:fat16.cpp     ****                 if(!cluster_num_next)
 3517              		.loc 1 1032 0
 3518 03c0 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp288, cluster_num_next
 3519 03c4 000053E3 		cmp	r3, #0	@ tmp288,
 3520 03c8 0300001A 		bne	.L227	@,
1033:fat16.cpp     ****                 {
1034:fat16.cpp     ****                     fd->pos_cluster = 0;
 3521              		.loc 1 1034 0
 3522 03cc 08309DE5 		ldr	r3, [sp, #8]	@ tmp289, fd
 3523 03d0 0020A0E3 		mov	r2, #0	@ tmp291,
 3524 03d4 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp290, fd_17(D)->pos_cluster
1035:fat16.cpp     ****                     break;
 3525              		.loc 1 1035 0
 3526 03d8 0F0000EA 		b	.L224	@
 3527              	.L227:
1036:fat16.cpp     ****                 }
1037:fat16.cpp     ****     
1038:fat16.cpp     ****                 cluster_num = cluster_num_next;
 3528              		.loc 1 1038 0
 3529 03dc BE31DDE1 		ldrh	r3, [sp, #30]	@ movhi	@ tmp292, cluster_num_next
 3530 03e0 BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp292, cluster_num
1039:fat16.cpp     ****                 first_cluster_offset = 0;
 3531              		.loc 1 1039 0
 3532 03e4 0030A0E3 		mov	r3, #0	@ tmp294,
 3533 03e8 BA32CDE1 		strh	r3, [sp, #42]	@ movhi	@ tmp293, first_cluster_offset
 3534              	.L225:
 3535              	.LBE38:
 3536              	.LBE37:
1040:fat16.cpp     ****             }
1041:fat16.cpp     ****     
1042:fat16.cpp     ****             fd->pos_cluster = cluster_num;
 3537              		.loc 1 1042 0
 3538 03ec 08309DE5 		ldr	r3, [sp, #8]	@ tmp295, fd
 3539 03f0 BE22DDE1 		ldrh	r2, [sp, #46]	@ movhi	@ tmp296, cluster_num
 3540 03f4 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp296, fd_17(D)->pos_cluster
 3541              	.LBE36:
1007:fat16.cpp     ****         do
 3542              		.loc 1 1007 0
 3543 03f8 BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp298, buffer_left
 3544 03fc 000053E3 		cmp	r3, #0	@ tmp298,
 3545 0400 0030A003 		moveq	r3, #0	@, tmp299
 3546 0404 0130A013 		movne	r3, #1	@, tmp299
 3547 0408 FF3003E2 		and	r3, r3, #255	@ D.11443, tmp297,
 3548 040c 000053E3 		cmp	r3, #0	@ D.11443,
 3549 0410 78FFFF1A 		bne	.L213	@,
 3550 0414 000000EA 		b	.L224	@
 3551              	.L229:
 3552              	.LBB39:
1018:fat16.cpp     ****                 break;
 3553              		.loc 1 1018 0
 3554 0418 0000A0E1 		mov	r0, r0	@ nop
 3555              	.L224:
 3556              	.LBE39:
 3557              	.LBB40:
1043:fat16.cpp     ****     
1044:fat16.cpp     ****         }
1045:fat16.cpp     ****         while(buffer_left > 0); /* check if we are done */
ARM GAS  /tmp/ccNwMSzu.s 			page 83


1046:fat16.cpp     ****     
1047:fat16.cpp     ****         /* update directory entry */
1048:fat16.cpp     ****         if(fd->pos > fd->dir_entry.file_size)
 3558              		.loc 1 1048 0
 3559 041c 08309DE5 		ldr	r3, [sp, #8]	@ tmp300, fd
 3560 0420 302093E5 		ldr	r2, [r3, #48]	@ D.11512, fd_17(D)->pos
 3561 0424 08309DE5 		ldr	r3, [sp, #8]	@ tmp301, fd
 3562 0428 283093E5 		ldr	r3, [r3, #40]	@ D.11513, fd_17(D)->dir_entry.file_size
 3563 042c 030052E1 		cmp	r2, r3	@ D.11512, D.11513
 3564 0430 2100009A 		bls	.L228	@,
 3565              	.LBB41:
1049:fat16.cpp     ****         {
1050:fat16.cpp     ****             uint32_t size_old = fd->dir_entry.file_size;
 3566              		.loc 1 1050 0
 3567 0434 08309DE5 		ldr	r3, [sp, #8]	@ tmp302, fd
 3568 0438 283093E5 		ldr	r3, [r3, #40]	@ tmp303, fd_17(D)->dir_entry.file_size
 3569 043c 14308DE5 		str	r3, [sp, #20]	@ tmp303, size_old
1051:fat16.cpp     ****     
1052:fat16.cpp     ****             /* update file size */
1053:fat16.cpp     ****             fd->dir_entry.file_size = fd->pos;
 3570              		.loc 1 1053 0
 3571 0440 08309DE5 		ldr	r3, [sp, #8]	@ tmp304, fd
 3572 0444 302093E5 		ldr	r2, [r3, #48]	@ D.11516, fd_17(D)->pos
 3573 0448 08309DE5 		ldr	r3, [sp, #8]	@ tmp305, fd
 3574 044c 282083E5 		str	r2, [r3, #40]	@ D.11516, fd_17(D)->dir_entry.file_size
1054:fat16.cpp     ****             /* write directory entry */
1055:fat16.cpp     ****             if(!fat16_write_dir_entry(fd->fs, &fd->dir_entry))
 3575              		.loc 1 1055 0
 3576 0450 08309DE5 		ldr	r3, [sp, #8]	@ tmp306, fd
 3577 0454 002093E5 		ldr	r2, [r3, #0]	@ D.11518, fd_17(D)->fs
 3578 0458 08309DE5 		ldr	r3, [sp, #8]	@ tmp307, fd
 3579 045c 043083E2 		add	r3, r3, #4	@ D.11519, tmp307,
 3580 0460 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3581 0464 0210A0E1 		mov	r1, r2	@, D.11518
 3582 0468 0320A0E1 		mov	r2, r3	@, D.11519
 3583 046c FEFFFFEB 		bl	_ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE	@
 3584 0470 0030A0E1 		mov	r3, r0	@ tmp308,
 3585 0474 000053E3 		cmp	r3, #0	@ D.11520,
 3586 0478 0030A013 		movne	r3, #0	@, tmp310
 3587 047c 0130A003 		moveq	r3, #1	@, tmp310
 3588 0480 FF3003E2 		and	r3, r3, #255	@ retval.28, tmp309,
 3589 0484 000053E3 		cmp	r3, #0	@ retval.28,
 3590 0488 0B00000A 		beq	.L228	@,
1056:fat16.cpp     ****             {
1057:fat16.cpp     ****                 /* We do not return an error here since we actually wrote
1058:fat16.cpp     ****                                                              * some data to disk. So we calculate t
1059:fat16.cpp     ****                                                              * we wrote to disk and which lies with
1060:fat16.cpp     ****                                                              */
1061:fat16.cpp     ****                 buffer_left = fd->pos - size_old;
 3591              		.loc 1 1061 0
 3592 048c 08309DE5 		ldr	r3, [sp, #8]	@ tmp311, fd
 3593 0490 303093E5 		ldr	r3, [r3, #48]	@ D.11523, fd_17(D)->pos
 3594 0494 0338A0E1 		mov	r3, r3, asl #16	@ tmp312, D.11523,
 3595 0498 2328A0E1 		mov	r2, r3, lsr #16	@ D.11524, tmp312,
 3596 049c 14309DE5 		ldr	r3, [sp, #20]	@ tmp313, size_old
 3597 04a0 0338A0E1 		mov	r3, r3, asl #16	@ tmp314, tmp313,
 3598 04a4 2338A0E1 		mov	r3, r3, lsr #16	@ D.11525, tmp314,
ARM GAS  /tmp/ccNwMSzu.s 			page 84


 3599 04a8 023063E0 		rsb	r3, r3, r2	@ tmp315, D.11525, D.11524
 3600 04ac BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp315, buffer_left
1062:fat16.cpp     ****                 fd->pos = size_old;
 3601              		.loc 1 1062 0
 3602 04b0 08309DE5 		ldr	r3, [sp, #8]	@ tmp316, fd
 3603 04b4 14209DE5 		ldr	r2, [sp, #20]	@ tmp317, size_old
 3604 04b8 302083E5 		str	r2, [r3, #48]	@ tmp317, fd_17(D)->pos
 3605              	.L228:
 3606              	.LBE41:
 3607              	.LBE40:
1063:fat16.cpp     ****             }
1064:fat16.cpp     ****         }
1065:fat16.cpp     ****     
1066:fat16.cpp     ****         return buffer_len - buffer_left;
 3608              		.loc 1 1066 0
 3609 04bc B220DDE1 		ldrh	r2, [sp, #2]	@ movhi	@ tmp318, buffer_len
 3610 04c0 BC32DDE1 		ldrh	r3, [sp, #44]	@ movhi	@ tmp319, buffer_left
 3611 04c4 023063E0 		rsb	r3, r3, r2	@ tmp320, tmp319, tmp318
 3612 04c8 0338A0E1 		mov	r3, r3, asl #16	@ tmp321, tmp320,
 3613 04cc 2338A0E1 		mov	r3, r3, lsr #16	@ D.11528, tmp321,
 3614 04d0 0338A0E1 		mov	r3, r3, asl #16	@ tmp322, D.11528,
 3615 04d4 2338A0E1 		mov	r3, r3, lsr #16	@ D.11399, tmp322,
 3616              	.L211:
 3617 04d8 0338A0E1 		mov	r3, r3, asl #16	@ tmp325, D.11399,
 3618 04dc 4338A0E1 		mov	r3, r3, asr #16	@ tmp324, tmp325,
 3619              	.LBE31:
1067:fat16.cpp     ****     
1068:fat16.cpp     ****     #else
1069:fat16.cpp     ****         return -1;
1070:fat16.cpp     ****     #endif
1071:fat16.cpp     **** }
 3620              		.loc 1 1071 0
 3621 04e0 0300A0E1 		mov	r0, r3	@, <retval>
 3622 04e4 34D08DE2 		add	sp, sp, #52	@,,
 3623 04e8 04E09DE4 		ldr	lr, [sp], #4
 3624 04ec 1EFF2FE1 		bx	lr
 3625              	.L231:
 3626              		.align	2
 3627              	.L230:
 3628 04f0 FFFF0000 		.word	65535
 3629              		.cfi_endproc
 3630              	.LFE126:
 3631              		.size	_ZN5FAT1616fat16_write_fileEPNS_17fat16_file_structEPKht, .-_ZN5FAT1616fat16_write_fileEPNS_
 3632              		.section	.text._ZN5FAT1615fat16_seek_fileEPNS_17fat16_file_structEPlh,"ax",%progbits
 3633              		.align	2
 3634              		.global	_ZN5FAT1615fat16_seek_fileEPNS_17fat16_file_structEPlh
 3635              		.type	_ZN5FAT1615fat16_seek_fileEPNS_17fat16_file_structEPlh, %function
 3636              	_ZN5FAT1615fat16_seek_fileEPNS_17fat16_file_structEPlh:
 3637              	.LFB127:
1072:fat16.cpp     **** 
1073:fat16.cpp     **** /**
1074:fat16.cpp     ****  * \ingroup fat16_file
1075:fat16.cpp     ****  * Repositions the read/write file offset.
1076:fat16.cpp     ****  *
1077:fat16.cpp     ****  * Changes the file offset where the next call to fat16_read_file()
1078:fat16.cpp     ****  * or fat16_write_file() starts reading/writing.
1079:fat16.cpp     ****  *
ARM GAS  /tmp/ccNwMSzu.s 			page 85


1080:fat16.cpp     ****  * If the new offset is beyond the end of the file, fat16_resize_file()
1081:fat16.cpp     ****  * is implicitly called, i.e. the file is expanded.
1082:fat16.cpp     ****  *
1083:fat16.cpp     ****  * The new offset can be given in different ways determined by
1084:fat16.cpp     ****  * the \c whence parameter:
1085:fat16.cpp     ****  * - \b FAT16_SEEK_SET: \c *offset is relative to the beginning of the file.
1086:fat16.cpp     ****  * - \b FAT16_SEEK_CUR: \c *offset is relative to the current file position.
1087:fat16.cpp     ****  * - \b FAT16_SEEK_END: \c *offset is relative to the end of the file.
1088:fat16.cpp     ****  *
1089:fat16.cpp     ****  * The resulting absolute offset is written to the location the \c offset
1090:fat16.cpp     ****  * parameter points to.
1091:fat16.cpp     ****  *
1092:fat16.cpp     ****  * \param[in] fd The file decriptor of the file on which to seek.
1093:fat16.cpp     ****  * \param[in,out] offset A pointer to the new offset, as affected by the \c whence
1094:fat16.cpp     ****  *                   parameter. The function writes the new absolute offset
1095:fat16.cpp     ****  *                   to this location before it returns.
1096:fat16.cpp     ****  * \param[in] whence Affects the way \c offset is interpreted, see above.
1097:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1098:fat16.cpp     ****  */
1099:fat16.cpp     **** uint8_t FAT16::fat16_seek_file(struct fat16_file_struct* fd, int32_t* offset, uint8_t whence)
1100:fat16.cpp     **** {
 3638              		.loc 1 1100 0
 3639              		.cfi_startproc
 3640              		@ Function supports interworking.
 3641              		@ args = 0, pretend = 0, frame = 24
 3642              		@ frame_needed = 0, uses_anonymous_args = 0
 3643 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 3644              	.LCFI32:
 3645              		.cfi_def_cfa_offset 4
 3646 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 3647              	.LCFI33:
 3648              		.cfi_def_cfa_offset 32
 3649 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 3650 000c 08108DE5 		str	r1, [sp, #8]	@ fd, fd
 3651 0010 04208DE5 		str	r2, [sp, #4]	@ offset, offset
 3652 0014 0330CDE5 		strb	r3, [sp, #3]	@ tmp148, whence
 3653              	.LBB42:
1101:fat16.cpp     ****     if(!fd || !offset)
 3654              		.loc 1 1101 0
 3655 0018 08309DE5 		ldr	r3, [sp, #8]	@ tmp149, fd
 3656 001c 000053E3 		cmp	r3, #0	@ tmp149,
 3657 0020 0200000A 		beq	.L233	@,
 3658              		.cfi_offset 14, -4
 3659              		.loc 1 1101 0 is_stmt 0 discriminator 1
 3660 0024 04309DE5 		ldr	r3, [sp, #4]	@ tmp150, offset
 3661 0028 000053E3 		cmp	r3, #0	@ tmp150,
 3662 002c 0100001A 		bne	.L234	@,
 3663              	.L233:
1102:fat16.cpp     ****         return 0;
 3664              		.loc 1 1102 0 is_stmt 1
 3665 0030 0030A0E3 		mov	r3, #0	@ D.11374,
 3666 0034 390000EA 		b	.L235	@
 3667              	.L234:
1103:fat16.cpp     **** 
1104:fat16.cpp     ****     uint32_t new_pos = fd->pos;
 3668              		.loc 1 1104 0
 3669 0038 08309DE5 		ldr	r3, [sp, #8]	@ tmp151, fd
ARM GAS  /tmp/ccNwMSzu.s 			page 86


 3670 003c 303093E5 		ldr	r3, [r3, #48]	@ tmp152, fd_4(D)->pos
 3671 0040 14308DE5 		str	r3, [sp, #20]	@ tmp152, new_pos
1105:fat16.cpp     ****     switch(whence)
 3672              		.loc 1 1105 0
 3673 0044 0330DDE5 		ldrb	r3, [sp, #3]	@ zero_extendqisi2	@ D.11376, whence
 3674 0048 010053E3 		cmp	r3, #1	@ D.11376,
 3675 004c 0700000A 		beq	.L238	@,
 3676 0050 020053E3 		cmp	r3, #2	@ D.11376,
 3677 0054 0B00000A 		beq	.L239	@,
 3678 0058 000053E3 		cmp	r3, #0	@ D.11376,
 3679 005c 1000001A 		bne	.L244	@,
 3680              	.L237:
1106:fat16.cpp     ****     {
1107:fat16.cpp     ****         case FAT16_SEEK_SET:
1108:fat16.cpp     ****             new_pos = *offset;
 3681              		.loc 1 1108 0
 3682 0060 04309DE5 		ldr	r3, [sp, #4]	@ tmp153, offset
 3683 0064 003093E5 		ldr	r3, [r3, #0]	@ D.11377,
 3684 0068 14308DE5 		str	r3, [sp, #20]	@ D.11377, new_pos
1109:fat16.cpp     ****             break;
 3685              		.loc 1 1109 0
 3686 006c 0E0000EA 		b	.L240	@
 3687              	.L238:
1110:fat16.cpp     ****         case FAT16_SEEK_CUR:
1111:fat16.cpp     ****             new_pos += *offset;
 3688              		.loc 1 1111 0
 3689 0070 04309DE5 		ldr	r3, [sp, #4]	@ tmp154, offset
 3690 0074 003093E5 		ldr	r3, [r3, #0]	@ D.11378,
 3691 0078 14209DE5 		ldr	r2, [sp, #20]	@ tmp155, new_pos
 3692 007c 033082E0 		add	r3, r2, r3	@ tmp156, tmp155, D.11379
 3693 0080 14308DE5 		str	r3, [sp, #20]	@ tmp156, new_pos
1112:fat16.cpp     ****             break;
 3694              		.loc 1 1112 0
 3695 0084 080000EA 		b	.L240	@
 3696              	.L239:
1113:fat16.cpp     ****         case FAT16_SEEK_END:
1114:fat16.cpp     ****             new_pos = fd->dir_entry.file_size + *offset;
 3697              		.loc 1 1114 0
 3698 0088 08309DE5 		ldr	r3, [sp, #8]	@ tmp157, fd
 3699 008c 282093E5 		ldr	r2, [r3, #40]	@ D.11380, fd_4(D)->dir_entry.file_size
 3700 0090 04309DE5 		ldr	r3, [sp, #4]	@ tmp158, offset
 3701 0094 003093E5 		ldr	r3, [r3, #0]	@ D.11381,
 3702 0098 033082E0 		add	r3, r2, r3	@ tmp159, D.11380, D.11382
 3703 009c 14308DE5 		str	r3, [sp, #20]	@ tmp159, new_pos
1115:fat16.cpp     ****             break;
 3704              		.loc 1 1115 0
 3705 00a0 010000EA 		b	.L240	@
 3706              	.L244:
1116:fat16.cpp     ****         default:
1117:fat16.cpp     ****             return 0;
 3707              		.loc 1 1117 0
 3708 00a4 0030A0E3 		mov	r3, #0	@ D.11374,
 3709 00a8 1C0000EA 		b	.L235	@
 3710              	.L240:
1118:fat16.cpp     ****     }
1119:fat16.cpp     **** 
1120:fat16.cpp     ****     if(new_pos > fd->dir_entry.file_size && !fat16_resize_file(fd, new_pos))
ARM GAS  /tmp/ccNwMSzu.s 			page 87


 3711              		.loc 1 1120 0
 3712 00ac 08309DE5 		ldr	r3, [sp, #8]	@ tmp160, fd
 3713 00b0 282093E5 		ldr	r2, [r3, #40]	@ D.11387, fd_4(D)->dir_entry.file_size
 3714 00b4 14309DE5 		ldr	r3, [sp, #20]	@ tmp161, new_pos
 3715 00b8 030052E1 		cmp	r2, r3	@ D.11387, tmp161
 3716 00bc 0800002A 		bcs	.L241	@,
 3717              		.loc 1 1120 0 is_stmt 0 discriminator 1
 3718 00c0 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3719 00c4 08109DE5 		ldr	r1, [sp, #8]	@, fd
 3720 00c8 14209DE5 		ldr	r2, [sp, #20]	@, new_pos
 3721 00cc FEFFFFEB 		bl	_ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_structEm	@
 3722 00d0 0030A0E1 		mov	r3, r0	@ tmp162,
 3723 00d4 000053E3 		cmp	r3, #0	@ D.11389,
 3724 00d8 0100001A 		bne	.L241	@,
 3725              		.loc 1 1120 0 discriminator 3
 3726 00dc 0130A0E3 		mov	r3, #1	@ iftmp.24,
 3727 00e0 000000EA 		b	.L242	@
 3728              	.L241:
 3729              		.loc 1 1120 0 discriminator 2
 3730 00e4 0030A0E3 		mov	r3, #0	@ iftmp.24,
 3731              	.L242:
 3732              		.loc 1 1120 0 discriminator 4
 3733 00e8 000053E3 		cmp	r3, #0	@ retval.23,
 3734 00ec 0100000A 		beq	.L243	@,
1121:fat16.cpp     ****         return 0;
 3735              		.loc 1 1121 0 is_stmt 1
 3736 00f0 0030A0E3 		mov	r3, #0	@ D.11374,
 3737 00f4 090000EA 		b	.L235	@
 3738              	.L243:
1122:fat16.cpp     **** 
1123:fat16.cpp     ****     fd->pos = new_pos;
 3739              		.loc 1 1123 0
 3740 00f8 08309DE5 		ldr	r3, [sp, #8]	@ tmp163, fd
 3741 00fc 14209DE5 		ldr	r2, [sp, #20]	@ tmp164, new_pos
 3742 0100 302083E5 		str	r2, [r3, #48]	@ tmp164, fd_4(D)->pos
1124:fat16.cpp     ****     fd->pos_cluster = 0;
 3743              		.loc 1 1124 0
 3744 0104 08309DE5 		ldr	r3, [sp, #8]	@ tmp165, fd
 3745 0108 0020A0E3 		mov	r2, #0	@ tmp167,
 3746 010c B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp166, fd_4(D)->pos_cluster
1125:fat16.cpp     **** 
1126:fat16.cpp     ****     *offset = new_pos;
 3747              		.loc 1 1126 0
 3748 0110 14209DE5 		ldr	r2, [sp, #20]	@ new_pos.25, new_pos
 3749 0114 04309DE5 		ldr	r3, [sp, #4]	@ tmp168, offset
 3750 0118 002083E5 		str	r2, [r3, #0]	@ new_pos.25,
1127:fat16.cpp     ****     return 1;
 3751              		.loc 1 1127 0
 3752 011c 0130A0E3 		mov	r3, #1	@ D.11374,
 3753              	.L235:
 3754              	.LBE42:
1128:fat16.cpp     **** }
 3755              		.loc 1 1128 0
 3756 0120 0300A0E1 		mov	r0, r3	@, <retval>
 3757 0124 1CD08DE2 		add	sp, sp, #28	@,,
 3758 0128 04E09DE4 		ldr	lr, [sp], #4
 3759 012c 1EFF2FE1 		bx	lr
ARM GAS  /tmp/ccNwMSzu.s 			page 88


 3760              		.cfi_endproc
 3761              	.LFE127:
 3762              		.size	_ZN5FAT1615fat16_seek_fileEPNS_17fat16_file_structEPlh, .-_ZN5FAT1615fat16_seek_fileEPNS_17f
 3763              		.section	.text._ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_structEm,"ax",%progbits
 3764              		.align	2
 3765              		.global	_ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_structEm
 3766              		.type	_ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_structEm, %function
 3767              	_ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_structEm:
 3768              	.LFB128:
1129:fat16.cpp     **** 
1130:fat16.cpp     **** /**
1131:fat16.cpp     ****  * \ingroup fat16_file
1132:fat16.cpp     ****  * Resizes a file to have a specific size.
1133:fat16.cpp     ****  *
1134:fat16.cpp     ****  * Enlarges or shrinks the file pointed to by the file descriptor to have
1135:fat16.cpp     ****  * exactly the specified size.
1136:fat16.cpp     ****  *
1137:fat16.cpp     ****  * If the file is truncated, all bytes having an equal or larger offset
1138:fat16.cpp     ****  * than the given size are lost. If the file is expanded, the additional
1139:fat16.cpp     ****  * bytes are allocated.
1140:fat16.cpp     ****  *
1141:fat16.cpp     ****  * \note Please be aware that this function just allocates or deallocates disk
1142:fat16.cpp     ****  * space, it does not explicitely clear it. To avoid data leakage, this
1143:fat16.cpp     ****  * must be done manually.
1144:fat16.cpp     ****  *
1145:fat16.cpp     ****  * \param[in] fd The file decriptor of the file which to resize.
1146:fat16.cpp     ****  * \param[in] size The new size of the file.
1147:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1148:fat16.cpp     ****  */
1149:fat16.cpp     **** uint8_t FAT16::fat16_resize_file(struct fat16_file_struct* fd, uint32_t size)
1150:fat16.cpp     **** {
 3769              		.loc 1 1150 0
 3770              		.cfi_startproc
 3771              		@ Function supports interworking.
 3772              		@ args = 0, pretend = 0, frame = 32
 3773              		@ frame_needed = 0, uses_anonymous_args = 0
 3774 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 3775              	.LCFI34:
 3776              		.cfi_def_cfa_offset 4
 3777 0004 24D04DE2 		sub	sp, sp, #36	@,,
 3778              	.LCFI35:
 3779              		.cfi_def_cfa_offset 40
 3780 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 3781 000c 08108DE5 		str	r1, [sp, #8]	@ fd, fd
 3782 0010 04208DE5 		str	r2, [sp, #4]	@ size, size
 3783              	.LBB43:
1151:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
1152:fat16.cpp     ****         if(!fd)
 3784              		.loc 1 1152 0
 3785 0014 08309DE5 		ldr	r3, [sp, #8]	@ tmp155, fd
 3786 0018 000053E3 		cmp	r3, #0	@ tmp155,
 3787 001c 0100001A 		bne	.L246	@,
 3788              		.cfi_offset 14, -4
1153:fat16.cpp     ****             return 0;
 3789              		.loc 1 1153 0
 3790 0020 0030A0E3 		mov	r3, #0	@ D.11312,
 3791 0024 920000EA 		b	.L247	@
ARM GAS  /tmp/ccNwMSzu.s 			page 89


 3792              	.L246:
1154:fat16.cpp     ****     
1155:fat16.cpp     ****         uint16_t cluster_num = fd->dir_entry.cluster;
 3793              		.loc 1 1155 0
 3794 0028 08309DE5 		ldr	r3, [sp, #8]	@ tmp156, fd
 3795 002c B632D3E1 		ldrh	r3, [r3, #38]	@ movhi	@ tmp157, fd_6(D)->dir_entry.cluster
 3796 0030 BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp157, cluster_num
1156:fat16.cpp     ****         uint16_t cluster_size = fd->fs->header.cluster_size;
 3797              		.loc 1 1156 0
 3798 0034 08309DE5 		ldr	r3, [sp, #8]	@ tmp158, fd
 3799 0038 003093E5 		ldr	r3, [r3, #0]	@ D.11313, fd_6(D)->fs
 3800 003c B231D3E1 		ldrh	r3, [r3, #18]	@ movhi	@ tmp159, D.11313_9->header.cluster_size
 3801 0040 B431CDE1 		strh	r3, [sp, #20]	@ movhi	@ tmp159, cluster_size
1157:fat16.cpp     ****         uint32_t size_new = size;
 3802              		.loc 1 1157 0
 3803 0044 04309DE5 		ldr	r3, [sp, #4]	@ tmp160, size
 3804 0048 18308DE5 		str	r3, [sp, #24]	@ tmp160, size_new
 3805              	.LBB44:
1158:fat16.cpp     ****     
1159:fat16.cpp     ****         do
1160:fat16.cpp     ****         {
1161:fat16.cpp     ****             if(cluster_num == 0 && size_new == 0)
 3806              		.loc 1 1161 0
 3807 004c BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp161, cluster_num
 3808 0050 000053E3 		cmp	r3, #0	@ tmp161,
 3809 0054 1500001A 		bne	.L250	@,
 3810              		.loc 1 1161 0 is_stmt 0 discriminator 1
 3811 0058 18309DE5 		ldr	r3, [sp, #24]	@ tmp162, size_new
 3812 005c 000053E3 		cmp	r3, #0	@ tmp162,
 3813 0060 1200001A 		bne	.L250	@,
1162:fat16.cpp     ****         /* the file stays empty */
1163:fat16.cpp     ****                 break;
 3814              		.loc 1 1163 0 is_stmt 1
 3815 0064 760000EA 		b	.L249	@
 3816              	.L253:
 3817              	.LBB45:
1164:fat16.cpp     ****     
1165:fat16.cpp     ****             /* seek to the next cluster as long as we need the space */
1166:fat16.cpp     ****             while(size_new > cluster_size)
1167:fat16.cpp     ****             {
1168:fat16.cpp     ****                 /* get next cluster of file */
1169:fat16.cpp     ****                 uint16_t cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
 3818              		.loc 1 1169 0
 3819 0068 08309DE5 		ldr	r3, [sp, #8]	@ tmp163, fd
 3820 006c 002093E5 		ldr	r2, [r3, #0]	@ D.11325, fd_6(D)->fs
 3821 0070 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp164, cluster_num
 3822 0074 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3823 0078 0210A0E1 		mov	r1, r2	@, D.11325
 3824 007c 0320A0E1 		mov	r2, r3	@, tmp164
 3825 0080 FEFFFFEB 		bl	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt	@
 3826 0084 0030A0E1 		mov	r3, r0	@ tmp165,
 3827 0088 B231CDE1 		strh	r3, [sp, #18]	@ movhi	@ tmp165, cluster_num_next
1170:fat16.cpp     ****                 if(cluster_num_next)
 3828              		.loc 1 1170 0
 3829 008c B231DDE1 		ldrh	r3, [sp, #18]	@ tmp166, cluster_num_next
 3830 0090 000053E3 		cmp	r3, #0	@ tmp166,
 3831 0094 0E00000A 		beq	.L262	@,
ARM GAS  /tmp/ccNwMSzu.s 			page 90


1171:fat16.cpp     ****                 {
1172:fat16.cpp     ****                     cluster_num = cluster_num_next;
 3832              		.loc 1 1172 0
 3833 0098 B231DDE1 		ldrh	r3, [sp, #18]	@ movhi	@ tmp167, cluster_num_next
 3834 009c BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp167, cluster_num
1173:fat16.cpp     ****                     size_new -= cluster_size;
 3835              		.loc 1 1173 0
 3836 00a0 B431DDE1 		ldrh	r3, [sp, #20]	@ D.11328, cluster_size
 3837 00a4 18209DE5 		ldr	r2, [sp, #24]	@ tmp168, size_new
 3838 00a8 023063E0 		rsb	r3, r3, r2	@ tmp169, D.11328, tmp168
 3839 00ac 18308DE5 		str	r3, [sp, #24]	@ tmp169, size_new
 3840              	.L250:
 3841              	.LBE45:
1166:fat16.cpp     ****             while(size_new > cluster_size)
 3842              		.loc 1 1166 0 discriminator 1
 3843 00b0 B421DDE1 		ldrh	r2, [sp, #20]	@ D.11323, cluster_size
 3844 00b4 18309DE5 		ldr	r3, [sp, #24]	@ tmp171, size_new
 3845 00b8 030052E1 		cmp	r2, r3	@ D.11323, tmp171
 3846 00bc 0030A023 		movcs	r3, #0	@, tmp172
 3847 00c0 0130A033 		movcc	r3, #1	@, tmp172
 3848 00c4 FF3003E2 		and	r3, r3, #255	@ D.11324, tmp170,
 3849 00c8 000053E3 		cmp	r3, #0	@ D.11324,
 3850 00cc E5FFFF1A 		bne	.L253	@,
 3851 00d0 000000EA 		b	.L252	@
 3852              	.L262:
 3853              	.LBB46:
1174:fat16.cpp     ****                 }
1175:fat16.cpp     ****                 else
1176:fat16.cpp     ****                 {
1177:fat16.cpp     ****                     break;
 3854              		.loc 1 1177 0
 3855 00d4 0000A0E1 		mov	r0, r0	@ nop
 3856              	.L252:
 3857              	.LBE46:
 3858              	.LBB47:
1178:fat16.cpp     ****                 }
1179:fat16.cpp     ****             }
1180:fat16.cpp     ****     
1181:fat16.cpp     ****             if(size_new > cluster_size || cluster_num == 0)
 3859              		.loc 1 1181 0
 3860 00d8 B421DDE1 		ldrh	r2, [sp, #20]	@ D.11332, cluster_size
 3861 00dc 18309DE5 		ldr	r3, [sp, #24]	@ tmp173, size_new
 3862 00e0 030052E1 		cmp	r2, r3	@ D.11332, tmp173
 3863 00e4 0200003A 		bcc	.L254	@,
 3864              		.loc 1 1181 0 is_stmt 0 discriminator 1
 3865 00e8 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp174, cluster_num
 3866 00ec 000053E3 		cmp	r3, #0	@ tmp174,
 3867 00f0 2300001A 		bne	.L255	@,
 3868              	.L254:
 3869              	.LBB48:
1182:fat16.cpp     ****             {
1183:fat16.cpp     ****                 /* Allocate new cluster chain and append
1184:fat16.cpp     ****                                                              * it to the existing one, if available
1185:fat16.cpp     ****                                                              */
1186:fat16.cpp     ****                 uint16_t cluster_count = size_new / cluster_size;
 3870              		.loc 1 1186 0 is_stmt 1
 3871 00f4 B431DDE1 		ldrh	r3, [sp, #20]	@ D.11334, cluster_size
ARM GAS  /tmp/ccNwMSzu.s 			page 91


 3872 00f8 18009DE5 		ldr	r0, [sp, #24]	@, size_new
 3873 00fc 0310A0E1 		mov	r1, r3	@, D.11334
 3874 0100 FEFFFFEB 		bl	__aeabi_uidiv	@
 3875 0104 0030A0E1 		mov	r3, r0	@ tmp177,
 3876 0108 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ D.11335, cluster_count
1187:fat16.cpp     ****                 if((uint32_t) cluster_count * cluster_size < size_new)
 3877              		.loc 1 1187 0
 3878 010c B631DDE1 		ldrh	r3, [sp, #22]	@ D.11336, cluster_count
 3879 0110 B421DDE1 		ldrh	r2, [sp, #20]	@ D.11337, cluster_size
 3880 0114 930202E0 		mul	r2, r3, r2	@ D.11338, D.11336, D.11337
 3881 0118 18309DE5 		ldr	r3, [sp, #24]	@ tmp178, size_new
 3882 011c 030052E1 		cmp	r2, r3	@ D.11338, tmp178
 3883 0120 0200002A 		bcs	.L256	@,
1188:fat16.cpp     ****                     ++cluster_count;
 3884              		.loc 1 1188 0
 3885 0124 B631DDE1 		ldrh	r3, [sp, #22]	@ movhi	@ tmp179, cluster_count
 3886 0128 013083E2 		add	r3, r3, #1	@ tmp180, tmp179,
 3887 012c B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp180, cluster_count
 3888              	.L256:
1189:fat16.cpp     ****                 uint16_t cluster_new_chain = fat16_append_clusters(fd->fs, cluster_num, cluster_cou
 3889              		.loc 1 1189 0
 3890 0130 08309DE5 		ldr	r3, [sp, #8]	@ tmp181, fd
 3891 0134 001093E5 		ldr	r1, [r3, #0]	@ D.11342, fd_6(D)->fs
 3892 0138 BE21DDE1 		ldrh	r2, [sp, #30]	@ tmp182, cluster_num
 3893 013c B631DDE1 		ldrh	r3, [sp, #22]	@ tmp183, cluster_count
 3894 0140 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3895 0144 FEFFFFEB 		bl	_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt	@
 3896 0148 0030A0E1 		mov	r3, r0	@ tmp184,
 3897 014c B031CDE1 		strh	r3, [sp, #16]	@ movhi	@ tmp184, cluster_new_chain
1190:fat16.cpp     ****                 if(!cluster_new_chain)
 3898              		.loc 1 1190 0
 3899 0150 B031DDE1 		ldrh	r3, [sp, #16]	@ tmp185, cluster_new_chain
 3900 0154 000053E3 		cmp	r3, #0	@ tmp185,
 3901 0158 0100001A 		bne	.L257	@,
1191:fat16.cpp     ****                     return 0;
 3902              		.loc 1 1191 0
 3903 015c 0030A0E3 		mov	r3, #0	@ D.11312,
 3904 0160 430000EA 		b	.L247	@
 3905              	.L257:
1192:fat16.cpp     ****     
1193:fat16.cpp     ****                 if(!cluster_num)
 3906              		.loc 1 1193 0
 3907 0164 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp186, cluster_num
 3908 0168 000053E3 		cmp	r3, #0	@ tmp186,
 3909 016c 0400001A 		bne	.L255	@,
1194:fat16.cpp     ****                 {
1195:fat16.cpp     ****                     cluster_num = cluster_new_chain;
 3910              		.loc 1 1195 0
 3911 0170 B031DDE1 		ldrh	r3, [sp, #16]	@ movhi	@ tmp187, cluster_new_chain
 3912 0174 BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp187, cluster_num
1196:fat16.cpp     ****                     fd->dir_entry.cluster = cluster_num;
 3913              		.loc 1 1196 0
 3914 0178 08309DE5 		ldr	r3, [sp, #8]	@ tmp188, fd
 3915 017c BE21DDE1 		ldrh	r2, [sp, #30]	@ movhi	@ tmp189, cluster_num
 3916 0180 B622C3E1 		strh	r2, [r3, #38]	@ movhi	@ tmp189, fd_6(D)->dir_entry.cluster
 3917              	.L255:
 3918              	.LBE48:
ARM GAS  /tmp/ccNwMSzu.s 			page 92


 3919              	.LBE47:
1197:fat16.cpp     ****                 }
1198:fat16.cpp     ****             }
1199:fat16.cpp     ****     
1200:fat16.cpp     ****             /* write new directory entry */
1201:fat16.cpp     ****             fd->dir_entry.file_size = size;
 3920              		.loc 1 1201 0
 3921 0184 08309DE5 		ldr	r3, [sp, #8]	@ tmp190, fd
 3922 0188 04209DE5 		ldr	r2, [sp, #4]	@ tmp191, size
 3923 018c 282083E5 		str	r2, [r3, #40]	@ tmp191, fd_6(D)->dir_entry.file_size
1202:fat16.cpp     ****             if(size == 0)
 3924              		.loc 1 1202 0
 3925 0190 04309DE5 		ldr	r3, [sp, #4]	@ tmp192, size
 3926 0194 000053E3 		cmp	r3, #0	@ tmp192,
 3927 0198 0200001A 		bne	.L258	@,
1203:fat16.cpp     ****                 fd->dir_entry.cluster = 0;
 3928              		.loc 1 1203 0
 3929 019c 08309DE5 		ldr	r3, [sp, #8]	@ tmp193, fd
 3930 01a0 0020A0E3 		mov	r2, #0	@ tmp195,
 3931 01a4 B622C3E1 		strh	r2, [r3, #38]	@ movhi	@ tmp194, fd_6(D)->dir_entry.cluster
 3932              	.L258:
1204:fat16.cpp     ****             if(!fat16_write_dir_entry(fd->fs, &fd->dir_entry))
 3933              		.loc 1 1204 0
 3934 01a8 08309DE5 		ldr	r3, [sp, #8]	@ tmp196, fd
 3935 01ac 002093E5 		ldr	r2, [r3, #0]	@ D.11352, fd_6(D)->fs
 3936 01b0 08309DE5 		ldr	r3, [sp, #8]	@ tmp197, fd
 3937 01b4 043083E2 		add	r3, r3, #4	@ D.11353, tmp197,
 3938 01b8 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3939 01bc 0210A0E1 		mov	r1, r2	@, D.11352
 3940 01c0 0320A0E1 		mov	r2, r3	@, D.11353
 3941 01c4 FEFFFFEB 		bl	_ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE	@
 3942 01c8 0030A0E1 		mov	r3, r0	@ tmp198,
 3943 01cc 000053E3 		cmp	r3, #0	@ D.11354,
 3944 01d0 0030A013 		movne	r3, #0	@, tmp200
 3945 01d4 0130A003 		moveq	r3, #1	@, tmp200
 3946 01d8 FF3003E2 		and	r3, r3, #255	@ retval.22, tmp199,
 3947 01dc 000053E3 		cmp	r3, #0	@ retval.22,
 3948 01e0 0100000A 		beq	.L259	@,
1205:fat16.cpp     ****                 return 0;
 3949              		.loc 1 1205 0
 3950 01e4 0030A0E3 		mov	r3, #0	@ D.11312,
 3951 01e8 210000EA 		b	.L247	@
 3952              	.L259:
1206:fat16.cpp     ****     
1207:fat16.cpp     ****             if(size == 0)
 3953              		.loc 1 1207 0
 3954 01ec 04309DE5 		ldr	r3, [sp, #4]	@ tmp201, size
 3955 01f0 000053E3 		cmp	r3, #0	@ tmp201,
 3956 01f4 0700001A 		bne	.L260	@,
1208:fat16.cpp     ****             {
1209:fat16.cpp     ****                 /* free all clusters of file */
1210:fat16.cpp     ****                 fat16_free_clusters(fd->fs, cluster_num);
 3957              		.loc 1 1210 0
 3958 01f8 08309DE5 		ldr	r3, [sp, #8]	@ tmp202, fd
 3959 01fc 002093E5 		ldr	r2, [r3, #0]	@ D.11359, fd_6(D)->fs
 3960 0200 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp203, cluster_num
 3961 0204 0C009DE5 		ldr	r0, [sp, #12]	@, this
ARM GAS  /tmp/ccNwMSzu.s 			page 93


 3962 0208 0210A0E1 		mov	r1, r2	@, D.11359
 3963 020c 0320A0E1 		mov	r2, r3	@, tmp203
 3964 0210 FEFFFFEB 		bl	_ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt	@
 3965 0214 0A0000EA 		b	.L249	@
 3966              	.L260:
1211:fat16.cpp     ****             }
1212:fat16.cpp     ****             else if(size_new <= cluster_size)
 3967              		.loc 1 1212 0
 3968 0218 B421DDE1 		ldrh	r2, [sp, #20]	@ D.11361, cluster_size
 3969 021c 18309DE5 		ldr	r3, [sp, #24]	@ tmp204, size_new
 3970 0220 030052E1 		cmp	r2, r3	@ D.11361, tmp204
 3971 0224 0600003A 		bcc	.L249	@,
1213:fat16.cpp     ****             {
1214:fat16.cpp     ****                 /* free all clusters no longer needed */
1215:fat16.cpp     ****                 fat16_terminate_clusters(fd->fs, cluster_num);
 3972              		.loc 1 1215 0
 3973 0228 08309DE5 		ldr	r3, [sp, #8]	@ tmp205, fd
 3974 022c 002093E5 		ldr	r2, [r3, #0]	@ D.11364, fd_6(D)->fs
 3975 0230 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp206, cluster_num
 3976 0234 0C009DE5 		ldr	r0, [sp, #12]	@, this
 3977 0238 0210A0E1 		mov	r1, r2	@, D.11364
 3978 023c 0320A0E1 		mov	r2, r3	@, tmp206
 3979 0240 FEFFFFEB 		bl	_ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs_structEt	@
 3980              	.L249:
 3981              	.LBE44:
1216:fat16.cpp     ****             }
1217:fat16.cpp     ****     
1218:fat16.cpp     ****         }
1219:fat16.cpp     ****         while(0);
1220:fat16.cpp     ****     
1221:fat16.cpp     ****         /* correct file position */
1222:fat16.cpp     ****         if(size < fd->pos)
 3982              		.loc 1 1222 0
 3983 0244 08309DE5 		ldr	r3, [sp, #8]	@ tmp207, fd
 3984 0248 302093E5 		ldr	r2, [r3, #48]	@ D.11366, fd_6(D)->pos
 3985 024c 04309DE5 		ldr	r3, [sp, #4]	@ tmp208, size
 3986 0250 030052E1 		cmp	r2, r3	@ D.11366, tmp208
 3987 0254 0500009A 		bls	.L261	@,
1223:fat16.cpp     ****         {
1224:fat16.cpp     ****             fd->pos = size;
 3988              		.loc 1 1224 0
 3989 0258 08309DE5 		ldr	r3, [sp, #8]	@ tmp209, fd
 3990 025c 04209DE5 		ldr	r2, [sp, #4]	@ tmp210, size
 3991 0260 302083E5 		str	r2, [r3, #48]	@ tmp210, fd_6(D)->pos
1225:fat16.cpp     ****             fd->pos_cluster = 0;
 3992              		.loc 1 1225 0
 3993 0264 08309DE5 		ldr	r3, [sp, #8]	@ tmp211, fd
 3994 0268 0020A0E3 		mov	r2, #0	@ tmp213,
 3995 026c B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp212, fd_6(D)->pos_cluster
 3996              	.L261:
1226:fat16.cpp     ****         }
1227:fat16.cpp     ****     
1228:fat16.cpp     ****         return 1;
 3997              		.loc 1 1228 0
 3998 0270 0130A0E3 		mov	r3, #1	@ D.11312,
 3999              	.L247:
 4000              	.LBE43:
ARM GAS  /tmp/ccNwMSzu.s 			page 94


1229:fat16.cpp     ****     #else
1230:fat16.cpp     ****         return 0;
1231:fat16.cpp     ****     #endif
1232:fat16.cpp     **** }
 4001              		.loc 1 1232 0
 4002 0274 0300A0E1 		mov	r0, r3	@, <retval>
 4003 0278 24D08DE2 		add	sp, sp, #36	@,,
 4004 027c 04E09DE4 		ldr	lr, [sp], #4
 4005 0280 1EFF2FE1 		bx	lr
 4006              		.cfi_endproc
 4007              	.LFE128:
 4008              		.size	_ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_structEm, .-_ZN5FAT1617fat16_resize_fileEPNS_1
 4009              		.section	.text._ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE,"ax"
 4010              		.align	2
 4011              		.global	_ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE
 4012              		.type	_ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE, %function
 4013              	_ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:
 4014              	.LFB129:
1233:fat16.cpp     **** 
1234:fat16.cpp     **** /**
1235:fat16.cpp     ****  * \ingroup fat16_dir
1236:fat16.cpp     ****  * Opens a directory.
1237:fat16.cpp     ****  *
1238:fat16.cpp     ****  * \param[in] fs The filesystem on which the directory to open resides.
1239:fat16.cpp     ****  * \param[in] dir_entry The directory entry which stands for the directory to open.
1240:fat16.cpp     ****  * \returns An opaque directory descriptor on success, 0 on failure.
1241:fat16.cpp     ****  * \see fat16_close_dir
1242:fat16.cpp     ****  */
1243:fat16.cpp     **** FAT16::fat16_dir_struct* FAT16::fat16_open_dir(struct fat16_fs_struct* fs, const struct fat16_dir_e
1244:fat16.cpp     **** {
 4015              		.loc 1 1244 0
 4016              		.cfi_startproc
 4017              		@ Function supports interworking.
 4018              		@ args = 0, pretend = 0, frame = 24
 4019              		@ frame_needed = 0, uses_anonymous_args = 0
 4020 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 4021              	.LCFI36:
 4022              		.cfi_def_cfa_offset 4
 4023 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 4024              	.LCFI37:
 4025              		.cfi_def_cfa_offset 32
 4026 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 4027 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 4028 0010 04208DE5 		str	r2, [sp, #4]	@ dir_entry, dir_entry
 4029              	.LBB49:
1245:fat16.cpp     ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT16_ATTRIB_DIR))
 4030              		.loc 1 1245 0
 4031 0014 08309DE5 		ldr	r3, [sp, #8]	@ tmp140, fs
 4032 0018 000053E3 		cmp	r3, #0	@ tmp140,
 4033 001c 0700000A 		beq	.L264	@,
 4034              		.cfi_offset 14, -4
 4035              		.loc 1 1245 0 is_stmt 0 discriminator 1
 4036 0020 04309DE5 		ldr	r3, [sp, #4]	@ tmp141, dir_entry
 4037 0024 000053E3 		cmp	r3, #0	@ tmp141,
 4038 0028 0400000A 		beq	.L264	@,
 4039              		.loc 1 1245 0 discriminator 2
 4040 002c 04309DE5 		ldr	r3, [sp, #4]	@ tmp142, dir_entry
ARM GAS  /tmp/ccNwMSzu.s 			page 95


 4041 0030 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.11301, dir_entry_3(D)->attributes
 4042 0034 103003E2 		and	r3, r3, #16	@ D.11303, D.11302,
 4043 0038 000053E3 		cmp	r3, #0	@ D.11303,
 4044 003c 0100001A 		bne	.L265	@,
 4045              	.L264:
1246:fat16.cpp     ****         return 0;
 4046              		.loc 1 1246 0 is_stmt 1
 4047 0040 0030A0E3 		mov	r3, #0	@ D.11304,
 4048 0044 150000EA 		b	.L266	@
 4049              	.L265:
1247:fat16.cpp     **** 
1248:fat16.cpp     ****     struct fat16_dir_struct* dd = (fat16_dir_struct*)malloc(sizeof(*dd));
 4050              		.loc 1 1248 0
 4051 0048 3400A0E3 		mov	r0, #52	@,
 4052 004c FEFFFFEB 		bl	malloc	@
 4053 0050 0030A0E1 		mov	r3, r0	@ tmp143,
 4054 0054 14308DE5 		str	r3, [sp, #20]	@ D.11305, dd
1249:fat16.cpp     ****     if(!dd)
 4055              		.loc 1 1249 0
 4056 0058 14309DE5 		ldr	r3, [sp, #20]	@ tmp144, dd
 4057 005c 000053E3 		cmp	r3, #0	@ tmp144,
 4058 0060 0100001A 		bne	.L267	@,
1250:fat16.cpp     ****         return 0;
 4059              		.loc 1 1250 0
 4060 0064 0030A0E3 		mov	r3, #0	@ D.11304,
 4061 0068 0C0000EA 		b	.L266	@
 4062              	.L267:
1251:fat16.cpp     **** 
1252:fat16.cpp     ****     memcpy(&dd->dir_entry, dir_entry, sizeof(*dir_entry));
 4063              		.loc 1 1252 0
 4064 006c 14309DE5 		ldr	r3, [sp, #20]	@ tmp145, dd
 4065 0070 043083E2 		add	r3, r3, #4	@ D.11308, tmp145,
 4066 0074 0300A0E1 		mov	r0, r3	@, D.11308
 4067 0078 04109DE5 		ldr	r1, [sp, #4]	@, dir_entry
 4068 007c 2C20A0E3 		mov	r2, #44	@,
 4069 0080 FEFFFFEB 		bl	memcpy	@
1253:fat16.cpp     ****     dd->fs = fs;
 4070              		.loc 1 1253 0
 4071 0084 14309DE5 		ldr	r3, [sp, #20]	@ tmp146, dd
 4072 0088 08209DE5 		ldr	r2, [sp, #8]	@ tmp147, fs
 4073 008c 002083E5 		str	r2, [r3, #0]	@ tmp147, dd_8->fs
1254:fat16.cpp     ****     dd->entry_next = 0;
 4074              		.loc 1 1254 0
 4075 0090 14309DE5 		ldr	r3, [sp, #20]	@ tmp148, dd
 4076 0094 0020A0E3 		mov	r2, #0	@ tmp150,
 4077 0098 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ tmp149, dd_8->entry_next
1255:fat16.cpp     **** 
1256:fat16.cpp     ****     return dd;
 4078              		.loc 1 1256 0
 4079 009c 14309DE5 		ldr	r3, [sp, #20]	@ D.11304, dd
 4080              	.L266:
 4081              	.LBE49:
1257:fat16.cpp     **** }
 4082              		.loc 1 1257 0
 4083 00a0 0300A0E1 		mov	r0, r3	@, <retval>
 4084 00a4 1CD08DE2 		add	sp, sp, #28	@,,
 4085 00a8 04E09DE4 		ldr	lr, [sp], #4
ARM GAS  /tmp/ccNwMSzu.s 			page 96


 4086 00ac 1EFF2FE1 		bx	lr
 4087              		.cfi_endproc
 4088              	.LFE129:
 4089              		.size	_ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE, .-_ZN5FAT161
 4090              		.section	.text._ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE,"ax",%progbits
 4091              		.align	2
 4092              		.global	_ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE
 4093              		.type	_ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE, %function
 4094              	_ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE:
 4095              	.LFB130:
1258:fat16.cpp     **** 
1259:fat16.cpp     **** /**
1260:fat16.cpp     ****  * \ingroup fat16_dir
1261:fat16.cpp     ****  * Closes a directory descriptor.
1262:fat16.cpp     ****  *
1263:fat16.cpp     ****  * This function destroys a directory descriptor which was
1264:fat16.cpp     ****  * previously obtained by calling fat16_open_dir(). When this
1265:fat16.cpp     ****  * function returns, the given descriptor will be invalid.
1266:fat16.cpp     ****  *
1267:fat16.cpp     ****  * \param[in] dd The directory descriptor to close.
1268:fat16.cpp     ****  * \see fat16_open_dir
1269:fat16.cpp     ****  */
1270:fat16.cpp     **** void FAT16::fat16_close_dir(struct fat16_dir_struct* dd)
1271:fat16.cpp     **** {
 4096              		.loc 1 1271 0
 4097              		.cfi_startproc
 4098              		@ Function supports interworking.
 4099              		@ args = 0, pretend = 0, frame = 8
 4100              		@ frame_needed = 0, uses_anonymous_args = 0
 4101 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 4102              	.LCFI38:
 4103              		.cfi_def_cfa_offset 4
 4104 0004 0CD04DE2 		sub	sp, sp, #12	@,,
 4105              	.LCFI39:
 4106              		.cfi_def_cfa_offset 16
 4107 0008 04008DE5 		str	r0, [sp, #4]	@ this, this
 4108 000c 00108DE5 		str	r1, [sp, #0]	@ dd, dd
1272:fat16.cpp     ****     if(dd)
 4109              		.loc 1 1272 0
 4110 0010 00309DE5 		ldr	r3, [sp, #0]	@ tmp133, dd
 4111 0014 000053E3 		cmp	r3, #0	@ tmp133,
 4112 0018 0100000A 		beq	.L268	@,
 4113              		.cfi_offset 14, -4
1273:fat16.cpp     ****         free(dd);
 4114              		.loc 1 1273 0
 4115 001c 00009DE5 		ldr	r0, [sp, #0]	@, dd
 4116 0020 FEFFFFEB 		bl	free	@
 4117              	.L268:
1274:fat16.cpp     **** }
 4118              		.loc 1 1274 0
 4119 0024 0CD08DE2 		add	sp, sp, #12	@,,
 4120 0028 04E09DE4 		ldr	lr, [sp], #4
 4121 002c 1EFF2FE1 		bx	lr
 4122              		.cfi_endproc
 4123              	.LFE130:
 4124              		.size	_ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE, .-_ZN5FAT1615fat16_close_dirEPNS_16fat16
 4125              		.section	.text._ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE,"ax"
ARM GAS  /tmp/ccNwMSzu.s 			page 97


 4126              		.align	2
 4127              		.global	_ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE
 4128              		.type	_ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE, %function
 4129              	_ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE:
 4130              	.LFB131:
1275:fat16.cpp     **** 
1276:fat16.cpp     **** /**
1277:fat16.cpp     ****  * \ingroup fat16_dir
1278:fat16.cpp     ****  * Reads the next directory entry contained within a parent directory.
1279:fat16.cpp     ****  *
1280:fat16.cpp     ****  * \param[in] dd The descriptor of the parent directory from which to read the entry.
1281:fat16.cpp     ****  * \param[out] dir_entry Pointer to a buffer into which to write the directory entry information.
1282:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1283:fat16.cpp     ****  * \see fat16_reset_dir
1284:fat16.cpp     ****  */
1285:fat16.cpp     **** uint8_t FAT16::fat16_read_dir(struct fat16_dir_struct* dd, struct fat16_dir_entry_struct* dir_entry
1286:fat16.cpp     **** {
 4131              		.loc 1 1286 0
 4132              		.cfi_startproc
 4133              		@ Function supports interworking.
 4134              		@ args = 0, pretend = 0, frame = 16
 4135              		@ frame_needed = 0, uses_anonymous_args = 0
 4136 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 4137              	.LCFI40:
 4138              		.cfi_def_cfa_offset 4
 4139 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 4140              	.LCFI41:
 4141              		.cfi_def_cfa_offset 32
 4142 0008 14008DE5 		str	r0, [sp, #20]	@ this, this
 4143 000c 10108DE5 		str	r1, [sp, #16]	@ dd, dd
 4144 0010 0C208DE5 		str	r2, [sp, #12]	@ dir_entry, dir_entry
1287:fat16.cpp     ****     if(!dd || !dir_entry)
 4145              		.loc 1 1287 0
 4146 0014 10309DE5 		ldr	r3, [sp, #16]	@ tmp149, dd
 4147 0018 000053E3 		cmp	r3, #0	@ tmp149,
 4148 001c 0200000A 		beq	.L271	@,
 4149              		.cfi_offset 14, -4
 4150              		.loc 1 1287 0 is_stmt 0 discriminator 1
 4151 0020 0C309DE5 		ldr	r3, [sp, #12]	@ tmp150, dir_entry
 4152 0024 000053E3 		cmp	r3, #0	@ tmp150,
 4153 0028 0100001A 		bne	.L272	@,
 4154              	.L271:
1288:fat16.cpp     ****         return 0;
 4155              		.loc 1 1288 0 is_stmt 1
 4156 002c 0030A0E3 		mov	r3, #0	@ D.11271,
 4157 0030 3A0000EA 		b	.L273	@
 4158              	.L272:
1289:fat16.cpp     **** 
1290:fat16.cpp     ****     if(dd->dir_entry.cluster == 0)
 4159              		.loc 1 1290 0
 4160 0034 10309DE5 		ldr	r3, [sp, #16]	@ tmp151, dd
 4161 0038 B632D3E1 		ldrh	r3, [r3, #38]	@ D.11272, dd_2(D)->dir_entry.cluster
 4162 003c 000053E3 		cmp	r3, #0	@ D.11272,
 4163 0040 1800001A 		bne	.L274	@,
1291:fat16.cpp     ****     {
1292:fat16.cpp     ****         /* read entry from root directory */
1293:fat16.cpp     ****         if(fat16_read_root_dir_entry(dd->fs, dd->entry_next, dir_entry))
ARM GAS  /tmp/ccNwMSzu.s 			page 98


 4164              		.loc 1 1293 0
 4165 0044 10309DE5 		ldr	r3, [sp, #16]	@ tmp152, dd
 4166 0048 002093E5 		ldr	r2, [r3, #0]	@ D.11276, dd_2(D)->fs
 4167 004c 10309DE5 		ldr	r3, [sp, #16]	@ tmp153, dd
 4168 0050 B033D3E1 		ldrh	r3, [r3, #48]	@ D.11277, dd_2(D)->entry_next
 4169 0054 14009DE5 		ldr	r0, [sp, #20]	@, this
 4170 0058 0210A0E1 		mov	r1, r2	@, D.11276
 4171 005c 0320A0E1 		mov	r2, r3	@, D.11277
 4172 0060 0C309DE5 		ldr	r3, [sp, #12]	@, dir_entry
 4173 0064 FEFFFFEB 		bl	_ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_structE	@
 4174 0068 0030A0E1 		mov	r3, r0	@ tmp154,
 4175 006c 000053E3 		cmp	r3, #0	@ D.11278,
 4176 0070 0030A003 		moveq	r3, #0	@, tmp156
 4177 0074 0130A013 		movne	r3, #1	@, tmp156
 4178 0078 FF3003E2 		and	r3, r3, #255	@ retval.20, tmp155,
 4179 007c 000053E3 		cmp	r3, #0	@ retval.20,
 4180 0080 2200000A 		beq	.L275	@,
1294:fat16.cpp     ****         {
1295:fat16.cpp     ****             ++dd->entry_next;
 4181              		.loc 1 1295 0
 4182 0084 10309DE5 		ldr	r3, [sp, #16]	@ tmp157, dd
 4183 0088 B033D3E1 		ldrh	r3, [r3, #48]	@ D.11281, dd_2(D)->entry_next
 4184 008c 013083E2 		add	r3, r3, #1	@ tmp158, D.11281,
 4185 0090 0338A0E1 		mov	r3, r3, asl #16	@ tmp159, tmp158,
 4186 0094 2328A0E1 		mov	r2, r3, lsr #16	@ D.11282, tmp159,
 4187 0098 10309DE5 		ldr	r3, [sp, #16]	@ tmp160, dd
 4188 009c B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ D.11282, dd_2(D)->entry_next
1296:fat16.cpp     ****             return 1;
 4189              		.loc 1 1296 0
 4190 00a0 0130A0E3 		mov	r3, #1	@ D.11271,
 4191 00a4 1D0000EA 		b	.L273	@
 4192              	.L274:
1297:fat16.cpp     ****         }
1298:fat16.cpp     ****     }
1299:fat16.cpp     ****     else
1300:fat16.cpp     ****     {
1301:fat16.cpp     ****         /* read entry from a subdirectory */
1302:fat16.cpp     ****         if(fat16_read_sub_dir_entry(dd->fs, dd->entry_next, &dd->dir_entry, dir_entry))
 4193              		.loc 1 1302 0
 4194 00a8 10309DE5 		ldr	r3, [sp, #16]	@ tmp161, dd
 4195 00ac 001093E5 		ldr	r1, [r3, #0]	@ D.11285, dd_2(D)->fs
 4196 00b0 10309DE5 		ldr	r3, [sp, #16]	@ tmp162, dd
 4197 00b4 B023D3E1 		ldrh	r2, [r3, #48]	@ D.11286, dd_2(D)->entry_next
 4198 00b8 10309DE5 		ldr	r3, [sp, #16]	@ tmp163, dd
 4199 00bc 043083E2 		add	r3, r3, #4	@ D.11287, tmp163,
 4200 00c0 0C009DE5 		ldr	r0, [sp, #12]	@ tmp164, dir_entry
 4201 00c4 00008DE5 		str	r0, [sp, #0]	@ tmp164,
 4202 00c8 14009DE5 		ldr	r0, [sp, #20]	@, this
 4203 00cc FEFFFFEB 		bl	_ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_structEPS3_	
 4204 00d0 0030A0E1 		mov	r3, r0	@ tmp165,
 4205 00d4 000053E3 		cmp	r3, #0	@ D.11288,
 4206 00d8 0030A003 		moveq	r3, #0	@, tmp167
 4207 00dc 0130A013 		movne	r3, #1	@, tmp167
 4208 00e0 FF3003E2 		and	r3, r3, #255	@ retval.21, tmp166,
 4209 00e4 000053E3 		cmp	r3, #0	@ retval.21,
 4210 00e8 0800000A 		beq	.L275	@,
1303:fat16.cpp     ****         {
ARM GAS  /tmp/ccNwMSzu.s 			page 99


1304:fat16.cpp     ****             ++dd->entry_next;
 4211              		.loc 1 1304 0
 4212 00ec 10309DE5 		ldr	r3, [sp, #16]	@ tmp168, dd
 4213 00f0 B033D3E1 		ldrh	r3, [r3, #48]	@ D.11291, dd_2(D)->entry_next
 4214 00f4 013083E2 		add	r3, r3, #1	@ tmp169, D.11291,
 4215 00f8 0338A0E1 		mov	r3, r3, asl #16	@ tmp170, tmp169,
 4216 00fc 2328A0E1 		mov	r2, r3, lsr #16	@ D.11292, tmp170,
 4217 0100 10309DE5 		ldr	r3, [sp, #16]	@ tmp171, dd
 4218 0104 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ D.11292, dd_2(D)->entry_next
1305:fat16.cpp     ****             return 1;
 4219              		.loc 1 1305 0
 4220 0108 0130A0E3 		mov	r3, #1	@ D.11271,
 4221 010c 030000EA 		b	.L273	@
 4222              	.L275:
1306:fat16.cpp     ****         }
1307:fat16.cpp     ****     }
1308:fat16.cpp     **** 
1309:fat16.cpp     ****     /* restart reading */
1310:fat16.cpp     ****     dd->entry_next = 0;
 4223              		.loc 1 1310 0
 4224 0110 10309DE5 		ldr	r3, [sp, #16]	@ tmp172, dd
 4225 0114 0020A0E3 		mov	r2, #0	@ tmp174,
 4226 0118 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ tmp173, dd_2(D)->entry_next
1311:fat16.cpp     **** 
1312:fat16.cpp     ****     return 0;
 4227              		.loc 1 1312 0
 4228 011c 0030A0E3 		mov	r3, #0	@ D.11271,
 4229              	.L273:
1313:fat16.cpp     **** }
 4230              		.loc 1 1313 0
 4231 0120 0300A0E1 		mov	r0, r3	@, <retval>
 4232 0124 1CD08DE2 		add	sp, sp, #28	@,,
 4233 0128 04E09DE4 		ldr	lr, [sp], #4
 4234 012c 1EFF2FE1 		bx	lr
 4235              		.cfi_endproc
 4236              	.LFE131:
 4237              		.size	_ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE, .-_ZN5FAT161
 4238              		.section	.text._ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE,"ax",%progbits
 4239              		.align	2
 4240              		.global	_ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE
 4241              		.type	_ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE, %function
 4242              	_ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE:
 4243              	.LFB132:
1314:fat16.cpp     **** 
1315:fat16.cpp     **** /**
1316:fat16.cpp     ****  * \ingroup fat16_dir
1317:fat16.cpp     ****  * Resets a directory handle.
1318:fat16.cpp     ****  *
1319:fat16.cpp     ****  * Resets the directory handle such that reading restarts
1320:fat16.cpp     ****  * with the first directory entry.
1321:fat16.cpp     ****  *
1322:fat16.cpp     ****  * \param[in] dd The directory handle to reset.
1323:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1324:fat16.cpp     ****  * \see fat16_read_dir
1325:fat16.cpp     ****  */
1326:fat16.cpp     **** uint8_t FAT16::fat16_reset_dir(struct fat16_dir_struct* dd)
1327:fat16.cpp     **** {
ARM GAS  /tmp/ccNwMSzu.s 			page 100


 4244              		.loc 1 1327 0
 4245              		.cfi_startproc
 4246              		@ Function supports interworking.
 4247              		@ args = 0, pretend = 0, frame = 8
 4248              		@ frame_needed = 0, uses_anonymous_args = 0
 4249              		@ link register save eliminated.
 4250 0000 08D04DE2 		sub	sp, sp, #8	@,,
 4251              	.LCFI42:
 4252              		.cfi_def_cfa_offset 8
 4253 0004 04008DE5 		str	r0, [sp, #4]	@ this, this
 4254 0008 00108DE5 		str	r1, [sp, #0]	@ dd, dd
1328:fat16.cpp     ****     if(!dd)
 4255              		.loc 1 1328 0
 4256 000c 00309DE5 		ldr	r3, [sp, #0]	@ tmp135, dd
 4257 0010 000053E3 		cmp	r3, #0	@ tmp135,
 4258 0014 0100001A 		bne	.L277	@,
1329:fat16.cpp     ****         return 0;
 4259              		.loc 1 1329 0
 4260 0018 0030A0E3 		mov	r3, #0	@ D.11266,
 4261 001c 030000EA 		b	.L278	@
 4262              	.L277:
1330:fat16.cpp     **** 
1331:fat16.cpp     ****     dd->entry_next = 0;
 4263              		.loc 1 1331 0
 4264 0020 00309DE5 		ldr	r3, [sp, #0]	@ tmp136, dd
 4265 0024 0020A0E3 		mov	r2, #0	@ tmp138,
 4266 0028 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ tmp137, dd_2(D)->entry_next
1332:fat16.cpp     ****     return 1;
 4267              		.loc 1 1332 0
 4268 002c 0130A0E3 		mov	r3, #1	@ D.11266,
 4269              	.L278:
1333:fat16.cpp     **** }
 4270              		.loc 1 1333 0
 4271 0030 0300A0E1 		mov	r0, r3	@, <retval>
 4272 0034 08D08DE2 		add	sp, sp, #8	@,,
 4273 0038 1EFF2FE1 		bx	lr
 4274              		.cfi_endproc
 4275              	.LFE132:
 4276              		.size	_ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE, .-_ZN5FAT1615fat16_reset_dirEPNS_16fat16
 4277              		.section	.text._ZN5FAT1613fat16_set_dirEPNS_16fat16_dir_structEt,"ax",%progbits
 4278              		.align	2
 4279              		.global	_ZN5FAT1613fat16_set_dirEPNS_16fat16_dir_structEt
 4280              		.type	_ZN5FAT1613fat16_set_dirEPNS_16fat16_dir_structEt, %function
 4281              	_ZN5FAT1613fat16_set_dirEPNS_16fat16_dir_structEt:
 4282              	.LFB133:
1334:fat16.cpp     **** 
1335:fat16.cpp     **** uint8_t FAT16::fat16_set_dir(struct fat16_dir_struct* dd, uint16_t offset)
1336:fat16.cpp     **** {
 4283              		.loc 1 1336 0
 4284              		.cfi_startproc
 4285              		@ Function supports interworking.
 4286              		@ args = 0, pretend = 0, frame = 16
 4287              		@ frame_needed = 0, uses_anonymous_args = 0
 4288              		@ link register save eliminated.
 4289 0000 10D04DE2 		sub	sp, sp, #16	@,,
 4290              	.LCFI43:
 4291              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccNwMSzu.s 			page 101


 4292 0004 0C008DE5 		str	r0, [sp, #12]	@ this, this
 4293 0008 08108DE5 		str	r1, [sp, #8]	@ dd, dd
 4294 000c 0230A0E1 		mov	r3, r2	@ tmp135, offset
 4295 0010 B630CDE1 		strh	r3, [sp, #6]	@ movhi	@ tmp135, offset
1337:fat16.cpp     ****     if(!dd)
 4296              		.loc 1 1337 0
 4297 0014 08309DE5 		ldr	r3, [sp, #8]	@ tmp136, dd
 4298 0018 000053E3 		cmp	r3, #0	@ tmp136,
 4299 001c 0100001A 		bne	.L280	@,
1338:fat16.cpp     ****         return 0;
 4300              		.loc 1 1338 0
 4301 0020 0030A0E3 		mov	r3, #0	@ D.11262,
 4302 0024 030000EA 		b	.L281	@
 4303              	.L280:
1339:fat16.cpp     **** 
1340:fat16.cpp     ****     dd->entry_next = offset;
 4304              		.loc 1 1340 0
 4305 0028 08309DE5 		ldr	r3, [sp, #8]	@ tmp137, dd
 4306 002c B620DDE1 		ldrh	r2, [sp, #6]	@ movhi	@ tmp138, offset
 4307 0030 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ tmp138, dd_2(D)->entry_next
1341:fat16.cpp     ****     return 1;
 4308              		.loc 1 1341 0
 4309 0034 0130A0E3 		mov	r3, #1	@ D.11262,
 4310              	.L281:
1342:fat16.cpp     **** }
 4311              		.loc 1 1342 0
 4312 0038 0300A0E1 		mov	r0, r3	@, <retval>
 4313 003c 10D08DE2 		add	sp, sp, #16	@,,
 4314 0040 1EFF2FE1 		bx	lr
 4315              		.cfi_endproc
 4316              	.LFE133:
 4317              		.size	_ZN5FAT1613fat16_set_dirEPNS_16fat16_dir_structEt, .-_ZN5FAT1613fat16_set_dirEPNS_16fat16_di
 4318              		.section	.text._ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_stru
 4319              		.align	2
 4320              		.global	_ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE
 4321              		.type	_ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE, %fun
 4322              	_ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:
 4323              	.LFB134:
1343:fat16.cpp     **** 
1344:fat16.cpp     **** /**
1345:fat16.cpp     ****  * \ingroup fat16_fs
1346:fat16.cpp     ****  * Writes a directory entry to disk.
1347:fat16.cpp     ****  *
1348:fat16.cpp     ****  * \note The file name is not checked for invalid characters.
1349:fat16.cpp     ****  *
1350:fat16.cpp     ****  * \note The generation of the short 8.3 file name is quite
1351:fat16.cpp     ****  * simple. The first eight characters are used for the filename.
1352:fat16.cpp     ****  * The extension, if any, is made up of the first three characters
1353:fat16.cpp     ****  * following the last dot within the long filename. If the
1354:fat16.cpp     ****  * filename (without the extension) is longer than eight characters,
1355:fat16.cpp     ****  * the lower byte of the cluster number replaces the last two
1356:fat16.cpp     ****  * characters to avoid name clashes. In any other case, it is your
1357:fat16.cpp     ****  * responsibility to avoid name clashes.
1358:fat16.cpp     ****  *
1359:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
1360:fat16.cpp     ****  * \param[in] dir_entry The directory entry to write.
1361:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
ARM GAS  /tmp/ccNwMSzu.s 			page 102


1362:fat16.cpp     ****  */
1363:fat16.cpp     **** uint8_t FAT16::fat16_write_dir_entry(const struct fat16_fs_struct* fs, const struct fat16_dir_entry
1364:fat16.cpp     **** {
 4324              		.loc 1 1364 0
 4325              		.cfi_startproc
 4326              		@ Function supports interworking.
 4327              		@ args = 0, pretend = 0, frame = 88
 4328              		@ frame_needed = 0, uses_anonymous_args = 0
 4329 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 4330              	.LCFI44:
 4331              		.cfi_def_cfa_offset 4
 4332 0004 5CD04DE2 		sub	sp, sp, #92	@,,
 4333              	.LCFI45:
 4334              		.cfi_def_cfa_offset 96
 4335 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 4336 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 4337 0010 04208DE5 		str	r2, [sp, #4]	@ dir_entry, dir_entry
 4338              	.LBB50:
1365:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
1366:fat16.cpp     ****         if(!fs || !dir_entry)
 4339              		.loc 1 1366 0
 4340 0014 08309DE5 		ldr	r3, [sp, #8]	@ tmp243, fs
 4341 0018 000053E3 		cmp	r3, #0	@ tmp243,
 4342 001c 0200000A 		beq	.L283	@,
 4343              		.cfi_offset 14, -4
 4344              		.loc 1 1366 0 is_stmt 0 discriminator 1
 4345 0020 04309DE5 		ldr	r3, [sp, #4]	@ tmp244, dir_entry
 4346 0024 000053E3 		cmp	r3, #0	@ tmp244,
 4347 0028 0100001A 		bne	.L284	@,
 4348              	.L283:
1367:fat16.cpp     ****             return 0;
 4349              		.loc 1 1367 0 is_stmt 1
 4350 002c 0030A0E3 		mov	r3, #0	@ D.11109,
 4351 0030 6E0100EA 		b	.L285	@
 4352              	.L284:
1368:fat16.cpp     ****     
1369:fat16.cpp     ****         device_write_t device_write = fs->partition->device_write;
 4353              		.loc 1 1369 0
 4354 0034 08309DE5 		ldr	r3, [sp, #8]	@ tmp245, fs
 4355 0038 002093E5 		ldr	r2, [r3, #0]	@ D.11110, fs_15(D)->partition
 4356 003c 34308DE2 		add	r3, sp, #52	@ tmp246,,
 4357 0040 102082E2 		add	r2, r2, #16	@ tmp247, D.11110,
 4358 0044 030092E8 		ldmia	r2, {r0, r1}	@ tmp247,,
 4359 0048 030083E8 		stmia	r3, {r0, r1}	@ tmp246,,
1370:fat16.cpp     ****         uint32_t offset = dir_entry->entry_offset;
 4360              		.loc 1 1370 0
 4361 004c 04309DE5 		ldr	r3, [sp, #4]	@ tmp248, dir_entry
 4362 0050 283093E5 		ldr	r3, [r3, #40]	@ tmp249, dir_entry_16(D)->entry_offset
 4363 0054 54308DE5 		str	r3, [sp, #84]	@ tmp249, offset
1371:fat16.cpp     ****         uint8_t name_len = strlen(dir_entry->long_name);
 4364              		.loc 1 1371 0
 4365 0058 04309DE5 		ldr	r3, [sp, #4]	@ D.11111, dir_entry
 4366 005c 0300A0E1 		mov	r0, r3	@, D.11111
 4367 0060 FEFFFFEB 		bl	strlen	@
 4368 0064 0030A0E1 		mov	r3, r0	@ D.11112,
 4369 0068 5330CDE5 		strb	r3, [sp, #83]	@ tmp250, name_len
1372:fat16.cpp     ****         uint8_t lfn_entry_count = (name_len + 12) / 13;
ARM GAS  /tmp/ccNwMSzu.s 			page 103


 4370              		.loc 1 1372 0
 4371 006c 5330DDE5 		ldrb	r3, [sp, #83]	@ zero_extendqisi2	@ D.11113, name_len
 4372 0070 0C3083E2 		add	r3, r3, #12	@ D.11114, D.11113,
 4373 0074 84259FE5 		ldr	r2, .L311	@ tmp252,
 4374 0078 9302C2E0 		smull	r0, r2, r3, r2	@, tmp251, D.11114, tmp252
 4375 007c 4221A0E1 		mov	r2, r2, asr #2	@ tmp253, tmp251,
 4376 0080 C33FA0E1 		mov	r3, r3, asr #31	@ tmp254, D.11114,
 4377 0084 023063E0 		rsb	r3, r3, r2	@ D.11115, tmp254, tmp253
 4378 0088 4730CDE5 		strb	r3, [sp, #71]	@ tmp255, lfn_entry_count
1373:fat16.cpp     ****         uint8_t buffer[32];
1374:fat16.cpp     ****     
1375:fat16.cpp     ****         /* write 8.3 entry */
1376:fat16.cpp     ****     
1377:fat16.cpp     ****         /* generate 8.3 file name */
1378:fat16.cpp     ****         memset(&buffer[0], ' ', 11);
 4379              		.loc 1 1378 0
 4380 008c 14308DE2 		add	r3, sp, #20	@ tmp256,,
 4381 0090 0300A0E1 		mov	r0, r3	@, tmp256
 4382 0094 2010A0E3 		mov	r1, #32	@,
 4383 0098 0B20A0E3 		mov	r2, #11	@,
 4384 009c FEFFFFEB 		bl	memset	@
1379:fat16.cpp     ****         char* name_ext = strrchr(dir_entry->long_name, '.');
 4385              		.loc 1 1379 0
 4386 00a0 04309DE5 		ldr	r3, [sp, #4]	@ D.11116, dir_entry
 4387 00a4 0300A0E1 		mov	r0, r3	@, D.11116
 4388 00a8 2E10A0E3 		mov	r1, #46	@,
 4389 00ac FEFFFFEB 		bl	strrchr	@
 4390 00b0 40008DE5 		str	r0, [sp, #64]	@, name_ext
 4391              	.LBB51:
1380:fat16.cpp     ****         if(name_ext)
 4392              		.loc 1 1380 0
 4393 00b4 40309DE5 		ldr	r3, [sp, #64]	@ tmp257, name_ext
 4394 00b8 000053E3 		cmp	r3, #0	@ tmp257,
 4395 00bc 1800000A 		beq	.L286	@,
 4396              	.LBB52:
1381:fat16.cpp     ****         {
1382:fat16.cpp     ****             ++name_ext;
 4397              		.loc 1 1382 0
 4398 00c0 40309DE5 		ldr	r3, [sp, #64]	@ tmp258, name_ext
 4399 00c4 013083E2 		add	r3, r3, #1	@ tmp259, tmp258,
 4400 00c8 40308DE5 		str	r3, [sp, #64]	@ tmp259, name_ext
1383:fat16.cpp     ****     
1384:fat16.cpp     ****             uint8_t name_ext_len = strlen(name_ext);
 4401              		.loc 1 1384 0
 4402 00cc 40009DE5 		ldr	r0, [sp, #64]	@, name_ext
 4403 00d0 FEFFFFEB 		bl	strlen	@
 4404 00d4 0030A0E1 		mov	r3, r0	@ D.11119,
 4405 00d8 5230CDE5 		strb	r3, [sp, #82]	@ tmp260, name_ext_len
1385:fat16.cpp     ****             name_len -= name_ext_len + 1;
 4406              		.loc 1 1385 0
 4407 00dc 5230DDE5 		ldrb	r3, [sp, #82]	@ tmp261, name_ext_len
 4408 00e0 0330E0E1 		mvn	r3, r3	@ tmp262, tmp261
 4409 00e4 FF2003E2 		and	r2, r3, #255	@ D.11120, tmp262,
 4410 00e8 5330DDE5 		ldrb	r3, [sp, #83]	@ tmp263, name_len
 4411 00ec 033082E0 		add	r3, r2, r3	@ tmp264, D.11120, tmp263
 4412 00f0 5330CDE5 		strb	r3, [sp, #83]	@ tmp265, name_len
1386:fat16.cpp     ****     
ARM GAS  /tmp/ccNwMSzu.s 			page 104


1387:fat16.cpp     ****             if(name_ext_len > 3)
 4413              		.loc 1 1387 0
 4414 00f4 5230DDE5 		ldrb	r3, [sp, #82]	@ zero_extendqisi2	@ tmp266, name_ext_len
 4415 00f8 030053E3 		cmp	r3, #3	@ tmp266,
 4416 00fc 0100009A 		bls	.L287	@,
1388:fat16.cpp     ****                 name_ext_len = 3;
 4417              		.loc 1 1388 0
 4418 0100 0330A0E3 		mov	r3, #3	@ tmp267,
 4419 0104 5230CDE5 		strb	r3, [sp, #82]	@ tmp268, name_ext_len
 4420              	.L287:
1389:fat16.cpp     ****     
1390:fat16.cpp     ****             memcpy(&buffer[8], name_ext, name_ext_len);
 4421              		.loc 1 1390 0
 4422 0108 5230DDE5 		ldrb	r3, [sp, #82]	@ zero_extendqisi2	@ D.11124, name_ext_len
 4423 010c 14208DE2 		add	r2, sp, #20	@ tmp269,,
 4424 0110 082082E2 		add	r2, r2, #8	@ tmp270, tmp269,
 4425 0114 0200A0E1 		mov	r0, r2	@, tmp270
 4426 0118 40109DE5 		ldr	r1, [sp, #64]	@, name_ext
 4427 011c 0320A0E1 		mov	r2, r3	@, D.11124
 4428 0120 FEFFFFEB 		bl	memcpy	@
 4429              	.L286:
 4430              	.LBE52:
 4431              	.LBE51:
 4432              	.LBB53:
1391:fat16.cpp     ****         }
1392:fat16.cpp     ****     
1393:fat16.cpp     ****         if(name_len <= 8)
 4433              		.loc 1 1393 0
 4434 0124 5330DDE5 		ldrb	r3, [sp, #83]	@ zero_extendqisi2	@ tmp271, name_len
 4435 0128 080053E3 		cmp	r3, #8	@ tmp271,
 4436 012c 0700008A 		bhi	.L288	@,
1394:fat16.cpp     ****         {
1395:fat16.cpp     ****             memcpy(buffer, dir_entry->long_name, name_len);
 4437              		.loc 1 1395 0
 4438 0130 04209DE5 		ldr	r2, [sp, #4]	@ D.11128, dir_entry
 4439 0134 5330DDE5 		ldrb	r3, [sp, #83]	@ zero_extendqisi2	@ D.11129, name_len
 4440 0138 14108DE2 		add	r1, sp, #20	@ tmp272,,
 4441 013c 0100A0E1 		mov	r0, r1	@, tmp272
 4442 0140 0210A0E1 		mov	r1, r2	@, D.11128
 4443 0144 0320A0E1 		mov	r2, r3	@, D.11129
 4444 0148 FEFFFFEB 		bl	memcpy	@
 4445 014c 250000EA 		b	.L289	@
 4446              	.L288:
 4447              	.LBB54:
1396:fat16.cpp     ****         }
1397:fat16.cpp     ****         else
1398:fat16.cpp     ****         {
1399:fat16.cpp     ****             memcpy(buffer, dir_entry->long_name, 8);
 4448              		.loc 1 1399 0
 4449 0150 04309DE5 		ldr	r3, [sp, #4]	@ D.11131, dir_entry
 4450 0154 14208DE2 		add	r2, sp, #20	@ tmp273,,
 4451 0158 0200A0E1 		mov	r0, r2	@, tmp273
 4452 015c 0310A0E1 		mov	r1, r3	@, D.11131
 4453 0160 0820A0E3 		mov	r2, #8	@,
 4454 0164 FEFFFFEB 		bl	memcpy	@
1400:fat16.cpp     ****     
1401:fat16.cpp     ****             /* Minimize 8.3 name clashes by appending
ARM GAS  /tmp/ccNwMSzu.s 			page 105


1402:fat16.cpp     ****                                              * the lower byte of the cluster number.
1403:fat16.cpp     ****                                              */
1404:fat16.cpp     ****             uint8_t num = dir_entry->cluster & 0xff;
 4455              		.loc 1 1404 0
 4456 0168 04309DE5 		ldr	r3, [sp, #4]	@ tmp274, dir_entry
 4457 016c B232D3E1 		ldrh	r3, [r3, #34]	@ D.11132, dir_entry_16(D)->cluster
 4458 0170 3F30CDE5 		strb	r3, [sp, #63]	@ tmp275, num
1405:fat16.cpp     ****     
1406:fat16.cpp     ****             buffer[6] = (num < 0xa0) ? ('0' + (num >> 4)) : ('a' + (num >> 4));
 4459              		.loc 1 1406 0
 4460 0174 3F30DDE5 		ldrb	r3, [sp, #63]	@ zero_extendqisi2	@ tmp276, num
 4461 0178 9F0053E3 		cmp	r3, #159	@ tmp276,
 4462 017c 0500008A 		bhi	.L290	@,
 4463              		.loc 1 1406 0 is_stmt 0 discriminator 1
 4464 0180 3F30DDE5 		ldrb	r3, [sp, #63]	@ zero_extendqisi2	@ D.11136, num
 4465 0184 4332A0E1 		mov	r3, r3, asr #4	@ D.11137, D.11136,
 4466 0188 FF3003E2 		and	r3, r3, #255	@ D.11138, D.11137,
 4467 018c 303083E2 		add	r3, r3, #48	@ tmp277, D.11138,
 4468 0190 FF3003E2 		and	r3, r3, #255	@ iftmp.14, tmp277,
 4469 0194 040000EA 		b	.L291	@
 4470              	.L290:
 4471              		.loc 1 1406 0 discriminator 2
 4472 0198 3F30DDE5 		ldrb	r3, [sp, #63]	@ zero_extendqisi2	@ D.11140, num
 4473 019c 4332A0E1 		mov	r3, r3, asr #4	@ D.11141, D.11140,
 4474 01a0 FF3003E2 		and	r3, r3, #255	@ D.11142, D.11141,
 4475 01a4 613083E2 		add	r3, r3, #97	@ tmp278, D.11142,
 4476 01a8 FF3003E2 		and	r3, r3, #255	@ iftmp.14, tmp278,
 4477              	.L291:
 4478              		.loc 1 1406 0 discriminator 3
 4479 01ac 1A30CDE5 		strb	r3, [sp, #26]	@ tmp279, buffer
1407:fat16.cpp     ****             num &= 0x0f;
 4480              		.loc 1 1407 0 is_stmt 1 discriminator 3
 4481 01b0 3F30DDE5 		ldrb	r3, [sp, #63]	@ tmp280, num
 4482 01b4 0F3003E2 		and	r3, r3, #15	@ tmp281, tmp280,
 4483 01b8 3F30CDE5 		strb	r3, [sp, #63]	@ tmp282, num
1408:fat16.cpp     ****             buffer[7] = (num < 0x0a) ? ('0' + num) : ('a' + num);
 4484              		.loc 1 1408 0 discriminator 3
 4485 01bc 3F30DDE5 		ldrb	r3, [sp, #63]	@ zero_extendqisi2	@ tmp283, num
 4486 01c0 090053E3 		cmp	r3, #9	@ tmp283,
 4487 01c4 0300008A 		bhi	.L292	@,
 4488              		.loc 1 1408 0 is_stmt 0 discriminator 1
 4489 01c8 3F30DDE5 		ldrb	r3, [sp, #63]	@ tmp284, num
 4490 01cc 303083E2 		add	r3, r3, #48	@ tmp285, tmp284,
 4491 01d0 FF3003E2 		and	r3, r3, #255	@ iftmp.15, tmp285,
 4492 01d4 020000EA 		b	.L293	@
 4493              	.L292:
 4494              		.loc 1 1408 0 discriminator 2
 4495 01d8 3F30DDE5 		ldrb	r3, [sp, #63]	@ tmp286, num
 4496 01dc 613083E2 		add	r3, r3, #97	@ tmp287, tmp286,
 4497 01e0 FF3003E2 		and	r3, r3, #255	@ iftmp.15, tmp287,
 4498              	.L293:
 4499              		.loc 1 1408 0 discriminator 3
 4500 01e4 1B30CDE5 		strb	r3, [sp, #27]	@ tmp288, buffer
 4501              	.L289:
 4502              	.LBE54:
 4503              	.LBE53:
1409:fat16.cpp     ****         }
ARM GAS  /tmp/ccNwMSzu.s 			page 106


1410:fat16.cpp     ****     
1411:fat16.cpp     ****         /* fill directory entry buffer */
1412:fat16.cpp     ****         memset(&buffer[11], 0, sizeof(buffer) - 11);
 4504              		.loc 1 1412 0 is_stmt 1
 4505 01e8 14308DE2 		add	r3, sp, #20	@ tmp289,,
 4506 01ec 0B3083E2 		add	r3, r3, #11	@ tmp290, tmp289,
 4507 01f0 0300A0E1 		mov	r0, r3	@, tmp290
 4508 01f4 0010A0E3 		mov	r1, #0	@,
 4509 01f8 1520A0E3 		mov	r2, #21	@,
 4510 01fc FEFFFFEB 		bl	memset	@
1413:fat16.cpp     ****         buffer[0x0b] = dir_entry->attributes;
 4511              		.loc 1 1413 0
 4512 0200 04309DE5 		ldr	r3, [sp, #4]	@ tmp291, dir_entry
 4513 0204 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.11147, dir_entry_16(D)->attributes
 4514 0208 1F30CDE5 		strb	r3, [sp, #31]	@ tmp292, buffer
1414:fat16.cpp     **** 
1415:fat16.cpp     ****         //Not used in bootloader
1416:fat16.cpp     **** 		#ifdef MAIN_FIRMWARE
1417:fat16.cpp     **** 			//Added modified date/time 12-26-07
1418:fat16.cpp     **** 			//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
1419:fat16.cpp     **** 			char * current_time;
1420:fat16.cpp     **** /*			current_time = GPS_get_time();
1421:fat16.cpp     **** 			char * current_date;
1422:fat16.cpp     **** 			current_date = GPS_get_date();
1423:fat16.cpp     **** 			
1424:fat16.cpp     **** 			uint16_t modified_time, modified_date;
1425:fat16.cpp     **** 			uint8_t c_hour, c_minute, c_second;
1426:fat16.cpp     **** 			uint8_t c_year, c_month, c_day;
1427:fat16.cpp     **** 			
1428:fat16.cpp     **** 			c_hour = (current_time[0] - '0') * 10;
1429:fat16.cpp     **** 			c_hour += (current_time[1] - '0');
1430:fat16.cpp     **** 			c_minute = (current_time[3] - '0') * 10;
1431:fat16.cpp     **** 			c_minute += (current_time[4] - '0');
1432:fat16.cpp     **** 			c_second = (current_time[6] - '0') * 10;
1433:fat16.cpp     **** 			c_second += (current_time[7] - '0');
1434:fat16.cpp     **** 			
1435:fat16.cpp     **** 			c_day = (current_date[0] - '0') * 10;
1436:fat16.cpp     **** 			c_day += (current_date[1] - '0');
1437:fat16.cpp     **** 			c_month = (current_date[3] - '0') * 10;
1438:fat16.cpp     **** 			c_month += (current_date[4] - '0');
1439:fat16.cpp     **** 			c_year = (current_date[6] - '0') * 10;
1440:fat16.cpp     **** 			c_year += (current_date[7] - '0');
1441:fat16.cpp     **** 			
1442:fat16.cpp     **** 			//Correct for 1980 = 0, 2000 = 20, year code
1443:fat16.cpp     **** 			c_year += 20;
1444:fat16.cpp     **** 			
1445:fat16.cpp     **** 			modified_time = (c_hour << (16-5)) | (c_minute << (16-11)) | (c_second);
1446:fat16.cpp     **** 			modified_date = (c_year << (16-7)) | (c_month << (16-11)) | (c_day);
1447:fat16.cpp     **** 
1448:fat16.cpp     **** 			//Do a little error correction
1449:fat16.cpp     **** 			if (c_year < 26) //26 = 2006
1450:fat16.cpp     **** 			{
1451:fat16.cpp     **** 				modified_time = 0;
1452:fat16.cpp     **** 				modified_date = 0;
1453:fat16.cpp     **** 			}
1454:fat16.cpp     **** 
1455:fat16.cpp     **** 			uart->WriteLine("c_time=%d, %d, %d\n", c_hour, c_minute, c_second);
ARM GAS  /tmp/ccNwMSzu.s 			page 107


1456:fat16.cpp     **** 			uart->WriteLine("c_date=%d, %d, %d\n", c_month, c_day, c_year);
1457:fat16.cpp     **** 			uart->WriteLine("mod_time=%x\n", modified_time);
1458:fat16.cpp     **** 			uart->WriteLine("mod_date=%x\n", modified_date);
1459:fat16.cpp     **** 			
1460:fat16.cpp     **** 			buffer[0x16] = (modified_time >> 0) & 0xFF;
1461:fat16.cpp     **** 			buffer[0x17] = (modified_time >> 8) & 0xFF;
1462:fat16.cpp     **** 			buffer[0x18] = (modified_date >> 0) & 0xFF;
1463:fat16.cpp     **** 			buffer[0x19] = (modified_date >> 8) & 0xFF;
1464:fat16.cpp     **** 			*/
1465:fat16.cpp     **** 			//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
1466:fat16.cpp     **** 		#endif
1467:fat16.cpp     **** 
1468:fat16.cpp     ****         buffer[0x1a] = (dir_entry->cluster >> 0) & 0xff;
 4515              		.loc 1 1468 0
 4516 020c 04309DE5 		ldr	r3, [sp, #4]	@ tmp293, dir_entry
 4517 0210 B232D3E1 		ldrh	r3, [r3, #34]	@ D.11148, dir_entry_16(D)->cluster
 4518 0214 FF3003E2 		and	r3, r3, #255	@ D.11149, D.11148,
 4519 0218 2E30CDE5 		strb	r3, [sp, #46]	@ tmp294, buffer
1469:fat16.cpp     ****         buffer[0x1b] = (dir_entry->cluster >> 8) & 0xff;
 4520              		.loc 1 1469 0
 4521 021c 04309DE5 		ldr	r3, [sp, #4]	@ tmp295, dir_entry
 4522 0220 B232D3E1 		ldrh	r3, [r3, #34]	@ D.11150, dir_entry_16(D)->cluster
 4523 0224 2334A0E1 		mov	r3, r3, lsr #8	@ tmp296, D.11150,
 4524 0228 0338A0E1 		mov	r3, r3, asl #16	@ tmp297, tmp296,
 4525 022c 2338A0E1 		mov	r3, r3, lsr #16	@ D.11151, tmp297,
 4526 0230 FF3003E2 		and	r3, r3, #255	@ D.11152, D.11151,
 4527 0234 2F30CDE5 		strb	r3, [sp, #47]	@ tmp298, buffer
1470:fat16.cpp     ****         buffer[0x1c] = (dir_entry->file_size >> 0) & 0xff;
 4528              		.loc 1 1470 0
 4529 0238 04309DE5 		ldr	r3, [sp, #4]	@ tmp299, dir_entry
 4530 023c 243093E5 		ldr	r3, [r3, #36]	@ D.11153, dir_entry_16(D)->file_size
 4531 0240 FF3003E2 		and	r3, r3, #255	@ D.11154, D.11153,
 4532 0244 3030CDE5 		strb	r3, [sp, #48]	@ tmp300, buffer
1471:fat16.cpp     ****         buffer[0x1d] = (dir_entry->file_size >> 8) & 0xff;
 4533              		.loc 1 1471 0
 4534 0248 04309DE5 		ldr	r3, [sp, #4]	@ tmp301, dir_entry
 4535 024c 243093E5 		ldr	r3, [r3, #36]	@ D.11155, dir_entry_16(D)->file_size
 4536 0250 2334A0E1 		mov	r3, r3, lsr #8	@ D.11156, D.11155,
 4537 0254 FF3003E2 		and	r3, r3, #255	@ D.11157, D.11156,
 4538 0258 3130CDE5 		strb	r3, [sp, #49]	@ tmp302, buffer
1472:fat16.cpp     ****         buffer[0x1e] = (dir_entry->file_size >> 16) & 0xff;
 4539              		.loc 1 1472 0
 4540 025c 04309DE5 		ldr	r3, [sp, #4]	@ tmp303, dir_entry
 4541 0260 243093E5 		ldr	r3, [r3, #36]	@ D.11158, dir_entry_16(D)->file_size
 4542 0264 2338A0E1 		mov	r3, r3, lsr #16	@ D.11159, D.11158,
 4543 0268 FF3003E2 		and	r3, r3, #255	@ D.11160, D.11159,
 4544 026c 3230CDE5 		strb	r3, [sp, #50]	@ tmp304, buffer
1473:fat16.cpp     ****         buffer[0x1f] = (dir_entry->file_size >> 24) & 0xff;
 4545              		.loc 1 1473 0
 4546 0270 04309DE5 		ldr	r3, [sp, #4]	@ tmp305, dir_entry
 4547 0274 243093E5 		ldr	r3, [r3, #36]	@ D.11161, dir_entry_16(D)->file_size
 4548 0278 233CA0E1 		mov	r3, r3, lsr #24	@ D.11162, D.11161,
 4549 027c FF3003E2 		and	r3, r3, #255	@ D.11163, D.11162,
 4550 0280 3330CDE5 		strb	r3, [sp, #51]	@ tmp306, buffer
1474:fat16.cpp     ****     
1475:fat16.cpp     ****         /* write to disk */
1476:fat16.cpp     ****         if(!(GetInstance()->*device_write)(offset + (uint32_t) lfn_entry_count * 32, buffer, sizeof
ARM GAS  /tmp/ccNwMSzu.s 			page 108


 4551              		.loc 1 1476 0
 4552 0284 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 4553 0288 0030A0E1 		mov	r3, r0	@ D.11165,
 4554 028c 38209DE5 		ldr	r2, [sp, #56]	@ D.11167, device_write.__delta
 4555 0290 012002E2 		and	r2, r2, #1	@ D.11168, D.11167,
 4556 0294 FF2002E2 		and	r2, r2, #255	@ D.11169, D.11168,
 4557 0298 000052E3 		cmp	r2, #0	@ D.11169,
 4558 029c 0800000A 		beq	.L294	@,
 4559              		.loc 1 1476 0 is_stmt 0 discriminator 1
 4560 02a0 38209DE5 		ldr	r2, [sp, #56]	@ D.11172, device_write.__delta
 4561 02a4 C220A0E1 		mov	r2, r2, asr #1	@ D.11173, D.11172,
 4562 02a8 022083E0 		add	r2, r3, r2	@ D.11175, D.11165, D.11174
 4563 02ac 001092E5 		ldr	r1, [r2, #0]	@ D.11177,* D.11176
 4564 02b0 34209DE5 		ldr	r2, [sp, #52]	@ D.11178, device_write.__pfn
 4565 02b4 022081E0 		add	r2, r1, r2	@ D.11180, D.11177, D.11179
 4566 02b8 002092E5 		ldr	r2, [r2, #0]	@ D.11181,* D.11180
 4567 02bc 02C0A0E1 		mov	ip, r2	@ iftmp.17, D.11181
 4568 02c0 000000EA 		b	.L295	@
 4569              	.L294:
 4570              		.loc 1 1476 0 discriminator 2
 4571 02c4 34C09DE5 		ldr	ip, [sp, #52]	@ iftmp.17, device_write.__pfn
 4572              	.L295:
 4573              		.loc 1 1476 0 discriminator 3
 4574 02c8 38209DE5 		ldr	r2, [sp, #56]	@ D.11183, device_write.__delta
 4575 02cc C220A0E1 		mov	r2, r2, asr #1	@ D.11184, D.11183,
 4576 02d0 021083E0 		add	r1, r3, r2	@ D.11186, D.11165, D.11185
 4577 02d4 4730DDE5 		ldrb	r3, [sp, #71]	@ zero_extendqisi2	@ D.11187, lfn_entry_count
 4578 02d8 8322A0E1 		mov	r2, r3, asl #5	@ D.11188, D.11187,
 4579 02dc 54309DE5 		ldr	r3, [sp, #84]	@ tmp307, offset
 4580 02e0 032082E0 		add	r2, r2, r3	@ D.11189, D.11188, tmp307
 4581 02e4 14308DE2 		add	r3, sp, #20	@ tmp308,,
 4582 02e8 0100A0E1 		mov	r0, r1	@, D.11186
 4583 02ec 0210A0E1 		mov	r1, r2	@, D.11189
 4584 02f0 0320A0E1 		mov	r2, r3	@, tmp308
 4585 02f4 2030A0E3 		mov	r3, #32	@,
 4586 02f8 0FE0A0E1 		mov	lr, pc
 4587 02fc 1CFF2FE1 		bx	ip	@ iftmp.17
 4588 0300 0030A0E1 		mov	r3, r0	@ tmp309,
 4589 0304 000053E3 		cmp	r3, #0	@ D.11190,
 4590 0308 0030A013 		movne	r3, #0	@, tmp311
 4591 030c 0130A003 		moveq	r3, #1	@, tmp311
 4592 0310 FF3003E2 		and	r3, r3, #255	@ retval.16, tmp310,
 4593 0314 000053E3 		cmp	r3, #0	@ retval.16,
 4594 0318 0100000A 		beq	.L296	@,
1477:fat16.cpp     ****             return 0;
 4595              		.loc 1 1477 0 is_stmt 1
 4596 031c 0030A0E3 		mov	r3, #0	@ D.11109,
 4597 0320 B20000EA 		b	.L285	@
 4598              	.L296:
1478:fat16.cpp     ****     
1479:fat16.cpp     ****         /* calculate checksum of 8.3 name */
1480:fat16.cpp     ****         uint8_t checksum = buffer[0];
 4599              		.loc 1 1480 0
 4600 0324 1430DDE5 		ldrb	r3, [sp, #20]	@ tmp312, buffer
 4601 0328 5130CDE5 		strb	r3, [sp, #81]	@ tmp312, checksum
1481:fat16.cpp     ****         uint8_t i;
1482:fat16.cpp     ****         for(i = 1; i < 11; ++i)
ARM GAS  /tmp/ccNwMSzu.s 			page 109


 4602              		.loc 1 1482 0
 4603 032c 0130A0E3 		mov	r3, #1	@ tmp313,
 4604 0330 5030CDE5 		strb	r3, [sp, #80]	@ tmp314, i
 4605 0334 130000EA 		b	.L297	@
 4606              	.L298:
1483:fat16.cpp     ****             checksum = ((checksum >> 1) | (checksum << 7)) + buffer[i];
 4607              		.loc 1 1483 0 discriminator 2
 4608 0338 5130DDE5 		ldrb	r3, [sp, #81]	@ zero_extendqisi2	@ D.11198, checksum
 4609 033c C330A0E1 		mov	r3, r3, asr #1	@ D.11199, D.11198,
 4610 0340 FF2003E2 		and	r2, r3, #255	@ D.11200, D.11199,
 4611 0344 5130DDE5 		ldrb	r3, [sp, #81]	@ zero_extendqisi2	@ D.11201, checksum
 4612 0348 8333A0E1 		mov	r3, r3, asl #7	@ D.11202, D.11201,
 4613 034c FF3003E2 		and	r3, r3, #255	@ D.11203, D.11202,
 4614 0350 033082E1 		orr	r3, r2, r3	@ tmp317, tmp315, tmp316
 4615 0354 FF3003E2 		and	r3, r3, #255	@ D.11204, tmp317,
 4616 0358 FF2003E2 		and	r2, r3, #255	@ D.11205, D.11204,
 4617 035c 5010DDE5 		ldrb	r1, [sp, #80]	@ zero_extendqisi2	@ D.11206, i
 4618 0360 4330E0E3 		mvn	r3, #67	@ tmp318,
 4619 0364 58008DE2 		add	r0, sp, #88	@,,
 4620 0368 011080E0 		add	r1, r0, r1	@ tmp319,, D.11206
 4621 036c 033081E0 		add	r3, r1, r3	@ tmp320, tmp319, tmp318
 4622 0370 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11207, buffer
 4623 0374 033082E0 		add	r3, r2, r3	@ tmp321, D.11205, D.11207
 4624 0378 5130CDE5 		strb	r3, [sp, #81]	@ tmp322, checksum
1482:fat16.cpp     ****         for(i = 1; i < 11; ++i)
 4625              		.loc 1 1482 0 discriminator 2
 4626 037c 5030DDE5 		ldrb	r3, [sp, #80]	@ tmp323, i
 4627 0380 013083E2 		add	r3, r3, #1	@ tmp324, tmp323,
 4628 0384 5030CDE5 		strb	r3, [sp, #80]	@ tmp325, i
 4629              	.L297:
1482:fat16.cpp     ****         for(i = 1; i < 11; ++i)
 4630              		.loc 1 1482 0 is_stmt 0 discriminator 1
 4631 0388 5030DDE5 		ldrb	r3, [sp, #80]	@ zero_extendqisi2	@ tmp327, i
 4632 038c 0A0053E3 		cmp	r3, #10	@ tmp327,
 4633 0390 0030A083 		movhi	r3, #0	@, tmp328
 4634 0394 0130A093 		movls	r3, #1	@, tmp328
 4635 0398 FF3003E2 		and	r3, r3, #255	@ D.11196, tmp326,
 4636 039c 000053E3 		cmp	r3, #0	@ D.11196,
 4637 03a0 E4FFFF1A 		bne	.L298	@,
 4638              	.LBB55:
1484:fat16.cpp     ****     
1485:fat16.cpp     ****         /* write lfn entries */
1486:fat16.cpp     ****         uint8_t lfn_entry;
1487:fat16.cpp     ****         for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 4639              		.loc 1 1487 0 is_stmt 1
 4640 03a4 4730DDE5 		ldrb	r3, [sp, #71]	@ tmp329, lfn_entry_count
 4641 03a8 4F30CDE5 		strb	r3, [sp, #79]	@ tmp329, lfn_entry
 4642 03ac 870000EA 		b	.L299	@
 4643              	.L309:
 4644              	.LBB56:
1488:fat16.cpp     ****         {
1489:fat16.cpp     ****             memset(buffer, 0, sizeof(buffer));
 4645              		.loc 1 1489 0
 4646 03b0 14308DE2 		add	r3, sp, #20	@ tmp330,,
 4647 03b4 0300A0E1 		mov	r0, r3	@, tmp330
 4648 03b8 0010A0E3 		mov	r1, #0	@,
 4649 03bc 2020A0E3 		mov	r2, #32	@,
ARM GAS  /tmp/ccNwMSzu.s 			page 110


 4650 03c0 FEFFFFEB 		bl	memset	@
1490:fat16.cpp     ****             memset(&buffer[0x01], 0xff, 10);
 4651              		.loc 1 1490 0
 4652 03c4 14308DE2 		add	r3, sp, #20	@ tmp331,,
 4653 03c8 013083E2 		add	r3, r3, #1	@ tmp332, tmp331,
 4654 03cc 0300A0E1 		mov	r0, r3	@, tmp332
 4655 03d0 FF10A0E3 		mov	r1, #255	@,
 4656 03d4 0A20A0E3 		mov	r2, #10	@,
 4657 03d8 FEFFFFEB 		bl	memset	@
1491:fat16.cpp     ****             memset(&buffer[0x0e], 0xff, 12);
 4658              		.loc 1 1491 0
 4659 03dc 14308DE2 		add	r3, sp, #20	@ tmp333,,
 4660 03e0 0E3083E2 		add	r3, r3, #14	@ tmp334, tmp333,
 4661 03e4 0300A0E1 		mov	r0, r3	@, tmp334
 4662 03e8 FF10A0E3 		mov	r1, #255	@,
 4663 03ec 0C20A0E3 		mov	r2, #12	@,
 4664 03f0 FEFFFFEB 		bl	memset	@
1492:fat16.cpp     ****             memset(&buffer[0x1c], 0xff, 4);
 4665              		.loc 1 1492 0
 4666 03f4 14308DE2 		add	r3, sp, #20	@ tmp335,,
 4667 03f8 1C3083E2 		add	r3, r3, #28	@ tmp336, tmp335,
 4668 03fc 0300A0E1 		mov	r0, r3	@, tmp336
 4669 0400 FF10A0E3 		mov	r1, #255	@,
 4670 0404 0420A0E3 		mov	r2, #4	@,
 4671 0408 FEFFFFEB 		bl	memset	@
1493:fat16.cpp     ****     
1494:fat16.cpp     ****             buffer[0x00] = lfn_entry;
 4672              		.loc 1 1494 0
 4673 040c 4F30DDE5 		ldrb	r3, [sp, #79]	@ tmp337, lfn_entry
 4674 0410 1430CDE5 		strb	r3, [sp, #20]	@ tmp337, buffer
1495:fat16.cpp     ****             if(lfn_entry == lfn_entry_count)
 4675              		.loc 1 1495 0
 4676 0414 4F20DDE5 		ldrb	r2, [sp, #79]	@ zero_extendqisi2	@ tmp338, lfn_entry
 4677 0418 4730DDE5 		ldrb	r3, [sp, #71]	@ zero_extendqisi2	@ tmp339, lfn_entry_count
 4678 041c 030052E1 		cmp	r2, r3	@ tmp338, tmp339
 4679 0420 0300001A 		bne	.L300	@,
1496:fat16.cpp     ****                 buffer[0x00] |= FAT16_DIRENTRY_LFNLAST;
 4680              		.loc 1 1496 0
 4681 0424 1430DDE5 		ldrb	r3, [sp, #20]	@ zero_extendqisi2	@ D.11215, buffer
 4682 0428 403083E3 		orr	r3, r3, #64	@ tmp340, D.11215,
 4683 042c FF3003E2 		and	r3, r3, #255	@ D.11216, tmp340,
 4684 0430 1430CDE5 		strb	r3, [sp, #20]	@ tmp341, buffer
 4685              	.L300:
1497:fat16.cpp     ****     
1498:fat16.cpp     ****             /* set file name */
1499:fat16.cpp     ****             const char* long_name_curr = dir_entry->long_name + (lfn_entry - 1) * 13;
 4686              		.loc 1 1499 0
 4687 0434 04109DE5 		ldr	r1, [sp, #4]	@ D.11218, dir_entry
 4688 0438 4F30DDE5 		ldrb	r3, [sp, #79]	@ zero_extendqisi2	@ D.11219, lfn_entry
 4689 043c 012043E2 		sub	r2, r3, #1	@ D.11220, D.11219,
 4690 0440 0230A0E1 		mov	r3, r2	@ tmp342, D.11220
 4691 0444 8330A0E1 		mov	r3, r3, asl #1	@ tmp342, tmp342,
 4692 0448 023083E0 		add	r3, r3, r2	@ tmp342, tmp342, D.11220
 4693 044c 0331A0E1 		mov	r3, r3, asl #2	@ tmp342, tmp342,
 4694 0450 023083E0 		add	r3, r3, r2	@ D.11221, tmp342, D.11220
 4695 0454 033081E0 		add	r3, r1, r3	@ tmp343, D.11218, D.11222
 4696 0458 48308DE5 		str	r3, [sp, #72]	@ tmp343, long_name_curr
ARM GAS  /tmp/ccNwMSzu.s 			page 111


1500:fat16.cpp     ****             i = 1;
 4697              		.loc 1 1500 0
 4698 045c 0130A0E3 		mov	r3, #1	@ tmp344,
 4699 0460 5030CDE5 		strb	r3, [sp, #80]	@ tmp345, i
1501:fat16.cpp     ****             while(i < 0x1f)
 4700              		.loc 1 1501 0
 4701 0464 2B0000EA 		b	.L301	@
 4702              	.L306:
1502:fat16.cpp     ****             {
1503:fat16.cpp     ****                 buffer[i++] = *long_name_curr;
 4703              		.loc 1 1503 0
 4704 0468 5010DDE5 		ldrb	r1, [sp, #80]	@ zero_extendqisi2	@ D.11227, i
 4705 046c 48309DE5 		ldr	r3, [sp, #72]	@ tmp346, long_name_curr
 4706 0470 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ D.11228,
 4707 0474 4330E0E3 		mvn	r3, #67	@ tmp347,
 4708 0478 58008DE2 		add	r0, sp, #88	@,,
 4709 047c 011080E0 		add	r1, r0, r1	@ tmp348,, D.11227
 4710 0480 033081E0 		add	r3, r1, r3	@ tmp349, tmp348, tmp347
 4711 0484 0020C3E5 		strb	r2, [r3, #0]	@ tmp350, buffer
 4712 0488 5030DDE5 		ldrb	r3, [sp, #80]	@ tmp351, i
 4713 048c 013083E2 		add	r3, r3, #1	@ tmp352, tmp351,
 4714 0490 5030CDE5 		strb	r3, [sp, #80]	@ tmp353, i
1504:fat16.cpp     ****                 buffer[i++] = 0;
 4715              		.loc 1 1504 0
 4716 0494 5020DDE5 		ldrb	r2, [sp, #80]	@ zero_extendqisi2	@ D.11229, i
 4717 0498 4330E0E3 		mvn	r3, #67	@ tmp354,
 4718 049c 58108DE2 		add	r1, sp, #88	@,,
 4719 04a0 022081E0 		add	r2, r1, r2	@ tmp355,, D.11229
 4720 04a4 033082E0 		add	r3, r2, r3	@ tmp356, tmp355, tmp354
 4721 04a8 0020A0E3 		mov	r2, #0	@ tmp357,
 4722 04ac 0020C3E5 		strb	r2, [r3, #0]	@ tmp358, buffer
 4723 04b0 5030DDE5 		ldrb	r3, [sp, #80]	@ tmp359, i
 4724 04b4 013083E2 		add	r3, r3, #1	@ tmp360, tmp359,
 4725 04b8 5030CDE5 		strb	r3, [sp, #80]	@ tmp361, i
1505:fat16.cpp     ****     
1506:fat16.cpp     ****                 switch(i)
 4726              		.loc 1 1506 0
 4727 04bc 5030DDE5 		ldrb	r3, [sp, #80]	@ zero_extendqisi2	@ D.11231, i
 4728 04c0 0B0053E3 		cmp	r3, #11	@ D.11231,
 4729 04c4 0200000A 		beq	.L303	@,
 4730 04c8 1A0053E3 		cmp	r3, #26	@ D.11231,
 4731 04cc 0300000A 		beq	.L304	@,
 4732 04d0 050000EA 		b	.L302	@
 4733              	.L303:
1507:fat16.cpp     ****                 {
1508:fat16.cpp     ****                     case 0x0b:
1509:fat16.cpp     ****                         i = 0x0e;
 4734              		.loc 1 1509 0
 4735 04d4 0E30A0E3 		mov	r3, #14	@ tmp362,
 4736 04d8 5030CDE5 		strb	r3, [sp, #80]	@ tmp363, i
1510:fat16.cpp     ****                         break;
 4737              		.loc 1 1510 0
 4738 04dc 020000EA 		b	.L302	@
 4739              	.L304:
1511:fat16.cpp     ****                     case 0x1a:
1512:fat16.cpp     ****                         i = 0x1c;
 4740              		.loc 1 1512 0
ARM GAS  /tmp/ccNwMSzu.s 			page 112


 4741 04e0 1C30A0E3 		mov	r3, #28	@ tmp364,
 4742 04e4 5030CDE5 		strb	r3, [sp, #80]	@ tmp365, i
1513:fat16.cpp     ****                         break;
 4743              		.loc 1 1513 0
 4744 04e8 0000A0E1 		mov	r0, r0	@ nop
 4745              	.L302:
1514:fat16.cpp     ****                 }
1515:fat16.cpp     ****     
1516:fat16.cpp     ****                 if(!*long_name_curr++)
 4746              		.loc 1 1516 0
 4747 04ec 48309DE5 		ldr	r3, [sp, #72]	@ tmp366, long_name_curr
 4748 04f0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11234,
 4749 04f4 000053E3 		cmp	r3, #0	@ D.11234,
 4750 04f8 0030A013 		movne	r3, #0	@, tmp368
 4751 04fc 0130A003 		moveq	r3, #1	@, tmp368
 4752 0500 FF3003E2 		and	r3, r3, #255	@ retval.18, tmp367,
 4753 0504 48209DE5 		ldr	r2, [sp, #72]	@ tmp369, long_name_curr
 4754 0508 012082E2 		add	r2, r2, #1	@ tmp370, tmp369,
 4755 050c 48208DE5 		str	r2, [sp, #72]	@ tmp370, long_name_curr
 4756 0510 000053E3 		cmp	r3, #0	@ retval.18,
 4757 0514 0700001A 		bne	.L310	@,
 4758              	.L301:
1501:fat16.cpp     ****             while(i < 0x1f)
 4759              		.loc 1 1501 0 discriminator 1
 4760 0518 5030DDE5 		ldrb	r3, [sp, #80]	@ zero_extendqisi2	@ tmp372, i
 4761 051c 1E0053E3 		cmp	r3, #30	@ tmp372,
 4762 0520 0030A083 		movhi	r3, #0	@, tmp373
 4763 0524 0130A093 		movls	r3, #1	@, tmp373
 4764 0528 FF3003E2 		and	r3, r3, #255	@ D.11226, tmp371,
 4765 052c 000053E3 		cmp	r3, #0	@ D.11226,
 4766 0530 CCFFFF1A 		bne	.L306	@,
 4767 0534 000000EA 		b	.L305	@
 4768              	.L310:
1517:fat16.cpp     ****                     break;
 4769              		.loc 1 1517 0
 4770 0538 0000A0E1 		mov	r0, r0	@ nop
 4771              	.L305:
1518:fat16.cpp     ****             }
1519:fat16.cpp     ****     
1520:fat16.cpp     ****             /* mark as lfn entry */
1521:fat16.cpp     ****             buffer[0x0b] = 0x0f;
 4772              		.loc 1 1521 0
 4773 053c 0F30A0E3 		mov	r3, #15	@ tmp374,
 4774 0540 1F30CDE5 		strb	r3, [sp, #31]	@ tmp375, buffer
1522:fat16.cpp     ****     
1523:fat16.cpp     ****             /* set checksum */
1524:fat16.cpp     ****             buffer[0x0d] = checksum;
 4775              		.loc 1 1524 0
 4776 0544 5130DDE5 		ldrb	r3, [sp, #81]	@ tmp376, checksum
 4777 0548 2130CDE5 		strb	r3, [sp, #33]	@ tmp376, buffer
1525:fat16.cpp     ****     
1526:fat16.cpp     ****             /* write entry */
1527:fat16.cpp     ****             (GetInstance()->*device_write)(offset, buffer, sizeof(buffer));
 4778              		.loc 1 1527 0
 4779 054c FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 4780 0550 0030A0E1 		mov	r3, r0	@ D.11237,
 4781 0554 38209DE5 		ldr	r2, [sp, #56]	@ D.11239, device_write.__delta
ARM GAS  /tmp/ccNwMSzu.s 			page 113


 4782 0558 012002E2 		and	r2, r2, #1	@ D.11240, D.11239,
 4783 055c FF2002E2 		and	r2, r2, #255	@ D.11241, D.11240,
 4784 0560 000052E3 		cmp	r2, #0	@ D.11241,
 4785 0564 0800000A 		beq	.L307	@,
 4786              		.loc 1 1527 0 is_stmt 0 discriminator 1
 4787 0568 38209DE5 		ldr	r2, [sp, #56]	@ D.11244, device_write.__delta
 4788 056c C220A0E1 		mov	r2, r2, asr #1	@ D.11245, D.11244,
 4789 0570 022083E0 		add	r2, r3, r2	@ D.11247, D.11237, D.11246
 4790 0574 001092E5 		ldr	r1, [r2, #0]	@ D.11249,* D.11248
 4791 0578 34209DE5 		ldr	r2, [sp, #52]	@ D.11250, device_write.__pfn
 4792 057c 022081E0 		add	r2, r1, r2	@ D.11252, D.11249, D.11251
 4793 0580 002092E5 		ldr	r2, [r2, #0]	@ D.11253,* D.11252
 4794 0584 02C0A0E1 		mov	ip, r2	@ iftmp.19, D.11253
 4795 0588 000000EA 		b	.L308	@
 4796              	.L307:
 4797              		.loc 1 1527 0 discriminator 2
 4798 058c 34C09DE5 		ldr	ip, [sp, #52]	@ iftmp.19, device_write.__pfn
 4799              	.L308:
 4800              		.loc 1 1527 0 discriminator 3
 4801 0590 38209DE5 		ldr	r2, [sp, #56]	@ D.11255, device_write.__delta
 4802 0594 C220A0E1 		mov	r2, r2, asr #1	@ D.11256, D.11255,
 4803 0598 022083E0 		add	r2, r3, r2	@ D.11258, D.11237, D.11257
 4804 059c 14308DE2 		add	r3, sp, #20	@ tmp377,,
 4805 05a0 0200A0E1 		mov	r0, r2	@, D.11258
 4806 05a4 54109DE5 		ldr	r1, [sp, #84]	@, offset
 4807 05a8 0320A0E1 		mov	r2, r3	@, tmp377
 4808 05ac 2030A0E3 		mov	r3, #32	@,
 4809 05b0 0FE0A0E1 		mov	lr, pc
 4810 05b4 1CFF2FE1 		bx	ip	@ iftmp.19
1528:fat16.cpp     ****     
1529:fat16.cpp     ****             offset += sizeof(buffer);
 4811              		.loc 1 1529 0 is_stmt 1 discriminator 3
 4812 05b8 54309DE5 		ldr	r3, [sp, #84]	@ tmp378, offset
 4813 05bc 203083E2 		add	r3, r3, #32	@ tmp379, tmp378,
 4814 05c0 54308DE5 		str	r3, [sp, #84]	@ tmp379, offset
 4815              	.LBE56:
1487:fat16.cpp     ****         for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 4816              		.loc 1 1487 0 discriminator 3
 4817 05c4 4F30DDE5 		ldrb	r3, [sp, #79]	@ tmp380, lfn_entry
 4818 05c8 013043E2 		sub	r3, r3, #1	@ tmp381, tmp380,
 4819 05cc 4F30CDE5 		strb	r3, [sp, #79]	@ tmp382, lfn_entry
 4820              	.L299:
1487:fat16.cpp     ****         for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 4821              		.loc 1 1487 0 is_stmt 0 discriminator 1
 4822 05d0 4F30DDE5 		ldrb	r3, [sp, #79]	@ zero_extendqisi2	@ tmp384, lfn_entry
 4823 05d4 000053E3 		cmp	r3, #0	@ tmp384,
 4824 05d8 0030A003 		moveq	r3, #0	@, tmp385
 4825 05dc 0130A013 		movne	r3, #1	@, tmp385
 4826 05e0 FF3003E2 		and	r3, r3, #255	@ D.11211, tmp383,
 4827 05e4 000053E3 		cmp	r3, #0	@ D.11211,
 4828 05e8 70FFFF1A 		bne	.L309	@,
 4829              	.LBE55:
1530:fat16.cpp     ****         }
1531:fat16.cpp     ****     
1532:fat16.cpp     ****         return 1;
 4830              		.loc 1 1532 0 is_stmt 1
 4831 05ec 0130A0E3 		mov	r3, #1	@ D.11109,
ARM GAS  /tmp/ccNwMSzu.s 			page 114


 4832              	.L285:
 4833              	.LBE50:
1533:fat16.cpp     ****     
1534:fat16.cpp     ****     #else
1535:fat16.cpp     ****         return 0;
1536:fat16.cpp     ****     #endif
1537:fat16.cpp     **** }
 4834              		.loc 1 1537 0
 4835 05f0 0300A0E1 		mov	r0, r3	@, <retval>
 4836 05f4 5CD08DE2 		add	sp, sp, #92	@,,
 4837 05f8 04E09DE4 		ldr	lr, [sp], #4
 4838 05fc 1EFF2FE1 		bx	lr
 4839              	.L312:
 4840              		.align	2
 4841              	.L311:
 4842 0600 4FECC44E 		.word	1321528399
 4843              		.cfi_endproc
 4844              	.LFE134:
 4845              		.size	_ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE, .-_Z
 4846              		.section	.text._ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_struct
 4847              		.align	2
 4848              		.global	_ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE
 4849              		.type	_ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE, %funct
 4850              	_ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE:
 4851              	.LFB135:
1538:fat16.cpp     **** 
1539:fat16.cpp     **** /**
1540:fat16.cpp     ****  * \ingroup fat16_file
1541:fat16.cpp     ****  * Creates a file.
1542:fat16.cpp     ****  *
1543:fat16.cpp     ****  * Creates a file and obtains the directory entry of the
1544:fat16.cpp     ****  * new file. If the file to create already exists, the
1545:fat16.cpp     ****  * directory entry of the existing file will be returned
1546:fat16.cpp     ****  * within the dir_entry parameter.
1547:fat16.cpp     ****  *
1548:fat16.cpp     ****  * \note The file name is not checked for invalid characters.
1549:fat16.cpp     ****  *
1550:fat16.cpp     ****  * \note The generation of the short 8.3 file name is quite
1551:fat16.cpp     ****  * simple. The first eight characters are used for the filename.
1552:fat16.cpp     ****  * The extension, if any, is made up of the first three characters
1553:fat16.cpp     ****  * following the last dot within the long filename. If the
1554:fat16.cpp     ****  * filename (without the extension) is longer than eight characters,
1555:fat16.cpp     ****  * the lower byte of the cluster number replaces the last two
1556:fat16.cpp     ****  * characters to avoid name clashes. In any other case, it is your
1557:fat16.cpp     ****  * responsibility to avoid name clashes.
1558:fat16.cpp     ****  *
1559:fat16.cpp     ****  * \param[in] parent The handle of the directory in which to create the file.
1560:fat16.cpp     ****  * \param[in] file The name of the file to create.
1561:fat16.cpp     ****  * \param[out] dir_entry The directory entry to fill for the new file.
1562:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1563:fat16.cpp     ****  * \see fat16_delete_file
1564:fat16.cpp     ****  */
1565:fat16.cpp     **** uint8_t FAT16::fat16_create_file(struct fat16_dir_struct* parent, const char* file, struct fat16_di
1566:fat16.cpp     **** {
 4852              		.loc 1 1566 0
 4853              		.cfi_startproc
 4854              		@ Function supports interworking.
ARM GAS  /tmp/ccNwMSzu.s 			page 115


 4855              		@ args = 0, pretend = 0, frame = 48
 4856              		@ frame_needed = 0, uses_anonymous_args = 0
 4857 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 4858              	.LCFI46:
 4859              		.cfi_def_cfa_offset 4
 4860 0004 34D04DE2 		sub	sp, sp, #52	@,,
 4861              	.LCFI47:
 4862              		.cfi_def_cfa_offset 56
 4863 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 4864 000c 08108DE5 		str	r1, [sp, #8]	@ parent, parent
 4865 0010 04208DE5 		str	r2, [sp, #4]	@ file, file
 4866 0014 00308DE5 		str	r3, [sp, #0]	@ dir_entry, dir_entry
 4867              	.LBB57:
1567:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
1568:fat16.cpp     ****         if(!parent || !file || !file[0])
 4868              		.loc 1 1568 0
 4869 0018 08309DE5 		ldr	r3, [sp, #8]	@ tmp190, parent
 4870 001c 000053E3 		cmp	r3, #0	@ tmp190,
 4871 0020 0600000A 		beq	.L314	@,
 4872              		.cfi_offset 14, -4
 4873              		.loc 1 1568 0 is_stmt 0 discriminator 1
 4874 0024 04309DE5 		ldr	r3, [sp, #4]	@ tmp191, file
 4875 0028 000053E3 		cmp	r3, #0	@ tmp191,
 4876 002c 0300000A 		beq	.L314	@,
 4877              		.loc 1 1568 0 discriminator 2
 4878 0030 04309DE5 		ldr	r3, [sp, #4]	@ tmp192, file
 4879 0034 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11011,
 4880 0038 000053E3 		cmp	r3, #0	@ D.11011,
 4881 003c 0200001A 		bne	.L315	@,
 4882              	.L314:
1569:fat16.cpp     ****             return 0;
 4883              		.loc 1 1569 0 is_stmt 1
 4884 0040 0030A0E3 		mov	r3, #0	@ D.11012,
 4885 0044 DE0000EA 		b	.L316	@
 4886              	.L335:
1570:fat16.cpp     ****     
1571:fat16.cpp     ****         /* check if the file already exists */
1572:fat16.cpp     ****         while(1)
 4887              		.loc 1 1572 0
 4888 0048 0000A0E1 		mov	r0, r0	@ nop
 4889              	.L315:
1573:fat16.cpp     ****         {
1574:fat16.cpp     ****             if(!fat16_read_dir(parent, dir_entry))
 4890              		.loc 1 1574 0
 4891 004c 0C009DE5 		ldr	r0, [sp, #12]	@, this
 4892 0050 08109DE5 		ldr	r1, [sp, #8]	@, parent
 4893 0054 00209DE5 		ldr	r2, [sp, #0]	@, dir_entry
 4894 0058 FEFFFFEB 		bl	_ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE	@
 4895 005c 0030A0E1 		mov	r3, r0	@ tmp193,
 4896 0060 000053E3 		cmp	r3, #0	@ D.11017,
 4897 0064 0030A013 		movne	r3, #0	@, tmp195
 4898 0068 0130A003 		moveq	r3, #1	@, tmp195
 4899 006c FF3003E2 		and	r3, r3, #255	@ retval.8, tmp194,
 4900 0070 000053E3 		cmp	r3, #0	@ retval.8,
 4901 0074 2300000A 		beq	.L317	@,
1575:fat16.cpp     ****                 break;
1576:fat16.cpp     ****     
ARM GAS  /tmp/ccNwMSzu.s 			page 116


1577:fat16.cpp     ****             if(strcmp(file, dir_entry->long_name) == 0)
1578:fat16.cpp     ****             {
1579:fat16.cpp     ****                 fat16_reset_dir(parent);
1580:fat16.cpp     ****                 return 1;
1581:fat16.cpp     ****             }
1582:fat16.cpp     ****         }
1583:fat16.cpp     ****     
1584:fat16.cpp     ****         memset(dir_entry, 0, sizeof(*dir_entry));
 4902              		.loc 1 1584 0
 4903 0078 00009DE5 		ldr	r0, [sp, #0]	@, dir_entry
 4904 007c 0010A0E3 		mov	r1, #0	@,
 4905 0080 2C20A0E3 		mov	r2, #44	@,
 4906 0084 FEFFFFEB 		bl	memset	@
1585:fat16.cpp     ****         strncpy(dir_entry->long_name, file, sizeof(dir_entry->long_name) - 1);
 4907              		.loc 1 1585 0
 4908 0088 00309DE5 		ldr	r3, [sp, #0]	@ D.11024, dir_entry
 4909 008c 0300A0E1 		mov	r0, r3	@, D.11024
 4910 0090 04109DE5 		ldr	r1, [sp, #4]	@, file
 4911 0094 1F20A0E3 		mov	r2, #31	@,
 4912 0098 FEFFFFEB 		bl	strncpy	@
1586:fat16.cpp     ****     
1587:fat16.cpp     ****         /* search for a place where to write the directory entry to disk */
1588:fat16.cpp     ****         uint8_t free_dir_entries_needed = strlen(file) / 13 + 1 + 1;
 4913              		.loc 1 1588 0
 4914 009c 04009DE5 		ldr	r0, [sp, #4]	@, file
 4915 00a0 FEFFFFEB 		bl	strlen	@
 4916 00a4 0020A0E1 		mov	r2, r0	@ D.11025,
 4917 00a8 24339FE5 		ldr	r3, .L337	@ tmp197,
 4918 00ac 921383E0 		umull	r1, r3, r2, r3	@, tmp196, D.11025, tmp197
 4919 00b0 2331A0E1 		mov	r3, r3, lsr #2	@ D.11026, tmp196,
 4920 00b4 FF3003E2 		and	r3, r3, #255	@ D.11027, D.11026,
 4921 00b8 023083E2 		add	r3, r3, #2	@ tmp198, D.11027,
 4922 00bc 1F30CDE5 		strb	r3, [sp, #31]	@ tmp199, free_dir_entries_needed
1589:fat16.cpp     ****         uint8_t free_dir_entries_found = 0;
 4923              		.loc 1 1589 0
 4924 00c0 0030A0E3 		mov	r3, #0	@ tmp200,
 4925 00c4 2F30CDE5 		strb	r3, [sp, #47]	@ tmp201, free_dir_entries_found
1590:fat16.cpp     ****         struct fat16_fs_struct* fs = parent->fs;
 4926              		.loc 1 1590 0
 4927 00c8 08309DE5 		ldr	r3, [sp, #8]	@ tmp202, parent
 4928 00cc 003093E5 		ldr	r3, [r3, #0]	@ tmp203, parent_18(D)->fs
 4929 00d0 18308DE5 		str	r3, [sp, #24]	@ tmp203, fs
1591:fat16.cpp     ****         uint16_t cluster_num = parent->dir_entry.cluster;
 4930              		.loc 1 1591 0
 4931 00d4 08309DE5 		ldr	r3, [sp, #8]	@ tmp204, parent
 4932 00d8 B632D3E1 		ldrh	r3, [r3, #38]	@ movhi	@ tmp205, parent_18(D)->dir_entry.cluster
 4933 00dc BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp205, cluster_num
1592:fat16.cpp     ****         uint32_t dir_entry_offset = 0;
 4934              		.loc 1 1592 0
 4935 00e0 0030A0E3 		mov	r3, #0	@ tmp206,
 4936 00e4 28308DE5 		str	r3, [sp, #40]	@ tmp206, dir_entry_offset
1593:fat16.cpp     ****         uint32_t offset = 0;
 4937              		.loc 1 1593 0
 4938 00e8 0030A0E3 		mov	r3, #0	@ tmp207,
 4939 00ec 24308DE5 		str	r3, [sp, #36]	@ tmp207, offset
1594:fat16.cpp     ****         uint32_t offset_to = 0;
 4940              		.loc 1 1594 0
ARM GAS  /tmp/ccNwMSzu.s 			page 117


 4941 00f0 0030A0E3 		mov	r3, #0	@ tmp208,
 4942 00f4 20308DE5 		str	r3, [sp, #32]	@ tmp208, offset_to
1595:fat16.cpp     ****     
1596:fat16.cpp     ****         if(cluster_num == 0)
 4943              		.loc 1 1596 0
 4944 00f8 BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp209, cluster_num
 4945 00fc 000053E3 		cmp	r3, #0	@ tmp209,
 4946 0100 0C00000A 		beq	.L318	@,
 4947 0104 130000EA 		b	.L319	@
 4948              	.L317:
1577:fat16.cpp     ****             if(strcmp(file, dir_entry->long_name) == 0)
 4949              		.loc 1 1577 0
 4950 0108 00309DE5 		ldr	r3, [sp, #0]	@ D.11020, dir_entry
 4951 010c 04009DE5 		ldr	r0, [sp, #4]	@, file
 4952 0110 0310A0E1 		mov	r1, r3	@, D.11020
 4953 0114 FEFFFFEB 		bl	strcmp	@
 4954 0118 0030A0E1 		mov	r3, r0	@ tmp210,
 4955 011c 000053E3 		cmp	r3, #0	@ D.11021,
 4956 0120 C8FFFF1A 		bne	.L335	@,
1579:fat16.cpp     ****                 fat16_reset_dir(parent);
 4957              		.loc 1 1579 0
 4958 0124 0C009DE5 		ldr	r0, [sp, #12]	@, this
 4959 0128 08109DE5 		ldr	r1, [sp, #8]	@, parent
 4960 012c FEFFFFEB 		bl	_ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE	@
1580:fat16.cpp     ****                 return 1;
 4961              		.loc 1 1580 0
 4962 0130 0130A0E3 		mov	r3, #1	@ D.11012,
 4963 0134 A20000EA 		b	.L316	@
 4964              	.L318:
1597:fat16.cpp     ****         {
1598:fat16.cpp     ****             /* we read/write from the root directory entry */
1599:fat16.cpp     ****             offset = fs->header.root_dir_offset;
 4965              		.loc 1 1599 0
 4966 0138 18309DE5 		ldr	r3, [sp, #24]	@ tmp211, fs
 4967 013c 143093E5 		ldr	r3, [r3, #20]	@ tmp212, fs_31->header.root_dir_offset
 4968 0140 24308DE5 		str	r3, [sp, #36]	@ tmp212, offset
1600:fat16.cpp     ****             offset_to = fs->header.cluster_zero_offset;
 4969              		.loc 1 1600 0
 4970 0144 18309DE5 		ldr	r3, [sp, #24]	@ tmp213, fs
 4971 0148 183093E5 		ldr	r3, [r3, #24]	@ tmp214, fs_31->header.cluster_zero_offset
 4972 014c 20308DE5 		str	r3, [sp, #32]	@ tmp214, offset_to
1601:fat16.cpp     ****             dir_entry_offset = offset;
 4973              		.loc 1 1601 0
 4974 0150 24309DE5 		ldr	r3, [sp, #36]	@ tmp215, offset
 4975 0154 28308DE5 		str	r3, [sp, #40]	@ tmp215, dir_entry_offset
 4976              	.L319:
 4977              	.LBB58:
 4978              	.LBB59:
1602:fat16.cpp     ****         }
1603:fat16.cpp     ****     
1604:fat16.cpp     ****         while(1)
1605:fat16.cpp     ****         {
1606:fat16.cpp     ****             if(offset == offset_to)
 4979              		.loc 1 1606 0
 4980 0158 24209DE5 		ldr	r2, [sp, #36]	@ tmp216, offset
 4981 015c 20309DE5 		ldr	r3, [sp, #32]	@ tmp217, offset_to
 4982 0160 030052E1 		cmp	r2, r3	@ tmp216, tmp217
ARM GAS  /tmp/ccNwMSzu.s 			page 118


 4983 0164 3D00001A 		bne	.L321	@,
 4984              	.LBB60:
1607:fat16.cpp     ****             {
1608:fat16.cpp     ****                 if(cluster_num == 0)
 4985              		.loc 1 1608 0
 4986 0168 BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp218, cluster_num
 4987 016c 000053E3 		cmp	r3, #0	@ tmp218,
 4988 0170 0100001A 		bne	.L322	@,
1609:fat16.cpp     **** 				/* We iterated through the whole root directory entry
1610:fat16.cpp     ****                 * and could not find enough space for the directory entry.
1611:fat16.cpp     ****                 */
1612:fat16.cpp     ****                 return 0;
 4989              		.loc 1 1612 0
 4990 0174 0030A0E3 		mov	r3, #0	@ D.11012,
 4991 0178 910000EA 		b	.L316	@
 4992              	.L322:
 4993              	.LBB61:
1613:fat16.cpp     ****     
1614:fat16.cpp     ****                 if(offset)
 4994              		.loc 1 1614 0
 4995 017c 24309DE5 		ldr	r3, [sp, #36]	@ tmp219, offset
 4996 0180 000053E3 		cmp	r3, #0	@ tmp219,
 4997 0184 2200000A 		beq	.L323	@,
 4998              	.LBB62:
1615:fat16.cpp     ****                 {
1616:fat16.cpp     ****                     /* We reached a cluster boundary and have to
1617:fat16.cpp     ****                     * switch to the next cluster.
1618:fat16.cpp     ****                     */
1619:fat16.cpp     ****     
1620:fat16.cpp     ****                     uint16_t cluster_next = fat16_get_next_cluster(fs, cluster_num);
 4999              		.loc 1 1620 0
 5000 0188 BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp220, cluster_num
 5001 018c 0C009DE5 		ldr	r0, [sp, #12]	@, this
 5002 0190 18109DE5 		ldr	r1, [sp, #24]	@, fs
 5003 0194 0320A0E1 		mov	r2, r3	@, tmp220
 5004 0198 FEFFFFEB 		bl	_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt	@
 5005 019c 0030A0E1 		mov	r3, r0	@ tmp221,
 5006 01a0 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp221, cluster_next
1621:fat16.cpp     ****                     if(!cluster_next)
 5007              		.loc 1 1621 0
 5008 01a4 B631DDE1 		ldrh	r3, [sp, #22]	@ tmp222, cluster_next
 5009 01a8 000053E3 		cmp	r3, #0	@ tmp222,
 5010 01ac 1600001A 		bne	.L324	@,
1622:fat16.cpp     ****                     {
1623:fat16.cpp     ****                         cluster_next = fat16_append_clusters(fs, cluster_num, 1);
 5011              		.loc 1 1623 0
 5012 01b0 BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp223, cluster_num
 5013 01b4 0C009DE5 		ldr	r0, [sp, #12]	@, this
 5014 01b8 18109DE5 		ldr	r1, [sp, #24]	@, fs
 5015 01bc 0320A0E1 		mov	r2, r3	@, tmp223
 5016 01c0 0130A0E3 		mov	r3, #1	@,
 5017 01c4 FEFFFFEB 		bl	_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt	@
 5018 01c8 0030A0E1 		mov	r3, r0	@ tmp224,
 5019 01cc B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp224, cluster_next
1624:fat16.cpp     ****                         if(!cluster_next)
 5020              		.loc 1 1624 0
 5021 01d0 B631DDE1 		ldrh	r3, [sp, #22]	@ tmp225, cluster_next
ARM GAS  /tmp/ccNwMSzu.s 			page 119


 5022 01d4 000053E3 		cmp	r3, #0	@ tmp225,
 5023 01d8 0100001A 		bne	.L325	@,
1625:fat16.cpp     ****                             return 0;
 5024              		.loc 1 1625 0
 5025 01dc 0030A0E3 		mov	r3, #0	@ D.11012,
 5026 01e0 770000EA 		b	.L316	@
 5027              	.L325:
1626:fat16.cpp     ****     
1627:fat16.cpp     ****                         /* we appended a new cluster and know it is free */
1628:fat16.cpp     ****                         dir_entry_offset = fs->header.cluster_zero_offset +
1629:fat16.cpp     ****                         (uint32_t) (cluster_next - 2) * fs->header.cluster_size;
 5028              		.loc 1 1629 0
 5029 01e4 18309DE5 		ldr	r3, [sp, #24]	@ tmp226, fs
 5030 01e8 182093E5 		ldr	r2, [r3, #24]	@ D.11044, fs_31->header.cluster_zero_offset
 5031 01ec B631DDE1 		ldrh	r3, [sp, #22]	@ D.11045, cluster_next
 5032 01f0 023043E2 		sub	r3, r3, #2	@ D.11046, D.11045,
 5033 01f4 18109DE5 		ldr	r1, [sp, #24]	@ tmp227, fs
 5034 01f8 B211D1E1 		ldrh	r1, [r1, #18]	@ D.11048, fs_31->header.cluster_size
 5035 01fc 910303E0 		mul	r3, r1, r3	@ D.11050, D.11049, D.11047
 5036 0200 033082E0 		add	r3, r2, r3	@ tmp228, D.11044, D.11050
 5037 0204 28308DE5 		str	r3, [sp, #40]	@ tmp228, dir_entry_offset
1630:fat16.cpp     ****     
1631:fat16.cpp     ****                         /* TODO: This cluster has to be zeroed in an efficient way, or at least
1632:fat16.cpp     ****                         *       every 32th byte should be set to FAT16_DIRENTRY_DELETED.
1633:fat16.cpp     ****                         */
1634:fat16.cpp     ****                         break;
 5038              		.loc 1 1634 0
 5039 0208 5C0000EA 		b	.L326	@
 5040              	.L324:
1635:fat16.cpp     ****                     }
1636:fat16.cpp     ****                     cluster_num = cluster_next;
 5041              		.loc 1 1636 0
 5042 020c B631DDE1 		ldrh	r3, [sp, #22]	@ movhi	@ tmp229, cluster_next
 5043 0210 BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp229, cluster_num
 5044              	.L323:
 5045              	.LBE62:
 5046              	.LBE61:
1637:fat16.cpp     ****                 }
1638:fat16.cpp     ****     
1639:fat16.cpp     ****                 offset = fs->header.cluster_zero_offset +
1640:fat16.cpp     ****                 (uint32_t) (cluster_num - 2) * fs->header.cluster_size;
 5047              		.loc 1 1640 0
 5048 0214 18309DE5 		ldr	r3, [sp, #24]	@ tmp230, fs
 5049 0218 182093E5 		ldr	r2, [r3, #24]	@ D.11052, fs_31->header.cluster_zero_offset
 5050 021c BC32DDE1 		ldrh	r3, [sp, #44]	@ D.11053, cluster_num
 5051 0220 023043E2 		sub	r3, r3, #2	@ D.11054, D.11053,
 5052 0224 18109DE5 		ldr	r1, [sp, #24]	@ tmp231, fs
 5053 0228 B211D1E1 		ldrh	r1, [r1, #18]	@ D.11056, fs_31->header.cluster_size
 5054 022c 910303E0 		mul	r3, r1, r3	@ D.11058, D.11057, D.11055
 5055 0230 033082E0 		add	r3, r2, r3	@ tmp232, D.11052, D.11058
 5056 0234 24308DE5 		str	r3, [sp, #36]	@ tmp232, offset
1641:fat16.cpp     ****                 offset_to = offset + fs->header.cluster_size;
 5057              		.loc 1 1641 0
 5058 0238 18309DE5 		ldr	r3, [sp, #24]	@ tmp233, fs
 5059 023c B231D3E1 		ldrh	r3, [r3, #18]	@ D.11059, fs_31->header.cluster_size
 5060 0240 0320A0E1 		mov	r2, r3	@ D.11060, D.11059
 5061 0244 24309DE5 		ldr	r3, [sp, #36]	@ tmp234, offset
ARM GAS  /tmp/ccNwMSzu.s 			page 120


 5062 0248 033082E0 		add	r3, r2, r3	@ tmp235, D.11060, tmp234
 5063 024c 20308DE5 		str	r3, [sp, #32]	@ tmp235, offset_to
1642:fat16.cpp     ****                 dir_entry_offset = offset;
 5064              		.loc 1 1642 0
 5065 0250 24309DE5 		ldr	r3, [sp, #36]	@ tmp236, offset
 5066 0254 28308DE5 		str	r3, [sp, #40]	@ tmp236, dir_entry_offset
1643:fat16.cpp     ****                 free_dir_entries_found = 0;
 5067              		.loc 1 1643 0
 5068 0258 0030A0E3 		mov	r3, #0	@ tmp237,
 5069 025c 2F30CDE5 		strb	r3, [sp, #47]	@ tmp238, free_dir_entries_found
 5070              	.L321:
 5071              	.LBE60:
 5072              	.LBE59:
1644:fat16.cpp     ****             }
1645:fat16.cpp     ****     
1646:fat16.cpp     ****             /* read next lfn or 8.3 entry */
1647:fat16.cpp     ****             uint8_t first_char;
1648:fat16.cpp     ****             if(!(GetInstance()->*fs->partition->device_read)(offset, &first_char, sizeof(first_char
 5073              		.loc 1 1648 0
 5074 0260 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 5075 0264 0030A0E1 		mov	r3, r0	@ D.11063,
 5076 0268 18209DE5 		ldr	r2, [sp, #24]	@ tmp239, fs
 5077 026c 002092E5 		ldr	r2, [r2, #0]	@ D.11065, fs_31->partition
 5078 0270 042092E5 		ldr	r2, [r2, #4]	@ D.11066, D.11065_66->device_read.__delta
 5079 0274 012002E2 		and	r2, r2, #1	@ D.11067, D.11066,
 5080 0278 FF2002E2 		and	r2, r2, #255	@ D.11068, D.11067,
 5081 027c 000052E3 		cmp	r2, #0	@ D.11068,
 5082 0280 0C00000A 		beq	.L327	@,
 5083              		.loc 1 1648 0 is_stmt 0 discriminator 1
 5084 0284 18209DE5 		ldr	r2, [sp, #24]	@ tmp240, fs
 5085 0288 002092E5 		ldr	r2, [r2, #0]	@ D.11071, fs_31->partition
 5086 028c 042092E5 		ldr	r2, [r2, #4]	@ D.11072, D.11071_70->device_read.__delta
 5087 0290 C220A0E1 		mov	r2, r2, asr #1	@ D.11073, D.11072,
 5088 0294 022083E0 		add	r2, r3, r2	@ D.11075, D.11063, D.11074
 5089 0298 001092E5 		ldr	r1, [r2, #0]	@ D.11077,* D.11076
 5090 029c 18209DE5 		ldr	r2, [sp, #24]	@ tmp241, fs
 5091 02a0 002092E5 		ldr	r2, [r2, #0]	@ D.11078, fs_31->partition
 5092 02a4 002092E5 		ldr	r2, [r2, #0]	@ D.11079, D.11078_77->device_read.__pfn
 5093 02a8 022081E0 		add	r2, r1, r2	@ D.11081, D.11077, D.11080
 5094 02ac 002092E5 		ldr	r2, [r2, #0]	@ D.11082,* D.11081
 5095 02b0 02C0A0E1 		mov	ip, r2	@ iftmp.10, D.11082
 5096 02b4 020000EA 		b	.L328	@
 5097              	.L327:
 5098              		.loc 1 1648 0 discriminator 2
 5099 02b8 18209DE5 		ldr	r2, [sp, #24]	@ tmp242, fs
 5100 02bc 002092E5 		ldr	r2, [r2, #0]	@ D.11084, fs_31->partition
 5101 02c0 00C092E5 		ldr	ip, [r2, #0]	@ iftmp.10, D.11084_83->device_read.__pfn
 5102              	.L328:
 5103              		.loc 1 1648 0 discriminator 3
 5104 02c4 18209DE5 		ldr	r2, [sp, #24]	@ tmp243, fs
 5105 02c8 002092E5 		ldr	r2, [r2, #0]	@ D.11085, fs_31->partition
 5106 02cc 042092E5 		ldr	r2, [r2, #4]	@ D.11086, D.11085_85->device_read.__delta
 5107 02d0 C220A0E1 		mov	r2, r2, asr #1	@ D.11087, D.11086,
 5108 02d4 022083E0 		add	r2, r3, r2	@ D.11089, D.11063, D.11088
 5109 02d8 15308DE2 		add	r3, sp, #21	@ tmp244,,
 5110 02dc 0200A0E1 		mov	r0, r2	@, D.11089
 5111 02e0 24109DE5 		ldr	r1, [sp, #36]	@, offset
ARM GAS  /tmp/ccNwMSzu.s 			page 121


 5112 02e4 0320A0E1 		mov	r2, r3	@, tmp244
 5113 02e8 0130A0E3 		mov	r3, #1	@,
 5114 02ec 0FE0A0E1 		mov	lr, pc
 5115 02f0 1CFF2FE1 		bx	ip	@ iftmp.10
 5116 02f4 0030A0E1 		mov	r3, r0	@ tmp245,
 5117 02f8 000053E3 		cmp	r3, #0	@ D.11090,
 5118 02fc 0030A013 		movne	r3, #0	@, tmp247
 5119 0300 0130A003 		moveq	r3, #1	@, tmp247
 5120 0304 FF3003E2 		and	r3, r3, #255	@ retval.9, tmp246,
 5121 0308 000053E3 		cmp	r3, #0	@ retval.9,
 5122 030c 0100000A 		beq	.L329	@,
1649:fat16.cpp     ****                 return 0;
 5123              		.loc 1 1649 0 is_stmt 1
 5124 0310 0030A0E3 		mov	r3, #0	@ D.11012,
 5125 0314 2A0000EA 		b	.L316	@
 5126              	.L329:
1650:fat16.cpp     ****     
1651:fat16.cpp     ****             /* check if we found a free directory entry */
1652:fat16.cpp     ****             if(first_char == FAT16_DIRENTRY_DELETED || !first_char)
 5127              		.loc 1 1652 0
 5128 0318 1530DDE5 		ldrb	r3, [sp, #21]	@ zero_extendqisi2	@ first_char.11, first_char
 5129 031c E50053E3 		cmp	r3, #229	@ first_char.11,
 5130 0320 0200000A 		beq	.L330	@,
 5131              		.loc 1 1652 0 is_stmt 0 discriminator 1
 5132 0324 1530DDE5 		ldrb	r3, [sp, #21]	@ zero_extendqisi2	@ first_char.12, first_char
 5133 0328 000053E3 		cmp	r3, #0	@ first_char.12,
 5134 032c 0A00001A 		bne	.L331	@,
 5135              	.L330:
1653:fat16.cpp     ****             {
1654:fat16.cpp     ****                 /* check if we have the needed number of available entries */
1655:fat16.cpp     ****                 ++free_dir_entries_found;
 5136              		.loc 1 1655 0 is_stmt 1
 5137 0330 2F30DDE5 		ldrb	r3, [sp, #47]	@ tmp248, free_dir_entries_found
 5138 0334 013083E2 		add	r3, r3, #1	@ tmp249, tmp248,
 5139 0338 2F30CDE5 		strb	r3, [sp, #47]	@ tmp250, free_dir_entries_found
1656:fat16.cpp     ****                 if(free_dir_entries_found >= free_dir_entries_needed)
 5140              		.loc 1 1656 0
 5141 033c 2F20DDE5 		ldrb	r2, [sp, #47]	@ zero_extendqisi2	@ tmp251, free_dir_entries_found
 5142 0340 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ tmp252, free_dir_entries_needed
 5143 0344 030052E1 		cmp	r2, r3	@ tmp251, tmp252
 5144 0348 0B00002A 		bcs	.L336	@,
 5145              	.L332:
1657:fat16.cpp     ****                     break;
1658:fat16.cpp     ****     
1659:fat16.cpp     ****                 offset += 32;
 5146              		.loc 1 1659 0
 5147 034c 24309DE5 		ldr	r3, [sp, #36]	@ tmp253, offset
 5148 0350 203083E2 		add	r3, r3, #32	@ tmp254, tmp253,
 5149 0354 24308DE5 		str	r3, [sp, #36]	@ tmp254, offset
 5150              	.LBE58:
1604:fat16.cpp     ****         while(1)
 5151              		.loc 1 1604 0
 5152 0358 7EFFFFEA 		b	.L319	@
 5153              	.L331:
 5154              	.LBB63:
1660:fat16.cpp     ****             }
1661:fat16.cpp     ****             else
ARM GAS  /tmp/ccNwMSzu.s 			page 122


1662:fat16.cpp     ****             {
1663:fat16.cpp     ****                 offset += 32;
 5155              		.loc 1 1663 0
 5156 035c 24309DE5 		ldr	r3, [sp, #36]	@ tmp255, offset
 5157 0360 203083E2 		add	r3, r3, #32	@ tmp256, tmp255,
 5158 0364 24308DE5 		str	r3, [sp, #36]	@ tmp256, offset
1664:fat16.cpp     ****                 dir_entry_offset = offset;
 5159              		.loc 1 1664 0
 5160 0368 24309DE5 		ldr	r3, [sp, #36]	@ tmp257, offset
 5161 036c 28308DE5 		str	r3, [sp, #40]	@ tmp257, dir_entry_offset
1665:fat16.cpp     ****                 free_dir_entries_found = 0;
 5162              		.loc 1 1665 0
 5163 0370 0030A0E3 		mov	r3, #0	@ tmp258,
 5164 0374 2F30CDE5 		strb	r3, [sp, #47]	@ tmp259, free_dir_entries_found
 5165              	.LBE63:
1604:fat16.cpp     ****         while(1)
 5166              		.loc 1 1604 0
 5167 0378 76FFFFEA 		b	.L319	@
 5168              	.L336:
 5169              	.LBB64:
1657:fat16.cpp     ****                     break;
 5170              		.loc 1 1657 0
 5171 037c 0000A0E1 		mov	r0, r0	@ nop
 5172              	.L326:
 5173              	.LBE64:
1666:fat16.cpp     ****             }
1667:fat16.cpp     ****         }
1668:fat16.cpp     **** 
1669:fat16.cpp     ****         /* write directory entry to disk */
1670:fat16.cpp     ****         dir_entry->entry_offset = dir_entry_offset;
 5174              		.loc 1 1670 0
 5175 0380 00309DE5 		ldr	r3, [sp, #0]	@ tmp260, dir_entry
 5176 0384 28209DE5 		ldr	r2, [sp, #40]	@ tmp261, dir_entry_offset
 5177 0388 282083E5 		str	r2, [r3, #40]	@ tmp261, dir_entry_22(D)->entry_offset
1671:fat16.cpp     ****         if(!fat16_write_dir_entry(fs, dir_entry))
 5178              		.loc 1 1671 0
 5179 038c 0C009DE5 		ldr	r0, [sp, #12]	@, this
 5180 0390 18109DE5 		ldr	r1, [sp, #24]	@, fs
 5181 0394 00209DE5 		ldr	r2, [sp, #0]	@, dir_entry
 5182 0398 FEFFFFEB 		bl	_ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE	@
 5183 039c 0030A0E1 		mov	r3, r0	@ tmp262,
 5184 03a0 000053E3 		cmp	r3, #0	@ D.11102,
 5185 03a4 0030A013 		movne	r3, #0	@, tmp264
 5186 03a8 0130A003 		moveq	r3, #1	@, tmp264
 5187 03ac FF3003E2 		and	r3, r3, #255	@ retval.13, tmp263,
 5188 03b0 000053E3 		cmp	r3, #0	@ retval.13,
 5189 03b4 0100000A 		beq	.L334	@,
1672:fat16.cpp     ****             return 0;
 5190              		.loc 1 1672 0
 5191 03b8 0030A0E3 		mov	r3, #0	@ D.11012,
 5192 03bc 000000EA 		b	.L316	@
 5193              	.L334:
1673:fat16.cpp     ****     
1674:fat16.cpp     ****         return 1;
 5194              		.loc 1 1674 0
 5195 03c0 0130A0E3 		mov	r3, #1	@ D.11012,
 5196              	.L316:
ARM GAS  /tmp/ccNwMSzu.s 			page 123


 5197              	.LBE57:
1675:fat16.cpp     ****     
1676:fat16.cpp     ****     #else
1677:fat16.cpp     ****         return 0;
1678:fat16.cpp     ****     #endif
1679:fat16.cpp     **** }
 5198              		.loc 1 1679 0
 5199 03c4 0300A0E1 		mov	r0, r3	@, <retval>
 5200 03c8 34D08DE2 		add	sp, sp, #52	@,,
 5201 03cc 04E09DE4 		ldr	lr, [sp], #4
 5202 03d0 1EFF2FE1 		bx	lr
 5203              	.L338:
 5204              		.align	2
 5205              	.L337:
 5206 03d4 4FECC44E 		.word	1321528399
 5207              		.cfi_endproc
 5208              	.LFE135:
 5209              		.size	_ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE, .-_ZN5
 5210              		.section	.text._ZN5FAT1617fat16_delete_fileEPNS_15fat16_fs_structEPNS_22fat16_dir_entry_structE,"a
 5211              		.align	2
 5212              		.global	_ZN5FAT1617fat16_delete_fileEPNS_15fat16_fs_structEPNS_22fat16_dir_entry_structE
 5213              		.type	_ZN5FAT1617fat16_delete_fileEPNS_15fat16_fs_structEPNS_22fat16_dir_entry_structE, %function
 5214              	_ZN5FAT1617fat16_delete_fileEPNS_15fat16_fs_structEPNS_22fat16_dir_entry_structE:
 5215              	.LFB136:
1680:fat16.cpp     **** 
1681:fat16.cpp     **** /**
1682:fat16.cpp     ****  * \ingroup fat16_file
1683:fat16.cpp     ****  * Deletes a file or directory.
1684:fat16.cpp     ****  *
1685:fat16.cpp     ****  * It is not checked if the file to delete is a directory.
1686:fat16.cpp     ****  * If a directory is deleted without first deleting its
1687:fat16.cpp     ****  * subdirectories and files, disk space occupied by these
1688:fat16.cpp     ****  * files will get wasted as there is no chance to release
1689:fat16.cpp     ****  * it and mark it as free.
1690:fat16.cpp     ****  *
1691:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
1692:fat16.cpp     ****  * \param[in] dir_entry The directory entry of the file to delete.
1693:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1694:fat16.cpp     ****  * \see fat16_create_file
1695:fat16.cpp     ****  */
1696:fat16.cpp     **** uint8_t FAT16::fat16_delete_file(struct fat16_fs_struct* fs, struct fat16_dir_entry_struct* dir_ent
1697:fat16.cpp     **** {
 5216              		.loc 1 1697 0
 5217              		.cfi_startproc
 5218              		@ Function supports interworking.
 5219              		@ args = 0, pretend = 0, frame = 32
 5220              		@ frame_needed = 0, uses_anonymous_args = 0
 5221 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 5222              	.LCFI48:
 5223              		.cfi_def_cfa_offset 4
 5224 0004 24D04DE2 		sub	sp, sp, #36	@,,
 5225              	.LCFI49:
 5226              		.cfi_def_cfa_offset 40
 5227 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 5228 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 5229 0010 04208DE5 		str	r2, [sp, #4]	@ dir_entry, dir_entry
 5230              	.LBB65:
ARM GAS  /tmp/ccNwMSzu.s 			page 124


1698:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
1699:fat16.cpp     ****         if(!fs || !dir_entry)
 5231              		.loc 1 1699 0
 5232 0014 08309DE5 		ldr	r3, [sp, #8]	@ tmp189, fs
 5233 0018 000053E3 		cmp	r3, #0	@ tmp189,
 5234 001c 0200000A 		beq	.L340	@,
 5235              		.cfi_offset 14, -4
 5236              		.loc 1 1699 0 is_stmt 0 discriminator 1
 5237 0020 04309DE5 		ldr	r3, [sp, #4]	@ tmp190, dir_entry
 5238 0024 000053E3 		cmp	r3, #0	@ tmp190,
 5239 0028 0100001A 		bne	.L341	@,
 5240              	.L340:
1700:fat16.cpp     ****             return 0;
 5241              		.loc 1 1700 0 is_stmt 1
 5242 002c 0030A0E3 		mov	r3, #0	@ D.10934,
 5243 0030 740000EA 		b	.L342	@
 5244              	.L341:
1701:fat16.cpp     ****     
1702:fat16.cpp     ****         /* get offset of the file's directory entry */
1703:fat16.cpp     ****         uint32_t dir_entry_offset = dir_entry->entry_offset;
 5245              		.loc 1 1703 0
 5246 0034 04309DE5 		ldr	r3, [sp, #4]	@ tmp191, dir_entry
 5247 0038 283093E5 		ldr	r3, [r3, #40]	@ tmp192, dir_entry_6(D)->entry_offset
 5248 003c 1C308DE5 		str	r3, [sp, #28]	@ tmp192, dir_entry_offset
1704:fat16.cpp     ****         if(!dir_entry_offset)
 5249              		.loc 1 1704 0
 5250 0040 1C309DE5 		ldr	r3, [sp, #28]	@ tmp193, dir_entry_offset
 5251 0044 000053E3 		cmp	r3, #0	@ tmp193,
 5252 0048 0100001A 		bne	.L343	@,
1705:fat16.cpp     ****             return 0;
 5253              		.loc 1 1705 0
 5254 004c 0030A0E3 		mov	r3, #0	@ D.10934,
 5255 0050 6C0000EA 		b	.L342	@
 5256              	.L343:
1706:fat16.cpp     ****     
1707:fat16.cpp     ****         uint8_t buffer[12];
1708:fat16.cpp     ****         while(1)
1709:fat16.cpp     ****         {
1710:fat16.cpp     ****             /* read directory entry */
1711:fat16.cpp     ****             if(!(GetInstance()->*fs->partition->device_read)(dir_entry_offset, buffer, sizeof(buffe
 5257              		.loc 1 1711 0
 5258 0054 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 5259 0058 0030A0E1 		mov	r3, r0	@ D.10941,
 5260 005c 08209DE5 		ldr	r2, [sp, #8]	@ tmp194, fs
 5261 0060 002092E5 		ldr	r2, [r2, #0]	@ D.10943, fs_5(D)->partition
 5262 0064 042092E5 		ldr	r2, [r2, #4]	@ D.10944, D.10943_10->device_read.__delta
 5263 0068 012002E2 		and	r2, r2, #1	@ D.10945, D.10944,
 5264 006c FF2002E2 		and	r2, r2, #255	@ D.10946, D.10945,
 5265 0070 000052E3 		cmp	r2, #0	@ D.10946,
 5266 0074 0C00000A 		beq	.L344	@,
 5267              		.loc 1 1711 0 is_stmt 0 discriminator 1
 5268 0078 08209DE5 		ldr	r2, [sp, #8]	@ tmp195, fs
 5269 007c 002092E5 		ldr	r2, [r2, #0]	@ D.10949, fs_5(D)->partition
 5270 0080 042092E5 		ldr	r2, [r2, #4]	@ D.10950, D.10949_14->device_read.__delta
 5271 0084 C220A0E1 		mov	r2, r2, asr #1	@ D.10951, D.10950,
 5272 0088 022083E0 		add	r2, r3, r2	@ D.10953, D.10941, D.10952
 5273 008c 001092E5 		ldr	r1, [r2, #0]	@ D.10955,* D.10954
ARM GAS  /tmp/ccNwMSzu.s 			page 125


 5274 0090 08209DE5 		ldr	r2, [sp, #8]	@ tmp196, fs
 5275 0094 002092E5 		ldr	r2, [r2, #0]	@ D.10956, fs_5(D)->partition
 5276 0098 002092E5 		ldr	r2, [r2, #0]	@ D.10957, D.10956_21->device_read.__pfn
 5277 009c 022081E0 		add	r2, r1, r2	@ D.10959, D.10955, D.10958
 5278 00a0 002092E5 		ldr	r2, [r2, #0]	@ D.10960,* D.10959
 5279 00a4 02C0A0E1 		mov	ip, r2	@ iftmp.5, D.10960
 5280 00a8 020000EA 		b	.L345	@
 5281              	.L344:
 5282              		.loc 1 1711 0 discriminator 2
 5283 00ac 08209DE5 		ldr	r2, [sp, #8]	@ tmp197, fs
 5284 00b0 002092E5 		ldr	r2, [r2, #0]	@ D.10962, fs_5(D)->partition
 5285 00b4 00C092E5 		ldr	ip, [r2, #0]	@ iftmp.5, D.10962_27->device_read.__pfn
 5286              	.L345:
 5287              		.loc 1 1711 0 discriminator 3
 5288 00b8 08209DE5 		ldr	r2, [sp, #8]	@ tmp198, fs
 5289 00bc 002092E5 		ldr	r2, [r2, #0]	@ D.10963, fs_5(D)->partition
 5290 00c0 042092E5 		ldr	r2, [r2, #4]	@ D.10964, D.10963_29->device_read.__delta
 5291 00c4 C220A0E1 		mov	r2, r2, asr #1	@ D.10965, D.10964,
 5292 00c8 022083E0 		add	r2, r3, r2	@ D.10967, D.10941, D.10966
 5293 00cc 10308DE2 		add	r3, sp, #16	@ tmp199,,
 5294 00d0 0200A0E1 		mov	r0, r2	@, D.10967
 5295 00d4 1C109DE5 		ldr	r1, [sp, #28]	@, dir_entry_offset
 5296 00d8 0320A0E1 		mov	r2, r3	@, tmp199
 5297 00dc 0C30A0E3 		mov	r3, #12	@,
 5298 00e0 0FE0A0E1 		mov	lr, pc
 5299 00e4 1CFF2FE1 		bx	ip	@ iftmp.5
 5300 00e8 0030A0E1 		mov	r3, r0	@ tmp200,
 5301 00ec 000053E3 		cmp	r3, #0	@ D.10968,
 5302 00f0 0030A013 		movne	r3, #0	@, tmp202
 5303 00f4 0130A003 		moveq	r3, #1	@, tmp202
 5304 00f8 FF3003E2 		and	r3, r3, #255	@ retval.4, tmp201,
 5305 00fc 000053E3 		cmp	r3, #0	@ retval.4,
 5306 0100 0100000A 		beq	.L346	@,
1712:fat16.cpp     ****                 return 0;
 5307              		.loc 1 1712 0 is_stmt 1
 5308 0104 0030A0E3 		mov	r3, #0	@ D.10934,
 5309 0108 3E0000EA 		b	.L342	@
 5310              	.L346:
1713:fat16.cpp     ****     
1714:fat16.cpp     ****             /* mark the directory entry as deleted */
1715:fat16.cpp     ****             buffer[0] = FAT16_DIRENTRY_DELETED;
 5311              		.loc 1 1715 0
 5312 010c 1A30E0E3 		mvn	r3, #26	@ tmp203,
 5313 0110 1030CDE5 		strb	r3, [sp, #16]	@ tmp204, buffer
1716:fat16.cpp     ****     
1717:fat16.cpp     ****             /* write back entry */
1718:fat16.cpp     ****             if(!(GetInstance()->*fs->partition->device_write)(dir_entry_offset, buffer, sizeof(buff
 5314              		.loc 1 1718 0
 5315 0114 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 5316 0118 0030A0E1 		mov	r3, r0	@ D.10972,
 5317 011c 08209DE5 		ldr	r2, [sp, #8]	@ tmp205, fs
 5318 0120 002092E5 		ldr	r2, [r2, #0]	@ D.10974, fs_5(D)->partition
 5319 0124 142092E5 		ldr	r2, [r2, #20]	@ D.10975, D.10974_38->device_write.__delta
 5320 0128 012002E2 		and	r2, r2, #1	@ D.10976, D.10975,
 5321 012c FF2002E2 		and	r2, r2, #255	@ D.10977, D.10976,
 5322 0130 000052E3 		cmp	r2, #0	@ D.10977,
 5323 0134 0C00000A 		beq	.L347	@,
ARM GAS  /tmp/ccNwMSzu.s 			page 126


 5324              		.loc 1 1718 0 is_stmt 0 discriminator 1
 5325 0138 08209DE5 		ldr	r2, [sp, #8]	@ tmp206, fs
 5326 013c 002092E5 		ldr	r2, [r2, #0]	@ D.10980, fs_5(D)->partition
 5327 0140 142092E5 		ldr	r2, [r2, #20]	@ D.10981, D.10980_42->device_write.__delta
 5328 0144 C220A0E1 		mov	r2, r2, asr #1	@ D.10982, D.10981,
 5329 0148 022083E0 		add	r2, r3, r2	@ D.10984, D.10972, D.10983
 5330 014c 001092E5 		ldr	r1, [r2, #0]	@ D.10986,* D.10985
 5331 0150 08209DE5 		ldr	r2, [sp, #8]	@ tmp207, fs
 5332 0154 002092E5 		ldr	r2, [r2, #0]	@ D.10987, fs_5(D)->partition
 5333 0158 102092E5 		ldr	r2, [r2, #16]	@ D.10988, D.10987_49->device_write.__pfn
 5334 015c 022081E0 		add	r2, r1, r2	@ D.10990, D.10986, D.10989
 5335 0160 002092E5 		ldr	r2, [r2, #0]	@ D.10991,* D.10990
 5336 0164 02C0A0E1 		mov	ip, r2	@ iftmp.7, D.10991
 5337 0168 020000EA 		b	.L348	@
 5338              	.L347:
 5339              		.loc 1 1718 0 discriminator 2
 5340 016c 08209DE5 		ldr	r2, [sp, #8]	@ tmp208, fs
 5341 0170 002092E5 		ldr	r2, [r2, #0]	@ D.10993, fs_5(D)->partition
 5342 0174 10C092E5 		ldr	ip, [r2, #16]	@ iftmp.7, D.10993_55->device_write.__pfn
 5343              	.L348:
 5344              		.loc 1 1718 0 discriminator 3
 5345 0178 08209DE5 		ldr	r2, [sp, #8]	@ tmp209, fs
 5346 017c 002092E5 		ldr	r2, [r2, #0]	@ D.10994, fs_5(D)->partition
 5347 0180 142092E5 		ldr	r2, [r2, #20]	@ D.10995, D.10994_57->device_write.__delta
 5348 0184 C220A0E1 		mov	r2, r2, asr #1	@ D.10996, D.10995,
 5349 0188 022083E0 		add	r2, r3, r2	@ D.10998, D.10972, D.10997
 5350 018c 10308DE2 		add	r3, sp, #16	@ tmp210,,
 5351 0190 0200A0E1 		mov	r0, r2	@, D.10998
 5352 0194 1C109DE5 		ldr	r1, [sp, #28]	@, dir_entry_offset
 5353 0198 0320A0E1 		mov	r2, r3	@, tmp210
 5354 019c 0C30A0E3 		mov	r3, #12	@,
 5355 01a0 0FE0A0E1 		mov	lr, pc
 5356 01a4 1CFF2FE1 		bx	ip	@ iftmp.7
 5357 01a8 0030A0E1 		mov	r3, r0	@ tmp211,
 5358 01ac 000053E3 		cmp	r3, #0	@ D.10999,
 5359 01b0 0030A013 		movne	r3, #0	@, tmp213
 5360 01b4 0130A003 		moveq	r3, #1	@, tmp213
 5361 01b8 FF3003E2 		and	r3, r3, #255	@ retval.6, tmp212,
 5362 01bc 000053E3 		cmp	r3, #0	@ retval.6,
 5363 01c0 0100000A 		beq	.L349	@,
1719:fat16.cpp     ****                 return 0;
 5364              		.loc 1 1719 0 is_stmt 1
 5365 01c4 0030A0E3 		mov	r3, #0	@ D.10934,
 5366 01c8 0E0000EA 		b	.L342	@
 5367              	.L349:
1720:fat16.cpp     ****     
1721:fat16.cpp     ****             /* check if we deleted the whole entry */
1722:fat16.cpp     ****             if(buffer[11] != 0x0f)
 5368              		.loc 1 1722 0
 5369 01cc 1B30DDE5 		ldrb	r3, [sp, #27]	@ zero_extendqisi2	@ D.11002, buffer
 5370 01d0 0F0053E3 		cmp	r3, #15	@ D.11002,
 5371 01d4 0700000A 		beq	.L350	@,
1723:fat16.cpp     ****                 break;
1724:fat16.cpp     ****     
1725:fat16.cpp     ****             dir_entry_offset += 32;
1726:fat16.cpp     ****         }
1727:fat16.cpp     ****     
ARM GAS  /tmp/ccNwMSzu.s 			page 127


1728:fat16.cpp     ****         /* We deleted the directory entry. The next thing to do is
1729:fat16.cpp     ****                              * marking all occupied clusters as free.
1730:fat16.cpp     ****                              */
1731:fat16.cpp     ****         return fat16_free_clusters(fs, dir_entry->cluster);
 5372              		.loc 1 1731 0
 5373 01d8 04309DE5 		ldr	r3, [sp, #4]	@ tmp214, dir_entry
 5374 01dc B232D3E1 		ldrh	r3, [r3, #34]	@ D.11005, dir_entry_6(D)->cluster
 5375 01e0 0C009DE5 		ldr	r0, [sp, #12]	@, this
 5376 01e4 08109DE5 		ldr	r1, [sp, #8]	@, fs
 5377 01e8 0320A0E1 		mov	r2, r3	@, D.11005
 5378 01ec FEFFFFEB 		bl	_ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt	@
 5379 01f0 0030A0E1 		mov	r3, r0	@ tmp215,
 5380 01f4 030000EA 		b	.L342	@
 5381              	.L350:
1725:fat16.cpp     ****             dir_entry_offset += 32;
 5382              		.loc 1 1725 0
 5383 01f8 1C309DE5 		ldr	r3, [sp, #28]	@ tmp216, dir_entry_offset
 5384 01fc 203083E2 		add	r3, r3, #32	@ tmp217, tmp216,
 5385 0200 1C308DE5 		str	r3, [sp, #28]	@ tmp217, dir_entry_offset
1708:fat16.cpp     ****         while(1)
 5386              		.loc 1 1708 0
 5387 0204 92FFFFEA 		b	.L343	@
 5388              	.L342:
 5389              	.LBE65:
1732:fat16.cpp     ****     #else
1733:fat16.cpp     ****         return 0;
1734:fat16.cpp     ****     #endif
1735:fat16.cpp     **** }
 5390              		.loc 1 1735 0
 5391 0208 0300A0E1 		mov	r0, r3	@, <retval>
 5392 020c 24D08DE2 		add	sp, sp, #36	@,,
 5393 0210 04E09DE4 		ldr	lr, [sp], #4
 5394 0214 1EFF2FE1 		bx	lr
 5395              		.cfi_endproc
 5396              	.LFE136:
 5397              		.size	_ZN5FAT1617fat16_delete_fileEPNS_15fat16_fs_structEPNS_22fat16_dir_entry_structE, .-_ZN5FAT1
 5398              		.section	.text._ZN5FAT1617fat16_get_fs_sizeEPKNS_15fat16_fs_structE,"ax",%progbits
 5399              		.align	2
 5400              		.global	_ZN5FAT1617fat16_get_fs_sizeEPKNS_15fat16_fs_structE
 5401              		.type	_ZN5FAT1617fat16_get_fs_sizeEPKNS_15fat16_fs_structE, %function
 5402              	_ZN5FAT1617fat16_get_fs_sizeEPKNS_15fat16_fs_structE:
 5403              	.LFB137:
1736:fat16.cpp     **** 
1737:fat16.cpp     **** /**
1738:fat16.cpp     ****  * \ingroup fat16_fs
1739:fat16.cpp     ****  * Returns the amount of total storage capacity of the filesystem in bytes.
1740:fat16.cpp     ****  *
1741:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
1742:fat16.cpp     ****  * \returns 0 on failure, the filesystem size in bytes otherwise.
1743:fat16.cpp     ****  */
1744:fat16.cpp     **** uint32_t FAT16::fat16_get_fs_size(const struct fat16_fs_struct* fs)
1745:fat16.cpp     **** {
 5404              		.loc 1 1745 0
 5405              		.cfi_startproc
 5406              		@ Function supports interworking.
 5407              		@ args = 0, pretend = 0, frame = 8
 5408              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccNwMSzu.s 			page 128


 5409              		@ link register save eliminated.
 5410 0000 08D04DE2 		sub	sp, sp, #8	@,,
 5411              	.LCFI50:
 5412              		.cfi_def_cfa_offset 8
 5413 0004 04008DE5 		str	r0, [sp, #4]	@ this, this
 5414 0008 00108DE5 		str	r1, [sp, #0]	@ fs, fs
1746:fat16.cpp     ****     if(!fs)
 5415              		.loc 1 1746 0
 5416 000c 00309DE5 		ldr	r3, [sp, #0]	@ tmp140, fs
 5417 0010 000053E3 		cmp	r3, #0	@ tmp140,
 5418 0014 0100001A 		bne	.L352	@,
1747:fat16.cpp     ****         return 0;
 5419              		.loc 1 1747 0
 5420 0018 0030A0E3 		mov	r3, #0	@ D.10924,
 5421 001c 060000EA 		b	.L353	@
 5422              	.L352:
1748:fat16.cpp     **** 
1749:fat16.cpp     ****     return (fs->header.fat_size / 2 - 2) * fs->header.cluster_size;
 5423              		.loc 1 1749 0
 5424 0020 00309DE5 		ldr	r3, [sp, #0]	@ tmp141, fs
 5425 0024 0C3093E5 		ldr	r3, [r3, #12]	@ D.10925, fs_2(D)->header.fat_size
 5426 0028 A330A0E1 		mov	r3, r3, lsr #1	@ D.10926, D.10925,
 5427 002c 023043E2 		sub	r3, r3, #2	@ D.10927, D.10926,
 5428 0030 00209DE5 		ldr	r2, [sp, #0]	@ tmp142, fs
 5429 0034 B221D2E1 		ldrh	r2, [r2, #18]	@ D.10928, fs_2(D)->header.cluster_size
 5430 0038 920303E0 		mul	r3, r2, r3	@ D.10924, D.10929, D.10927
 5431              	.L353:
1750:fat16.cpp     **** }
 5432              		.loc 1 1750 0
 5433 003c 0300A0E1 		mov	r0, r3	@, <retval>
 5434 0040 08D08DE2 		add	sp, sp, #8	@,,
 5435 0044 1EFF2FE1 		bx	lr
 5436              		.cfi_endproc
 5437              	.LFE137:
 5438              		.size	_ZN5FAT1617fat16_get_fs_sizeEPKNS_15fat16_fs_structE, .-_ZN5FAT1617fat16_get_fs_sizeEPKNS_15
 5439              		.section	.text._ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_structE,"ax",%progbits
 5440              		.align	2
 5441              		.global	_ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_structE
 5442              		.type	_ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_structE, %function
 5443              	_ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_structE:
 5444              	.LFB138:
1751:fat16.cpp     **** 
1752:fat16.cpp     **** /**
1753:fat16.cpp     ****  * \ingroup fat16_fs
1754:fat16.cpp     ****  * Returns the amount of free storage capacity on the filesystem in bytes.
1755:fat16.cpp     ****  *
1756:fat16.cpp     ****  * \note As the FAT16 filesystem is cluster based, this function does not
1757:fat16.cpp     ****  *       return continuous values but multiples of the cluster size.
1758:fat16.cpp     ****  *
1759:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
1760:fat16.cpp     ****  * \returns 0 on failure, the free filesystem space in bytes otherwise.
1761:fat16.cpp     ****  */
1762:fat16.cpp     **** uint32_t FAT16::fat16_get_fs_free(const struct fat16_fs_struct* fs)
1763:fat16.cpp     **** {
 5445              		.loc 1 1763 0
 5446              		.cfi_startproc
 5447              		@ Function supports interworking.
ARM GAS  /tmp/ccNwMSzu.s 			page 129


 5448              		@ args = 0, pretend = 0, frame = 64
 5449              		@ frame_needed = 0, uses_anonymous_args = 0
 5450 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 5451              	.LCFI51:
 5452              		.cfi_def_cfa_offset 4
 5453 0004 54D04DE2 		sub	sp, sp, #84	@,,
 5454              	.LCFI52:
 5455              		.cfi_def_cfa_offset 88
 5456 0008 14008DE5 		str	r0, [sp, #20]	@ this, this
 5457 000c 10108DE5 		str	r1, [sp, #16]	@ fs, fs
 5458              	.LBB66:
1764:fat16.cpp     ****     if(!fs)
 5459              		.loc 1 1764 0
 5460 0010 10309DE5 		ldr	r3, [sp, #16]	@ tmp169, fs
 5461 0014 000053E3 		cmp	r3, #0	@ tmp169,
 5462 0018 0100001A 		bne	.L355	@,
 5463              		.cfi_offset 14, -4
1765:fat16.cpp     ****         return 0;
 5464              		.loc 1 1765 0
 5465 001c 0030A0E3 		mov	r3, #0	@ D.10874,
 5466 0020 5F0000EA 		b	.L356	@
 5467              	.L355:
1766:fat16.cpp     **** 
1767:fat16.cpp     ****     uint8_t fat[32];
1768:fat16.cpp     ****     struct fat16_usage_count_callback_arg count_arg;
1769:fat16.cpp     ****     count_arg.cluster_count = 0;
 5468              		.loc 1 1769 0
 5469 0024 0030A0E3 		mov	r3, #0	@ tmp171,
 5470 0028 B833CDE1 		strh	r3, [sp, #56]	@ movhi	@ tmp170, count_arg.cluster_count
1770:fat16.cpp     ****     count_arg.buffer_size = sizeof(fat);
 5471              		.loc 1 1770 0
 5472 002c 2030A0E3 		mov	r3, #32	@ tmp172,
 5473 0030 3A30CDE5 		strb	r3, [sp, #58]	@ tmp173, count_arg.buffer_size
1771:fat16.cpp     **** 
1772:fat16.cpp     ****     uint32_t fat_offset = fs->header.fat_offset;
 5474              		.loc 1 1772 0
 5475 0034 10309DE5 		ldr	r3, [sp, #16]	@ tmp174, fs
 5476 0038 083093E5 		ldr	r3, [r3, #8]	@ tmp175, fs_6(D)->header.fat_offset
 5477 003c 4C308DE5 		str	r3, [sp, #76]	@ tmp175, fat_offset
1773:fat16.cpp     ****     uint32_t fat_size = fs->header.fat_size;
 5478              		.loc 1 1773 0
 5479 0040 10309DE5 		ldr	r3, [sp, #16]	@ tmp176, fs
 5480 0044 0C3093E5 		ldr	r3, [r3, #12]	@ tmp177, fs_6(D)->header.fat_size
 5481 0048 48308DE5 		str	r3, [sp, #72]	@ tmp177, fat_size
1774:fat16.cpp     ****     while(fat_size > 0)
 5482              		.loc 1 1774 0
 5483 004c 490000EA 		b	.L357	@
 5484              	.L362:
 5485              	.LBB67:
1775:fat16.cpp     ****     {
1776:fat16.cpp     ****         uint16_t length = UINT16_MAX - 1;
 5486              		.loc 1 1776 0
 5487 0050 0130E0E3 		mvn	r3, #1	@ tmp179,
 5488 0054 B634CDE1 		strh	r3, [sp, #70]	@ movhi	@ tmp178, length
1777:fat16.cpp     ****         if(fat_size < length)
 5489              		.loc 1 1777 0
 5490 0058 B624DDE1 		ldrh	r2, [sp, #70]	@ D.10879, length
ARM GAS  /tmp/ccNwMSzu.s 			page 130


 5491 005c 48309DE5 		ldr	r3, [sp, #72]	@ tmp180, fat_size
 5492 0060 030052E1 		cmp	r2, r3	@ D.10879, tmp180
 5493 0064 0100009A 		bls	.L358	@,
1778:fat16.cpp     ****             length = fat_size;
 5494              		.loc 1 1778 0
 5495 0068 48309DE5 		ldr	r3, [sp, #72]	@ tmp181, fat_size
 5496 006c B634CDE1 		strh	r3, [sp, #70]	@ movhi	@ tmp181, length
 5497              	.L358:
1779:fat16.cpp     **** 
1780:fat16.cpp     ****         if(!(GetInstance()->*fs->partition->device_read_interval)(fat_offset,
 5498              		.loc 1 1780 0
 5499 0070 FEFFFFEB 		bl	_ZN5FAT1611GetInstanceEv	@
 5500 0074 0030A0E1 		mov	r3, r0	@ D.10884,
1781:fat16.cpp     ****             fat,
1782:fat16.cpp     ****            sizeof(fat),
1783:fat16.cpp     ****            length,
1784:fat16.cpp     ****            (device_read_callback_t) &FAT16::fat16_get_fs_free_callback,
1785:fat16.cpp     ****            &count_arg
1786:fat16.cpp     ****            )
 5501              		.loc 1 1786 0
 5502 0078 10209DE5 		ldr	r2, [sp, #16]	@ tmp182, fs
 5503 007c 002092E5 		ldr	r2, [r2, #0]	@ D.10886, fs_6(D)->partition
 5504 0080 0C2092E5 		ldr	r2, [r2, #12]	@ D.10887, D.10886_15->device_read_interval.__delta
 5505 0084 012002E2 		and	r2, r2, #1	@ D.10888, D.10887,
 5506 0088 FF2002E2 		and	r2, r2, #255	@ D.10889, D.10888,
 5507 008c 000052E3 		cmp	r2, #0	@ D.10889,
 5508 0090 0C00000A 		beq	.L359	@,
 5509              		.loc 1 1786 0 is_stmt 0 discriminator 1
 5510 0094 10209DE5 		ldr	r2, [sp, #16]	@ tmp183, fs
 5511 0098 002092E5 		ldr	r2, [r2, #0]	@ D.10892, fs_6(D)->partition
 5512 009c 0C2092E5 		ldr	r2, [r2, #12]	@ D.10893, D.10892_19->device_read_interval.__delta
 5513 00a0 C220A0E1 		mov	r2, r2, asr #1	@ D.10894, D.10893,
 5514 00a4 022083E0 		add	r2, r3, r2	@ D.10896, D.10884, D.10895
 5515 00a8 001092E5 		ldr	r1, [r2, #0]	@ D.10898,* D.10897
 5516 00ac 10209DE5 		ldr	r2, [sp, #16]	@ tmp184, fs
 5517 00b0 002092E5 		ldr	r2, [r2, #0]	@ D.10899, fs_6(D)->partition
 5518 00b4 082092E5 		ldr	r2, [r2, #8]	@ D.10900, D.10899_26->device_read_interval.__pfn
 5519 00b8 022081E0 		add	r2, r1, r2	@ D.10902, D.10898, D.10901
 5520 00bc 002092E5 		ldr	r2, [r2, #0]	@ D.10903,* D.10902
 5521 00c0 02C0A0E1 		mov	ip, r2	@ iftmp.3, D.10903
 5522 00c4 020000EA 		b	.L360	@
 5523              	.L359:
 5524              		.loc 1 1786 0 discriminator 2
 5525 00c8 10209DE5 		ldr	r2, [sp, #16]	@ tmp185, fs
 5526 00cc 002092E5 		ldr	r2, [r2, #0]	@ D.10905, fs_6(D)->partition
 5527 00d0 08C092E5 		ldr	ip, [r2, #8]	@ iftmp.3, D.10905_32->device_read_interval.__pfn
 5528              	.L360:
 5529              		.loc 1 1786 0 discriminator 3
 5530 00d4 10209DE5 		ldr	r2, [sp, #16]	@ tmp186, fs
 5531 00d8 002092E5 		ldr	r2, [r2, #0]	@ D.10906, fs_6(D)->partition
 5532 00dc 0C2092E5 		ldr	r2, [r2, #12]	@ D.10907, D.10906_34->device_read_interval.__delta
 5533 00e0 C220A0E1 		mov	r2, r2, asr #1	@ D.10908, D.10907,
 5534 00e4 022083E0 		add	r2, r3, r2	@ D.10910, D.10884, D.10909
 5535 00e8 C4309FE5 		ldr	r3, .L363	@ tmp187,
 5536 00ec 3C308DE5 		str	r3, [sp, #60]	@ tmp187, D.10911.__pfn
 5537 00f0 0030A0E3 		mov	r3, #0	@ tmp188,
 5538 00f4 40308DE5 		str	r3, [sp, #64]	@ tmp188, D.10911.__delta
ARM GAS  /tmp/ccNwMSzu.s 			page 131


 5539 00f8 18308DE2 		add	r3, sp, #24	@ tmp189,,
 5540 00fc B614DDE1 		ldrh	r1, [sp, #70]	@ tmp190, length
 5541 0100 00108DE5 		str	r1, [sp, #0]	@ tmp190,
 5542 0104 04E08DE2 		add	lr, sp, #4	@ tmp191,,
 5543 0108 3C108DE2 		add	r1, sp, #60	@ tmp192,,
 5544 010c 030091E8 		ldmia	r1, {r0, r1}	@ tmp192,,
 5545 0110 03008EE8 		stmia	lr, {r0, r1}	@ tmp191,,
 5546 0114 38108DE2 		add	r1, sp, #56	@ tmp193,,
 5547 0118 0C108DE5 		str	r1, [sp, #12]	@ tmp193,
 5548 011c 0200A0E1 		mov	r0, r2	@, D.10910
 5549 0120 4C109DE5 		ldr	r1, [sp, #76]	@, fat_offset
 5550 0124 0320A0E1 		mov	r2, r3	@, tmp189
 5551 0128 2030A0E3 		mov	r3, #32	@,
 5552 012c 0FE0A0E1 		mov	lr, pc
 5553 0130 1CFF2FE1 		bx	ip	@ iftmp.3
 5554 0134 0030A0E1 		mov	r3, r0	@ tmp194,
1780:fat16.cpp     ****         if(!(GetInstance()->*fs->partition->device_read_interval)(fat_offset,
 5555              		.loc 1 1780 0 is_stmt 1 discriminator 3
 5556 0138 000053E3 		cmp	r3, #0	@ D.10912,
 5557 013c 0030A013 		movne	r3, #0	@, tmp196
 5558 0140 0130A003 		moveq	r3, #1	@, tmp196
 5559 0144 FF3003E2 		and	r3, r3, #255	@ retval.2, tmp195,
 5560 0148 000053E3 		cmp	r3, #0	@ retval.2,
 5561 014c 0100000A 		beq	.L361	@,
1787:fat16.cpp     ****            )
1788:fat16.cpp     ****         return 0;
 5562              		.loc 1 1788 0
 5563 0150 0030A0E3 		mov	r3, #0	@ D.10874,
 5564 0154 120000EA 		b	.L356	@
 5565              	.L361:
1789:fat16.cpp     **** 
1790:fat16.cpp     ****         fat_offset += length;
 5566              		.loc 1 1790 0
 5567 0158 B634DDE1 		ldrh	r3, [sp, #70]	@ D.10915, length
 5568 015c 4C209DE5 		ldr	r2, [sp, #76]	@ tmp197, fat_offset
 5569 0160 033082E0 		add	r3, r2, r3	@ tmp198, tmp197, D.10915
 5570 0164 4C308DE5 		str	r3, [sp, #76]	@ tmp198, fat_offset
1791:fat16.cpp     ****         fat_size -= length;
 5571              		.loc 1 1791 0
 5572 0168 B634DDE1 		ldrh	r3, [sp, #70]	@ D.10916, length
 5573 016c 48209DE5 		ldr	r2, [sp, #72]	@ tmp199, fat_size
 5574 0170 023063E0 		rsb	r3, r3, r2	@ tmp200, D.10916, tmp199
 5575 0174 48308DE5 		str	r3, [sp, #72]	@ tmp200, fat_size
 5576              	.L357:
 5577              	.LBE67:
1774:fat16.cpp     ****     while(fat_size > 0)
 5578              		.loc 1 1774 0 discriminator 1
 5579 0178 48309DE5 		ldr	r3, [sp, #72]	@ tmp202, fat_size
 5580 017c 000053E3 		cmp	r3, #0	@ tmp202,
 5581 0180 0030A003 		moveq	r3, #0	@, tmp203
 5582 0184 0130A013 		movne	r3, #1	@, tmp203
 5583 0188 FF3003E2 		and	r3, r3, #255	@ D.10878, tmp201,
 5584 018c 000053E3 		cmp	r3, #0	@ D.10878,
 5585 0190 AEFFFF1A 		bne	.L362	@,
1792:fat16.cpp     ****     }
1793:fat16.cpp     **** 
1794:fat16.cpp     ****     return (uint32_t) count_arg.cluster_count * fs->header.cluster_size;
ARM GAS  /tmp/ccNwMSzu.s 			page 132


 5586              		.loc 1 1794 0
 5587 0194 B833DDE1 		ldrh	r3, [sp, #56]	@ D.10917, count_arg.cluster_count
 5588 0198 10209DE5 		ldr	r2, [sp, #16]	@ tmp204, fs
 5589 019c B221D2E1 		ldrh	r2, [r2, #18]	@ D.10919, fs_6(D)->header.cluster_size
 5590 01a0 920303E0 		mul	r3, r2, r3	@ D.10874, D.10920, D.10918
 5591              	.L356:
 5592              	.LBE66:
1795:fat16.cpp     **** }
 5593              		.loc 1 1795 0
 5594 01a4 0300A0E1 		mov	r0, r3	@, <retval>
 5595 01a8 54D08DE2 		add	sp, sp, #84	@,,
 5596 01ac 04E09DE4 		ldr	lr, [sp], #4
 5597 01b0 1EFF2FE1 		bx	lr
 5598              	.L364:
 5599              		.align	2
 5600              	.L363:
 5601 01b4 00000000 		.word	_ZN5FAT1626fat16_get_fs_free_callbackEPhmPv
 5602              		.cfi_endproc
 5603              	.LFE138:
 5604              		.size	_ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_structE, .-_ZN5FAT1617fat16_get_fs_freeEPKNS_15
 5605              		.section	.text._ZN5FAT1626fat16_get_fs_free_callbackEPhmPv,"ax",%progbits
 5606              		.align	2
 5607              		.global	_ZN5FAT1626fat16_get_fs_free_callbackEPhmPv
 5608              		.type	_ZN5FAT1626fat16_get_fs_free_callbackEPhmPv, %function
 5609              	_ZN5FAT1626fat16_get_fs_free_callbackEPhmPv:
 5610              	.LFB139:
1796:fat16.cpp     **** 
1797:fat16.cpp     **** /**
1798:fat16.cpp     ****  * \ingroup fat16_fs
1799:fat16.cpp     ****  * Callback function used for counting free clusters.
1800:fat16.cpp     ****  */
1801:fat16.cpp     **** uint8_t FAT16::fat16_get_fs_free_callback(uint8_t* buffer, uint32_t offset, void* p)
1802:fat16.cpp     **** {
 5611              		.loc 1 1802 0
 5612              		.cfi_startproc
 5613              		@ Function supports interworking.
 5614              		@ args = 0, pretend = 0, frame = 32
 5615              		@ frame_needed = 0, uses_anonymous_args = 0
 5616              		@ link register save eliminated.
 5617 0000 20D04DE2 		sub	sp, sp, #32	@,,
 5618              	.LCFI53:
 5619              		.cfi_def_cfa_offset 32
 5620 0004 0C008DE5 		str	r0, [sp, #12]	@ this, this
 5621 0008 08108DE5 		str	r1, [sp, #8]	@ buffer, buffer
 5622 000c 04208DE5 		str	r2, [sp, #4]	@ offset, offset
 5623 0010 00308DE5 		str	r3, [sp, #0]	@ p, p
 5624              	.LBB68:
1803:fat16.cpp     ****     struct fat16_usage_count_callback_arg* count_arg = (struct fat16_usage_count_callback_arg*) p;
 5625              		.loc 1 1803 0
 5626 0014 00309DE5 		ldr	r3, [sp, #0]	@ tmp145, p
 5627 0018 18308DE5 		str	r3, [sp, #24]	@ tmp145, count_arg
1804:fat16.cpp     ****     uint8_t buffer_size = count_arg->buffer_size;
 5628              		.loc 1 1804 0
 5629 001c 18309DE5 		ldr	r3, [sp, #24]	@ tmp146, count_arg
 5630 0020 0230D3E5 		ldrb	r3, [r3, #2]	@ tmp147, count_arg_4->buffer_size
 5631 0024 1730CDE5 		strb	r3, [sp, #23]	@ tmp147, buffer_size
1805:fat16.cpp     ****     uint8_t i;
ARM GAS  /tmp/ccNwMSzu.s 			page 133


1806:fat16.cpp     ****     for(i = 0; i < buffer_size; i += 2)
 5632              		.loc 1 1806 0
 5633 0028 0030A0E3 		mov	r3, #0	@ tmp148,
 5634 002c 1F30CDE5 		strb	r3, [sp, #31]	@ tmp149, i
 5635 0030 150000EA 		b	.L366	@
 5636              	.L368:
1807:fat16.cpp     ****     {
1808:fat16.cpp     ****         if((((uint16_t) buffer[1] << 8) | ((uint16_t) buffer[0] << 0)) == FAT16_CLUSTER_FREE)
 5637              		.loc 1 1808 0
 5638 0034 08309DE5 		ldr	r3, [sp, #8]	@ tmp150, buffer
 5639 0038 013083E2 		add	r3, r3, #1	@ D.10858, tmp150,
 5640 003c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.10859,* D.10858
 5641 0040 0324A0E1 		mov	r2, r3, asl #8	@ D.10861, D.10860,
 5642 0044 08309DE5 		ldr	r3, [sp, #8]	@ tmp151, buffer
 5643 0048 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.10862,
 5644 004c 033082E1 		orr	r3, r2, r3	@ D.10864, D.10861, D.10863
 5645 0050 000053E3 		cmp	r3, #0	@ D.10864,
 5646 0054 0600001A 		bne	.L367	@,
1809:fat16.cpp     ****             ++(count_arg->cluster_count);
 5647              		.loc 1 1809 0
 5648 0058 18309DE5 		ldr	r3, [sp, #24]	@ tmp152, count_arg
 5649 005c B030D3E1 		ldrh	r3, [r3, #0]	@ D.10867, count_arg_4->cluster_count
 5650 0060 013083E2 		add	r3, r3, #1	@ tmp153, D.10867,
 5651 0064 0338A0E1 		mov	r3, r3, asl #16	@ tmp154, tmp153,
 5652 0068 2328A0E1 		mov	r2, r3, lsr #16	@ D.10868, tmp154,
 5653 006c 18309DE5 		ldr	r3, [sp, #24]	@ tmp155, count_arg
 5654 0070 B020C3E1 		strh	r2, [r3, #0]	@ movhi	@ D.10868, count_arg_4->cluster_count
 5655              	.L367:
1810:fat16.cpp     **** 
1811:fat16.cpp     ****         buffer += 2;
 5656              		.loc 1 1811 0
 5657 0074 08309DE5 		ldr	r3, [sp, #8]	@ tmp156, buffer
 5658 0078 023083E2 		add	r3, r3, #2	@ tmp157, tmp156,
 5659 007c 08308DE5 		str	r3, [sp, #8]	@ tmp157, buffer
1806:fat16.cpp     ****     for(i = 0; i < buffer_size; i += 2)
 5660              		.loc 1 1806 0
 5661 0080 1F30DDE5 		ldrb	r3, [sp, #31]	@ tmp158, i
 5662 0084 023083E2 		add	r3, r3, #2	@ tmp159, tmp158,
 5663 0088 1F30CDE5 		strb	r3, [sp, #31]	@ tmp160, i
 5664              	.L366:
1806:fat16.cpp     ****     for(i = 0; i < buffer_size; i += 2)
 5665              		.loc 1 1806 0 is_stmt 0 discriminator 1
 5666 008c 1F20DDE5 		ldrb	r2, [sp, #31]	@ zero_extendqisi2	@ tmp162, i
 5667 0090 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ tmp163, buffer_size
 5668 0094 030052E1 		cmp	r2, r3	@ tmp162, tmp163
 5669 0098 0030A023 		movcs	r3, #0	@, tmp164
 5670 009c 0130A033 		movcc	r3, #1	@, tmp164
 5671 00a0 FF3003E2 		and	r3, r3, #255	@ D.10856, tmp161,
 5672 00a4 000053E3 		cmp	r3, #0	@ D.10856,
 5673 00a8 E1FFFF1A 		bne	.L368	@,
1812:fat16.cpp     ****     }
1813:fat16.cpp     **** 
1814:fat16.cpp     ****     return 1;
 5674              		.loc 1 1814 0 is_stmt 1
 5675 00ac 0130A0E3 		mov	r3, #1	@ D.10870,
 5676              	.LBE68:
1815:fat16.cpp     **** }
ARM GAS  /tmp/ccNwMSzu.s 			page 134


 5677              		.loc 1 1815 0
 5678 00b0 0300A0E1 		mov	r0, r3	@, <retval>
 5679 00b4 20D08DE2 		add	sp, sp, #32	@,,
 5680 00b8 1EFF2FE1 		bx	lr
 5681              		.cfi_endproc
 5682              	.LFE139:
 5683              		.size	_ZN5FAT1626fat16_get_fs_free_callbackEPhmPv, .-_ZN5FAT1626fat16_get_fs_free_callbackEPhmPv
 5684              		.section	.text._ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKcPNS_22f
 5685              		.align	2
 5686              		.global	_ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKcPNS_22fat16_di
 5687              		.type	_ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_
 5688              	_ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_s
 5689              	.LFB140:
1816:fat16.cpp     **** 
1817:fat16.cpp     **** uint8_t FAT16::find_file_in_dir(struct fat16_fs_struct* fs, struct fat16_dir_struct* dd, const char
1818:fat16.cpp     **** {
 5690              		.loc 1 1818 0
 5691              		.cfi_startproc
 5692              		@ Function supports interworking.
 5693              		@ args = 4, pretend = 0, frame = 16
 5694              		@ frame_needed = 0, uses_anonymous_args = 0
 5695 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 5696              	.LCFI54:
 5697              		.cfi_def_cfa_offset 4
 5698 0004 14D04DE2 		sub	sp, sp, #20	@,,
 5699              	.LCFI55:
 5700              		.cfi_def_cfa_offset 24
 5701 0008 0C008DE5 		str	r0, [sp, #12]	@ this, this
 5702 000c 08108DE5 		str	r1, [sp, #8]	@ fs, fs
 5703 0010 04208DE5 		str	r2, [sp, #4]	@ dd, dd
 5704 0014 00308DE5 		str	r3, [sp, #0]	@ name, name
1819:fat16.cpp     ****     while(fat16_read_dir(dd, dir_entry))
 5705              		.loc 1 1819 0
 5706 0018 0B0000EA 		b	.L370	@
 5707              		.cfi_offset 14, -4
 5708              	.L372:
1820:fat16.cpp     ****     {
1821:fat16.cpp     ****         if(strcmp(dir_entry->long_name, name) == 0)
 5709              		.loc 1 1821 0
 5710 001c 18309DE5 		ldr	r3, [sp, #24]	@ D.10847, dir_entry
 5711 0020 0300A0E1 		mov	r0, r3	@, D.10847
 5712 0024 00109DE5 		ldr	r1, [sp, #0]	@, name
 5713 0028 FEFFFFEB 		bl	strcmp	@
 5714 002c 0030A0E1 		mov	r3, r0	@ D.10848,
 5715 0030 000053E3 		cmp	r3, #0	@ D.10848,
 5716 0034 0400001A 		bne	.L370	@,
1822:fat16.cpp     ****         {
1823:fat16.cpp     ****             fat16_reset_dir(dd);
 5717              		.loc 1 1823 0
 5718 0038 0C009DE5 		ldr	r0, [sp, #12]	@, this
 5719 003c 04109DE5 		ldr	r1, [sp, #4]	@, dd
 5720 0040 FEFFFFEB 		bl	_ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE	@
1824:fat16.cpp     ****             return 1;
 5721              		.loc 1 1824 0
 5722 0044 0130A0E3 		mov	r3, #1	@ D.10851,
 5723 0048 0B0000EA 		b	.L371	@
 5724              	.L370:
ARM GAS  /tmp/ccNwMSzu.s 			page 135


1819:fat16.cpp     ****     while(fat16_read_dir(dd, dir_entry))
 5725              		.loc 1 1819 0 discriminator 1
 5726 004c 0C009DE5 		ldr	r0, [sp, #12]	@, this
 5727 0050 04109DE5 		ldr	r1, [sp, #4]	@, dd
 5728 0054 18209DE5 		ldr	r2, [sp, #24]	@, dir_entry
 5729 0058 FEFFFFEB 		bl	_ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE	@
 5730 005c 0030A0E1 		mov	r3, r0	@ tmp139,
 5731 0060 000053E3 		cmp	r3, #0	@ D.10846,
 5732 0064 0030A003 		moveq	r3, #0	@, tmp141
 5733 0068 0130A013 		movne	r3, #1	@, tmp141
 5734 006c FF3003E2 		and	r3, r3, #255	@ retval.1, tmp140,
 5735 0070 000053E3 		cmp	r3, #0	@ retval.1,
 5736 0074 E8FFFF1A 		bne	.L372	@,
1825:fat16.cpp     ****         }
1826:fat16.cpp     ****     }
1827:fat16.cpp     **** 
1828:fat16.cpp     ****     return 0;
 5737              		.loc 1 1828 0
 5738 0078 0030A0E3 		mov	r3, #0	@ D.10851,
 5739              	.L371:
1829:fat16.cpp     **** }
 5740              		.loc 1 1829 0
 5741 007c 0300A0E1 		mov	r0, r3	@, <retval>
 5742 0080 14D08DE2 		add	sp, sp, #20	@,,
 5743 0084 04E09DE4 		ldr	lr, [sp], #4
 5744 0088 1EFF2FE1 		bx	lr
 5745              		.cfi_endproc
 5746              	.LFE140:
 5747              		.size	_ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_
 5748              		.section	.text._ZN5FAT1616open_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKc,"ax",%
 5749              		.align	2
 5750              		.global	_ZN5FAT1616open_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKc
 5751              		.type	_ZN5FAT1616open_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKc, %function
 5752              	_ZN5FAT1616open_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKc:
 5753              	.LFB141:
1830:fat16.cpp     **** 
1831:fat16.cpp     **** FAT16::fat16_file_struct* FAT16::open_file_in_dir(struct fat16_fs_struct* fs, struct fat16_dir_stru
1832:fat16.cpp     **** {
 5754              		.loc 1 1832 0
 5755              		.cfi_startproc
 5756              		@ Function supports interworking.
 5757              		@ args = 0, pretend = 0, frame = 64
 5758              		@ frame_needed = 0, uses_anonymous_args = 0
 5759 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 5760              	.LCFI56:
 5761              		.cfi_def_cfa_offset 4
 5762 0004 4CD04DE2 		sub	sp, sp, #76	@,,
 5763              	.LCFI57:
 5764              		.cfi_def_cfa_offset 80
 5765 0008 14008DE5 		str	r0, [sp, #20]	@ this, this
 5766 000c 10108DE5 		str	r1, [sp, #16]	@ fs, fs
 5767 0010 0C208DE5 		str	r2, [sp, #12]	@ dd, dd
 5768 0014 08308DE5 		str	r3, [sp, #8]	@ name, name
 5769              	.LBB69:
1833:fat16.cpp     ****     struct fat16_dir_entry_struct file_entry;
1834:fat16.cpp     ****     if(!find_file_in_dir(fs, dd, name, &file_entry))
 5770              		.loc 1 1834 0
ARM GAS  /tmp/ccNwMSzu.s 			page 136


 5771 0018 1C308DE2 		add	r3, sp, #28	@ tmp137,,
 5772 001c 00308DE5 		str	r3, [sp, #0]	@ tmp137,
 5773 0020 14009DE5 		ldr	r0, [sp, #20]	@, this
 5774 0024 10109DE5 		ldr	r1, [sp, #16]	@, fs
 5775 0028 0C209DE5 		ldr	r2, [sp, #12]	@, dd
 5776 002c 08309DE5 		ldr	r3, [sp, #8]	@, name
 5777              		.cfi_offset 14, -4
 5778 0030 FEFFFFEB 		bl	_ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_ent
 5779 0034 0030A0E1 		mov	r3, r0	@ tmp138,
 5780 0038 000053E3 		cmp	r3, #0	@ D.10837,
 5781 003c 0030A013 		movne	r3, #0	@, tmp140
 5782 0040 0130A003 		moveq	r3, #1	@, tmp140
 5783 0044 FF3003E2 		and	r3, r3, #255	@ retval.0, tmp139,
 5784 0048 000053E3 		cmp	r3, #0	@ retval.0,
 5785 004c 0100000A 		beq	.L374	@,
1835:fat16.cpp     ****         return 0;
 5786              		.loc 1 1835 0
 5787 0050 0030A0E3 		mov	r3, #0	@ D.10840,
 5788 0054 050000EA 		b	.L375	@
 5789              	.L374:
1836:fat16.cpp     **** 
1837:fat16.cpp     ****     return fat16_open_file(fs, &file_entry);
 5790              		.loc 1 1837 0
 5791 0058 1C308DE2 		add	r3, sp, #28	@ tmp141,,
 5792 005c 14009DE5 		ldr	r0, [sp, #20]	@, this
 5793 0060 10109DE5 		ldr	r1, [sp, #16]	@, fs
 5794 0064 0320A0E1 		mov	r2, r3	@, tmp141
 5795 0068 FEFFFFEB 		bl	_ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE	@
 5796 006c 0030A0E1 		mov	r3, r0	@ D.10840,
 5797              	.L375:
 5798              	.LBE69:
1838:fat16.cpp     **** }
 5799              		.loc 1 1838 0
 5800 0070 0300A0E1 		mov	r0, r3	@, <retval>
 5801 0074 4CD08DE2 		add	sp, sp, #76	@,,
 5802 0078 04E09DE4 		ldr	lr, [sp], #4
 5803 007c 1EFF2FE1 		bx	lr
 5804              		.cfi_endproc
 5805              	.LFE141:
 5806              		.size	_ZN5FAT1616open_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKc, .-_ZN5FAT1616o
 5807              		.section	.text._ZN5FAT1615fat16_file_sizeEPNS_17fat16_file_structE,"ax",%progbits
 5808              		.align	2
 5809              		.global	_ZN5FAT1615fat16_file_sizeEPNS_17fat16_file_structE
 5810              		.type	_ZN5FAT1615fat16_file_sizeEPNS_17fat16_file_structE, %function
 5811              	_ZN5FAT1615fat16_file_sizeEPNS_17fat16_file_structE:
 5812              	.LFB142:
1839:fat16.cpp     **** 
1840:fat16.cpp     **** int FAT16::fat16_file_size(struct fat16_file_struct * file)
1841:fat16.cpp     **** {
 5813              		.loc 1 1841 0
 5814              		.cfi_startproc
 5815              		@ Function supports interworking.
 5816              		@ args = 0, pretend = 0, frame = 8
 5817              		@ frame_needed = 0, uses_anonymous_args = 0
 5818              		@ link register save eliminated.
 5819 0000 08D04DE2 		sub	sp, sp, #8	@,,
 5820              	.LCFI58:
ARM GAS  /tmp/ccNwMSzu.s 			page 137


 5821              		.cfi_def_cfa_offset 8
 5822 0004 04008DE5 		str	r0, [sp, #4]	@ this, this
 5823 0008 00108DE5 		str	r1, [sp, #0]	@ file, file
1842:fat16.cpp     ****     return(file->dir_entry.file_size);
 5824              		.loc 1 1842 0
 5825 000c 00309DE5 		ldr	r3, [sp, #0]	@ tmp136, file
 5826 0010 283093E5 		ldr	r3, [r3, #40]	@ D.10834, file_1(D)->dir_entry.file_size
1843:fat16.cpp     **** }
 5827              		.loc 1 1843 0
 5828 0014 0300A0E1 		mov	r0, r3	@, <retval>
 5829 0018 08D08DE2 		add	sp, sp, #8	@,,
 5830 001c 1EFF2FE1 		bx	lr
 5831              		.cfi_endproc
 5832              	.LFE142:
 5833              		.size	_ZN5FAT1615fat16_file_sizeEPNS_17fat16_file_structE, .-_ZN5FAT1615fat16_file_sizeEPNS_17fat1
 5834              		.section	.rodata
 5835              		.align	2
 5836              		.type	_ZL12VIC_USB_Intr, %object
 5837              		.size	_ZL12VIC_USB_Intr, 4
 5838              	_ZL12VIC_USB_Intr:
 5839 0038 00004000 		.word	4194304
 5840              		.align	2
 5841              		.type	_ZL9CCR_CLKEN, %object
 5842              		.size	_ZL9CCR_CLKEN, 4
 5843              	_ZL9CCR_CLKEN:
 5844 003c 01000000 		.word	1
 5845              		.align	2
 5846              		.type	_ZL10CCR_CTCRST, %object
 5847              		.size	_ZL10CCR_CTCRST, 4
 5848              	_ZL10CCR_CTCRST:
 5849 0040 02000000 		.word	2
 5850              		.align	2
 5851              		.type	_ZL16CCR_CLKSRC_32KHZ, %object
 5852              		.size	_ZL16CCR_CLKSRC_32KHZ, 4
 5853              	_ZL16CCR_CLKSRC_32KHZ:
 5854 0044 10000000 		.word	16
 5855              		.align	2
 5856              		.type	_ZL18VIC_Channel_Timer0, %object
 5857              		.size	_ZL18VIC_Channel_Timer0, 4
 5858              	_ZL18VIC_Channel_Timer0:
 5859 0048 04000000 		.word	4
 5860              		.align	2
 5861              		.type	_ZL18VIC_Channel_Timer1, %object
 5862              		.size	_ZL18VIC_Channel_Timer1, 4
 5863              	_ZL18VIC_Channel_Timer1:
 5864 004c 05000000 		.word	5
 5865              		.align	2
 5866              		.type	_ZL17VIC_Channel_UART0, %object
 5867              		.size	_ZL17VIC_Channel_UART0, 4
 5868              	_ZL17VIC_Channel_UART0:
 5869 0050 06000000 		.word	6
 5870              		.align	2
 5871              		.type	_ZL17VIC_Channel_UART1, %object
 5872              		.size	_ZL17VIC_Channel_UART1, 4
 5873              	_ZL17VIC_Channel_UART1:
 5874 0054 07000000 		.word	7
 5875              		.align	2
ARM GAS  /tmp/ccNwMSzu.s 			page 138


 5876              		.type	_ZL15VIC_Channel_USB, %object
 5877              		.size	_ZL15VIC_Channel_USB, 4
 5878              	_ZL15VIC_Channel_USB:
 5879 0058 16000000 		.word	22
 5880              		.align	2
 5881              		.type	_ZL18VICVectCntl_ENABLE, %object
 5882              		.size	_ZL18VICVectCntl_ENABLE, 4
 5883              	_ZL18VICVectCntl_ENABLE:
 5884 005c 20000000 		.word	32
 5885              		.align	2
 5886              		.type	_ZL10UIER_ERBFI, %object
 5887              		.size	_ZL10UIER_ERBFI, 4
 5888              	_ZL10UIER_ERBFI:
 5889 0060 01000000 		.word	1
 5890              		.align	2
 5891              		.type	_ZL12UIIR_ID_MASK, %object
 5892              		.size	_ZL12UIIR_ID_MASK, 4
 5893              	_ZL12UIIR_ID_MASK:
 5894 0064 0E000000 		.word	14
 5895              		.align	2
 5896              		.type	_ZL12UIIR_RDA_INT, %object
 5897              		.size	_ZL12UIIR_RDA_INT, 4
 5898              	_ZL12UIIR_RDA_INT:
 5899 0068 04000000 		.word	4
 5900              		.align	2
 5901              		.type	_ZL8ULSR_RDR, %object
 5902              		.size	_ZL8ULSR_RDR, 4
 5903              	_ZL8ULSR_RDR:
 5904 006c 01000000 		.word	1
 5905              		.align	2
 5906              		.type	_ZL5SSEL1, %object
 5907              		.size	_ZL5SSEL1, 4
 5908              	_ZL5SSEL1:
 5909 0070 00001000 		.word	1048576
 5910              		.align	2
 5911              		.type	_ZL9SSPSR_TFE, %object
 5912              		.size	_ZL9SSPSR_TFE, 4
 5913              	_ZL9SSPSR_TFE:
 5914 0074 01000000 		.word	1
 5915              		.align	2
 5916              		.type	_ZL9SSPSR_TNF, %object
 5917              		.size	_ZL9SSPSR_TNF, 4
 5918              	_ZL9SSPSR_TNF:
 5919 0078 02000000 		.word	2
 5920              		.align	2
 5921              		.type	_ZL9SSPSR_RNE, %object
 5922              		.size	_ZL9SSPSR_RNE, 4
 5923              	_ZL9SSPSR_RNE:
 5924 007c 04000000 		.word	4
 5925              		.align	2
 5926              		.type	_ZL9SSPSR_BSY, %object
 5927              		.size	_ZL9SSPSR_BSY, 4
 5928              	_ZL9SSPSR_BSY:
 5929 0080 10000000 		.word	16
 5930              		.align	2
 5931              		.type	_ZL11SSPCR0_CPOL, %object
 5932              		.size	_ZL11SSPCR0_CPOL, 4
ARM GAS  /tmp/ccNwMSzu.s 			page 139


 5933              	_ZL11SSPCR0_CPOL:
 5934 0084 40000000 		.word	64
 5935              		.align	2
 5936              		.type	_ZL11SSPCR0_CPHA, %object
 5937              		.size	_ZL11SSPCR0_CPHA, 4
 5938              	_ZL11SSPCR0_CPHA:
 5939 0088 80000000 		.word	128
 5940              		.align	2
 5941              		.type	_ZL13I2CxCONCLR_AA, %object
 5942              		.size	_ZL13I2CxCONCLR_AA, 4
 5943              	_ZL13I2CxCONCLR_AA:
 5944 008c 04000000 		.word	4
 5945              		.align	2
 5946              		.type	_ZL13I2CxCONCLR_SI, %object
 5947              		.size	_ZL13I2CxCONCLR_SI, 4
 5948              	_ZL13I2CxCONCLR_SI:
 5949 0090 08000000 		.word	8
 5950              		.align	2
 5951              		.type	_ZL15I2CxCONCLR_STAC, %object
 5952              		.size	_ZL15I2CxCONCLR_STAC, 4
 5953              	_ZL15I2CxCONCLR_STAC:
 5954 0094 20000000 		.word	32
 5955              		.align	2
 5956              		.type	_ZL16I2CxCONCLR_I2ENC, %object
 5957              		.size	_ZL16I2CxCONCLR_I2ENC, 4
 5958              	_ZL16I2CxCONCLR_I2ENC:
 5959 0098 40000000 		.word	64
 5960              		.align	2
 5961              		.type	_ZL13I2CxCONSET_AA, %object
 5962              		.size	_ZL13I2CxCONSET_AA, 4
 5963              	_ZL13I2CxCONSET_AA:
 5964 009c 04000000 		.word	4
 5965              		.align	2
 5966              		.type	_ZL13I2CxCONSET_SI, %object
 5967              		.size	_ZL13I2CxCONSET_SI, 4
 5968              	_ZL13I2CxCONSET_SI:
 5969 00a0 08000000 		.word	8
 5970              		.align	2
 5971              		.type	_ZL14I2CxCONSET_STO, %object
 5972              		.size	_ZL14I2CxCONSET_STO, 4
 5973              	_ZL14I2CxCONSET_STO:
 5974 00a4 10000000 		.word	16
 5975              		.align	2
 5976              		.type	_ZL14I2CxCONSET_STA, %object
 5977              		.size	_ZL14I2CxCONSET_STA, 4
 5978              	_ZL14I2CxCONSET_STA:
 5979 00a8 20000000 		.word	32
 5980              		.align	2
 5981              		.type	_ZL15I2CxCONSET_I2EN, %object
 5982              		.size	_ZL15I2CxCONSET_I2EN, 4
 5983              	_ZL15I2CxCONSET_I2EN:
 5984 00ac 40000000 		.word	64
 5985              		.align	2
 5986              		.type	_ZL20TxTCR_COUNTER_ENABLE, %object
 5987              		.size	_ZL20TxTCR_COUNTER_ENABLE, 4
 5988              	_ZL20TxTCR_COUNTER_ENABLE:
 5989 00b0 01000000 		.word	1
ARM GAS  /tmp/ccNwMSzu.s 			page 140


 5990              		.align	2
 5991              		.type	_ZL19TxTCR_COUNTER_RESET, %object
 5992              		.size	_ZL19TxTCR_COUNTER_RESET, 4
 5993              	_ZL19TxTCR_COUNTER_RESET:
 5994 00b4 02000000 		.word	2
 5995              		.align	2
 5996              		.type	_ZL16TxMCR_INT_ON_MR0, %object
 5997              		.size	_ZL16TxMCR_INT_ON_MR0, 4
 5998              	_ZL16TxMCR_INT_ON_MR0:
 5999 00b8 01000000 		.word	1
 6000              		.align	2
 6001              		.type	_ZL18TxMCR_RESET_ON_MR0, %object
 6002              		.size	_ZL18TxMCR_RESET_ON_MR0, 4
 6003              	_ZL18TxMCR_RESET_ON_MR0:
 6004 00bc 02000000 		.word	2
 6005              		.align	2
 6006              		.type	_ZL13TxIR_MR0_FLAG, %object
 6007              		.size	_ZL13TxIR_MR0_FLAG, 4
 6008              	_ZL13TxIR_MR0_FLAG:
 6009 00c0 01000000 		.word	1
 6010              		.align	2
 6011              		.type	_ZL13TxIR_MR1_FLAG, %object
 6012              		.size	_ZL13TxIR_MR1_FLAG, 4
 6013              	_ZL13TxIR_MR1_FLAG:
 6014 00c4 02000000 		.word	2
 6015              		.align	2
 6016              		.type	_ZL13TxIR_MR2_FLAG, %object
 6017              		.size	_ZL13TxIR_MR2_FLAG, 4
 6018              	_ZL13TxIR_MR2_FLAG:
 6019 00c8 04000000 		.word	4
 6020              		.align	2
 6021              		.type	_ZL13TxIR_MR3_FLAG, %object
 6022              		.size	_ZL13TxIR_MR3_FLAG, 4
 6023              	_ZL13TxIR_MR3_FLAG:
 6024 00cc 08000000 		.word	8
 6025              		.align	2
 6026              		.type	_ZL13TxIR_CR0_FLAG, %object
 6027              		.size	_ZL13TxIR_CR0_FLAG, 4
 6028              	_ZL13TxIR_CR0_FLAG:
 6029 00d0 10000000 		.word	16
 6030              		.align	2
 6031              		.type	_ZL13TxIR_CR1_FLAG, %object
 6032              		.size	_ZL13TxIR_CR1_FLAG, 4
 6033              	_ZL13TxIR_CR1_FLAG:
 6034 00d4 20000000 		.word	32
 6035              		.align	2
 6036              		.type	_ZL13TxIR_CR2_FLAG, %object
 6037              		.size	_ZL13TxIR_CR2_FLAG, 4
 6038              	_ZL13TxIR_CR2_FLAG:
 6039 00d8 40000000 		.word	64
 6040              		.align	2
 6041              		.type	_ZL13TxIR_CR3_FLAG, %object
 6042              		.size	_ZL13TxIR_CR3_FLAG, 4
 6043              	_ZL13TxIR_CR3_FLAG:
 6044 00dc 80000000 		.word	128
 6045              		.align	2
 6046              		.type	_ZL12TxCCR_CAP0RE, %object
ARM GAS  /tmp/ccNwMSzu.s 			page 141


 6047              		.size	_ZL12TxCCR_CAP0RE, 4
 6048              	_ZL12TxCCR_CAP0RE:
 6049 00e0 01000000 		.word	1
 6050              		.align	2
 6051              		.type	_ZL12TxCCR_CAP0FE, %object
 6052              		.size	_ZL12TxCCR_CAP0FE, 4
 6053              	_ZL12TxCCR_CAP0FE:
 6054 00e4 02000000 		.word	2
 6055              		.align	2
 6056              		.type	_ZL11TxCCR_CAP0I, %object
 6057              		.size	_ZL11TxCCR_CAP0I, 4
 6058              	_ZL11TxCCR_CAP0I:
 6059 00e8 04000000 		.word	4
 6060              		.align	2
 6061              		.type	_ZL12TxCCR_CAP1RE, %object
 6062              		.size	_ZL12TxCCR_CAP1RE, 4
 6063              	_ZL12TxCCR_CAP1RE:
 6064 00ec 08000000 		.word	8
 6065              		.align	2
 6066              		.type	_ZL12TxCCR_CAP1FE, %object
 6067              		.size	_ZL12TxCCR_CAP1FE, 4
 6068              	_ZL12TxCCR_CAP1FE:
 6069 00f0 10000000 		.word	16
 6070              		.align	2
 6071              		.type	_ZL11TxCCR_CAP1I, %object
 6072              		.size	_ZL11TxCCR_CAP1I, 4
 6073              	_ZL11TxCCR_CAP1I:
 6074 00f4 20000000 		.word	32
 6075              		.align	2
 6076              		.type	_ZL12TxCCR_CAP2RE, %object
 6077              		.size	_ZL12TxCCR_CAP2RE, 4
 6078              	_ZL12TxCCR_CAP2RE:
 6079 00f8 40000000 		.word	64
 6080              		.align	2
 6081              		.type	_ZL12TxCCR_CAP2FE, %object
 6082              		.size	_ZL12TxCCR_CAP2FE, 4
 6083              	_ZL12TxCCR_CAP2FE:
 6084 00fc 80000000 		.word	128
 6085              		.align	2
 6086              		.type	_ZL11TxCCR_CAP2I, %object
 6087              		.size	_ZL11TxCCR_CAP2I, 4
 6088              	_ZL11TxCCR_CAP2I:
 6089 0100 00010000 		.word	256
 6090              		.align	2
 6091              		.type	_ZL12TxCCR_CAP3RE, %object
 6092              		.size	_ZL12TxCCR_CAP3RE, 4
 6093              	_ZL12TxCCR_CAP3RE:
 6094 0104 00020000 		.word	512
 6095              		.align	2
 6096              		.type	_ZL12TxCCR_CAP3FE, %object
 6097              		.size	_ZL12TxCCR_CAP3FE, 4
 6098              	_ZL12TxCCR_CAP3FE:
 6099 0108 00040000 		.word	1024
 6100              		.align	2
 6101              		.type	_ZL11TxCCR_CAP3I, %object
 6102              		.size	_ZL11TxCCR_CAP3I, 4
 6103              	_ZL11TxCCR_CAP3I:
ARM GAS  /tmp/ccNwMSzu.s 			page 142


 6104 010c 00080000 		.word	2048
 6105              		.align	2
 6106              		.type	_ZL9ADxCR_PDN, %object
 6107              		.size	_ZL9ADxCR_PDN, 4
 6108              	_ZL9ADxCR_PDN:
 6109 0110 00002000 		.word	2097152
 6110              		.align	2
 6111              		.type	_ZL15ADxCR_START_NOW, %object
 6112              		.size	_ZL15ADxCR_START_NOW, 4
 6113              	_ZL15ADxCR_START_NOW:
 6114 0114 00000001 		.word	16777216
 6115              		.align	2
 6116              		.type	_ZL11ADxGDR_DONE, %object
 6117              		.size	_ZL11ADxGDR_DONE, 4
 6118              	_ZL11ADxGDR_DONE:
 6119 0118 00000080 		.word	-2147483648
 6120              		.align	2
 6121              		.type	_ZL7PWMMR0R, %object
 6122              		.size	_ZL7PWMMR0R, 4
 6123              	_ZL7PWMMR0R:
 6124 011c 02000000 		.word	2
 6125              		.align	2
 6126              		.type	_ZL7LER0_EN, %object
 6127              		.size	_ZL7LER0_EN, 4
 6128              	_ZL7LER0_EN:
 6129 0120 01000000 		.word	1
 6130              		.align	2
 6131              		.type	_ZL7LER1_EN, %object
 6132              		.size	_ZL7LER1_EN, 4
 6133              	_ZL7LER1_EN:
 6134 0124 02000000 		.word	2
 6135              		.align	2
 6136              		.type	_ZL7LER2_EN, %object
 6137              		.size	_ZL7LER2_EN, 4
 6138              	_ZL7LER2_EN:
 6139 0128 04000000 		.word	4
 6140              		.align	2
 6141              		.type	_ZL7LER3_EN, %object
 6142              		.size	_ZL7LER3_EN, 4
 6143              	_ZL7LER3_EN:
 6144 012c 08000000 		.word	8
 6145              		.align	2
 6146              		.type	_ZL7LER4_EN, %object
 6147              		.size	_ZL7LER4_EN, 4
 6148              	_ZL7LER4_EN:
 6149 0130 10000000 		.word	16
 6150              		.align	2
 6151              		.type	_ZL7LER5_EN, %object
 6152              		.size	_ZL7LER5_EN, 4
 6153              	_ZL7LER5_EN:
 6154 0134 20000000 		.word	32
 6155              		.align	2
 6156              		.type	_ZL7LER6_EN, %object
 6157              		.size	_ZL7LER6_EN, 4
 6158              	_ZL7LER6_EN:
 6159 0138 40000000 		.word	64
 6160              		.align	2
ARM GAS  /tmp/ccNwMSzu.s 			page 143


 6161              		.type	_ZL7PWMENA1, %object
 6162              		.size	_ZL7PWMENA1, 4
 6163              	_ZL7PWMENA1:
 6164 013c 00020000 		.word	512
 6165              		.align	2
 6166              		.type	_ZL7PWMENA2, %object
 6167              		.size	_ZL7PWMENA2, 4
 6168              	_ZL7PWMENA2:
 6169 0140 00040000 		.word	1024
 6170              		.align	2
 6171              		.type	_ZL7PWMENA3, %object
 6172              		.size	_ZL7PWMENA3, 4
 6173              	_ZL7PWMENA3:
 6174 0144 00080000 		.word	2048
 6175              		.align	2
 6176              		.type	_ZL7PWMENA4, %object
 6177              		.size	_ZL7PWMENA4, 4
 6178              	_ZL7PWMENA4:
 6179 0148 00100000 		.word	4096
 6180              		.align	2
 6181              		.type	_ZL7PWMENA5, %object
 6182              		.size	_ZL7PWMENA5, 4
 6183              	_ZL7PWMENA5:
 6184 014c 00200000 		.word	8192
 6185              		.align	2
 6186              		.type	_ZL7PWMENA6, %object
 6187              		.size	_ZL7PWMENA6, 4
 6188              	_ZL7PWMENA6:
 6189 0150 00400000 		.word	16384
 6190              		.align	2
 6191              		.type	_ZL21PWMTCR_COUNTER_ENABLE, %object
 6192              		.size	_ZL21PWMTCR_COUNTER_ENABLE, 4
 6193              	_ZL21PWMTCR_COUNTER_ENABLE:
 6194 0154 01000000 		.word	1
 6195              		.align	2
 6196              		.type	_ZL12PWMTCR_RESET, %object
 6197              		.size	_ZL12PWMTCR_RESET, 4
 6198              	_ZL12PWMTCR_RESET:
 6199 0158 02000000 		.word	2
 6200              		.align	2
 6201              		.type	_ZL17PWMTCR_PWM_ENABLE, %object
 6202              		.size	_ZL17PWMTCR_PWM_ENABLE, 4
 6203              	_ZL17PWMTCR_PWM_ENABLE:
 6204 015c 08000000 		.word	8
 6205              		.align	2
 6206              		.type	_ZL10WDMOD_WDEN, %object
 6207              		.size	_ZL10WDMOD_WDEN, 4
 6208              	_ZL10WDMOD_WDEN:
 6209 0160 01000000 		.word	1
 6210              		.align	2
 6211              		.type	_ZL13WDMOD_WDRESET, %object
 6212              		.size	_ZL13WDMOD_WDRESET, 4
 6213              	_ZL13WDMOD_WDRESET:
 6214 0164 02000000 		.word	2
 6215              		.align	2
 6216              		.type	_ZL27HID_MESSAGE_ID_SYSTEM_DEBUG, %object
 6217              		.size	_ZL27HID_MESSAGE_ID_SYSTEM_DEBUG, 4
ARM GAS  /tmp/ccNwMSzu.s 			page 144


 6218              	_ZL27HID_MESSAGE_ID_SYSTEM_DEBUG:
 6219 0168 C0000000 		.word	192
 6220              		.text
 6221              	.Letext0:
 6222              		.section	.debug_loc,"",%progbits
 6223              	.Ldebug_loc0:
 6224              	.LLST0:
 6225 0000 00000000 		.4byte	.LFB110
 6226 0004 04000000 		.4byte	.LCFI0
 6227 0008 0200     		.2byte	0x2
 6228 000a 7D       		.byte	0x7d
 6229 000b 00       		.sleb128 0
 6230 000c 04000000 		.4byte	.LCFI0
 6231 0010 08000000 		.4byte	.LCFI1
 6232 0014 0200     		.2byte	0x2
 6233 0016 7D       		.byte	0x7d
 6234 0017 04       		.sleb128 4
 6235 0018 08000000 		.4byte	.LCFI1
 6236 001c FC000000 		.4byte	.LFE110
 6237 0020 0200     		.2byte	0x2
 6238 0022 7D       		.byte	0x7d
 6239 0023 18       		.sleb128 24
 6240 0024 00000000 		.4byte	0x0
 6241 0028 00000000 		.4byte	0x0
 6242              	.LLST1:
 6243 002c 00000000 		.4byte	.LFB111
 6244 0030 04000000 		.4byte	.LCFI2
 6245 0034 0200     		.2byte	0x2
 6246 0036 7D       		.byte	0x7d
 6247 0037 00       		.sleb128 0
 6248 0038 04000000 		.4byte	.LCFI2
 6249 003c 08000000 		.4byte	.LCFI3
 6250 0040 0200     		.2byte	0x2
 6251 0042 7D       		.byte	0x7d
 6252 0043 04       		.sleb128 4
 6253 0044 08000000 		.4byte	.LCFI3
 6254 0048 38000000 		.4byte	.LFE111
 6255 004c 0200     		.2byte	0x2
 6256 004e 7D       		.byte	0x7d
 6257 004f 10       		.sleb128 16
 6258 0050 00000000 		.4byte	0x0
 6259 0054 00000000 		.4byte	0x0
 6260              	.LLST2:
 6261 0058 00000000 		.4byte	.LFB112
 6262 005c 04000000 		.4byte	.LCFI4
 6263 0060 0200     		.2byte	0x2
 6264 0062 7D       		.byte	0x7d
 6265 0063 00       		.sleb128 0
 6266 0064 04000000 		.4byte	.LCFI4
 6267 0068 08000000 		.4byte	.LCFI5
 6268 006c 0200     		.2byte	0x2
 6269 006e 7D       		.byte	0x7d
 6270 006f 08       		.sleb128 8
 6271 0070 08000000 		.4byte	.LCFI5
 6272 0074 E4030000 		.4byte	.LFE112
 6273 0078 0300     		.2byte	0x3
 6274 007a 7D       		.byte	0x7d
ARM GAS  /tmp/ccNwMSzu.s 			page 145


 6275 007b D800     		.sleb128 88
 6276 007d 00000000 		.4byte	0x0
 6277 0081 00000000 		.4byte	0x0
 6278              	.LLST3:
 6279 0085 00000000 		.4byte	.LFB113
 6280 0089 04000000 		.4byte	.LCFI6
 6281 008d 0200     		.2byte	0x2
 6282 008f 7D       		.byte	0x7d
 6283 0090 00       		.sleb128 0
 6284 0091 04000000 		.4byte	.LCFI6
 6285 0095 08000000 		.4byte	.LCFI7
 6286 0099 0200     		.2byte	0x2
 6287 009b 7D       		.byte	0x7d
 6288 009c 08       		.sleb128 8
 6289 009d 08000000 		.4byte	.LCFI7
 6290 00a1 84020000 		.4byte	.LFE113
 6291 00a5 0300     		.2byte	0x3
 6292 00a7 7D       		.byte	0x7d
 6293 00a8 F000     		.sleb128 112
 6294 00aa 00000000 		.4byte	0x0
 6295 00ae 00000000 		.4byte	0x0
 6296              	.LLST4:
 6297 00b2 00000000 		.4byte	.LFB114
 6298 00b6 04000000 		.4byte	.LCFI8
 6299 00ba 0200     		.2byte	0x2
 6300 00bc 7D       		.byte	0x7d
 6301 00bd 00       		.sleb128 0
 6302 00be 04000000 		.4byte	.LCFI8
 6303 00c2 08000000 		.4byte	.LCFI9
 6304 00c6 0200     		.2byte	0x2
 6305 00c8 7D       		.byte	0x7d
 6306 00c9 08       		.sleb128 8
 6307 00ca 08000000 		.4byte	.LCFI9
 6308 00ce 28030000 		.4byte	.LFE114
 6309 00d2 0300     		.2byte	0x3
 6310 00d4 7D       		.byte	0x7d
 6311 00d5 F000     		.sleb128 112
 6312 00d7 00000000 		.4byte	0x0
 6313 00db 00000000 		.4byte	0x0
 6314              	.LLST5:
 6315 00df 00000000 		.4byte	.LFB115
 6316 00e3 04000000 		.4byte	.LCFI10
 6317 00e7 0200     		.2byte	0x2
 6318 00e9 7D       		.byte	0x7d
 6319 00ea 00       		.sleb128 0
 6320 00eb 04000000 		.4byte	.LCFI10
 6321 00ef F0000000 		.4byte	.LFE115
 6322 00f3 0200     		.2byte	0x2
 6323 00f5 7D       		.byte	0x7d
 6324 00f6 18       		.sleb128 24
 6325 00f7 00000000 		.4byte	0x0
 6326 00fb 00000000 		.4byte	0x0
 6327              	.LLST6:
 6328 00ff 00000000 		.4byte	.LFB116
 6329 0103 04000000 		.4byte	.LCFI11
 6330 0107 0200     		.2byte	0x2
 6331 0109 7D       		.byte	0x7d
ARM GAS  /tmp/ccNwMSzu.s 			page 146


 6332 010a 00       		.sleb128 0
 6333 010b 04000000 		.4byte	.LCFI11
 6334 010f 08000000 		.4byte	.LCFI12
 6335 0113 0200     		.2byte	0x2
 6336 0115 7D       		.byte	0x7d
 6337 0116 04       		.sleb128 4
 6338 0117 08000000 		.4byte	.LCFI12
 6339 011b BC000000 		.4byte	.LFE116
 6340 011f 0200     		.2byte	0x2
 6341 0121 7D       		.byte	0x7d
 6342 0122 20       		.sleb128 32
 6343 0123 00000000 		.4byte	0x0
 6344 0127 00000000 		.4byte	0x0
 6345              	.LLST7:
 6346 012b 00000000 		.4byte	.LFB117
 6347 012f 04000000 		.4byte	.LCFI13
 6348 0133 0200     		.2byte	0x2
 6349 0135 7D       		.byte	0x7d
 6350 0136 00       		.sleb128 0
 6351 0137 04000000 		.4byte	.LCFI13
 6352 013b 48040000 		.4byte	.LFE117
 6353 013f 0200     		.2byte	0x2
 6354 0141 7D       		.byte	0x7d
 6355 0142 20       		.sleb128 32
 6356 0143 00000000 		.4byte	0x0
 6357 0147 00000000 		.4byte	0x0
 6358              	.LLST8:
 6359 014b 00000000 		.4byte	.LFB118
 6360 014f 04000000 		.4byte	.LCFI14
 6361 0153 0200     		.2byte	0x2
 6362 0155 7D       		.byte	0x7d
 6363 0156 00       		.sleb128 0
 6364 0157 04000000 		.4byte	.LCFI14
 6365 015b 08000000 		.4byte	.LCFI15
 6366 015f 0200     		.2byte	0x2
 6367 0161 7D       		.byte	0x7d
 6368 0162 04       		.sleb128 4
 6369 0163 08000000 		.4byte	.LCFI15
 6370 0167 14020000 		.4byte	.LFE118
 6371 016b 0200     		.2byte	0x2
 6372 016d 7D       		.byte	0x7d
 6373 016e 28       		.sleb128 40
 6374 016f 00000000 		.4byte	0x0
 6375 0173 00000000 		.4byte	0x0
 6376              	.LLST9:
 6377 0177 00000000 		.4byte	.LFB119
 6378 017b 04000000 		.4byte	.LCFI16
 6379 017f 0200     		.2byte	0x2
 6380 0181 7D       		.byte	0x7d
 6381 0182 00       		.sleb128 0
 6382 0183 04000000 		.4byte	.LCFI16
 6383 0187 08000000 		.4byte	.LCFI17
 6384 018b 0200     		.2byte	0x2
 6385 018d 7D       		.byte	0x7d
 6386 018e 04       		.sleb128 4
 6387 018f 08000000 		.4byte	.LCFI17
 6388 0193 A0010000 		.4byte	.LFE119
ARM GAS  /tmp/ccNwMSzu.s 			page 147


 6389 0197 0200     		.2byte	0x2
 6390 0199 7D       		.byte	0x7d
 6391 019a 20       		.sleb128 32
 6392 019b 00000000 		.4byte	0x0
 6393 019f 00000000 		.4byte	0x0
 6394              	.LLST10:
 6395 01a3 00000000 		.4byte	.LFB120
 6396 01a7 04000000 		.4byte	.LCFI18
 6397 01ab 0200     		.2byte	0x2
 6398 01ad 7D       		.byte	0x7d
 6399 01ae 00       		.sleb128 0
 6400 01af 04000000 		.4byte	.LCFI18
 6401 01b3 08000000 		.4byte	.LCFI19
 6402 01b7 0200     		.2byte	0x2
 6403 01b9 7D       		.byte	0x7d
 6404 01ba 04       		.sleb128 4
 6405 01bb 08000000 		.4byte	.LCFI19
 6406 01bf B0030000 		.4byte	.LFE120
 6407 01c3 0300     		.2byte	0x3
 6408 01c5 7D       		.byte	0x7d
 6409 01c6 C000     		.sleb128 64
 6410 01c8 00000000 		.4byte	0x0
 6411 01cc 00000000 		.4byte	0x0
 6412              	.LLST11:
 6413 01d0 00000000 		.4byte	.LFB121
 6414 01d4 04000000 		.4byte	.LCFI20
 6415 01d8 0200     		.2byte	0x2
 6416 01da 7D       		.byte	0x7d
 6417 01db 00       		.sleb128 0
 6418 01dc 04000000 		.4byte	.LCFI20
 6419 01e0 08000000 		.4byte	.LCFI21
 6420 01e4 0200     		.2byte	0x2
 6421 01e6 7D       		.byte	0x7d
 6422 01e7 04       		.sleb128 4
 6423 01e8 08000000 		.4byte	.LCFI21
 6424 01ec 9C020000 		.4byte	.LFE121
 6425 01f0 0200     		.2byte	0x2
 6426 01f2 7D       		.byte	0x7d
 6427 01f3 28       		.sleb128 40
 6428 01f4 00000000 		.4byte	0x0
 6429 01f8 00000000 		.4byte	0x0
 6430              	.LLST12:
 6431 01fc 00000000 		.4byte	.LFB122
 6432 0200 04000000 		.4byte	.LCFI22
 6433 0204 0200     		.2byte	0x2
 6434 0206 7D       		.byte	0x7d
 6435 0207 00       		.sleb128 0
 6436 0208 04000000 		.4byte	.LCFI22
 6437 020c 08000000 		.4byte	.LCFI23
 6438 0210 0200     		.2byte	0x2
 6439 0212 7D       		.byte	0x7d
 6440 0213 04       		.sleb128 4
 6441 0214 08000000 		.4byte	.LCFI23
 6442 0218 6C010000 		.4byte	.LFE122
 6443 021c 0200     		.2byte	0x2
 6444 021e 7D       		.byte	0x7d
 6445 021f 20       		.sleb128 32
ARM GAS  /tmp/ccNwMSzu.s 			page 148


 6446 0220 00000000 		.4byte	0x0
 6447 0224 00000000 		.4byte	0x0
 6448              	.LLST13:
 6449 0228 00000000 		.4byte	.LFB123
 6450 022c 04000000 		.4byte	.LCFI24
 6451 0230 0200     		.2byte	0x2
 6452 0232 7D       		.byte	0x7d
 6453 0233 00       		.sleb128 0
 6454 0234 04000000 		.4byte	.LCFI24
 6455 0238 08000000 		.4byte	.LCFI25
 6456 023c 0200     		.2byte	0x2
 6457 023e 7D       		.byte	0x7d
 6458 023f 04       		.sleb128 4
 6459 0240 08000000 		.4byte	.LCFI25
 6460 0244 C0000000 		.4byte	.LFE123
 6461 0248 0200     		.2byte	0x2
 6462 024a 7D       		.byte	0x7d
 6463 024b 20       		.sleb128 32
 6464 024c 00000000 		.4byte	0x0
 6465 0250 00000000 		.4byte	0x0
 6466              	.LLST14:
 6467 0254 00000000 		.4byte	.LFB124
 6468 0258 04000000 		.4byte	.LCFI26
 6469 025c 0200     		.2byte	0x2
 6470 025e 7D       		.byte	0x7d
 6471 025f 00       		.sleb128 0
 6472 0260 04000000 		.4byte	.LCFI26
 6473 0264 08000000 		.4byte	.LCFI27
 6474 0268 0200     		.2byte	0x2
 6475 026a 7D       		.byte	0x7d
 6476 026b 04       		.sleb128 4
 6477 026c 08000000 		.4byte	.LCFI27
 6478 0270 30000000 		.4byte	.LFE124
 6479 0274 0200     		.2byte	0x2
 6480 0276 7D       		.byte	0x7d
 6481 0277 10       		.sleb128 16
 6482 0278 00000000 		.4byte	0x0
 6483 027c 00000000 		.4byte	0x0
 6484              	.LLST15:
 6485 0280 00000000 		.4byte	.LFB125
 6486 0284 04000000 		.4byte	.LCFI28
 6487 0288 0200     		.2byte	0x2
 6488 028a 7D       		.byte	0x7d
 6489 028b 00       		.sleb128 0
 6490 028c 04000000 		.4byte	.LCFI28
 6491 0290 08000000 		.4byte	.LCFI29
 6492 0294 0200     		.2byte	0x2
 6493 0296 7D       		.byte	0x7d
 6494 0297 04       		.sleb128 4
 6495 0298 08000000 		.4byte	.LCFI29
 6496 029c F4030000 		.4byte	.LFE125
 6497 02a0 0200     		.2byte	0x2
 6498 02a2 7D       		.byte	0x7d
 6499 02a3 30       		.sleb128 48
 6500 02a4 00000000 		.4byte	0x0
 6501 02a8 00000000 		.4byte	0x0
 6502              	.LLST16:
ARM GAS  /tmp/ccNwMSzu.s 			page 149


 6503 02ac 00000000 		.4byte	.LFB126
 6504 02b0 04000000 		.4byte	.LCFI30
 6505 02b4 0200     		.2byte	0x2
 6506 02b6 7D       		.byte	0x7d
 6507 02b7 00       		.sleb128 0
 6508 02b8 04000000 		.4byte	.LCFI30
 6509 02bc 08000000 		.4byte	.LCFI31
 6510 02c0 0200     		.2byte	0x2
 6511 02c2 7D       		.byte	0x7d
 6512 02c3 04       		.sleb128 4
 6513 02c4 08000000 		.4byte	.LCFI31
 6514 02c8 F4040000 		.4byte	.LFE126
 6515 02cc 0200     		.2byte	0x2
 6516 02ce 7D       		.byte	0x7d
 6517 02cf 38       		.sleb128 56
 6518 02d0 00000000 		.4byte	0x0
 6519 02d4 00000000 		.4byte	0x0
 6520              	.LLST17:
 6521 02d8 00000000 		.4byte	.LFB127
 6522 02dc 04000000 		.4byte	.LCFI32
 6523 02e0 0200     		.2byte	0x2
 6524 02e2 7D       		.byte	0x7d
 6525 02e3 00       		.sleb128 0
 6526 02e4 04000000 		.4byte	.LCFI32
 6527 02e8 08000000 		.4byte	.LCFI33
 6528 02ec 0200     		.2byte	0x2
 6529 02ee 7D       		.byte	0x7d
 6530 02ef 04       		.sleb128 4
 6531 02f0 08000000 		.4byte	.LCFI33
 6532 02f4 30010000 		.4byte	.LFE127
 6533 02f8 0200     		.2byte	0x2
 6534 02fa 7D       		.byte	0x7d
 6535 02fb 20       		.sleb128 32
 6536 02fc 00000000 		.4byte	0x0
 6537 0300 00000000 		.4byte	0x0
 6538              	.LLST18:
 6539 0304 00000000 		.4byte	.LFB128
 6540 0308 04000000 		.4byte	.LCFI34
 6541 030c 0200     		.2byte	0x2
 6542 030e 7D       		.byte	0x7d
 6543 030f 00       		.sleb128 0
 6544 0310 04000000 		.4byte	.LCFI34
 6545 0314 08000000 		.4byte	.LCFI35
 6546 0318 0200     		.2byte	0x2
 6547 031a 7D       		.byte	0x7d
 6548 031b 04       		.sleb128 4
 6549 031c 08000000 		.4byte	.LCFI35
 6550 0320 84020000 		.4byte	.LFE128
 6551 0324 0200     		.2byte	0x2
 6552 0326 7D       		.byte	0x7d
 6553 0327 28       		.sleb128 40
 6554 0328 00000000 		.4byte	0x0
 6555 032c 00000000 		.4byte	0x0
 6556              	.LLST19:
 6557 0330 00000000 		.4byte	.LFB129
 6558 0334 04000000 		.4byte	.LCFI36
 6559 0338 0200     		.2byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 150


 6560 033a 7D       		.byte	0x7d
 6561 033b 00       		.sleb128 0
 6562 033c 04000000 		.4byte	.LCFI36
 6563 0340 08000000 		.4byte	.LCFI37
 6564 0344 0200     		.2byte	0x2
 6565 0346 7D       		.byte	0x7d
 6566 0347 04       		.sleb128 4
 6567 0348 08000000 		.4byte	.LCFI37
 6568 034c B0000000 		.4byte	.LFE129
 6569 0350 0200     		.2byte	0x2
 6570 0352 7D       		.byte	0x7d
 6571 0353 20       		.sleb128 32
 6572 0354 00000000 		.4byte	0x0
 6573 0358 00000000 		.4byte	0x0
 6574              	.LLST20:
 6575 035c 00000000 		.4byte	.LFB130
 6576 0360 04000000 		.4byte	.LCFI38
 6577 0364 0200     		.2byte	0x2
 6578 0366 7D       		.byte	0x7d
 6579 0367 00       		.sleb128 0
 6580 0368 04000000 		.4byte	.LCFI38
 6581 036c 08000000 		.4byte	.LCFI39
 6582 0370 0200     		.2byte	0x2
 6583 0372 7D       		.byte	0x7d
 6584 0373 04       		.sleb128 4
 6585 0374 08000000 		.4byte	.LCFI39
 6586 0378 30000000 		.4byte	.LFE130
 6587 037c 0200     		.2byte	0x2
 6588 037e 7D       		.byte	0x7d
 6589 037f 10       		.sleb128 16
 6590 0380 00000000 		.4byte	0x0
 6591 0384 00000000 		.4byte	0x0
 6592              	.LLST21:
 6593 0388 00000000 		.4byte	.LFB131
 6594 038c 04000000 		.4byte	.LCFI40
 6595 0390 0200     		.2byte	0x2
 6596 0392 7D       		.byte	0x7d
 6597 0393 00       		.sleb128 0
 6598 0394 04000000 		.4byte	.LCFI40
 6599 0398 08000000 		.4byte	.LCFI41
 6600 039c 0200     		.2byte	0x2
 6601 039e 7D       		.byte	0x7d
 6602 039f 04       		.sleb128 4
 6603 03a0 08000000 		.4byte	.LCFI41
 6604 03a4 30010000 		.4byte	.LFE131
 6605 03a8 0200     		.2byte	0x2
 6606 03aa 7D       		.byte	0x7d
 6607 03ab 20       		.sleb128 32
 6608 03ac 00000000 		.4byte	0x0
 6609 03b0 00000000 		.4byte	0x0
 6610              	.LLST22:
 6611 03b4 00000000 		.4byte	.LFB132
 6612 03b8 04000000 		.4byte	.LCFI42
 6613 03bc 0200     		.2byte	0x2
 6614 03be 7D       		.byte	0x7d
 6615 03bf 00       		.sleb128 0
 6616 03c0 04000000 		.4byte	.LCFI42
ARM GAS  /tmp/ccNwMSzu.s 			page 151


 6617 03c4 3C000000 		.4byte	.LFE132
 6618 03c8 0200     		.2byte	0x2
 6619 03ca 7D       		.byte	0x7d
 6620 03cb 08       		.sleb128 8
 6621 03cc 00000000 		.4byte	0x0
 6622 03d0 00000000 		.4byte	0x0
 6623              	.LLST23:
 6624 03d4 00000000 		.4byte	.LFB133
 6625 03d8 04000000 		.4byte	.LCFI43
 6626 03dc 0200     		.2byte	0x2
 6627 03de 7D       		.byte	0x7d
 6628 03df 00       		.sleb128 0
 6629 03e0 04000000 		.4byte	.LCFI43
 6630 03e4 44000000 		.4byte	.LFE133
 6631 03e8 0200     		.2byte	0x2
 6632 03ea 7D       		.byte	0x7d
 6633 03eb 10       		.sleb128 16
 6634 03ec 00000000 		.4byte	0x0
 6635 03f0 00000000 		.4byte	0x0
 6636              	.LLST24:
 6637 03f4 00000000 		.4byte	.LFB134
 6638 03f8 04000000 		.4byte	.LCFI44
 6639 03fc 0200     		.2byte	0x2
 6640 03fe 7D       		.byte	0x7d
 6641 03ff 00       		.sleb128 0
 6642 0400 04000000 		.4byte	.LCFI44
 6643 0404 08000000 		.4byte	.LCFI45
 6644 0408 0200     		.2byte	0x2
 6645 040a 7D       		.byte	0x7d
 6646 040b 04       		.sleb128 4
 6647 040c 08000000 		.4byte	.LCFI45
 6648 0410 04060000 		.4byte	.LFE134
 6649 0414 0300     		.2byte	0x3
 6650 0416 7D       		.byte	0x7d
 6651 0417 E000     		.sleb128 96
 6652 0419 00000000 		.4byte	0x0
 6653 041d 00000000 		.4byte	0x0
 6654              	.LLST25:
 6655 0421 00000000 		.4byte	.LFB135
 6656 0425 04000000 		.4byte	.LCFI46
 6657 0429 0200     		.2byte	0x2
 6658 042b 7D       		.byte	0x7d
 6659 042c 00       		.sleb128 0
 6660 042d 04000000 		.4byte	.LCFI46
 6661 0431 08000000 		.4byte	.LCFI47
 6662 0435 0200     		.2byte	0x2
 6663 0437 7D       		.byte	0x7d
 6664 0438 04       		.sleb128 4
 6665 0439 08000000 		.4byte	.LCFI47
 6666 043d D8030000 		.4byte	.LFE135
 6667 0441 0200     		.2byte	0x2
 6668 0443 7D       		.byte	0x7d
 6669 0444 38       		.sleb128 56
 6670 0445 00000000 		.4byte	0x0
 6671 0449 00000000 		.4byte	0x0
 6672              	.LLST26:
 6673 044d 00000000 		.4byte	.LFB136
ARM GAS  /tmp/ccNwMSzu.s 			page 152


 6674 0451 04000000 		.4byte	.LCFI48
 6675 0455 0200     		.2byte	0x2
 6676 0457 7D       		.byte	0x7d
 6677 0458 00       		.sleb128 0
 6678 0459 04000000 		.4byte	.LCFI48
 6679 045d 08000000 		.4byte	.LCFI49
 6680 0461 0200     		.2byte	0x2
 6681 0463 7D       		.byte	0x7d
 6682 0464 04       		.sleb128 4
 6683 0465 08000000 		.4byte	.LCFI49
 6684 0469 18020000 		.4byte	.LFE136
 6685 046d 0200     		.2byte	0x2
 6686 046f 7D       		.byte	0x7d
 6687 0470 28       		.sleb128 40
 6688 0471 00000000 		.4byte	0x0
 6689 0475 00000000 		.4byte	0x0
 6690              	.LLST27:
 6691 0479 00000000 		.4byte	.LFB137
 6692 047d 04000000 		.4byte	.LCFI50
 6693 0481 0200     		.2byte	0x2
 6694 0483 7D       		.byte	0x7d
 6695 0484 00       		.sleb128 0
 6696 0485 04000000 		.4byte	.LCFI50
 6697 0489 48000000 		.4byte	.LFE137
 6698 048d 0200     		.2byte	0x2
 6699 048f 7D       		.byte	0x7d
 6700 0490 08       		.sleb128 8
 6701 0491 00000000 		.4byte	0x0
 6702 0495 00000000 		.4byte	0x0
 6703              	.LLST28:
 6704 0499 00000000 		.4byte	.LFB138
 6705 049d 04000000 		.4byte	.LCFI51
 6706 04a1 0200     		.2byte	0x2
 6707 04a3 7D       		.byte	0x7d
 6708 04a4 00       		.sleb128 0
 6709 04a5 04000000 		.4byte	.LCFI51
 6710 04a9 08000000 		.4byte	.LCFI52
 6711 04ad 0200     		.2byte	0x2
 6712 04af 7D       		.byte	0x7d
 6713 04b0 04       		.sleb128 4
 6714 04b1 08000000 		.4byte	.LCFI52
 6715 04b5 B8010000 		.4byte	.LFE138
 6716 04b9 0300     		.2byte	0x3
 6717 04bb 7D       		.byte	0x7d
 6718 04bc D800     		.sleb128 88
 6719 04be 00000000 		.4byte	0x0
 6720 04c2 00000000 		.4byte	0x0
 6721              	.LLST29:
 6722 04c6 00000000 		.4byte	.LFB139
 6723 04ca 04000000 		.4byte	.LCFI53
 6724 04ce 0200     		.2byte	0x2
 6725 04d0 7D       		.byte	0x7d
 6726 04d1 00       		.sleb128 0
 6727 04d2 04000000 		.4byte	.LCFI53
 6728 04d6 BC000000 		.4byte	.LFE139
 6729 04da 0200     		.2byte	0x2
 6730 04dc 7D       		.byte	0x7d
ARM GAS  /tmp/ccNwMSzu.s 			page 153


 6731 04dd 20       		.sleb128 32
 6732 04de 00000000 		.4byte	0x0
 6733 04e2 00000000 		.4byte	0x0
 6734              	.LLST30:
 6735 04e6 00000000 		.4byte	.LFB140
 6736 04ea 04000000 		.4byte	.LCFI54
 6737 04ee 0200     		.2byte	0x2
 6738 04f0 7D       		.byte	0x7d
 6739 04f1 00       		.sleb128 0
 6740 04f2 04000000 		.4byte	.LCFI54
 6741 04f6 08000000 		.4byte	.LCFI55
 6742 04fa 0200     		.2byte	0x2
 6743 04fc 7D       		.byte	0x7d
 6744 04fd 04       		.sleb128 4
 6745 04fe 08000000 		.4byte	.LCFI55
 6746 0502 8C000000 		.4byte	.LFE140
 6747 0506 0200     		.2byte	0x2
 6748 0508 7D       		.byte	0x7d
 6749 0509 18       		.sleb128 24
 6750 050a 00000000 		.4byte	0x0
 6751 050e 00000000 		.4byte	0x0
 6752              	.LLST31:
 6753 0512 00000000 		.4byte	.LFB141
 6754 0516 04000000 		.4byte	.LCFI56
 6755 051a 0200     		.2byte	0x2
 6756 051c 7D       		.byte	0x7d
 6757 051d 00       		.sleb128 0
 6758 051e 04000000 		.4byte	.LCFI56
 6759 0522 08000000 		.4byte	.LCFI57
 6760 0526 0200     		.2byte	0x2
 6761 0528 7D       		.byte	0x7d
 6762 0529 04       		.sleb128 4
 6763 052a 08000000 		.4byte	.LCFI57
 6764 052e 80000000 		.4byte	.LFE141
 6765 0532 0300     		.2byte	0x3
 6766 0534 7D       		.byte	0x7d
 6767 0535 D000     		.sleb128 80
 6768 0537 00000000 		.4byte	0x0
 6769 053b 00000000 		.4byte	0x0
 6770              	.LLST32:
 6771 053f 00000000 		.4byte	.LFB142
 6772 0543 04000000 		.4byte	.LCFI58
 6773 0547 0200     		.2byte	0x2
 6774 0549 7D       		.byte	0x7d
 6775 054a 00       		.sleb128 0
 6776 054b 04000000 		.4byte	.LCFI58
 6777 054f 20000000 		.4byte	.LFE142
 6778 0553 0200     		.2byte	0x2
 6779 0555 7D       		.byte	0x7d
 6780 0556 08       		.sleb128 8
 6781 0557 00000000 		.4byte	0x0
 6782 055b 00000000 		.4byte	0x0
 6783              		.file 2 "../arm/arm7lib/armlib.h"
 6784              		.file 3 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6785              		.file 4 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6786              		.file 5 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6787              		.file 6 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
ARM GAS  /tmp/ccNwMSzu.s 			page 154


 6788              		.file 7 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6789              		.file 8 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6790              		.file 9 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6791              		.file 10 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6792              		.file 11 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/include/s
 6793              		.file 12 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6794              		.file 13 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/include/s
 6795              		.file 14 "<built-in>"
 6796              		.file 15 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6797              		.file 16 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6798              		.file 17 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6799              		.file 18 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6800              		.file 19 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6801              		.file 20 "../arm/arm7lib/FIFO.h"
 6802              		.file 21 "../arm/arm7lib/UARTBase.h"
 6803              		.file 22 "../arm/arm7lib/UART0.h"
 6804              		.file 23 "fat16.h"
 6805              		.file 24 "../arm/arm7lib/lpc214x.h"
 6806              		.file 25 "../arm/arm7lib/HIDReport.h"
 6807              		.file 26 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6808              		.section	.debug_info
 6809 0000 DB3A0000 		.4byte	0x3adb
 6810 0004 0200     		.2byte	0x2
 6811 0006 00000000 		.4byte	.Ldebug_abbrev0
 6812 000a 04       		.byte	0x4
 6813 000b 01       		.uleb128 0x1
 6814 000c 84020000 		.4byte	.LASF559
 6815 0010 04       		.byte	0x4
 6816 0011 0A220000 		.4byte	.LASF560
 6817 0015 111C0000 		.4byte	.LASF561
 6818 0019 00000000 		.4byte	0x0
 6819 001d 00000000 		.4byte	0x0
 6820 0021 68000000 		.4byte	.Ldebug_ranges0+0x68
 6821 0025 00000000 		.4byte	.Ldebug_line0
 6822 0029 02       		.uleb128 0x2
 6823 002a 51160000 		.4byte	.LASF0
 6824 002e 02       		.byte	0x2
 6825 002f 42       		.byte	0x42
 6826 0030 34000000 		.4byte	0x34
 6827 0034 03       		.uleb128 0x3
 6828 0035 01       		.byte	0x1
 6829 0036 02       		.byte	0x2
 6830 0037 DA030000 		.4byte	.LASF2
 6831 003b 02       		.uleb128 0x2
 6832 003c AA0F0000 		.4byte	.LASF1
 6833 0040 02       		.byte	0x2
 6834 0041 45       		.byte	0x45
 6835 0042 46000000 		.4byte	0x46
 6836 0046 03       		.uleb128 0x3
 6837 0047 01       		.byte	0x1
 6838 0048 06       		.byte	0x6
 6839 0049 74110000 		.4byte	.LASF3
 6840 004d 02       		.uleb128 0x2
 6841 004e 390B0000 		.4byte	.LASF4
 6842 0052 02       		.byte	0x2
 6843 0053 48       		.byte	0x48
 6844 0054 58000000 		.4byte	0x58
ARM GAS  /tmp/ccNwMSzu.s 			page 155


 6845 0058 03       		.uleb128 0x3
 6846 0059 01       		.byte	0x1
 6847 005a 08       		.byte	0x8
 6848 005b 02080000 		.4byte	.LASF5
 6849 005f 02       		.uleb128 0x2
 6850 0060 4B110000 		.4byte	.LASF6
 6851 0064 02       		.byte	0x2
 6852 0065 4B       		.byte	0x4b
 6853 0066 6A000000 		.4byte	0x6a
 6854 006a 03       		.uleb128 0x3
 6855 006b 02       		.byte	0x2
 6856 006c 05       		.byte	0x5
 6857 006d 81220000 		.4byte	.LASF7
 6858 0071 02       		.uleb128 0x2
 6859 0072 34020000 		.4byte	.LASF8
 6860 0076 02       		.byte	0x2
 6861 0077 4E       		.byte	0x4e
 6862 0078 7C000000 		.4byte	0x7c
 6863 007c 03       		.uleb128 0x3
 6864 007d 02       		.byte	0x2
 6865 007e 07       		.byte	0x7
 6866 007f 61110000 		.4byte	.LASF9
 6867 0083 02       		.uleb128 0x2
 6868 0084 3C040000 		.4byte	.LASF10
 6869 0088 02       		.byte	0x2
 6870 0089 51       		.byte	0x51
 6871 008a 8E000000 		.4byte	0x8e
 6872 008e 03       		.uleb128 0x3
 6873 008f 04       		.byte	0x4
 6874 0090 05       		.byte	0x5
 6875 0091 1A140000 		.4byte	.LASF11
 6876 0095 02       		.uleb128 0x2
 6877 0096 B4150000 		.4byte	.LASF12
 6878 009a 02       		.byte	0x2
 6879 009b 54       		.byte	0x54
 6880 009c A0000000 		.4byte	0xa0
 6881 00a0 03       		.uleb128 0x3
 6882 00a1 04       		.byte	0x4
 6883 00a2 07       		.byte	0x7
 6884 00a3 3F160000 		.4byte	.LASF13
 6885 00a7 03       		.uleb128 0x3
 6886 00a8 08       		.byte	0x8
 6887 00a9 05       		.byte	0x5
 6888 00aa 63200000 		.4byte	.LASF14
 6889 00ae 03       		.uleb128 0x3
 6890 00af 08       		.byte	0x8
 6891 00b0 07       		.byte	0x7
 6892 00b1 981D0000 		.4byte	.LASF15
 6893 00b5 03       		.uleb128 0x3
 6894 00b6 04       		.byte	0x4
 6895 00b7 04       		.byte	0x4
 6896 00b8 3F080000 		.4byte	.LASF16
 6897 00bc 03       		.uleb128 0x3
 6898 00bd 08       		.byte	0x8
 6899 00be 04       		.byte	0x4
 6900 00bf D51A0000 		.4byte	.LASF17
 6901 00c3 04       		.uleb128 0x4
ARM GAS  /tmp/ccNwMSzu.s 			page 156


 6902 00c4 73746400 		.ascii	"std\000"
 6903 00c8 0E       		.byte	0xe
 6904 00c9 00       		.byte	0x0
 6905 00ca B2020000 		.4byte	0x2b2
 6906 00ce 05       		.uleb128 0x5
 6907 00cf 03       		.byte	0x3
 6908 00d0 33       		.byte	0x33
 6909 00d1 900B0000 		.4byte	0xb90
 6910 00d5 05       		.uleb128 0x5
 6911 00d6 03       		.byte	0x3
 6912 00d7 34       		.byte	0x34
 6913 00d8 9B0B0000 		.4byte	0xb9b
 6914 00dc 05       		.uleb128 0x5
 6915 00dd 04       		.byte	0x4
 6916 00de 5F       		.byte	0x5f
 6917 00df E10B0000 		.4byte	0xbe1
 6918 00e3 05       		.uleb128 0x5
 6919 00e4 04       		.byte	0x4
 6920 00e5 60       		.byte	0x60
 6921 00e6 EC0B0000 		.4byte	0xbec
 6922 00ea 05       		.uleb128 0x5
 6923 00eb 04       		.byte	0x4
 6924 00ec 62       		.byte	0x62
 6925 00ed F70B0000 		.4byte	0xbf7
 6926 00f1 05       		.uleb128 0x5
 6927 00f2 04       		.byte	0x4
 6928 00f3 63       		.byte	0x63
 6929 00f4 110C0000 		.4byte	0xc11
 6930 00f8 05       		.uleb128 0x5
 6931 00f9 04       		.byte	0x4
 6932 00fa 64       		.byte	0x64
 6933 00fb 280C0000 		.4byte	0xc28
 6934 00ff 05       		.uleb128 0x5
 6935 0100 04       		.byte	0x4
 6936 0101 65       		.byte	0x65
 6937 0102 400C0000 		.4byte	0xc40
 6938 0106 05       		.uleb128 0x5
 6939 0107 04       		.byte	0x4
 6940 0108 66       		.byte	0x66
 6941 0109 580C0000 		.4byte	0xc58
 6942 010d 05       		.uleb128 0x5
 6943 010e 04       		.byte	0x4
 6944 010f 67       		.byte	0x67
 6945 0110 6F0C0000 		.4byte	0xc6f
 6946 0114 05       		.uleb128 0x5
 6947 0115 04       		.byte	0x4
 6948 0116 68       		.byte	0x68
 6949 0117 860C0000 		.4byte	0xc86
 6950 011b 05       		.uleb128 0x5
 6951 011c 04       		.byte	0x4
 6952 011d 69       		.byte	0x69
 6953 011e A80C0000 		.4byte	0xca8
 6954 0122 05       		.uleb128 0x5
 6955 0123 04       		.byte	0x4
 6956 0124 6A       		.byte	0x6a
 6957 0125 C90C0000 		.4byte	0xcc9
 6958 0129 05       		.uleb128 0x5
ARM GAS  /tmp/ccNwMSzu.s 			page 157


 6959 012a 04       		.byte	0x4
 6960 012b 6E       		.byte	0x6e
 6961 012c E60C0000 		.4byte	0xce6
 6962 0130 05       		.uleb128 0x5
 6963 0131 04       		.byte	0x4
 6964 0132 6F       		.byte	0x6f
 6965 0133 0C0D0000 		.4byte	0xd0c
 6966 0137 05       		.uleb128 0x5
 6967 0138 04       		.byte	0x4
 6968 0139 71       		.byte	0x71
 6969 013a 2D0D0000 		.4byte	0xd2d
 6970 013e 05       		.uleb128 0x5
 6971 013f 04       		.byte	0x4
 6972 0140 72       		.byte	0x72
 6973 0141 4E0D0000 		.4byte	0xd4e
 6974 0145 05       		.uleb128 0x5
 6975 0146 04       		.byte	0x4
 6976 0147 73       		.byte	0x73
 6977 0148 750D0000 		.4byte	0xd75
 6978 014c 05       		.uleb128 0x5
 6979 014d 04       		.byte	0x4
 6980 014e 75       		.byte	0x75
 6981 014f 8C0D0000 		.4byte	0xd8c
 6982 0153 05       		.uleb128 0x5
 6983 0154 04       		.byte	0x4
 6984 0155 76       		.byte	0x76
 6985 0156 A30D0000 		.4byte	0xda3
 6986 015a 05       		.uleb128 0x5
 6987 015b 04       		.byte	0x4
 6988 015c 77       		.byte	0x77
 6989 015d B00D0000 		.4byte	0xdb0
 6990 0161 05       		.uleb128 0x5
 6991 0162 04       		.byte	0x4
 6992 0163 78       		.byte	0x78
 6993 0164 C70D0000 		.4byte	0xdc7
 6994 0168 05       		.uleb128 0x5
 6995 0169 04       		.byte	0x4
 6996 016a 7D       		.byte	0x7d
 6997 016b DB0D0000 		.4byte	0xddb
 6998 016f 05       		.uleb128 0x5
 6999 0170 04       		.byte	0x4
 7000 0171 7E       		.byte	0x7e
 7001 0172 F30D0000 		.4byte	0xdf3
 7002 0176 05       		.uleb128 0x5
 7003 0177 04       		.byte	0x4
 7004 0178 7F       		.byte	0x7f
 7005 0179 100E0000 		.4byte	0xe10
 7006 017d 05       		.uleb128 0x5
 7007 017e 04       		.byte	0x4
 7008 017f 81       		.byte	0x81
 7009 0180 230E0000 		.4byte	0xe23
 7010 0184 05       		.uleb128 0x5
 7011 0185 04       		.byte	0x4
 7012 0186 82       		.byte	0x82
 7013 0187 3B0E0000 		.4byte	0xe3b
 7014 018b 05       		.uleb128 0x5
 7015 018c 04       		.byte	0x4
ARM GAS  /tmp/ccNwMSzu.s 			page 158


 7016 018d 85       		.byte	0x85
 7017 018e 610E0000 		.4byte	0xe61
 7018 0192 05       		.uleb128 0x5
 7019 0193 04       		.byte	0x4
 7020 0194 86       		.byte	0x86
 7021 0195 6E0E0000 		.4byte	0xe6e
 7022 0199 05       		.uleb128 0x5
 7023 019a 04       		.byte	0x4
 7024 019b 87       		.byte	0x87
 7025 019c 850E0000 		.4byte	0xe85
 7026 01a0 05       		.uleb128 0x5
 7027 01a1 05       		.byte	0x5
 7028 01a2 53       		.byte	0x53
 7029 01a3 A10E0000 		.4byte	0xea1
 7030 01a7 05       		.uleb128 0x5
 7031 01a8 05       		.byte	0x5
 7032 01a9 56       		.byte	0x56
 7033 01aa BD0E0000 		.4byte	0xebd
 7034 01ae 05       		.uleb128 0x5
 7035 01af 05       		.byte	0x5
 7036 01b0 5C       		.byte	0x5c
 7037 01b1 D40E0000 		.4byte	0xed4
 7038 01b5 05       		.uleb128 0x5
 7039 01b6 05       		.byte	0x5
 7040 01b7 5D       		.byte	0x5d
 7041 01b8 F00E0000 		.4byte	0xef0
 7042 01bc 05       		.uleb128 0x5
 7043 01bd 06       		.byte	0x6
 7044 01be 66       		.byte	0x66
 7045 01bf 110F0000 		.4byte	0xf11
 7046 01c3 05       		.uleb128 0x5
 7047 01c4 06       		.byte	0x6
 7048 01c5 67       		.byte	0x67
 7049 01c6 3A0F0000 		.4byte	0xf3a
 7050 01ca 05       		.uleb128 0x5
 7051 01cb 06       		.byte	0x6
 7052 01cc 6B       		.byte	0x6b
 7053 01cd 630F0000 		.4byte	0xf63
 7054 01d1 05       		.uleb128 0x5
 7055 01d2 06       		.byte	0x6
 7056 01d3 6C       		.byte	0x6c
 7057 01d4 7A0F0000 		.4byte	0xf7a
 7058 01d8 05       		.uleb128 0x5
 7059 01d9 06       		.byte	0x6
 7060 01da 6D       		.byte	0x6d
 7061 01db 910F0000 		.4byte	0xf91
 7062 01df 05       		.uleb128 0x5
 7063 01e0 06       		.byte	0x6
 7064 01e1 6E       		.byte	0x6e
 7065 01e2 A80F0000 		.4byte	0xfa8
 7066 01e6 05       		.uleb128 0x5
 7067 01e7 06       		.byte	0x6
 7068 01e8 6F       		.byte	0x6f
 7069 01e9 BF0F0000 		.4byte	0xfbf
 7070 01ed 05       		.uleb128 0x5
 7071 01ee 06       		.byte	0x6
 7072 01ef 71       		.byte	0x71
ARM GAS  /tmp/ccNwMSzu.s 			page 159


 7073 01f0 0B100000 		.4byte	0x100b
 7074 01f4 05       		.uleb128 0x5
 7075 01f5 06       		.byte	0x6
 7076 01f6 74       		.byte	0x74
 7077 01f7 27100000 		.4byte	0x1027
 7078 01fb 05       		.uleb128 0x5
 7079 01fc 06       		.byte	0x6
 7080 01fd 76       		.byte	0x76
 7081 01fe 3E100000 		.4byte	0x103e
 7082 0202 05       		.uleb128 0x5
 7083 0203 06       		.byte	0x6
 7084 0204 79       		.byte	0x79
 7085 0205 5A100000 		.4byte	0x105a
 7086 0209 05       		.uleb128 0x5
 7087 020a 06       		.byte	0x6
 7088 020b 7A       		.byte	0x7a
 7089 020c 76100000 		.4byte	0x1076
 7090 0210 05       		.uleb128 0x5
 7091 0211 06       		.byte	0x6
 7092 0212 7B       		.byte	0x7b
 7093 0213 A4100000 		.4byte	0x10a4
 7094 0217 05       		.uleb128 0x5
 7095 0218 06       		.byte	0x6
 7096 0219 7D       		.byte	0x7d
 7097 021a C5100000 		.4byte	0x10c5
 7098 021e 05       		.uleb128 0x5
 7099 021f 06       		.byte	0x6
 7100 0220 7E       		.byte	0x7e
 7101 0221 E7100000 		.4byte	0x10e7
 7102 0225 05       		.uleb128 0x5
 7103 0226 06       		.byte	0x6
 7104 0227 80       		.byte	0x80
 7105 0228 F4100000 		.4byte	0x10f4
 7106 022c 05       		.uleb128 0x5
 7107 022d 06       		.byte	0x6
 7108 022e 81       		.byte	0x81
 7109 022f 07110000 		.4byte	0x1107
 7110 0233 05       		.uleb128 0x5
 7111 0234 06       		.byte	0x6
 7112 0235 82       		.byte	0x82
 7113 0236 29110000 		.4byte	0x1129
 7114 023a 05       		.uleb128 0x5
 7115 023b 06       		.byte	0x6
 7116 023c 83       		.byte	0x83
 7117 023d 4A110000 		.4byte	0x114a
 7118 0241 05       		.uleb128 0x5
 7119 0242 06       		.byte	0x6
 7120 0243 84       		.byte	0x84
 7121 0244 6B110000 		.4byte	0x116b
 7122 0248 05       		.uleb128 0x5
 7123 0249 06       		.byte	0x6
 7124 024a 86       		.byte	0x86
 7125 024b 82110000 		.4byte	0x1182
 7126 024f 05       		.uleb128 0x5
 7127 0250 06       		.byte	0x6
 7128 0251 87       		.byte	0x87
 7129 0252 AE110000 		.4byte	0x11ae
ARM GAS  /tmp/ccNwMSzu.s 			page 160


 7130 0256 05       		.uleb128 0x5
 7131 0257 07       		.byte	0x7
 7132 0258 3E       		.byte	0x3e
 7133 0259 CB0B0000 		.4byte	0xbcb
 7134 025d 05       		.uleb128 0x5
 7135 025e 07       		.byte	0x7
 7136 025f 3F       		.byte	0x3f
 7137 0260 D60B0000 		.4byte	0xbd6
 7138 0264 05       		.uleb128 0x5
 7139 0265 07       		.byte	0x7
 7140 0266 40       		.byte	0x40
 7141 0267 CA110000 		.4byte	0x11ca
 7142 026b 05       		.uleb128 0x5
 7143 026c 07       		.byte	0x7
 7144 026d 42       		.byte	0x42
 7145 026e 70120000 		.4byte	0x1270
 7146 0272 05       		.uleb128 0x5
 7147 0273 07       		.byte	0x7
 7148 0274 43       		.byte	0x43
 7149 0275 7D120000 		.4byte	0x127d
 7150 0279 05       		.uleb128 0x5
 7151 027a 07       		.byte	0x7
 7152 027b 44       		.byte	0x44
 7153 027c 99120000 		.4byte	0x1299
 7154 0280 05       		.uleb128 0x5
 7155 0281 07       		.byte	0x7
 7156 0282 45       		.byte	0x45
 7157 0283 B6120000 		.4byte	0x12b6
 7158 0287 05       		.uleb128 0x5
 7159 0288 07       		.byte	0x7
 7160 0289 46       		.byte	0x46
 7161 028a D3120000 		.4byte	0x12d3
 7162 028e 05       		.uleb128 0x5
 7163 028f 07       		.byte	0x7
 7164 0290 47       		.byte	0x47
 7165 0291 F5120000 		.4byte	0x12f5
 7166 0295 05       		.uleb128 0x5
 7167 0296 07       		.byte	0x7
 7168 0297 48       		.byte	0x48
 7169 0298 17130000 		.4byte	0x1317
 7170 029c 05       		.uleb128 0x5
 7171 029d 07       		.byte	0x7
 7172 029e 49       		.byte	0x49
 7173 029f 2E130000 		.4byte	0x132e
 7174 02a3 05       		.uleb128 0x5
 7175 02a4 07       		.byte	0x7
 7176 02a5 4A       		.byte	0x4a
 7177 02a6 45130000 		.4byte	0x1345
 7178 02aa 05       		.uleb128 0x5
 7179 02ab 08       		.byte	0x8
 7180 02ac 38       		.byte	0x38
 7181 02ad 6B130000 		.4byte	0x136b
 7182 02b1 00       		.byte	0x0
 7183 02b2 06       		.uleb128 0x6
 7184 02b3 64010000 		.4byte	.LASF562
 7185 02b7 1A       		.byte	0x1a
 7186 02b8 45       		.byte	0x45
ARM GAS  /tmp/ccNwMSzu.s 			page 161


 7187 02b9 03       		.uleb128 0x3
 7188 02ba 04       		.byte	0x4
 7189 02bb 07       		.byte	0x7
 7190 02bc 3E220000 		.4byte	.LASF18
 7191 02c0 07       		.uleb128 0x7
 7192 02c1 04       		.byte	0x4
 7193 02c2 05       		.byte	0x5
 7194 02c3 696E7400 		.ascii	"int\000"
 7195 02c7 02       		.uleb128 0x2
 7196 02c8 F7130000 		.4byte	.LASF19
 7197 02cc 09       		.byte	0x9
 7198 02cd 07       		.byte	0x7
 7199 02ce C0020000 		.4byte	0x2c0
 7200 02d2 02       		.uleb128 0x2
 7201 02d3 551A0000 		.4byte	.LASF20
 7202 02d7 0A       		.byte	0xa
 7203 02d8 2C       		.byte	0x2c
 7204 02d9 8E000000 		.4byte	0x8e
 7205 02dd 08       		.uleb128 0x8
 7206 02de 630C0000 		.4byte	.LASF21
 7207 02e2 0B       		.byte	0xb
 7208 02e3 6001     		.2byte	0x160
 7209 02e5 B9020000 		.4byte	0x2b9
 7210 02e9 09       		.uleb128 0x9
 7211 02ea 08       		.byte	0x8
 7212 02eb 0A       		.byte	0xa
 7213 02ec 44       		.byte	0x44
 7214 02ed F21A0000 		.4byte	.LASF164
 7215 02f1 31030000 		.4byte	0x331
 7216 02f5 0A       		.uleb128 0xa
 7217 02f6 04       		.byte	0x4
 7218 02f7 0A       		.byte	0xa
 7219 02f8 47       		.byte	0x47
 7220 02f9 14030000 		.4byte	0x314
 7221 02fd 0B       		.uleb128 0xb
 7222 02fe 2E130000 		.4byte	.LASF22
 7223 0302 0A       		.byte	0xa
 7224 0303 48       		.byte	0x48
 7225 0304 DD020000 		.4byte	0x2dd
 7226 0308 0B       		.uleb128 0xb
 7227 0309 2F0C0000 		.4byte	.LASF23
 7228 030d 0A       		.byte	0xa
 7229 030e 49       		.byte	0x49
 7230 030f 31030000 		.4byte	0x331
 7231 0313 00       		.byte	0x0
 7232 0314 0C       		.uleb128 0xc
 7233 0315 310B0000 		.4byte	.LASF24
 7234 0319 0A       		.byte	0xa
 7235 031a 45       		.byte	0x45
 7236 031b C0020000 		.4byte	0x2c0
 7237 031f 02       		.byte	0x2
 7238 0320 23       		.byte	0x23
 7239 0321 00       		.uleb128 0x0
 7240 0322 0C       		.uleb128 0xc
 7241 0323 E81B0000 		.4byte	.LASF25
 7242 0327 0A       		.byte	0xa
 7243 0328 4A       		.byte	0x4a
ARM GAS  /tmp/ccNwMSzu.s 			page 162


 7244 0329 F5020000 		.4byte	0x2f5
 7245 032d 02       		.byte	0x2
 7246 032e 23       		.byte	0x23
 7247 032f 04       		.uleb128 0x4
 7248 0330 00       		.byte	0x0
 7249 0331 0D       		.uleb128 0xd
 7250 0332 58000000 		.4byte	0x58
 7251 0336 41030000 		.4byte	0x341
 7252 033a 0E       		.uleb128 0xe
 7253 033b B9020000 		.4byte	0x2b9
 7254 033f 03       		.byte	0x3
 7255 0340 00       		.byte	0x0
 7256 0341 02       		.uleb128 0x2
 7257 0342 BC1F0000 		.4byte	.LASF26
 7258 0346 0A       		.byte	0xa
 7259 0347 4F       		.byte	0x4f
 7260 0348 C7020000 		.4byte	0x2c7
 7261 034c 0F       		.uleb128 0xf
 7262 034d 04       		.byte	0x4
 7263 034e 02       		.uleb128 0x2
 7264 034f DE0F0000 		.4byte	.LASF27
 7265 0353 0C       		.byte	0xc
 7266 0354 15       		.byte	0x15
 7267 0355 A0000000 		.4byte	0xa0
 7268 0359 10       		.uleb128 0x10
 7269 035a 98170000 		.4byte	.LASF32
 7270 035e 18       		.byte	0x18
 7271 035f 0C       		.byte	0xc
 7272 0360 2D       		.byte	0x2d
 7273 0361 B8030000 		.4byte	0x3b8
 7274 0365 0C       		.uleb128 0xc
 7275 0366 AB0D0000 		.4byte	.LASF28
 7276 036a 0C       		.byte	0xc
 7277 036b 2E       		.byte	0x2e
 7278 036c B8030000 		.4byte	0x3b8
 7279 0370 02       		.byte	0x2
 7280 0371 23       		.byte	0x23
 7281 0372 00       		.uleb128 0x0
 7282 0373 11       		.uleb128 0x11
 7283 0374 5F6B00   		.ascii	"_k\000"
 7284 0377 0C       		.byte	0xc
 7285 0378 2F       		.byte	0x2f
 7286 0379 C0020000 		.4byte	0x2c0
 7287 037d 02       		.byte	0x2
 7288 037e 23       		.byte	0x23
 7289 037f 04       		.uleb128 0x4
 7290 0380 0C       		.uleb128 0xc
 7291 0381 CB150000 		.4byte	.LASF29
 7292 0385 0C       		.byte	0xc
 7293 0386 2F       		.byte	0x2f
 7294 0387 C0020000 		.4byte	0x2c0
 7295 038b 02       		.byte	0x2
 7296 038c 23       		.byte	0x23
 7297 038d 08       		.uleb128 0x8
 7298 038e 0C       		.uleb128 0xc
 7299 038f FB210000 		.4byte	.LASF30
 7300 0393 0C       		.byte	0xc
ARM GAS  /tmp/ccNwMSzu.s 			page 163


 7301 0394 2F       		.byte	0x2f
 7302 0395 C0020000 		.4byte	0x2c0
 7303 0399 02       		.byte	0x2
 7304 039a 23       		.byte	0x23
 7305 039b 0C       		.uleb128 0xc
 7306 039c 0C       		.uleb128 0xc
 7307 039d 2E080000 		.4byte	.LASF31
 7308 03a1 0C       		.byte	0xc
 7309 03a2 2F       		.byte	0x2f
 7310 03a3 C0020000 		.4byte	0x2c0
 7311 03a7 02       		.byte	0x2
 7312 03a8 23       		.byte	0x23
 7313 03a9 10       		.uleb128 0x10
 7314 03aa 11       		.uleb128 0x11
 7315 03ab 5F7800   		.ascii	"_x\000"
 7316 03ae 0C       		.byte	0xc
 7317 03af 30       		.byte	0x30
 7318 03b0 BE030000 		.4byte	0x3be
 7319 03b4 02       		.byte	0x2
 7320 03b5 23       		.byte	0x23
 7321 03b6 14       		.uleb128 0x14
 7322 03b7 00       		.byte	0x0
 7323 03b8 12       		.uleb128 0x12
 7324 03b9 04       		.byte	0x4
 7325 03ba 59030000 		.4byte	0x359
 7326 03be 0D       		.uleb128 0xd
 7327 03bf A0000000 		.4byte	0xa0
 7328 03c3 CE030000 		.4byte	0x3ce
 7329 03c7 0E       		.uleb128 0xe
 7330 03c8 B9020000 		.4byte	0x2b9
 7331 03cc 00       		.byte	0x0
 7332 03cd 00       		.byte	0x0
 7333 03ce 10       		.uleb128 0x10
 7334 03cf FA050000 		.4byte	.LASF33
 7335 03d3 24       		.byte	0x24
 7336 03d4 0C       		.byte	0xc
 7337 03d5 35       		.byte	0x35
 7338 03d6 59040000 		.4byte	0x459
 7339 03da 0C       		.uleb128 0xc
 7340 03db A50E0000 		.4byte	.LASF34
 7341 03df 0C       		.byte	0xc
 7342 03e0 36       		.byte	0x36
 7343 03e1 C0020000 		.4byte	0x2c0
 7344 03e5 02       		.byte	0x2
 7345 03e6 23       		.byte	0x23
 7346 03e7 00       		.uleb128 0x0
 7347 03e8 0C       		.uleb128 0xc
 7348 03e9 01220000 		.4byte	.LASF35
 7349 03ed 0C       		.byte	0xc
 7350 03ee 37       		.byte	0x37
 7351 03ef C0020000 		.4byte	0x2c0
 7352 03f3 02       		.byte	0x2
 7353 03f4 23       		.byte	0x23
 7354 03f5 04       		.uleb128 0x4
 7355 03f6 0C       		.uleb128 0xc
 7356 03f7 450C0000 		.4byte	.LASF36
 7357 03fb 0C       		.byte	0xc
ARM GAS  /tmp/ccNwMSzu.s 			page 164


 7358 03fc 38       		.byte	0x38
 7359 03fd C0020000 		.4byte	0x2c0
 7360 0401 02       		.byte	0x2
 7361 0402 23       		.byte	0x23
 7362 0403 08       		.uleb128 0x8
 7363 0404 0C       		.uleb128 0xc
 7364 0405 F40C0000 		.4byte	.LASF37
 7365 0409 0C       		.byte	0xc
 7366 040a 39       		.byte	0x39
 7367 040b C0020000 		.4byte	0x2c0
 7368 040f 02       		.byte	0x2
 7369 0410 23       		.byte	0x23
 7370 0411 0C       		.uleb128 0xc
 7371 0412 0C       		.uleb128 0xc
 7372 0413 8B010000 		.4byte	.LASF38
 7373 0417 0C       		.byte	0xc
 7374 0418 3A       		.byte	0x3a
 7375 0419 C0020000 		.4byte	0x2c0
 7376 041d 02       		.byte	0x2
 7377 041e 23       		.byte	0x23
 7378 041f 10       		.uleb128 0x10
 7379 0420 0C       		.uleb128 0xc
 7380 0421 27090000 		.4byte	.LASF39
 7381 0425 0C       		.byte	0xc
 7382 0426 3B       		.byte	0x3b
 7383 0427 C0020000 		.4byte	0x2c0
 7384 042b 02       		.byte	0x2
 7385 042c 23       		.byte	0x23
 7386 042d 14       		.uleb128 0x14
 7387 042e 0C       		.uleb128 0xc
 7388 042f C8070000 		.4byte	.LASF40
 7389 0433 0C       		.byte	0xc
 7390 0434 3C       		.byte	0x3c
 7391 0435 C0020000 		.4byte	0x2c0
 7392 0439 02       		.byte	0x2
 7393 043a 23       		.byte	0x23
 7394 043b 18       		.uleb128 0x18
 7395 043c 0C       		.uleb128 0xc
 7396 043d 47060000 		.4byte	.LASF41
 7397 0441 0C       		.byte	0xc
 7398 0442 3D       		.byte	0x3d
 7399 0443 C0020000 		.4byte	0x2c0
 7400 0447 02       		.byte	0x2
 7401 0448 23       		.byte	0x23
 7402 0449 1C       		.uleb128 0x1c
 7403 044a 0C       		.uleb128 0xc
 7404 044b D2070000 		.4byte	.LASF42
 7405 044f 0C       		.byte	0xc
 7406 0450 3E       		.byte	0x3e
 7407 0451 C0020000 		.4byte	0x2c0
 7408 0455 02       		.byte	0x2
 7409 0456 23       		.byte	0x23
 7410 0457 20       		.uleb128 0x20
 7411 0458 00       		.byte	0x0
 7412 0459 13       		.uleb128 0x13
 7413 045a B70E0000 		.4byte	.LASF43
 7414 045e 0801     		.2byte	0x108
ARM GAS  /tmp/ccNwMSzu.s 			page 165


 7415 0460 0C       		.byte	0xc
 7416 0461 47       		.byte	0x47
 7417 0462 A2040000 		.4byte	0x4a2
 7418 0466 0C       		.uleb128 0xc
 7419 0467 3E0D0000 		.4byte	.LASF44
 7420 046b 0C       		.byte	0xc
 7421 046c 48       		.byte	0x48
 7422 046d A2040000 		.4byte	0x4a2
 7423 0471 02       		.byte	0x2
 7424 0472 23       		.byte	0x23
 7425 0473 00       		.uleb128 0x0
 7426 0474 0C       		.uleb128 0xc
 7427 0475 AD070000 		.4byte	.LASF45
 7428 0479 0C       		.byte	0xc
 7429 047a 49       		.byte	0x49
 7430 047b A2040000 		.4byte	0x4a2
 7431 047f 03       		.byte	0x3
 7432 0480 23       		.byte	0x23
 7433 0481 8001     		.uleb128 0x80
 7434 0483 0C       		.uleb128 0xc
 7435 0484 94010000 		.4byte	.LASF46
 7436 0488 0C       		.byte	0xc
 7437 0489 4B       		.byte	0x4b
 7438 048a 4E030000 		.4byte	0x34e
 7439 048e 03       		.byte	0x3
 7440 048f 23       		.byte	0x23
 7441 0490 8002     		.uleb128 0x100
 7442 0492 0C       		.uleb128 0xc
 7443 0493 F01B0000 		.4byte	.LASF47
 7444 0497 0C       		.byte	0xc
 7445 0498 4E       		.byte	0x4e
 7446 0499 4E030000 		.4byte	0x34e
 7447 049d 03       		.byte	0x3
 7448 049e 23       		.byte	0x23
 7449 049f 8402     		.uleb128 0x104
 7450 04a1 00       		.byte	0x0
 7451 04a2 0D       		.uleb128 0xd
 7452 04a3 4C030000 		.4byte	0x34c
 7453 04a7 B2040000 		.4byte	0x4b2
 7454 04ab 0E       		.uleb128 0xe
 7455 04ac B9020000 		.4byte	0x2b9
 7456 04b0 1F       		.byte	0x1f
 7457 04b1 00       		.byte	0x0
 7458 04b2 13       		.uleb128 0x13
 7459 04b3 F9000000 		.4byte	.LASF48
 7460 04b7 9001     		.2byte	0x190
 7461 04b9 0C       		.byte	0xc
 7462 04ba 59       		.byte	0x59
 7463 04bb F9040000 		.4byte	0x4f9
 7464 04bf 0C       		.uleb128 0xc
 7465 04c0 AB0D0000 		.4byte	.LASF28
 7466 04c4 0C       		.byte	0xc
 7467 04c5 5A       		.byte	0x5a
 7468 04c6 F9040000 		.4byte	0x4f9
 7469 04ca 02       		.byte	0x2
 7470 04cb 23       		.byte	0x23
 7471 04cc 00       		.uleb128 0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 166


 7472 04cd 0C       		.uleb128 0xc
 7473 04ce D4010000 		.4byte	.LASF49
 7474 04d2 0C       		.byte	0xc
 7475 04d3 5B       		.byte	0x5b
 7476 04d4 C0020000 		.4byte	0x2c0
 7477 04d8 02       		.byte	0x2
 7478 04d9 23       		.byte	0x23
 7479 04da 04       		.uleb128 0x4
 7480 04db 0C       		.uleb128 0xc
 7481 04dc DC1A0000 		.4byte	.LASF50
 7482 04e0 0C       		.byte	0xc
 7483 04e1 5D       		.byte	0x5d
 7484 04e2 FF040000 		.4byte	0x4ff
 7485 04e6 02       		.byte	0x2
 7486 04e7 23       		.byte	0x23
 7487 04e8 08       		.uleb128 0x8
 7488 04e9 0C       		.uleb128 0xc
 7489 04ea B70E0000 		.4byte	.LASF43
 7490 04ee 0C       		.byte	0xc
 7491 04ef 5E       		.byte	0x5e
 7492 04f0 59040000 		.4byte	0x459
 7493 04f4 03       		.byte	0x3
 7494 04f5 23       		.byte	0x23
 7495 04f6 8801     		.uleb128 0x88
 7496 04f8 00       		.byte	0x0
 7497 04f9 12       		.uleb128 0x12
 7498 04fa 04       		.byte	0x4
 7499 04fb B2040000 		.4byte	0x4b2
 7500 04ff 0D       		.uleb128 0xd
 7501 0500 10050000 		.4byte	0x510
 7502 0504 0F050000 		.4byte	0x50f
 7503 0508 0E       		.uleb128 0xe
 7504 0509 B9020000 		.4byte	0x2b9
 7505 050d 1F       		.byte	0x1f
 7506 050e 00       		.byte	0x0
 7507 050f 14       		.uleb128 0x14
 7508 0510 12       		.uleb128 0x12
 7509 0511 04       		.byte	0x4
 7510 0512 0F050000 		.4byte	0x50f
 7511 0516 10       		.uleb128 0x10
 7512 0517 7D120000 		.4byte	.LASF51
 7513 051b 08       		.byte	0x8
 7514 051c 0C       		.byte	0xc
 7515 051d 69       		.byte	0x69
 7516 051e 3F050000 		.4byte	0x53f
 7517 0522 0C       		.uleb128 0xc
 7518 0523 81050000 		.4byte	.LASF52
 7519 0527 0C       		.byte	0xc
 7520 0528 6A       		.byte	0x6a
 7521 0529 3F050000 		.4byte	0x53f
 7522 052d 02       		.byte	0x2
 7523 052e 23       		.byte	0x23
 7524 052f 00       		.uleb128 0x0
 7525 0530 0C       		.uleb128 0xc
 7526 0531 78080000 		.4byte	.LASF53
 7527 0535 0C       		.byte	0xc
 7528 0536 6B       		.byte	0x6b
ARM GAS  /tmp/ccNwMSzu.s 			page 167


 7529 0537 C0020000 		.4byte	0x2c0
 7530 053b 02       		.byte	0x2
 7531 053c 23       		.byte	0x23
 7532 053d 04       		.uleb128 0x4
 7533 053e 00       		.byte	0x0
 7534 053f 12       		.uleb128 0x12
 7535 0540 04       		.byte	0x4
 7536 0541 58000000 		.4byte	0x58
 7537 0545 10       		.uleb128 0x10
 7538 0546 CD1A0000 		.4byte	.LASF54
 7539 054a 68       		.byte	0x68
 7540 054b 0C       		.byte	0xc
 7541 054c B3       		.byte	0xb3
 7542 054d 9F060000 		.4byte	0x69f
 7543 0551 11       		.uleb128 0x11
 7544 0552 5F7000   		.ascii	"_p\000"
 7545 0555 0C       		.byte	0xc
 7546 0556 B4       		.byte	0xb4
 7547 0557 3F050000 		.4byte	0x53f
 7548 055b 02       		.byte	0x2
 7549 055c 23       		.byte	0x23
 7550 055d 00       		.uleb128 0x0
 7551 055e 11       		.uleb128 0x11
 7552 055f 5F7200   		.ascii	"_r\000"
 7553 0562 0C       		.byte	0xc
 7554 0563 B5       		.byte	0xb5
 7555 0564 C0020000 		.4byte	0x2c0
 7556 0568 02       		.byte	0x2
 7557 0569 23       		.byte	0x23
 7558 056a 04       		.uleb128 0x4
 7559 056b 11       		.uleb128 0x11
 7560 056c 5F7700   		.ascii	"_w\000"
 7561 056f 0C       		.byte	0xc
 7562 0570 B6       		.byte	0xb6
 7563 0571 C0020000 		.4byte	0x2c0
 7564 0575 02       		.byte	0x2
 7565 0576 23       		.byte	0x23
 7566 0577 08       		.uleb128 0x8
 7567 0578 0C       		.uleb128 0xc
 7568 0579 A5020000 		.4byte	.LASF55
 7569 057d 0C       		.byte	0xc
 7570 057e B7       		.byte	0xb7
 7571 057f 6A000000 		.4byte	0x6a
 7572 0583 02       		.byte	0x2
 7573 0584 23       		.byte	0x23
 7574 0585 0C       		.uleb128 0xc
 7575 0586 0C       		.uleb128 0xc
 7576 0587 5D1A0000 		.4byte	.LASF56
 7577 058b 0C       		.byte	0xc
 7578 058c B8       		.byte	0xb8
 7579 058d 6A000000 		.4byte	0x6a
 7580 0591 02       		.byte	0x2
 7581 0592 23       		.byte	0x23
 7582 0593 0E       		.uleb128 0xe
 7583 0594 11       		.uleb128 0x11
 7584 0595 5F626600 		.ascii	"_bf\000"
 7585 0599 0C       		.byte	0xc
ARM GAS  /tmp/ccNwMSzu.s 			page 168


 7586 059a B9       		.byte	0xb9
 7587 059b 16050000 		.4byte	0x516
 7588 059f 02       		.byte	0x2
 7589 05a0 23       		.byte	0x23
 7590 05a1 10       		.uleb128 0x10
 7591 05a2 0C       		.uleb128 0xc
 7592 05a3 BF040000 		.4byte	.LASF57
 7593 05a7 0C       		.byte	0xc
 7594 05a8 BA       		.byte	0xba
 7595 05a9 C0020000 		.4byte	0x2c0
 7596 05ad 02       		.byte	0x2
 7597 05ae 23       		.byte	0x23
 7598 05af 18       		.uleb128 0x18
 7599 05b0 0C       		.uleb128 0xc
 7600 05b1 C90D0000 		.4byte	.LASF58
 7601 05b5 0C       		.byte	0xc
 7602 05b6 C1       		.byte	0xc1
 7603 05b7 4C030000 		.4byte	0x34c
 7604 05bb 02       		.byte	0x2
 7605 05bc 23       		.byte	0x23
 7606 05bd 1C       		.uleb128 0x1c
 7607 05be 0C       		.uleb128 0xc
 7608 05bf 97220000 		.4byte	.LASF59
 7609 05c3 0C       		.byte	0xc
 7610 05c4 C3       		.byte	0xc3
 7611 05c5 A8090000 		.4byte	0x9a8
 7612 05c9 02       		.byte	0x2
 7613 05ca 23       		.byte	0x23
 7614 05cb 20       		.uleb128 0x20
 7615 05cc 0C       		.uleb128 0xc
 7616 05cd AA080000 		.4byte	.LASF60
 7617 05d1 0C       		.byte	0xc
 7618 05d2 C5       		.byte	0xc5
 7619 05d3 D7090000 		.4byte	0x9d7
 7620 05d7 02       		.byte	0x2
 7621 05d8 23       		.byte	0x23
 7622 05d9 24       		.uleb128 0x24
 7623 05da 0C       		.uleb128 0xc
 7624 05db 1F110000 		.4byte	.LASF61
 7625 05df 0C       		.byte	0xc
 7626 05e0 C7       		.byte	0xc7
 7627 05e1 FB090000 		.4byte	0x9fb
 7628 05e5 02       		.byte	0x2
 7629 05e6 23       		.byte	0x23
 7630 05e7 28       		.uleb128 0x28
 7631 05e8 0C       		.uleb128 0xc
 7632 05e9 5A170000 		.4byte	.LASF62
 7633 05ed 0C       		.byte	0xc
 7634 05ee C8       		.byte	0xc8
 7635 05ef 150A0000 		.4byte	0xa15
 7636 05f3 02       		.byte	0x2
 7637 05f4 23       		.byte	0x23
 7638 05f5 2C       		.uleb128 0x2c
 7639 05f6 11       		.uleb128 0x11
 7640 05f7 5F756200 		.ascii	"_ub\000"
 7641 05fb 0C       		.byte	0xc
 7642 05fc CB       		.byte	0xcb
ARM GAS  /tmp/ccNwMSzu.s 			page 169


 7643 05fd 16050000 		.4byte	0x516
 7644 0601 02       		.byte	0x2
 7645 0602 23       		.byte	0x23
 7646 0603 30       		.uleb128 0x30
 7647 0604 11       		.uleb128 0x11
 7648 0605 5F757000 		.ascii	"_up\000"
 7649 0609 0C       		.byte	0xc
 7650 060a CC       		.byte	0xcc
 7651 060b 3F050000 		.4byte	0x53f
 7652 060f 02       		.byte	0x2
 7653 0610 23       		.byte	0x23
 7654 0611 38       		.uleb128 0x38
 7655 0612 11       		.uleb128 0x11
 7656 0613 5F757200 		.ascii	"_ur\000"
 7657 0617 0C       		.byte	0xc
 7658 0618 CD       		.byte	0xcd
 7659 0619 C0020000 		.4byte	0x2c0
 7660 061d 02       		.byte	0x2
 7661 061e 23       		.byte	0x23
 7662 061f 3C       		.uleb128 0x3c
 7663 0620 0C       		.uleb128 0xc
 7664 0621 A2190000 		.4byte	.LASF63
 7665 0625 0C       		.byte	0xc
 7666 0626 D0       		.byte	0xd0
 7667 0627 1B0A0000 		.4byte	0xa1b
 7668 062b 02       		.byte	0x2
 7669 062c 23       		.byte	0x23
 7670 062d 40       		.uleb128 0x40
 7671 062e 0C       		.uleb128 0xc
 7672 062f 33030000 		.4byte	.LASF64
 7673 0633 0C       		.byte	0xc
 7674 0634 D1       		.byte	0xd1
 7675 0635 2B0A0000 		.4byte	0xa2b
 7676 0639 02       		.byte	0x2
 7677 063a 23       		.byte	0x23
 7678 063b 43       		.uleb128 0x43
 7679 063c 11       		.uleb128 0x11
 7680 063d 5F6C6200 		.ascii	"_lb\000"
 7681 0641 0C       		.byte	0xc
 7682 0642 D4       		.byte	0xd4
 7683 0643 16050000 		.4byte	0x516
 7684 0647 02       		.byte	0x2
 7685 0648 23       		.byte	0x23
 7686 0649 44       		.uleb128 0x44
 7687 064a 0C       		.uleb128 0xc
 7688 064b 7F190000 		.4byte	.LASF65
 7689 064f 0C       		.byte	0xc
 7690 0650 D7       		.byte	0xd7
 7691 0651 C0020000 		.4byte	0x2c0
 7692 0655 02       		.byte	0x2
 7693 0656 23       		.byte	0x23
 7694 0657 4C       		.uleb128 0x4c
 7695 0658 0C       		.uleb128 0xc
 7696 0659 17120000 		.4byte	.LASF66
 7697 065d 0C       		.byte	0xc
 7698 065e D8       		.byte	0xd8
 7699 065f C0020000 		.4byte	0x2c0
ARM GAS  /tmp/ccNwMSzu.s 			page 170


 7700 0663 02       		.byte	0x2
 7701 0664 23       		.byte	0x23
 7702 0665 50       		.uleb128 0x50
 7703 0666 0C       		.uleb128 0xc
 7704 0667 0C050000 		.4byte	.LASF67
 7705 066b 0C       		.byte	0xc
 7706 066c DB       		.byte	0xdb
 7707 066d BD060000 		.4byte	0x6bd
 7708 0671 02       		.byte	0x2
 7709 0672 23       		.byte	0x23
 7710 0673 54       		.uleb128 0x54
 7711 0674 0C       		.uleb128 0xc
 7712 0675 2D030000 		.4byte	.LASF68
 7713 0679 0C       		.byte	0xc
 7714 067a DF       		.byte	0xdf
 7715 067b 41030000 		.4byte	0x341
 7716 067f 02       		.byte	0x2
 7717 0680 23       		.byte	0x23
 7718 0681 58       		.uleb128 0x58
 7719 0682 0C       		.uleb128 0xc
 7720 0683 E8000000 		.4byte	.LASF69
 7721 0687 0C       		.byte	0xc
 7722 0688 E1       		.byte	0xe1
 7723 0689 E9020000 		.4byte	0x2e9
 7724 068d 02       		.byte	0x2
 7725 068e 23       		.byte	0x23
 7726 068f 5C       		.uleb128 0x5c
 7727 0690 0C       		.uleb128 0xc
 7728 0691 71200000 		.4byte	.LASF70
 7729 0695 0C       		.byte	0xc
 7730 0696 E2       		.byte	0xe2
 7731 0697 C0020000 		.4byte	0x2c0
 7732 069b 02       		.byte	0x2
 7733 069c 23       		.byte	0x23
 7734 069d 64       		.uleb128 0x64
 7735 069e 00       		.byte	0x0
 7736 069f 15       		.uleb128 0x15
 7737 06a0 C0020000 		.4byte	0x2c0
 7738 06a4 BD060000 		.4byte	0x6bd
 7739 06a8 16       		.uleb128 0x16
 7740 06a9 BD060000 		.4byte	0x6bd
 7741 06ad 16       		.uleb128 0x16
 7742 06ae 4C030000 		.4byte	0x34c
 7743 06b2 16       		.uleb128 0x16
 7744 06b3 9B090000 		.4byte	0x99b
 7745 06b7 16       		.uleb128 0x16
 7746 06b8 C0020000 		.4byte	0x2c0
 7747 06bc 00       		.byte	0x0
 7748 06bd 12       		.uleb128 0x12
 7749 06be 04       		.byte	0x4
 7750 06bf C3060000 		.4byte	0x6c3
 7751 06c3 17       		.uleb128 0x17
 7752 06c4 4A050000 		.4byte	.LASF71
 7753 06c8 2804     		.2byte	0x428
 7754 06ca 0C       		.byte	0xc
 7755 06cb 5A02     		.2byte	0x25a
 7756 06cd 9B090000 		.4byte	0x99b
ARM GAS  /tmp/ccNwMSzu.s 			page 171


 7757 06d1 18       		.uleb128 0x18
 7758 06d2 F0       		.byte	0xf0
 7759 06d3 0C       		.byte	0xc
 7760 06d4 7702     		.2byte	0x277
 7761 06d6 4B080000 		.4byte	0x84b
 7762 06da 19       		.uleb128 0x19
 7763 06db D0       		.byte	0xd0
 7764 06dc 0C       		.byte	0xc
 7765 06dd 7902     		.2byte	0x279
 7766 06df 0A080000 		.4byte	0x80a
 7767 06e3 1A       		.uleb128 0x1a
 7768 06e4 FE060000 		.4byte	.LASF72
 7769 06e8 0C       		.byte	0xc
 7770 06e9 7A02     		.2byte	0x27a
 7771 06eb B9020000 		.4byte	0x2b9
 7772 06ef 02       		.byte	0x2
 7773 06f0 23       		.byte	0x23
 7774 06f1 00       		.uleb128 0x0
 7775 06f2 1A       		.uleb128 0x1a
 7776 06f3 C6100000 		.4byte	.LASF73
 7777 06f7 0C       		.byte	0xc
 7778 06f8 7B02     		.2byte	0x27b
 7779 06fa 9B090000 		.4byte	0x99b
 7780 06fe 02       		.byte	0x2
 7781 06ff 23       		.byte	0x23
 7782 0700 04       		.uleb128 0x4
 7783 0701 1A       		.uleb128 0x1a
 7784 0702 F1120000 		.4byte	.LASF74
 7785 0706 0C       		.byte	0xc
 7786 0707 7C02     		.2byte	0x27c
 7787 0709 D90A0000 		.4byte	0xad9
 7788 070d 02       		.byte	0x2
 7789 070e 23       		.byte	0x23
 7790 070f 08       		.uleb128 0x8
 7791 0710 1A       		.uleb128 0x1a
 7792 0711 EA0A0000 		.4byte	.LASF75
 7793 0715 0C       		.byte	0xc
 7794 0716 7D02     		.2byte	0x27d
 7795 0718 CE030000 		.4byte	0x3ce
 7796 071c 02       		.byte	0x2
 7797 071d 23       		.byte	0x23
 7798 071e 24       		.uleb128 0x24
 7799 071f 1A       		.uleb128 0x1a
 7800 0720 F91D0000 		.4byte	.LASF76
 7801 0724 0C       		.byte	0xc
 7802 0725 7E02     		.2byte	0x27e
 7803 0727 C0020000 		.4byte	0x2c0
 7804 072b 02       		.byte	0x2
 7805 072c 23       		.byte	0x23
 7806 072d 48       		.uleb128 0x48
 7807 072e 1A       		.uleb128 0x1a
 7808 072f A9150000 		.4byte	.LASF77
 7809 0733 0C       		.byte	0xc
 7810 0734 7F02     		.2byte	0x27f
 7811 0736 AE000000 		.4byte	0xae
 7812 073a 02       		.byte	0x2
 7813 073b 23       		.byte	0x23
ARM GAS  /tmp/ccNwMSzu.s 			page 172


 7814 073c 50       		.uleb128 0x50
 7815 073d 1A       		.uleb128 0x1a
 7816 073e 56220000 		.4byte	.LASF78
 7817 0742 0C       		.byte	0xc
 7818 0743 8002     		.2byte	0x280
 7819 0745 8E0A0000 		.4byte	0xa8e
 7820 0749 02       		.byte	0x2
 7821 074a 23       		.byte	0x23
 7822 074b 58       		.uleb128 0x58
 7823 074c 1A       		.uleb128 0x1a
 7824 074d C7190000 		.4byte	.LASF79
 7825 0751 0C       		.byte	0xc
 7826 0752 8102     		.2byte	0x281
 7827 0754 E9020000 		.4byte	0x2e9
 7828 0758 02       		.byte	0x2
 7829 0759 23       		.byte	0x23
 7830 075a 68       		.uleb128 0x68
 7831 075b 1A       		.uleb128 0x1a
 7832 075c 8D050000 		.4byte	.LASF80
 7833 0760 0C       		.byte	0xc
 7834 0761 8202     		.2byte	0x282
 7835 0763 E9020000 		.4byte	0x2e9
 7836 0767 02       		.byte	0x2
 7837 0768 23       		.byte	0x23
 7838 0769 70       		.uleb128 0x70
 7839 076a 1A       		.uleb128 0x1a
 7840 076b 73140000 		.4byte	.LASF81
 7841 076f 0C       		.byte	0xc
 7842 0770 8302     		.2byte	0x283
 7843 0772 E9020000 		.4byte	0x2e9
 7844 0776 02       		.byte	0x2
 7845 0777 23       		.byte	0x23
 7846 0778 78       		.uleb128 0x78
 7847 0779 1A       		.uleb128 0x1a
 7848 077a 8D120000 		.4byte	.LASF82
 7849 077e 0C       		.byte	0xc
 7850 077f 8402     		.2byte	0x284
 7851 0781 E90A0000 		.4byte	0xae9
 7852 0785 03       		.byte	0x3
 7853 0786 23       		.byte	0x23
 7854 0787 8001     		.uleb128 0x80
 7855 0789 1A       		.uleb128 0x1a
 7856 078a BD0D0000 		.4byte	.LASF83
 7857 078e 0C       		.byte	0xc
 7858 078f 8502     		.2byte	0x285
 7859 0791 F90A0000 		.4byte	0xaf9
 7860 0795 03       		.byte	0x3
 7861 0796 23       		.byte	0x23
 7862 0797 8801     		.uleb128 0x88
 7863 0799 1A       		.uleb128 0x1a
 7864 079a 0A180000 		.4byte	.LASF84
 7865 079e 0C       		.byte	0xc
 7866 079f 8602     		.2byte	0x286
 7867 07a1 C0020000 		.4byte	0x2c0
 7868 07a5 03       		.byte	0x3
 7869 07a6 23       		.byte	0x23
 7870 07a7 A001     		.uleb128 0xa0
ARM GAS  /tmp/ccNwMSzu.s 			page 173


 7871 07a9 1A       		.uleb128 0x1a
 7872 07aa DE090000 		.4byte	.LASF85
 7873 07ae 0C       		.byte	0xc
 7874 07af 8702     		.2byte	0x287
 7875 07b1 E9020000 		.4byte	0x2e9
 7876 07b5 03       		.byte	0x3
 7877 07b6 23       		.byte	0x23
 7878 07b7 A401     		.uleb128 0xa4
 7879 07b9 1A       		.uleb128 0x1a
 7880 07ba 360C0000 		.4byte	.LASF86
 7881 07be 0C       		.byte	0xc
 7882 07bf 8802     		.2byte	0x288
 7883 07c1 E9020000 		.4byte	0x2e9
 7884 07c5 03       		.byte	0x3
 7885 07c6 23       		.byte	0x23
 7886 07c7 AC01     		.uleb128 0xac
 7887 07c9 1A       		.uleb128 0x1a
 7888 07ca 1D080000 		.4byte	.LASF87
 7889 07ce 0C       		.byte	0xc
 7890 07cf 8902     		.2byte	0x289
 7891 07d1 E9020000 		.4byte	0x2e9
 7892 07d5 03       		.byte	0x3
 7893 07d6 23       		.byte	0x23
 7894 07d7 B401     		.uleb128 0xb4
 7895 07d9 1A       		.uleb128 0x1a
 7896 07da 420F0000 		.4byte	.LASF88
 7897 07de 0C       		.byte	0xc
 7898 07df 8A02     		.2byte	0x28a
 7899 07e1 E9020000 		.4byte	0x2e9
 7900 07e5 03       		.byte	0x3
 7901 07e6 23       		.byte	0x23
 7902 07e7 BC01     		.uleb128 0xbc
 7903 07e9 1A       		.uleb128 0x1a
 7904 07ea 34130000 		.4byte	.LASF89
 7905 07ee 0C       		.byte	0xc
 7906 07ef 8B02     		.2byte	0x28b
 7907 07f1 E9020000 		.4byte	0x2e9
 7908 07f5 03       		.byte	0x3
 7909 07f6 23       		.byte	0x23
 7910 07f7 C401     		.uleb128 0xc4
 7911 07f9 1A       		.uleb128 0x1a
 7912 07fa FD1A0000 		.4byte	.LASF90
 7913 07fe 0C       		.byte	0xc
 7914 07ff 8C02     		.2byte	0x28c
 7915 0801 C0020000 		.4byte	0x2c0
 7916 0805 03       		.byte	0x3
 7917 0806 23       		.byte	0x23
 7918 0807 CC01     		.uleb128 0xcc
 7919 0809 00       		.byte	0x0
 7920 080a 19       		.uleb128 0x19
 7921 080b F0       		.byte	0xf0
 7922 080c 0C       		.byte	0xc
 7923 080d 9202     		.2byte	0x292
 7924 080f 32080000 		.4byte	0x832
 7925 0813 1A       		.uleb128 0x1a
 7926 0814 A2150000 		.4byte	.LASF91
 7927 0818 0C       		.byte	0xc
ARM GAS  /tmp/ccNwMSzu.s 			page 174


 7928 0819 9402     		.2byte	0x294
 7929 081b 090B0000 		.4byte	0xb09
 7930 081f 02       		.byte	0x2
 7931 0820 23       		.byte	0x23
 7932 0821 00       		.uleb128 0x0
 7933 0822 1A       		.uleb128 0x1a
 7934 0823 6B0A0000 		.4byte	.LASF92
 7935 0827 0C       		.byte	0xc
 7936 0828 9502     		.2byte	0x295
 7937 082a 190B0000 		.4byte	0xb19
 7938 082e 02       		.byte	0x2
 7939 082f 23       		.byte	0x23
 7940 0830 78       		.uleb128 0x78
 7941 0831 00       		.byte	0x0
 7942 0832 1B       		.uleb128 0x1b
 7943 0833 4A050000 		.4byte	.LASF71
 7944 0837 0C       		.byte	0xc
 7945 0838 8D02     		.2byte	0x28d
 7946 083a DA060000 		.4byte	0x6da
 7947 083e 1B       		.uleb128 0x1b
 7948 083f 4D030000 		.4byte	.LASF93
 7949 0843 0C       		.byte	0xc
 7950 0844 9602     		.2byte	0x296
 7951 0846 0A080000 		.4byte	0x80a
 7952 084a 00       		.byte	0x0
 7953 084b 1A       		.uleb128 0x1a
 7954 084c DB0C0000 		.4byte	.LASF94
 7955 0850 0C       		.byte	0xc
 7956 0851 5B02     		.2byte	0x25b
 7957 0853 C0020000 		.4byte	0x2c0
 7958 0857 02       		.byte	0x2
 7959 0858 23       		.byte	0x23
 7960 0859 00       		.uleb128 0x0
 7961 085a 1A       		.uleb128 0x1a
 7962 085b 640A0000 		.4byte	.LASF95
 7963 085f 0C       		.byte	0xc
 7964 0860 6002     		.2byte	0x260
 7965 0862 880A0000 		.4byte	0xa88
 7966 0866 02       		.byte	0x2
 7967 0867 23       		.byte	0x23
 7968 0868 04       		.uleb128 0x4
 7969 0869 1A       		.uleb128 0x1a
 7970 086a 10080000 		.4byte	.LASF96
 7971 086e 0C       		.byte	0xc
 7972 086f 6002     		.2byte	0x260
 7973 0871 880A0000 		.4byte	0xa88
 7974 0875 02       		.byte	0x2
 7975 0876 23       		.byte	0x23
 7976 0877 08       		.uleb128 0x8
 7977 0878 1A       		.uleb128 0x1a
 7978 0879 4D070000 		.4byte	.LASF97
 7979 087d 0C       		.byte	0xc
 7980 087e 6002     		.2byte	0x260
 7981 0880 880A0000 		.4byte	0xa88
 7982 0884 02       		.byte	0x2
 7983 0885 23       		.byte	0x23
 7984 0886 0C       		.uleb128 0xc
ARM GAS  /tmp/ccNwMSzu.s 			page 175


 7985 0887 1A       		.uleb128 0x1a
 7986 0888 CF010000 		.4byte	.LASF98
 7987 088c 0C       		.byte	0xc
 7988 088d 6202     		.2byte	0x262
 7989 088f C0020000 		.4byte	0x2c0
 7990 0893 02       		.byte	0x2
 7991 0894 23       		.byte	0x23
 7992 0895 10       		.uleb128 0x10
 7993 0896 1A       		.uleb128 0x1a
 7994 0897 4F150000 		.4byte	.LASF99
 7995 089b 0C       		.byte	0xc
 7996 089c 6302     		.2byte	0x263
 7997 089e 290B0000 		.4byte	0xb29
 7998 08a2 02       		.byte	0x2
 7999 08a3 23       		.byte	0x23
 8000 08a4 14       		.uleb128 0x14
 8001 08a5 1A       		.uleb128 0x1a
 8002 08a6 CA1E0000 		.4byte	.LASF100
 8003 08aa 0C       		.byte	0xc
 8004 08ab 6502     		.2byte	0x265
 8005 08ad C0020000 		.4byte	0x2c0
 8006 08b1 02       		.byte	0x2
 8007 08b2 23       		.byte	0x23
 8008 08b3 30       		.uleb128 0x30
 8009 08b4 1A       		.uleb128 0x1a
 8010 08b5 FD030000 		.4byte	.LASF101
 8011 08b9 0C       		.byte	0xc
 8012 08ba 6602     		.2byte	0x266
 8013 08bc CC090000 		.4byte	0x9cc
 8014 08c0 02       		.byte	0x2
 8015 08c1 23       		.byte	0x23
 8016 08c2 34       		.uleb128 0x34
 8017 08c3 1A       		.uleb128 0x1a
 8018 08c4 651F0000 		.4byte	.LASF102
 8019 08c8 0C       		.byte	0xc
 8020 08c9 6802     		.2byte	0x268
 8021 08cb C0020000 		.4byte	0x2c0
 8022 08cf 02       		.byte	0x2
 8023 08d0 23       		.byte	0x23
 8024 08d1 38       		.uleb128 0x38
 8025 08d2 1A       		.uleb128 0x1a
 8026 08d3 E4190000 		.4byte	.LASF103
 8027 08d7 0C       		.byte	0xc
 8028 08d8 6A02     		.2byte	0x26a
 8029 08da 4A0B0000 		.4byte	0xb4a
 8030 08de 02       		.byte	0x2
 8031 08df 23       		.byte	0x23
 8032 08e0 3C       		.uleb128 0x3c
 8033 08e1 1A       		.uleb128 0x1a
 8034 08e2 55070000 		.4byte	.LASF104
 8035 08e6 0C       		.byte	0xc
 8036 08e7 6D02     		.2byte	0x26d
 8037 08e9 500B0000 		.4byte	0xb50
 8038 08ed 02       		.byte	0x2
 8039 08ee 23       		.byte	0x23
 8040 08ef 40       		.uleb128 0x40
 8041 08f0 1A       		.uleb128 0x1a
ARM GAS  /tmp/ccNwMSzu.s 			page 176


 8042 08f1 43070000 		.4byte	.LASF105
 8043 08f5 0C       		.byte	0xc
 8044 08f6 6E02     		.2byte	0x26e
 8045 08f8 C0020000 		.4byte	0x2c0
 8046 08fc 02       		.byte	0x2
 8047 08fd 23       		.byte	0x23
 8048 08fe 44       		.uleb128 0x44
 8049 08ff 1A       		.uleb128 0x1a
 8050 0900 301C0000 		.4byte	.LASF106
 8051 0904 0C       		.byte	0xc
 8052 0905 6F02     		.2byte	0x26f
 8053 0907 500B0000 		.4byte	0xb50
 8054 090b 02       		.byte	0x2
 8055 090c 23       		.byte	0x23
 8056 090d 48       		.uleb128 0x48
 8057 090e 1A       		.uleb128 0x1a
 8058 090f AE110000 		.4byte	.LASF107
 8059 0913 0C       		.byte	0xc
 8060 0914 7002     		.2byte	0x270
 8061 0916 560B0000 		.4byte	0xb56
 8062 091a 02       		.byte	0x2
 8063 091b 23       		.byte	0x23
 8064 091c 4C       		.uleb128 0x4c
 8065 091d 1A       		.uleb128 0x1a
 8066 091e CF020000 		.4byte	.LASF108
 8067 0922 0C       		.byte	0xc
 8068 0923 7302     		.2byte	0x273
 8069 0925 C0020000 		.4byte	0x2c0
 8070 0929 02       		.byte	0x2
 8071 092a 23       		.byte	0x23
 8072 092b 50       		.uleb128 0x50
 8073 092c 1A       		.uleb128 0x1a
 8074 092d 900B0000 		.4byte	.LASF109
 8075 0931 0C       		.byte	0xc
 8076 0932 7402     		.2byte	0x274
 8077 0934 9B090000 		.4byte	0x99b
 8078 0938 02       		.byte	0x2
 8079 0939 23       		.byte	0x23
 8080 093a 54       		.uleb128 0x54
 8081 093b 1A       		.uleb128 0x1a
 8082 093c 700C0000 		.4byte	.LASF110
 8083 0940 0C       		.byte	0xc
 8084 0941 9702     		.2byte	0x297
 8085 0943 D1060000 		.4byte	0x6d1
 8086 0947 02       		.byte	0x2
 8087 0948 23       		.byte	0x23
 8088 0949 58       		.uleb128 0x58
 8089 094a 1A       		.uleb128 0x1a
 8090 094b F9000000 		.4byte	.LASF48
 8091 094f 0C       		.byte	0xc
 8092 0950 9A02     		.2byte	0x29a
 8093 0952 5C0B0000 		.4byte	0xb5c
 8094 0956 03       		.byte	0x3
 8095 0957 23       		.byte	0x23
 8096 0958 C802     		.uleb128 0x148
 8097 095a 1A       		.uleb128 0x1a
 8098 095b BB170000 		.4byte	.LASF111
ARM GAS  /tmp/ccNwMSzu.s 			page 177


 8099 095f 0C       		.byte	0xc
 8100 0960 9B02     		.2byte	0x29b
 8101 0962 B2040000 		.4byte	0x4b2
 8102 0966 03       		.byte	0x3
 8103 0967 23       		.byte	0x23
 8104 0968 CC02     		.uleb128 0x14c
 8105 096a 1A       		.uleb128 0x1a
 8106 096b ED020000 		.4byte	.LASF112
 8107 096f 0C       		.byte	0xc
 8108 0970 9E02     		.2byte	0x29e
 8109 0972 6D0B0000 		.4byte	0xb6d
 8110 0976 03       		.byte	0x3
 8111 0977 23       		.byte	0x23
 8112 0978 DC05     		.uleb128 0x2dc
 8113 097a 1A       		.uleb128 0x1a
 8114 097b D4190000 		.4byte	.LASF113
 8115 097f 0C       		.byte	0xc
 8116 0980 A302     		.2byte	0x2a3
 8117 0982 470A0000 		.4byte	0xa47
 8118 0986 03       		.byte	0x3
 8119 0987 23       		.byte	0x23
 8120 0988 E005     		.uleb128 0x2e0
 8121 098a 1A       		.uleb128 0x1a
 8122 098b 6B050000 		.4byte	.LASF114
 8123 098f 0C       		.byte	0xc
 8124 0990 A402     		.2byte	0x2a4
 8125 0992 790B0000 		.4byte	0xb79
 8126 0996 03       		.byte	0x3
 8127 0997 23       		.byte	0x23
 8128 0998 EC05     		.uleb128 0x2ec
 8129 099a 00       		.byte	0x0
 8130 099b 12       		.uleb128 0x12
 8131 099c 04       		.byte	0x4
 8132 099d A1090000 		.4byte	0x9a1
 8133 09a1 03       		.uleb128 0x3
 8134 09a2 01       		.byte	0x1
 8135 09a3 08       		.byte	0x8
 8136 09a4 61170000 		.4byte	.LASF115
 8137 09a8 12       		.uleb128 0x12
 8138 09a9 04       		.byte	0x4
 8139 09aa 9F060000 		.4byte	0x69f
 8140 09ae 15       		.uleb128 0x15
 8141 09af C0020000 		.4byte	0x2c0
 8142 09b3 CC090000 		.4byte	0x9cc
 8143 09b7 16       		.uleb128 0x16
 8144 09b8 BD060000 		.4byte	0x6bd
 8145 09bc 16       		.uleb128 0x16
 8146 09bd 4C030000 		.4byte	0x34c
 8147 09c1 16       		.uleb128 0x16
 8148 09c2 CC090000 		.4byte	0x9cc
 8149 09c6 16       		.uleb128 0x16
 8150 09c7 C0020000 		.4byte	0x2c0
 8151 09cb 00       		.byte	0x0
 8152 09cc 12       		.uleb128 0x12
 8153 09cd 04       		.byte	0x4
 8154 09ce D2090000 		.4byte	0x9d2
 8155 09d2 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccNwMSzu.s 			page 178


 8156 09d3 A1090000 		.4byte	0x9a1
 8157 09d7 12       		.uleb128 0x12
 8158 09d8 04       		.byte	0x4
 8159 09d9 AE090000 		.4byte	0x9ae
 8160 09dd 15       		.uleb128 0x15
 8161 09de D2020000 		.4byte	0x2d2
 8162 09e2 FB090000 		.4byte	0x9fb
 8163 09e6 16       		.uleb128 0x16
 8164 09e7 BD060000 		.4byte	0x6bd
 8165 09eb 16       		.uleb128 0x16
 8166 09ec 4C030000 		.4byte	0x34c
 8167 09f0 16       		.uleb128 0x16
 8168 09f1 D2020000 		.4byte	0x2d2
 8169 09f5 16       		.uleb128 0x16
 8170 09f6 C0020000 		.4byte	0x2c0
 8171 09fa 00       		.byte	0x0
 8172 09fb 12       		.uleb128 0x12
 8173 09fc 04       		.byte	0x4
 8174 09fd DD090000 		.4byte	0x9dd
 8175 0a01 15       		.uleb128 0x15
 8176 0a02 C0020000 		.4byte	0x2c0
 8177 0a06 150A0000 		.4byte	0xa15
 8178 0a0a 16       		.uleb128 0x16
 8179 0a0b BD060000 		.4byte	0x6bd
 8180 0a0f 16       		.uleb128 0x16
 8181 0a10 4C030000 		.4byte	0x34c
 8182 0a14 00       		.byte	0x0
 8183 0a15 12       		.uleb128 0x12
 8184 0a16 04       		.byte	0x4
 8185 0a17 010A0000 		.4byte	0xa01
 8186 0a1b 0D       		.uleb128 0xd
 8187 0a1c 58000000 		.4byte	0x58
 8188 0a20 2B0A0000 		.4byte	0xa2b
 8189 0a24 0E       		.uleb128 0xe
 8190 0a25 B9020000 		.4byte	0x2b9
 8191 0a29 02       		.byte	0x2
 8192 0a2a 00       		.byte	0x0
 8193 0a2b 0D       		.uleb128 0xd
 8194 0a2c 58000000 		.4byte	0x58
 8195 0a30 3B0A0000 		.4byte	0xa3b
 8196 0a34 0E       		.uleb128 0xe
 8197 0a35 B9020000 		.4byte	0x2b9
 8198 0a39 00       		.byte	0x0
 8199 0a3a 00       		.byte	0x0
 8200 0a3b 08       		.uleb128 0x8
 8201 0a3c 99210000 		.4byte	.LASF116
 8202 0a40 0C       		.byte	0xc
 8203 0a41 1E01     		.2byte	0x11e
 8204 0a43 45050000 		.4byte	0x545
 8205 0a47 1D       		.uleb128 0x1d
 8206 0a48 70170000 		.4byte	.LASF117
 8207 0a4c 0C       		.byte	0xc
 8208 0a4d 0C       		.byte	0xc
 8209 0a4e 2301     		.2byte	0x123
 8210 0a50 820A0000 		.4byte	0xa82
 8211 0a54 1A       		.uleb128 0x1a
 8212 0a55 AB0D0000 		.4byte	.LASF28
ARM GAS  /tmp/ccNwMSzu.s 			page 179


 8213 0a59 0C       		.byte	0xc
 8214 0a5a 2401     		.2byte	0x124
 8215 0a5c 820A0000 		.4byte	0xa82
 8216 0a60 02       		.byte	0x2
 8217 0a61 23       		.byte	0x23
 8218 0a62 00       		.uleb128 0x0
 8219 0a63 1A       		.uleb128 0x1a
 8220 0a64 7F0C0000 		.4byte	.LASF118
 8221 0a68 0C       		.byte	0xc
 8222 0a69 2501     		.2byte	0x125
 8223 0a6b C0020000 		.4byte	0x2c0
 8224 0a6f 02       		.byte	0x2
 8225 0a70 23       		.byte	0x23
 8226 0a71 04       		.uleb128 0x4
 8227 0a72 1A       		.uleb128 0x1a
 8228 0a73 49150000 		.4byte	.LASF119
 8229 0a77 0C       		.byte	0xc
 8230 0a78 2601     		.2byte	0x126
 8231 0a7a 880A0000 		.4byte	0xa88
 8232 0a7e 02       		.byte	0x2
 8233 0a7f 23       		.byte	0x23
 8234 0a80 08       		.uleb128 0x8
 8235 0a81 00       		.byte	0x0
 8236 0a82 12       		.uleb128 0x12
 8237 0a83 04       		.byte	0x4
 8238 0a84 470A0000 		.4byte	0xa47
 8239 0a88 12       		.uleb128 0x12
 8240 0a89 04       		.byte	0x4
 8241 0a8a 3B0A0000 		.4byte	0xa3b
 8242 0a8e 1D       		.uleb128 0x1d
 8243 0a8f AE220000 		.4byte	.LASF120
 8244 0a93 0E       		.byte	0xe
 8245 0a94 0C       		.byte	0xc
 8246 0a95 3E01     		.2byte	0x13e
 8247 0a97 C90A0000 		.4byte	0xac9
 8248 0a9b 1A       		.uleb128 0x1a
 8249 0a9c 19110000 		.4byte	.LASF121
 8250 0aa0 0C       		.byte	0xc
 8251 0aa1 3F01     		.2byte	0x13f
 8252 0aa3 C90A0000 		.4byte	0xac9
 8253 0aa7 02       		.byte	0x2
 8254 0aa8 23       		.byte	0x23
 8255 0aa9 00       		.uleb128 0x0
 8256 0aaa 1A       		.uleb128 0x1a
 8257 0aab BD090000 		.4byte	.LASF122
 8258 0aaf 0C       		.byte	0xc
 8259 0ab0 4001     		.2byte	0x140
 8260 0ab2 C90A0000 		.4byte	0xac9
 8261 0ab6 02       		.byte	0x2
 8262 0ab7 23       		.byte	0x23
 8263 0ab8 06       		.uleb128 0x6
 8264 0ab9 1A       		.uleb128 0x1a
 8265 0aba 4E040000 		.4byte	.LASF123
 8266 0abe 0C       		.byte	0xc
 8267 0abf 4101     		.2byte	0x141
 8268 0ac1 7C000000 		.4byte	0x7c
 8269 0ac5 02       		.byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 180


 8270 0ac6 23       		.byte	0x23
 8271 0ac7 0C       		.uleb128 0xc
 8272 0ac8 00       		.byte	0x0
 8273 0ac9 0D       		.uleb128 0xd
 8274 0aca 7C000000 		.4byte	0x7c
 8275 0ace D90A0000 		.4byte	0xad9
 8276 0ad2 0E       		.uleb128 0xe
 8277 0ad3 B9020000 		.4byte	0x2b9
 8278 0ad7 02       		.byte	0x2
 8279 0ad8 00       		.byte	0x0
 8280 0ad9 0D       		.uleb128 0xd
 8281 0ada A1090000 		.4byte	0x9a1
 8282 0ade E90A0000 		.4byte	0xae9
 8283 0ae2 0E       		.uleb128 0xe
 8284 0ae3 B9020000 		.4byte	0x2b9
 8285 0ae7 19       		.byte	0x19
 8286 0ae8 00       		.byte	0x0
 8287 0ae9 0D       		.uleb128 0xd
 8288 0aea A1090000 		.4byte	0x9a1
 8289 0aee F90A0000 		.4byte	0xaf9
 8290 0af2 0E       		.uleb128 0xe
 8291 0af3 B9020000 		.4byte	0x2b9
 8292 0af7 07       		.byte	0x7
 8293 0af8 00       		.byte	0x0
 8294 0af9 0D       		.uleb128 0xd
 8295 0afa A1090000 		.4byte	0x9a1
 8296 0afe 090B0000 		.4byte	0xb09
 8297 0b02 0E       		.uleb128 0xe
 8298 0b03 B9020000 		.4byte	0x2b9
 8299 0b07 17       		.byte	0x17
 8300 0b08 00       		.byte	0x0
 8301 0b09 0D       		.uleb128 0xd
 8302 0b0a 3F050000 		.4byte	0x53f
 8303 0b0e 190B0000 		.4byte	0xb19
 8304 0b12 0E       		.uleb128 0xe
 8305 0b13 B9020000 		.4byte	0x2b9
 8306 0b17 1D       		.byte	0x1d
 8307 0b18 00       		.byte	0x0
 8308 0b19 0D       		.uleb128 0xd
 8309 0b1a B9020000 		.4byte	0x2b9
 8310 0b1e 290B0000 		.4byte	0xb29
 8311 0b22 0E       		.uleb128 0xe
 8312 0b23 B9020000 		.4byte	0x2b9
 8313 0b27 1D       		.byte	0x1d
 8314 0b28 00       		.byte	0x0
 8315 0b29 0D       		.uleb128 0xd
 8316 0b2a A1090000 		.4byte	0x9a1
 8317 0b2e 390B0000 		.4byte	0xb39
 8318 0b32 0E       		.uleb128 0xe
 8319 0b33 B9020000 		.4byte	0x2b9
 8320 0b37 18       		.byte	0x18
 8321 0b38 00       		.byte	0x0
 8322 0b39 1E       		.uleb128 0x1e
 8323 0b3a 440B0000 		.4byte	0xb44
 8324 0b3e 16       		.uleb128 0x16
 8325 0b3f 440B0000 		.4byte	0xb44
 8326 0b43 00       		.byte	0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 181


 8327 0b44 12       		.uleb128 0x12
 8328 0b45 04       		.byte	0x4
 8329 0b46 C3060000 		.4byte	0x6c3
 8330 0b4a 12       		.uleb128 0x12
 8331 0b4b 04       		.byte	0x4
 8332 0b4c 390B0000 		.4byte	0xb39
 8333 0b50 12       		.uleb128 0x12
 8334 0b51 04       		.byte	0x4
 8335 0b52 59030000 		.4byte	0x359
 8336 0b56 12       		.uleb128 0x12
 8337 0b57 04       		.byte	0x4
 8338 0b58 500B0000 		.4byte	0xb50
 8339 0b5c 12       		.uleb128 0x12
 8340 0b5d 04       		.byte	0x4
 8341 0b5e B2040000 		.4byte	0x4b2
 8342 0b62 1E       		.uleb128 0x1e
 8343 0b63 6D0B0000 		.4byte	0xb6d
 8344 0b67 16       		.uleb128 0x16
 8345 0b68 C0020000 		.4byte	0x2c0
 8346 0b6c 00       		.byte	0x0
 8347 0b6d 12       		.uleb128 0x12
 8348 0b6e 04       		.byte	0x4
 8349 0b6f 730B0000 		.4byte	0xb73
 8350 0b73 12       		.uleb128 0x12
 8351 0b74 04       		.byte	0x4
 8352 0b75 620B0000 		.4byte	0xb62
 8353 0b79 0D       		.uleb128 0xd
 8354 0b7a 45050000 		.4byte	0x545
 8355 0b7e 890B0000 		.4byte	0xb89
 8356 0b82 0E       		.uleb128 0xe
 8357 0b83 B9020000 		.4byte	0x2b9
 8358 0b87 02       		.byte	0x2
 8359 0b88 00       		.byte	0x0
 8360 0b89 03       		.uleb128 0x3
 8361 0b8a 08       		.byte	0x8
 8362 0b8b 04       		.byte	0x4
 8363 0b8c F8150000 		.4byte	.LASF124
 8364 0b90 02       		.uleb128 0x2
 8365 0b91 9E110000 		.4byte	.LASF125
 8366 0b95 0B       		.byte	0xb
 8367 0b96 95       		.byte	0x95
 8368 0b97 C0020000 		.4byte	0x2c0
 8369 0b9b 02       		.uleb128 0x2
 8370 0b9c E30A0000 		.4byte	.LASF126
 8371 0ba0 0B       		.byte	0xb
 8372 0ba1 D3       		.byte	0xd3
 8373 0ba2 B9020000 		.4byte	0x2b9
 8374 0ba6 02       		.uleb128 0x2
 8375 0ba7 B9070000 		.4byte	.LASF127
 8376 0bab 0D       		.byte	0xd
 8377 0bac 28       		.byte	0x28
 8378 0bad B10B0000 		.4byte	0xbb1
 8379 0bb1 10       		.uleb128 0x10
 8380 0bb2 C9220000 		.4byte	.LASF128
 8381 0bb6 04       		.byte	0x4
 8382 0bb7 0E       		.byte	0xe
 8383 0bb8 00       		.byte	0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 182


 8384 0bb9 CB0B0000 		.4byte	0xbcb
 8385 0bbd 1F       		.uleb128 0x1f
 8386 0bbe 7D1F0000 		.4byte	.LASF129
 8387 0bc2 4C030000 		.4byte	0x34c
 8388 0bc6 02       		.byte	0x2
 8389 0bc7 23       		.byte	0x23
 8390 0bc8 00       		.uleb128 0x0
 8391 0bc9 01       		.byte	0x1
 8392 0bca 00       		.byte	0x0
 8393 0bcb 02       		.uleb128 0x2
 8394 0bcc 02110000 		.4byte	.LASF130
 8395 0bd0 0F       		.byte	0xf
 8396 0bd1 68       		.byte	0x68
 8397 0bd2 A0000000 		.4byte	0xa0
 8398 0bd6 02       		.uleb128 0x2
 8399 0bd7 75020000 		.4byte	.LASF131
 8400 0bdb 0F       		.byte	0xf
 8401 0bdc 6D       		.byte	0x6d
 8402 0bdd 8E000000 		.4byte	0x8e
 8403 0be1 02       		.uleb128 0x2
 8404 0be2 B90A0000 		.4byte	.LASF132
 8405 0be6 10       		.byte	0x10
 8406 0be7 32       		.byte	0x32
 8407 0be8 3B0A0000 		.4byte	0xa3b
 8408 0bec 02       		.uleb128 0x2
 8409 0bed CC000000 		.4byte	.LASF133
 8410 0bf1 10       		.byte	0x10
 8411 0bf2 37       		.byte	0x37
 8412 0bf3 D2020000 		.4byte	0x2d2
 8413 0bf7 20       		.uleb128 0x20
 8414 0bf8 01       		.byte	0x1
 8415 0bf9 6D0F0000 		.4byte	.LASF149
 8416 0bfd 10       		.byte	0x10
 8417 0bfe 0001     		.2byte	0x100
 8418 0c00 01       		.byte	0x1
 8419 0c01 0B0C0000 		.4byte	0xc0b
 8420 0c05 16       		.uleb128 0x16
 8421 0c06 0B0C0000 		.4byte	0xc0b
 8422 0c0a 00       		.byte	0x0
 8423 0c0b 12       		.uleb128 0x12
 8424 0c0c 04       		.byte	0x4
 8425 0c0d E10B0000 		.4byte	0xbe1
 8426 0c11 21       		.uleb128 0x21
 8427 0c12 01       		.byte	0x1
 8428 0c13 440E0000 		.4byte	.LASF134
 8429 0c17 10       		.byte	0x10
 8430 0c18 D2       		.byte	0xd2
 8431 0c19 C0020000 		.4byte	0x2c0
 8432 0c1d 01       		.byte	0x1
 8433 0c1e 280C0000 		.4byte	0xc28
 8434 0c22 16       		.uleb128 0x16
 8435 0c23 0B0C0000 		.4byte	0xc0b
 8436 0c27 00       		.byte	0x0
 8437 0c28 22       		.uleb128 0x22
 8438 0c29 01       		.byte	0x1
 8439 0c2a 2F020000 		.4byte	.LASF135
 8440 0c2e 10       		.byte	0x10
ARM GAS  /tmp/ccNwMSzu.s 			page 183


 8441 0c2f 0101     		.2byte	0x101
 8442 0c31 C0020000 		.4byte	0x2c0
 8443 0c35 01       		.byte	0x1
 8444 0c36 400C0000 		.4byte	0xc40
 8445 0c3a 16       		.uleb128 0x16
 8446 0c3b 0B0C0000 		.4byte	0xc0b
 8447 0c3f 00       		.byte	0x0
 8448 0c40 22       		.uleb128 0x22
 8449 0c41 01       		.byte	0x1
 8450 0c42 FA160000 		.4byte	.LASF136
 8451 0c46 10       		.byte	0x10
 8452 0c47 0201     		.2byte	0x102
 8453 0c49 C0020000 		.4byte	0x2c0
 8454 0c4d 01       		.byte	0x1
 8455 0c4e 580C0000 		.4byte	0xc58
 8456 0c52 16       		.uleb128 0x16
 8457 0c53 0B0C0000 		.4byte	0xc0b
 8458 0c57 00       		.byte	0x0
 8459 0c58 21       		.uleb128 0x21
 8460 0c59 01       		.byte	0x1
 8461 0c5a 70220000 		.4byte	.LASF137
 8462 0c5e 10       		.byte	0x10
 8463 0c5f D3       		.byte	0xd3
 8464 0c60 C0020000 		.4byte	0x2c0
 8465 0c64 01       		.byte	0x1
 8466 0c65 6F0C0000 		.4byte	0xc6f
 8467 0c69 16       		.uleb128 0x16
 8468 0c6a 0B0C0000 		.4byte	0xc0b
 8469 0c6e 00       		.byte	0x0
 8470 0c6f 21       		.uleb128 0x21
 8471 0c70 01       		.byte	0x1
 8472 0c71 C0050000 		.4byte	.LASF138
 8473 0c75 10       		.byte	0x10
 8474 0c76 E7       		.byte	0xe7
 8475 0c77 C0020000 		.4byte	0x2c0
 8476 0c7b 01       		.byte	0x1
 8477 0c7c 860C0000 		.4byte	0xc86
 8478 0c80 16       		.uleb128 0x16
 8479 0c81 0B0C0000 		.4byte	0xc0b
 8480 0c85 00       		.byte	0x0
 8481 0c86 21       		.uleb128 0x21
 8482 0c87 01       		.byte	0x1
 8483 0c88 23140000 		.4byte	.LASF139
 8484 0c8c 10       		.byte	0x10
 8485 0c8d F9       		.byte	0xf9
 8486 0c8e C0020000 		.4byte	0x2c0
 8487 0c92 01       		.byte	0x1
 8488 0c93 A20C0000 		.4byte	0xca2
 8489 0c97 16       		.uleb128 0x16
 8490 0c98 0B0C0000 		.4byte	0xc0b
 8491 0c9c 16       		.uleb128 0x16
 8492 0c9d A20C0000 		.4byte	0xca2
 8493 0ca1 00       		.byte	0x0
 8494 0ca2 12       		.uleb128 0x12
 8495 0ca3 04       		.byte	0x4
 8496 0ca4 EC0B0000 		.4byte	0xbec
 8497 0ca8 21       		.uleb128 0x21
ARM GAS  /tmp/ccNwMSzu.s 			page 184


 8498 0ca9 01       		.byte	0x1
 8499 0caa D5050000 		.4byte	.LASF140
 8500 0cae 10       		.byte	0x10
 8501 0caf E8       		.byte	0xe8
 8502 0cb0 9B090000 		.4byte	0x99b
 8503 0cb4 01       		.byte	0x1
 8504 0cb5 C90C0000 		.4byte	0xcc9
 8505 0cb9 16       		.uleb128 0x16
 8506 0cba 9B090000 		.4byte	0x99b
 8507 0cbe 16       		.uleb128 0x16
 8508 0cbf C0020000 		.4byte	0x2c0
 8509 0cc3 16       		.uleb128 0x16
 8510 0cc4 0B0C0000 		.4byte	0xc0b
 8511 0cc8 00       		.byte	0x0
 8512 0cc9 22       		.uleb128 0x22
 8513 0cca 01       		.byte	0x1
 8514 0ccb FA1E0000 		.4byte	.LASF141
 8515 0ccf 10       		.byte	0x10
 8516 0cd0 0501     		.2byte	0x105
 8517 0cd2 0B0C0000 		.4byte	0xc0b
 8518 0cd6 01       		.byte	0x1
 8519 0cd7 E60C0000 		.4byte	0xce6
 8520 0cdb 16       		.uleb128 0x16
 8521 0cdc CC090000 		.4byte	0x9cc
 8522 0ce0 16       		.uleb128 0x16
 8523 0ce1 CC090000 		.4byte	0x9cc
 8524 0ce5 00       		.byte	0x0
 8525 0ce6 21       		.uleb128 0x21
 8526 0ce7 01       		.byte	0x1
 8527 0ce8 87050000 		.4byte	.LASF142
 8528 0cec 10       		.byte	0x10
 8529 0ced F2       		.byte	0xf2
 8530 0cee 9B0B0000 		.4byte	0xb9b
 8531 0cf2 01       		.byte	0x1
 8532 0cf3 0C0D0000 		.4byte	0xd0c
 8533 0cf7 16       		.uleb128 0x16
 8534 0cf8 4C030000 		.4byte	0x34c
 8535 0cfc 16       		.uleb128 0x16
 8536 0cfd 9B0B0000 		.4byte	0xb9b
 8537 0d01 16       		.uleb128 0x16
 8538 0d02 9B0B0000 		.4byte	0xb9b
 8539 0d06 16       		.uleb128 0x16
 8540 0d07 0B0C0000 		.4byte	0xc0b
 8541 0d0b 00       		.byte	0x0
 8542 0d0c 21       		.uleb128 0x21
 8543 0d0d 01       		.byte	0x1
 8544 0d0e F2050000 		.4byte	.LASF143
 8545 0d12 10       		.byte	0x10
 8546 0d13 D4       		.byte	0xd4
 8547 0d14 0B0C0000 		.4byte	0xc0b
 8548 0d18 01       		.byte	0x1
 8549 0d19 2D0D0000 		.4byte	0xd2d
 8550 0d1d 16       		.uleb128 0x16
 8551 0d1e CC090000 		.4byte	0x9cc
 8552 0d22 16       		.uleb128 0x16
 8553 0d23 CC090000 		.4byte	0x9cc
 8554 0d27 16       		.uleb128 0x16
ARM GAS  /tmp/ccNwMSzu.s 			page 185


 8555 0d28 0B0C0000 		.4byte	0xc0b
 8556 0d2c 00       		.byte	0x0
 8557 0d2d 21       		.uleb128 0x21
 8558 0d2e 01       		.byte	0x1
 8559 0d2f 84180000 		.4byte	.LASF144
 8560 0d33 10       		.byte	0x10
 8561 0d34 FD       		.byte	0xfd
 8562 0d35 C0020000 		.4byte	0x2c0
 8563 0d39 01       		.byte	0x1
 8564 0d3a 4E0D0000 		.4byte	0xd4e
 8565 0d3e 16       		.uleb128 0x16
 8566 0d3f 0B0C0000 		.4byte	0xc0b
 8567 0d43 16       		.uleb128 0x16
 8568 0d44 8E000000 		.4byte	0x8e
 8569 0d48 16       		.uleb128 0x16
 8570 0d49 C0020000 		.4byte	0x2c0
 8571 0d4d 00       		.byte	0x0
 8572 0d4e 21       		.uleb128 0x21
 8573 0d4f 01       		.byte	0x1
 8574 0d50 DC190000 		.4byte	.LASF145
 8575 0d54 10       		.byte	0x10
 8576 0d55 FA       		.byte	0xfa
 8577 0d56 C0020000 		.4byte	0x2c0
 8578 0d5a 01       		.byte	0x1
 8579 0d5b 6A0D0000 		.4byte	0xd6a
 8580 0d5f 16       		.uleb128 0x16
 8581 0d60 0B0C0000 		.4byte	0xc0b
 8582 0d64 16       		.uleb128 0x16
 8583 0d65 6A0D0000 		.4byte	0xd6a
 8584 0d69 00       		.byte	0x0
 8585 0d6a 12       		.uleb128 0x12
 8586 0d6b 04       		.byte	0x4
 8587 0d6c 700D0000 		.4byte	0xd70
 8588 0d70 1C       		.uleb128 0x1c
 8589 0d71 EC0B0000 		.4byte	0xbec
 8590 0d75 21       		.uleb128 0x21
 8591 0d76 01       		.byte	0x1
 8592 0d77 560A0000 		.4byte	.LASF146
 8593 0d7b 10       		.byte	0x10
 8594 0d7c FE       		.byte	0xfe
 8595 0d7d 8E000000 		.4byte	0x8e
 8596 0d81 01       		.byte	0x1
 8597 0d82 8C0D0000 		.4byte	0xd8c
 8598 0d86 16       		.uleb128 0x16
 8599 0d87 0B0C0000 		.4byte	0xc0b
 8600 0d8b 00       		.byte	0x0
 8601 0d8c 21       		.uleb128 0x21
 8602 0d8d 01       		.byte	0x1
 8603 0d8e BA140000 		.4byte	.LASF147
 8604 0d92 10       		.byte	0x10
 8605 0d93 EB       		.byte	0xeb
 8606 0d94 C0020000 		.4byte	0x2c0
 8607 0d98 01       		.byte	0x1
 8608 0d99 A30D0000 		.4byte	0xda3
 8609 0d9d 16       		.uleb128 0x16
 8610 0d9e 0B0C0000 		.4byte	0xc0b
 8611 0da2 00       		.byte	0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 186


 8612 0da3 23       		.uleb128 0x23
 8613 0da4 01       		.byte	0x1
 8614 0da5 B1200000 		.4byte	.LASF156
 8615 0da9 10       		.byte	0x10
 8616 0daa EC       		.byte	0xec
 8617 0dab C0020000 		.4byte	0x2c0
 8618 0daf 01       		.byte	0x1
 8619 0db0 21       		.uleb128 0x21
 8620 0db1 01       		.byte	0x1
 8621 0db2 EF1F0000 		.4byte	.LASF148
 8622 0db6 10       		.byte	0x10
 8623 0db7 ED       		.byte	0xed
 8624 0db8 9B090000 		.4byte	0x99b
 8625 0dbc 01       		.byte	0x1
 8626 0dbd C70D0000 		.4byte	0xdc7
 8627 0dc1 16       		.uleb128 0x16
 8628 0dc2 9B090000 		.4byte	0x99b
 8629 0dc6 00       		.byte	0x0
 8630 0dc7 20       		.uleb128 0x20
 8631 0dc8 01       		.byte	0x1
 8632 0dc9 670B0000 		.4byte	.LASF150
 8633 0dcd 10       		.byte	0x10
 8634 0dce 0301     		.2byte	0x103
 8635 0dd0 01       		.byte	0x1
 8636 0dd1 DB0D0000 		.4byte	0xddb
 8637 0dd5 16       		.uleb128 0x16
 8638 0dd6 CC090000 		.4byte	0x9cc
 8639 0dda 00       		.byte	0x0
 8640 0ddb 22       		.uleb128 0x22
 8641 0ddc 01       		.byte	0x1
 8642 0ddd BB130000 		.4byte	.LASF151
 8643 0de1 10       		.byte	0x10
 8644 0de2 0801     		.2byte	0x108
 8645 0de4 C0020000 		.4byte	0x2c0
 8646 0de8 01       		.byte	0x1
 8647 0de9 F30D0000 		.4byte	0xdf3
 8648 0ded 16       		.uleb128 0x16
 8649 0dee CC090000 		.4byte	0x9cc
 8650 0df2 00       		.byte	0x0
 8651 0df3 22       		.uleb128 0x22
 8652 0df4 01       		.byte	0x1
 8653 0df5 43050000 		.4byte	.LASF152
 8654 0df9 10       		.byte	0x10
 8655 0dfa 0901     		.2byte	0x109
 8656 0dfc C0020000 		.4byte	0x2c0
 8657 0e00 01       		.byte	0x1
 8658 0e01 100E0000 		.4byte	0xe10
 8659 0e05 16       		.uleb128 0x16
 8660 0e06 CC090000 		.4byte	0x9cc
 8661 0e0a 16       		.uleb128 0x16
 8662 0e0b CC090000 		.4byte	0x9cc
 8663 0e0f 00       		.byte	0x0
 8664 0e10 24       		.uleb128 0x24
 8665 0e11 01       		.byte	0x1
 8666 0e12 31090000 		.4byte	.LASF153
 8667 0e16 10       		.byte	0x10
 8668 0e17 FF       		.byte	0xff
ARM GAS  /tmp/ccNwMSzu.s 			page 187


 8669 0e18 01       		.byte	0x1
 8670 0e19 230E0000 		.4byte	0xe23
 8671 0e1d 16       		.uleb128 0x16
 8672 0e1e 0B0C0000 		.4byte	0xc0b
 8673 0e22 00       		.byte	0x0
 8674 0e23 24       		.uleb128 0x24
 8675 0e24 01       		.byte	0x1
 8676 0e25 B1080000 		.4byte	.LASF154
 8677 0e29 10       		.byte	0x10
 8678 0e2a D5       		.byte	0xd5
 8679 0e2b 01       		.byte	0x1
 8680 0e2c 3B0E0000 		.4byte	0xe3b
 8681 0e30 16       		.uleb128 0x16
 8682 0e31 0B0C0000 		.4byte	0xc0b
 8683 0e35 16       		.uleb128 0x16
 8684 0e36 9B090000 		.4byte	0x99b
 8685 0e3a 00       		.byte	0x0
 8686 0e3b 21       		.uleb128 0x21
 8687 0e3c 01       		.byte	0x1
 8688 0e3d AF1C0000 		.4byte	.LASF155
 8689 0e41 10       		.byte	0x10
 8690 0e42 D6       		.byte	0xd6
 8691 0e43 C0020000 		.4byte	0x2c0
 8692 0e47 01       		.byte	0x1
 8693 0e48 610E0000 		.4byte	0xe61
 8694 0e4c 16       		.uleb128 0x16
 8695 0e4d 0B0C0000 		.4byte	0xc0b
 8696 0e51 16       		.uleb128 0x16
 8697 0e52 9B090000 		.4byte	0x99b
 8698 0e56 16       		.uleb128 0x16
 8699 0e57 C0020000 		.4byte	0x2c0
 8700 0e5b 16       		.uleb128 0x16
 8701 0e5c 9B0B0000 		.4byte	0xb9b
 8702 0e60 00       		.byte	0x0
 8703 0e61 23       		.uleb128 0x23
 8704 0e62 01       		.byte	0x1
 8705 0e63 CC0A0000 		.4byte	.LASF157
 8706 0e67 10       		.byte	0x10
 8707 0e68 D0       		.byte	0xd0
 8708 0e69 0B0C0000 		.4byte	0xc0b
 8709 0e6d 01       		.byte	0x1
 8710 0e6e 21       		.uleb128 0x21
 8711 0e6f 01       		.byte	0x1
 8712 0e70 C1160000 		.4byte	.LASF158
 8713 0e74 10       		.byte	0x10
 8714 0e75 D1       		.byte	0xd1
 8715 0e76 9B090000 		.4byte	0x99b
 8716 0e7a 01       		.byte	0x1
 8717 0e7b 850E0000 		.4byte	0xe85
 8718 0e7f 16       		.uleb128 0x16
 8719 0e80 9B090000 		.4byte	0x99b
 8720 0e84 00       		.byte	0x0
 8721 0e85 21       		.uleb128 0x21
 8722 0e86 01       		.byte	0x1
 8723 0e87 930F0000 		.4byte	.LASF159
 8724 0e8b 10       		.byte	0x10
 8725 0e8c F1       		.byte	0xf1
ARM GAS  /tmp/ccNwMSzu.s 			page 188


 8726 0e8d C0020000 		.4byte	0x2c0
 8727 0e91 01       		.byte	0x1
 8728 0e92 A10E0000 		.4byte	0xea1
 8729 0e96 16       		.uleb128 0x16
 8730 0e97 C0020000 		.4byte	0x2c0
 8731 0e9b 16       		.uleb128 0x16
 8732 0e9c 0B0C0000 		.4byte	0xc0b
 8733 0ea0 00       		.byte	0x0
 8734 0ea1 21       		.uleb128 0x21
 8735 0ea2 01       		.byte	0x1
 8736 0ea3 F5030000 		.4byte	.LASF160
 8737 0ea7 11       		.byte	0x11
 8738 0ea8 1E       		.byte	0x1e
 8739 0ea9 C0020000 		.4byte	0x2c0
 8740 0ead 01       		.byte	0x1
 8741 0eae BD0E0000 		.4byte	0xebd
 8742 0eb2 16       		.uleb128 0x16
 8743 0eb3 CC090000 		.4byte	0x9cc
 8744 0eb7 16       		.uleb128 0x16
 8745 0eb8 CC090000 		.4byte	0x9cc
 8746 0ebc 00       		.byte	0x0
 8747 0ebd 21       		.uleb128 0x21
 8748 0ebe 01       		.byte	0x1
 8749 0ebf 680E0000 		.4byte	.LASF161
 8750 0ec3 11       		.byte	0x11
 8751 0ec4 21       		.byte	0x21
 8752 0ec5 9B090000 		.4byte	0x99b
 8753 0ec9 01       		.byte	0x1
 8754 0eca D40E0000 		.4byte	0xed4
 8755 0ece 16       		.uleb128 0x16
 8756 0ecf C0020000 		.4byte	0x2c0
 8757 0ed3 00       		.byte	0x0
 8758 0ed4 21       		.uleb128 0x21
 8759 0ed5 01       		.byte	0x1
 8760 0ed6 EA150000 		.4byte	.LASF162
 8761 0eda 11       		.byte	0x11
 8762 0edb 2C       		.byte	0x2c
 8763 0edc 9B090000 		.4byte	0x99b
 8764 0ee0 01       		.byte	0x1
 8765 0ee1 F00E0000 		.4byte	0xef0
 8766 0ee5 16       		.uleb128 0x16
 8767 0ee6 9B090000 		.4byte	0x99b
 8768 0eea 16       		.uleb128 0x16
 8769 0eeb CC090000 		.4byte	0x9cc
 8770 0eef 00       		.byte	0x0
 8771 0ef0 21       		.uleb128 0x21
 8772 0ef1 01       		.byte	0x1
 8773 0ef2 9D0E0000 		.4byte	.LASF163
 8774 0ef6 11       		.byte	0x11
 8775 0ef7 2F       		.byte	0x2f
 8776 0ef8 9B0B0000 		.4byte	0xb9b
 8777 0efc 01       		.byte	0x1
 8778 0efd 110F0000 		.4byte	0xf11
 8779 0f01 16       		.uleb128 0x16
 8780 0f02 9B090000 		.4byte	0x99b
 8781 0f06 16       		.uleb128 0x16
 8782 0f07 CC090000 		.4byte	0x9cc
ARM GAS  /tmp/ccNwMSzu.s 			page 189


 8783 0f0b 16       		.uleb128 0x16
 8784 0f0c 9B0B0000 		.4byte	0xb9b
 8785 0f10 00       		.byte	0x0
 8786 0f11 09       		.uleb128 0x9
 8787 0f12 08       		.byte	0x8
 8788 0f13 12       		.byte	0x12
 8789 0f14 23       		.byte	0x23
 8790 0f15 0E1D0000 		.4byte	.LASF165
 8791 0f19 3A0F0000 		.4byte	0xf3a
 8792 0f1d 0C       		.uleb128 0xc
 8793 0f1e 410B0000 		.4byte	.LASF166
 8794 0f22 12       		.byte	0x12
 8795 0f23 24       		.byte	0x24
 8796 0f24 C0020000 		.4byte	0x2c0
 8797 0f28 02       		.byte	0x2
 8798 0f29 23       		.byte	0x23
 8799 0f2a 00       		.uleb128 0x0
 8800 0f2b 11       		.uleb128 0x11
 8801 0f2c 72656D00 		.ascii	"rem\000"
 8802 0f30 12       		.byte	0x12
 8803 0f31 25       		.byte	0x25
 8804 0f32 C0020000 		.4byte	0x2c0
 8805 0f36 02       		.byte	0x2
 8806 0f37 23       		.byte	0x23
 8807 0f38 04       		.uleb128 0x4
 8808 0f39 00       		.byte	0x0
 8809 0f3a 09       		.uleb128 0x9
 8810 0f3b 08       		.byte	0x8
 8811 0f3c 12       		.byte	0x12
 8812 0f3d 29       		.byte	0x29
 8813 0f3e D3000000 		.4byte	.LASF167
 8814 0f42 630F0000 		.4byte	0xf63
 8815 0f46 0C       		.uleb128 0xc
 8816 0f47 410B0000 		.4byte	.LASF166
 8817 0f4b 12       		.byte	0x12
 8818 0f4c 2A       		.byte	0x2a
 8819 0f4d 8E000000 		.4byte	0x8e
 8820 0f51 02       		.byte	0x2
 8821 0f52 23       		.byte	0x23
 8822 0f53 00       		.uleb128 0x0
 8823 0f54 11       		.uleb128 0x11
 8824 0f55 72656D00 		.ascii	"rem\000"
 8825 0f59 12       		.byte	0x12
 8826 0f5a 2B       		.byte	0x2b
 8827 0f5b 8E000000 		.4byte	0x8e
 8828 0f5f 02       		.byte	0x2
 8829 0f60 23       		.byte	0x23
 8830 0f61 04       		.uleb128 0x4
 8831 0f62 00       		.byte	0x0
 8832 0f63 21       		.uleb128 0x21
 8833 0f64 01       		.byte	0x1
 8834 0f65 C8090000 		.4byte	.LASF168
 8835 0f69 12       		.byte	0x12
 8836 0f6a 4A       		.byte	0x4a
 8837 0f6b C0020000 		.4byte	0x2c0
 8838 0f6f 01       		.byte	0x1
 8839 0f70 7A0F0000 		.4byte	0xf7a
ARM GAS  /tmp/ccNwMSzu.s 			page 190


 8840 0f74 16       		.uleb128 0x16
 8841 0f75 10050000 		.4byte	0x510
 8842 0f79 00       		.byte	0x0
 8843 0f7a 21       		.uleb128 0x21
 8844 0f7b 01       		.byte	0x1
 8845 0f7c 5A150000 		.4byte	.LASF169
 8846 0f80 12       		.byte	0x12
 8847 0f81 4B       		.byte	0x4b
 8848 0f82 BC000000 		.4byte	0xbc
 8849 0f86 01       		.byte	0x1
 8850 0f87 910F0000 		.4byte	0xf91
 8851 0f8b 16       		.uleb128 0x16
 8852 0f8c CC090000 		.4byte	0x9cc
 8853 0f90 00       		.byte	0x0
 8854 0f91 21       		.uleb128 0x21
 8855 0f92 01       		.byte	0x1
 8856 0f93 DF030000 		.4byte	.LASF170
 8857 0f97 12       		.byte	0x12
 8858 0f98 4F       		.byte	0x4f
 8859 0f99 C0020000 		.4byte	0x2c0
 8860 0f9d 01       		.byte	0x1
 8861 0f9e A80F0000 		.4byte	0xfa8
 8862 0fa2 16       		.uleb128 0x16
 8863 0fa3 CC090000 		.4byte	0x9cc
 8864 0fa7 00       		.byte	0x0
 8865 0fa8 21       		.uleb128 0x21
 8866 0fa9 01       		.byte	0x1
 8867 0faa E4030000 		.4byte	.LASF171
 8868 0fae 12       		.byte	0x12
 8869 0faf 51       		.byte	0x51
 8870 0fb0 8E000000 		.4byte	0x8e
 8871 0fb4 01       		.byte	0x1
 8872 0fb5 BF0F0000 		.4byte	0xfbf
 8873 0fb9 16       		.uleb128 0x16
 8874 0fba CC090000 		.4byte	0x9cc
 8875 0fbe 00       		.byte	0x0
 8876 0fbf 21       		.uleb128 0x21
 8877 0fc0 01       		.byte	0x1
 8878 0fc1 04190000 		.4byte	.LASF172
 8879 0fc5 12       		.byte	0x12
 8880 0fc6 53       		.byte	0x53
 8881 0fc7 4C030000 		.4byte	0x34c
 8882 0fcb 01       		.byte	0x1
 8883 0fcc EA0F0000 		.4byte	0xfea
 8884 0fd0 16       		.uleb128 0x16
 8885 0fd1 EA0F0000 		.4byte	0xfea
 8886 0fd5 16       		.uleb128 0x16
 8887 0fd6 EA0F0000 		.4byte	0xfea
 8888 0fda 16       		.uleb128 0x16
 8889 0fdb 9B0B0000 		.4byte	0xb9b
 8890 0fdf 16       		.uleb128 0x16
 8891 0fe0 9B0B0000 		.4byte	0xb9b
 8892 0fe4 16       		.uleb128 0x16
 8893 0fe5 F10F0000 		.4byte	0xff1
 8894 0fe9 00       		.byte	0x0
 8895 0fea 12       		.uleb128 0x12
 8896 0feb 04       		.byte	0x4
ARM GAS  /tmp/ccNwMSzu.s 			page 191


 8897 0fec F00F0000 		.4byte	0xff0
 8898 0ff0 25       		.uleb128 0x25
 8899 0ff1 12       		.uleb128 0x12
 8900 0ff2 04       		.byte	0x4
 8901 0ff3 F70F0000 		.4byte	0xff7
 8902 0ff7 15       		.uleb128 0x15
 8903 0ff8 C0020000 		.4byte	0x2c0
 8904 0ffc 0B100000 		.4byte	0x100b
 8905 1000 16       		.uleb128 0x16
 8906 1001 EA0F0000 		.4byte	0xfea
 8907 1005 16       		.uleb128 0x16
 8908 1006 EA0F0000 		.4byte	0xfea
 8909 100a 00       		.byte	0x0
 8910 100b 26       		.uleb128 0x26
 8911 100c 01       		.byte	0x1
 8912 100d 64697600 		.ascii	"div\000"
 8913 1011 12       		.byte	0x12
 8914 1012 59       		.byte	0x59
 8915 1013 110F0000 		.4byte	0xf11
 8916 1017 01       		.byte	0x1
 8917 1018 27100000 		.4byte	0x1027
 8918 101c 16       		.uleb128 0x16
 8919 101d C0020000 		.4byte	0x2c0
 8920 1021 16       		.uleb128 0x16
 8921 1022 C0020000 		.4byte	0x2c0
 8922 1026 00       		.byte	0x0
 8923 1027 21       		.uleb128 0x21
 8924 1028 01       		.byte	0x1
 8925 1029 5E1F0000 		.4byte	.LASF173
 8926 102d 12       		.byte	0x12
 8927 102e 5C       		.byte	0x5c
 8928 102f 9B090000 		.4byte	0x99b
 8929 1033 01       		.byte	0x1
 8930 1034 3E100000 		.4byte	0x103e
 8931 1038 16       		.uleb128 0x16
 8932 1039 CC090000 		.4byte	0x9cc
 8933 103d 00       		.byte	0x0
 8934 103e 21       		.uleb128 0x21
 8935 103f 01       		.byte	0x1
 8936 1040 B21A0000 		.4byte	.LASF174
 8937 1044 12       		.byte	0x12
 8938 1045 65       		.byte	0x65
 8939 1046 3A0F0000 		.4byte	0xf3a
 8940 104a 01       		.byte	0x1
 8941 104b 5A100000 		.4byte	0x105a
 8942 104f 16       		.uleb128 0x16
 8943 1050 8E000000 		.4byte	0x8e
 8944 1054 16       		.uleb128 0x16
 8945 1055 8E000000 		.4byte	0x8e
 8946 1059 00       		.byte	0x0
 8947 105a 21       		.uleb128 0x21
 8948 105b 01       		.byte	0x1
 8949 105c 6A0C0000 		.4byte	.LASF175
 8950 1060 12       		.byte	0x12
 8951 1061 67       		.byte	0x67
 8952 1062 C0020000 		.4byte	0x2c0
 8953 1066 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 192


 8954 1067 76100000 		.4byte	0x1076
 8955 106b 16       		.uleb128 0x16
 8956 106c CC090000 		.4byte	0x9cc
 8957 1070 16       		.uleb128 0x16
 8958 1071 9B0B0000 		.4byte	0xb9b
 8959 1075 00       		.byte	0x0
 8960 1076 21       		.uleb128 0x21
 8961 1077 01       		.byte	0x1
 8962 1078 84120000 		.4byte	.LASF176
 8963 107c 12       		.byte	0x12
 8964 107d 6D       		.byte	0x6d
 8965 107e 9B0B0000 		.4byte	0xb9b
 8966 1082 01       		.byte	0x1
 8967 1083 97100000 		.4byte	0x1097
 8968 1087 16       		.uleb128 0x16
 8969 1088 97100000 		.4byte	0x1097
 8970 108c 16       		.uleb128 0x16
 8971 108d CC090000 		.4byte	0x9cc
 8972 1091 16       		.uleb128 0x16
 8973 1092 9B0B0000 		.4byte	0xb9b
 8974 1096 00       		.byte	0x0
 8975 1097 12       		.uleb128 0x12
 8976 1098 04       		.byte	0x4
 8977 1099 9D100000 		.4byte	0x109d
 8978 109d 03       		.uleb128 0x3
 8979 109e 04       		.byte	0x4
 8980 109f 07       		.byte	0x7
 8981 10a0 DC110000 		.4byte	.LASF177
 8982 10a4 21       		.uleb128 0x21
 8983 10a5 01       		.byte	0x1
 8984 10a6 911D0000 		.4byte	.LASF178
 8985 10aa 12       		.byte	0x12
 8986 10ab 69       		.byte	0x69
 8987 10ac C0020000 		.4byte	0x2c0
 8988 10b0 01       		.byte	0x1
 8989 10b1 C5100000 		.4byte	0x10c5
 8990 10b5 16       		.uleb128 0x16
 8991 10b6 97100000 		.4byte	0x1097
 8992 10ba 16       		.uleb128 0x16
 8993 10bb CC090000 		.4byte	0x9cc
 8994 10bf 16       		.uleb128 0x16
 8995 10c0 9B0B0000 		.4byte	0xb9b
 8996 10c4 00       		.byte	0x0
 8997 10c5 24       		.uleb128 0x24
 8998 10c6 01       		.byte	0x1
 8999 10c7 721B0000 		.4byte	.LASF179
 9000 10cb 12       		.byte	0x12
 9001 10cc 81       		.byte	0x81
 9002 10cd 01       		.byte	0x1
 9003 10ce E7100000 		.4byte	0x10e7
 9004 10d2 16       		.uleb128 0x16
 9005 10d3 4C030000 		.4byte	0x34c
 9006 10d7 16       		.uleb128 0x16
 9007 10d8 9B0B0000 		.4byte	0xb9b
 9008 10dc 16       		.uleb128 0x16
 9009 10dd 9B0B0000 		.4byte	0xb9b
 9010 10e1 16       		.uleb128 0x16
ARM GAS  /tmp/ccNwMSzu.s 			page 193


 9011 10e2 F10F0000 		.4byte	0xff1
 9012 10e6 00       		.byte	0x0
 9013 10e7 23       		.uleb128 0x23
 9014 10e8 01       		.byte	0x1
 9015 10e9 971F0000 		.4byte	.LASF180
 9016 10ed 12       		.byte	0x12
 9017 10ee 82       		.byte	0x82
 9018 10ef C0020000 		.4byte	0x2c0
 9019 10f3 01       		.byte	0x1
 9020 10f4 24       		.uleb128 0x24
 9021 10f5 01       		.byte	0x1
 9022 10f6 FF0F0000 		.4byte	.LASF181
 9023 10fa 12       		.byte	0x12
 9024 10fb 87       		.byte	0x87
 9025 10fc 01       		.byte	0x1
 9026 10fd 07110000 		.4byte	0x1107
 9027 1101 16       		.uleb128 0x16
 9028 1102 B9020000 		.4byte	0x2b9
 9029 1106 00       		.byte	0x0
 9030 1107 21       		.uleb128 0x21
 9031 1108 01       		.byte	0x1
 9032 1109 E3150000 		.4byte	.LASF182
 9033 110d 12       		.byte	0x12
 9034 110e 88       		.byte	0x88
 9035 110f BC000000 		.4byte	0xbc
 9036 1113 01       		.byte	0x1
 9037 1114 23110000 		.4byte	0x1123
 9038 1118 16       		.uleb128 0x16
 9039 1119 CC090000 		.4byte	0x9cc
 9040 111d 16       		.uleb128 0x16
 9041 111e 23110000 		.4byte	0x1123
 9042 1122 00       		.byte	0x0
 9043 1123 12       		.uleb128 0x12
 9044 1124 04       		.byte	0x4
 9045 1125 9B090000 		.4byte	0x99b
 9046 1129 21       		.uleb128 0x21
 9047 112a 01       		.byte	0x1
 9048 112b F1150000 		.4byte	.LASF183
 9049 112f 12       		.byte	0x12
 9050 1130 91       		.byte	0x91
 9051 1131 8E000000 		.4byte	0x8e
 9052 1135 01       		.byte	0x1
 9053 1136 4A110000 		.4byte	0x114a
 9054 113a 16       		.uleb128 0x16
 9055 113b CC090000 		.4byte	0x9cc
 9056 113f 16       		.uleb128 0x16
 9057 1140 23110000 		.4byte	0x1123
 9058 1144 16       		.uleb128 0x16
 9059 1145 C0020000 		.4byte	0x2c0
 9060 1149 00       		.byte	0x0
 9061 114a 21       		.uleb128 0x21
 9062 114b 01       		.byte	0x1
 9063 114c 4B0E0000 		.4byte	.LASF184
 9064 1150 12       		.byte	0x12
 9065 1151 93       		.byte	0x93
 9066 1152 A0000000 		.4byte	0xa0
 9067 1156 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 194


 9068 1157 6B110000 		.4byte	0x116b
 9069 115b 16       		.uleb128 0x16
 9070 115c CC090000 		.4byte	0x9cc
 9071 1160 16       		.uleb128 0x16
 9072 1161 23110000 		.4byte	0x1123
 9073 1165 16       		.uleb128 0x16
 9074 1166 C0020000 		.4byte	0x2c0
 9075 116a 00       		.byte	0x0
 9076 116b 21       		.uleb128 0x21
 9077 116c 01       		.byte	0x1
 9078 116d 44110000 		.4byte	.LASF185
 9079 1171 12       		.byte	0x12
 9080 1172 96       		.byte	0x96
 9081 1173 C0020000 		.4byte	0x2c0
 9082 1177 01       		.byte	0x1
 9083 1178 82110000 		.4byte	0x1182
 9084 117c 16       		.uleb128 0x16
 9085 117d CC090000 		.4byte	0x9cc
 9086 1181 00       		.byte	0x0
 9087 1182 21       		.uleb128 0x21
 9088 1183 01       		.byte	0x1
 9089 1184 AE0E0000 		.4byte	.LASF186
 9090 1188 12       		.byte	0x12
 9091 1189 6F       		.byte	0x6f
 9092 118a 9B0B0000 		.4byte	0xb9b
 9093 118e 01       		.byte	0x1
 9094 118f A3110000 		.4byte	0x11a3
 9095 1193 16       		.uleb128 0x16
 9096 1194 9B090000 		.4byte	0x99b
 9097 1198 16       		.uleb128 0x16
 9098 1199 A3110000 		.4byte	0x11a3
 9099 119d 16       		.uleb128 0x16
 9100 119e 9B0B0000 		.4byte	0xb9b
 9101 11a2 00       		.byte	0x0
 9102 11a3 12       		.uleb128 0x12
 9103 11a4 04       		.byte	0x4
 9104 11a5 A9110000 		.4byte	0x11a9
 9105 11a9 1C       		.uleb128 0x1c
 9106 11aa 9D100000 		.4byte	0x109d
 9107 11ae 21       		.uleb128 0x21
 9108 11af 01       		.byte	0x1
 9109 11b0 F0040000 		.4byte	.LASF187
 9110 11b4 12       		.byte	0x12
 9111 11b5 6B       		.byte	0x6b
 9112 11b6 C0020000 		.4byte	0x2c0
 9113 11ba 01       		.byte	0x1
 9114 11bb CA110000 		.4byte	0x11ca
 9115 11bf 16       		.uleb128 0x16
 9116 11c0 9B090000 		.4byte	0x99b
 9117 11c4 16       		.uleb128 0x16
 9118 11c5 9D100000 		.4byte	0x109d
 9119 11c9 00       		.byte	0x0
 9120 11ca 27       		.uleb128 0x27
 9121 11cb 746D00   		.ascii	"tm\000"
 9122 11ce 2C       		.byte	0x2c
 9123 11cf 13       		.byte	0x13
 9124 11d0 2D       		.byte	0x2d
ARM GAS  /tmp/ccNwMSzu.s 			page 195


 9125 11d1 70120000 		.4byte	0x1270
 9126 11d5 0C       		.uleb128 0xc
 9127 11d6 44000000 		.4byte	.LASF188
 9128 11da 13       		.byte	0x13
 9129 11db 2E       		.byte	0x2e
 9130 11dc C0020000 		.4byte	0x2c0
 9131 11e0 02       		.byte	0x2
 9132 11e1 23       		.byte	0x23
 9133 11e2 00       		.uleb128 0x0
 9134 11e3 0C       		.uleb128 0xc
 9135 11e4 D70F0000 		.4byte	.LASF189
 9136 11e8 13       		.byte	0x13
 9137 11e9 2F       		.byte	0x2f
 9138 11ea C0020000 		.4byte	0x2c0
 9139 11ee 02       		.byte	0x2
 9140 11ef 23       		.byte	0x23
 9141 11f0 04       		.uleb128 0x4
 9142 11f1 0C       		.uleb128 0xc
 9143 11f2 ED170000 		.4byte	.LASF190
 9144 11f6 13       		.byte	0x13
 9145 11f7 30       		.byte	0x30
 9146 11f8 C0020000 		.4byte	0x2c0
 9147 11fc 02       		.byte	0x2
 9148 11fd 23       		.byte	0x23
 9149 11fe 08       		.uleb128 0x8
 9150 11ff 0C       		.uleb128 0xc
 9151 1200 65190000 		.4byte	.LASF191
 9152 1204 13       		.byte	0x13
 9153 1205 31       		.byte	0x31
 9154 1206 C0020000 		.4byte	0x2c0
 9155 120a 02       		.byte	0x2
 9156 120b 23       		.byte	0x23
 9157 120c 0C       		.uleb128 0xc
 9158 120d 0C       		.uleb128 0xc
 9159 120e D8130000 		.4byte	.LASF192
 9160 1212 13       		.byte	0x13
 9161 1213 32       		.byte	0x32
 9162 1214 C0020000 		.4byte	0x2c0
 9163 1218 02       		.byte	0x2
 9164 1219 23       		.byte	0x23
 9165 121a 10       		.uleb128 0x10
 9166 121b 0C       		.uleb128 0xc
 9167 121c A4140000 		.4byte	.LASF193
 9168 1220 13       		.byte	0x13
 9169 1221 33       		.byte	0x33
 9170 1222 C0020000 		.4byte	0x2c0
 9171 1226 02       		.byte	0x2
 9172 1227 23       		.byte	0x23
 9173 1228 14       		.uleb128 0x14
 9174 1229 0C       		.uleb128 0xc
 9175 122a C4110000 		.4byte	.LASF194
 9176 122e 13       		.byte	0x13
 9177 122f 34       		.byte	0x34
 9178 1230 C0020000 		.4byte	0x2c0
 9179 1234 02       		.byte	0x2
 9180 1235 23       		.byte	0x23
 9181 1236 18       		.uleb128 0x18
ARM GAS  /tmp/ccNwMSzu.s 			page 196


 9182 1237 0C       		.uleb128 0xc
 9183 1238 CF120000 		.4byte	.LASF195
 9184 123c 13       		.byte	0x13
 9185 123d 35       		.byte	0x35
 9186 123e C0020000 		.4byte	0x2c0
 9187 1242 02       		.byte	0x2
 9188 1243 23       		.byte	0x23
 9189 1244 1C       		.uleb128 0x1c
 9190 1245 0C       		.uleb128 0xc
 9191 1246 1E030000 		.4byte	.LASF196
 9192 124a 13       		.byte	0x13
 9193 124b 36       		.byte	0x36
 9194 124c C0020000 		.4byte	0x2c0
 9195 1250 02       		.byte	0x2
 9196 1251 23       		.byte	0x23
 9197 1252 20       		.uleb128 0x20
 9198 1253 0C       		.uleb128 0xc
 9199 1254 3A000000 		.4byte	.LASF197
 9200 1258 13       		.byte	0x13
 9201 1259 37       		.byte	0x37
 9202 125a C0020000 		.4byte	0x2c0
 9203 125e 02       		.byte	0x2
 9204 125f 23       		.byte	0x23
 9205 1260 24       		.uleb128 0x24
 9206 1261 0C       		.uleb128 0xc
 9207 1262 F5200000 		.4byte	.LASF198
 9208 1266 13       		.byte	0x13
 9209 1267 38       		.byte	0x38
 9210 1268 C0020000 		.4byte	0x2c0
 9211 126c 02       		.byte	0x2
 9212 126d 23       		.byte	0x23
 9213 126e 28       		.uleb128 0x28
 9214 126f 00       		.byte	0x0
 9215 1270 23       		.uleb128 0x23
 9216 1271 01       		.byte	0x1
 9217 1272 BE0A0000 		.4byte	.LASF199
 9218 1276 13       		.byte	0x13
 9219 1277 3B       		.byte	0x3b
 9220 1278 CB0B0000 		.4byte	0xbcb
 9221 127c 01       		.byte	0x1
 9222 127d 21       		.uleb128 0x21
 9223 127e 01       		.byte	0x1
 9224 127f A0170000 		.4byte	.LASF200
 9225 1283 13       		.byte	0x13
 9226 1284 3C       		.byte	0x3c
 9227 1285 BC000000 		.4byte	0xbc
 9228 1289 01       		.byte	0x1
 9229 128a 99120000 		.4byte	0x1299
 9230 128e 16       		.uleb128 0x16
 9231 128f D60B0000 		.4byte	0xbd6
 9232 1293 16       		.uleb128 0x16
 9233 1294 D60B0000 		.4byte	0xbd6
 9234 1298 00       		.byte	0x0
 9235 1299 21       		.uleb128 0x21
 9236 129a 01       		.byte	0x1
 9237 129b AA200000 		.4byte	.LASF201
 9238 129f 13       		.byte	0x13
ARM GAS  /tmp/ccNwMSzu.s 			page 197


 9239 12a0 3D       		.byte	0x3d
 9240 12a1 D60B0000 		.4byte	0xbd6
 9241 12a5 01       		.byte	0x1
 9242 12a6 B0120000 		.4byte	0x12b0
 9243 12aa 16       		.uleb128 0x16
 9244 12ab B0120000 		.4byte	0x12b0
 9245 12af 00       		.byte	0x0
 9246 12b0 12       		.uleb128 0x12
 9247 12b1 04       		.byte	0x4
 9248 12b2 CA110000 		.4byte	0x11ca
 9249 12b6 21       		.uleb128 0x21
 9250 12b7 01       		.byte	0x1
 9251 12b8 09140000 		.4byte	.LASF202
 9252 12bc 13       		.byte	0x13
 9253 12bd 3E       		.byte	0x3e
 9254 12be D60B0000 		.4byte	0xbd6
 9255 12c2 01       		.byte	0x1
 9256 12c3 CD120000 		.4byte	0x12cd
 9257 12c7 16       		.uleb128 0x16
 9258 12c8 CD120000 		.4byte	0x12cd
 9259 12cc 00       		.byte	0x0
 9260 12cd 12       		.uleb128 0x12
 9261 12ce 04       		.byte	0x4
 9262 12cf D60B0000 		.4byte	0xbd6
 9263 12d3 21       		.uleb128 0x21
 9264 12d4 01       		.byte	0x1
 9265 12d5 C40A0000 		.4byte	.LASF203
 9266 12d9 13       		.byte	0x13
 9267 12da 40       		.byte	0x40
 9268 12db 9B090000 		.4byte	0x99b
 9269 12df 01       		.byte	0x1
 9270 12e0 EA120000 		.4byte	0x12ea
 9271 12e4 16       		.uleb128 0x16
 9272 12e5 EA120000 		.4byte	0x12ea
 9273 12e9 00       		.byte	0x0
 9274 12ea 12       		.uleb128 0x12
 9275 12eb 04       		.byte	0x4
 9276 12ec F0120000 		.4byte	0x12f0
 9277 12f0 1C       		.uleb128 0x1c
 9278 12f1 CA110000 		.4byte	0x11ca
 9279 12f5 21       		.uleb128 0x21
 9280 12f6 01       		.byte	0x1
 9281 12f7 591B0000 		.4byte	.LASF204
 9282 12fb 13       		.byte	0x13
 9283 12fc 41       		.byte	0x41
 9284 12fd 9B090000 		.4byte	0x99b
 9285 1301 01       		.byte	0x1
 9286 1302 0C130000 		.4byte	0x130c
 9287 1306 16       		.uleb128 0x16
 9288 1307 0C130000 		.4byte	0x130c
 9289 130b 00       		.byte	0x0
 9290 130c 12       		.uleb128 0x12
 9291 130d 04       		.byte	0x4
 9292 130e 12130000 		.4byte	0x1312
 9293 1312 1C       		.uleb128 0x1c
 9294 1313 D60B0000 		.4byte	0xbd6
 9295 1317 21       		.uleb128 0x21
ARM GAS  /tmp/ccNwMSzu.s 			page 198


 9296 1318 01       		.byte	0x1
 9297 1319 2A0B0000 		.4byte	.LASF205
 9298 131d 13       		.byte	0x13
 9299 131e 42       		.byte	0x42
 9300 131f B0120000 		.4byte	0x12b0
 9301 1323 01       		.byte	0x1
 9302 1324 2E130000 		.4byte	0x132e
 9303 1328 16       		.uleb128 0x16
 9304 1329 0C130000 		.4byte	0x130c
 9305 132d 00       		.byte	0x0
 9306 132e 21       		.uleb128 0x21
 9307 132f 01       		.byte	0x1
 9308 1330 51050000 		.4byte	.LASF206
 9309 1334 13       		.byte	0x13
 9310 1335 43       		.byte	0x43
 9311 1336 B0120000 		.4byte	0x12b0
 9312 133a 01       		.byte	0x1
 9313 133b 45130000 		.4byte	0x1345
 9314 133f 16       		.uleb128 0x16
 9315 1340 0C130000 		.4byte	0x130c
 9316 1344 00       		.byte	0x0
 9317 1345 21       		.uleb128 0x21
 9318 1346 01       		.byte	0x1
 9319 1347 881D0000 		.4byte	.LASF207
 9320 134b 13       		.byte	0x13
 9321 134c 45       		.byte	0x45
 9322 134d 9B0B0000 		.4byte	0xb9b
 9323 1351 01       		.byte	0x1
 9324 1352 6B130000 		.4byte	0x136b
 9325 1356 16       		.uleb128 0x16
 9326 1357 9B090000 		.4byte	0x99b
 9327 135b 16       		.uleb128 0x16
 9328 135c 9B0B0000 		.4byte	0xb9b
 9329 1360 16       		.uleb128 0x16
 9330 1361 CC090000 		.4byte	0x9cc
 9331 1365 16       		.uleb128 0x16
 9332 1366 EA120000 		.4byte	0x12ea
 9333 136a 00       		.byte	0x0
 9334 136b 02       		.uleb128 0x2
 9335 136c 5C0A0000 		.4byte	.LASF208
 9336 1370 0D       		.byte	0xd
 9337 1371 66       		.byte	0x66
 9338 1372 A60B0000 		.4byte	0xba6
 9339 1376 1C       		.uleb128 0x1c
 9340 1377 95000000 		.4byte	0x95
 9341 137b 0D       		.uleb128 0xd
 9342 137c 58000000 		.4byte	0x58
 9343 1380 8B130000 		.4byte	0x138b
 9344 1384 0E       		.uleb128 0xe
 9345 1385 B9020000 		.4byte	0x2b9
 9346 1389 1F       		.byte	0x1f
 9347 138a 00       		.byte	0x0
 9348 138b 12       		.uleb128 0x12
 9349 138c 04       		.byte	0x4
 9350 138d 91130000 		.4byte	0x1391
 9351 1391 1C       		.uleb128 0x1c
 9352 1392 4D000000 		.4byte	0x4d
ARM GAS  /tmp/ccNwMSzu.s 			page 199


 9353 1396 12       		.uleb128 0x12
 9354 1397 04       		.byte	0x4
 9355 1398 4D000000 		.4byte	0x4d
 9356 139c 28       		.uleb128 0x28
 9357 139d 18080000 		.4byte	.LASF216
 9358 13a1 0801     		.2byte	0x108
 9359 13a3 14       		.byte	0x14
 9360 13a4 22       		.byte	0x22
 9361 13a5 7F140000 		.4byte	0x147f
 9362 13a9 29       		.uleb128 0x29
 9363 13aa CF090000 		.4byte	.LASF209
 9364 13ae 14       		.byte	0x14
 9365 13af 2D       		.byte	0x2d
 9366 13b0 D7120000 		.4byte	.LASF211
 9367 13b4 76130000 		.4byte	0x1376
 9368 13b8 01       		.byte	0x1
 9369 13b9 03       		.byte	0x3
 9370 13ba 01       		.byte	0x1
 9371 13bb 0001     		.2byte	0x100
 9372 13bd 2A       		.uleb128 0x2a
 9373 13be 0A110000 		.4byte	.LASF210
 9374 13c2 14       		.byte	0x14
 9375 13c3 30       		.byte	0x30
 9376 13c4 7E080000 		.4byte	.LASF212
 9377 13c8 76130000 		.4byte	0x1376
 9378 13cc 01       		.byte	0x1
 9379 13cd 03       		.byte	0x3
 9380 13ce 01       		.byte	0x1
 9381 13cf FF       		.byte	0xff
 9382 13d0 2B       		.uleb128 0x2b
 9383 13d1 F81B0000 		.4byte	.LASF213
 9384 13d5 14       		.byte	0x14
 9385 13d6 33       		.byte	0x33
 9386 13d7 95000000 		.4byte	0x95
 9387 13db 02       		.byte	0x2
 9388 13dc 23       		.byte	0x23
 9389 13dd 00       		.uleb128 0x0
 9390 13de 03       		.byte	0x3
 9391 13df 2B       		.uleb128 0x2b
 9392 13e0 9D150000 		.4byte	.LASF214
 9393 13e4 14       		.byte	0x14
 9394 13e5 36       		.byte	0x36
 9395 13e6 95000000 		.4byte	0x95
 9396 13ea 02       		.byte	0x2
 9397 13eb 23       		.byte	0x23
 9398 13ec 04       		.uleb128 0x4
 9399 13ed 03       		.byte	0x3
 9400 13ee 2B       		.uleb128 0x2b
 9401 13ef F5170000 		.4byte	.LASF215
 9402 13f3 14       		.byte	0x14
 9403 13f4 39       		.byte	0x39
 9404 13f5 7F140000 		.4byte	0x147f
 9405 13f9 02       		.byte	0x2
 9406 13fa 23       		.byte	0x23
 9407 13fb 08       		.uleb128 0x8
 9408 13fc 03       		.byte	0x3
 9409 13fd 21       		.uleb128 0x21
ARM GAS  /tmp/ccNwMSzu.s 			page 200


 9410 13fe 01       		.byte	0x1
 9411 13ff 18080000 		.4byte	.LASF216
 9412 1403 14       		.byte	0x14
 9413 1404 24       		.byte	0x24
 9414 1405 8F140000 		.4byte	0x148f
 9415 1409 01       		.byte	0x1
 9416 140a 15140000 		.4byte	0x1415
 9417 140e 2C       		.uleb128 0x2c
 9418 140f 8F140000 		.4byte	0x148f
 9419 1413 01       		.byte	0x1
 9420 1414 00       		.byte	0x0
 9421 1415 2D       		.uleb128 0x2d
 9422 1416 01       		.byte	0x1
 9423 1417 79190000 		.4byte	.LASF217
 9424 141b 14       		.byte	0x14
 9425 141c 26       		.byte	0x26
 9426 141d 25110000 		.4byte	.LASF237
 9427 1421 01       		.byte	0x1
 9428 1422 2D140000 		.4byte	0x142d
 9429 1426 2C       		.uleb128 0x2c
 9430 1427 8F140000 		.4byte	0x148f
 9431 142b 01       		.byte	0x1
 9432 142c 00       		.byte	0x0
 9433 142d 2E       		.uleb128 0x2e
 9434 142e 01       		.byte	0x1
 9435 142f 460D0000 		.4byte	.LASF218
 9436 1433 14       		.byte	0x14
 9437 1434 27       		.byte	0x27
 9438 1435 79200000 		.4byte	.LASF220
 9439 1439 29000000 		.4byte	0x29
 9440 143d 01       		.byte	0x1
 9441 143e 49140000 		.4byte	0x1449
 9442 1442 2C       		.uleb128 0x2c
 9443 1443 8F140000 		.4byte	0x148f
 9444 1447 01       		.byte	0x1
 9445 1448 00       		.byte	0x0
 9446 1449 2E       		.uleb128 0x2e
 9447 144a 01       		.byte	0x1
 9448 144b ED050000 		.4byte	.LASF219
 9449 144f 14       		.byte	0x14
 9450 1450 28       		.byte	0x28
 9451 1451 D3150000 		.4byte	.LASF221
 9452 1455 4D000000 		.4byte	0x4d
 9453 1459 01       		.byte	0x1
 9454 145a 65140000 		.4byte	0x1465
 9455 145e 2C       		.uleb128 0x2c
 9456 145f 8F140000 		.4byte	0x148f
 9457 1463 01       		.byte	0x1
 9458 1464 00       		.byte	0x0
 9459 1465 2F       		.uleb128 0x2f
 9460 1466 01       		.byte	0x1
 9461 1467 950D0000 		.4byte	.LASF222
 9462 146b 14       		.byte	0x14
 9463 146c 29       		.byte	0x29
 9464 146d 70050000 		.4byte	.LASF233
 9465 1471 01       		.byte	0x1
 9466 1472 2C       		.uleb128 0x2c
ARM GAS  /tmp/ccNwMSzu.s 			page 201


 9467 1473 8F140000 		.4byte	0x148f
 9468 1477 01       		.byte	0x1
 9469 1478 16       		.uleb128 0x16
 9470 1479 4D000000 		.4byte	0x4d
 9471 147d 00       		.byte	0x0
 9472 147e 00       		.byte	0x0
 9473 147f 0D       		.uleb128 0xd
 9474 1480 58000000 		.4byte	0x58
 9475 1484 8F140000 		.4byte	0x148f
 9476 1488 0E       		.uleb128 0xe
 9477 1489 B9020000 		.4byte	0x2b9
 9478 148d FF       		.byte	0xff
 9479 148e 00       		.byte	0x0
 9480 148f 12       		.uleb128 0x12
 9481 1490 04       		.byte	0x4
 9482 1491 9C130000 		.4byte	0x139c
 9483 1495 28       		.uleb128 0x28
 9484 1496 E61F0000 		.4byte	.LASF223
 9485 149a 0801     		.2byte	0x108
 9486 149c 15       		.byte	0x15
 9487 149d 21       		.byte	0x21
 9488 149e 0F150000 		.4byte	0x150f
 9489 14a2 30       		.uleb128 0x30
 9490 14a3 04       		.byte	0x4
 9491 14a4 15       		.byte	0x15
 9492 14a5 26       		.byte	0x26
 9493 14a6 8F0A0000 		.4byte	.LASF563
 9494 14aa EC140000 		.4byte	0x14ec
 9495 14ae 31       		.uleb128 0x31
 9496 14af 45080000 		.4byte	.LASF224
 9497 14b3 B009     		.sleb128 1200
 9498 14b5 31       		.uleb128 0x31
 9499 14b6 E8200000 		.4byte	.LASF225
 9500 14ba E012     		.sleb128 2400
 9501 14bc 31       		.uleb128 0x31
 9502 14bd 0D090000 		.4byte	.LASF226
 9503 14c1 C025     		.sleb128 4800
 9504 14c3 31       		.uleb128 0x31
 9505 14c4 860F0000 		.4byte	.LASF227
 9506 14c8 80CB00   		.sleb128 9600
 9507 14cb 31       		.uleb128 0x31
 9508 14cc 8A170000 		.4byte	.LASF228
 9509 14d0 809601   		.sleb128 19200
 9510 14d3 31       		.uleb128 0x31
 9511 14d4 DA000000 		.4byte	.LASF229
 9512 14d8 80AC02   		.sleb128 38400
 9513 14db 31       		.uleb128 0x31
 9514 14dc 980B0000 		.4byte	.LASF230
 9515 14e0 80C203   		.sleb128 57600
 9516 14e3 31       		.uleb128 0x31
 9517 14e4 04160000 		.4byte	.LASF231
 9518 14e8 808407   		.sleb128 115200
 9519 14eb 00       		.byte	0x0
 9520 14ec 0C       		.uleb128 0xc
 9521 14ed C3090000 		.4byte	.LASF232
 9522 14f1 15       		.byte	0x15
 9523 14f2 4C       		.byte	0x4c
ARM GAS  /tmp/ccNwMSzu.s 			page 202


 9524 14f3 9C130000 		.4byte	0x139c
 9525 14f7 02       		.byte	0x2
 9526 14f8 23       		.byte	0x23
 9527 14f9 00       		.uleb128 0x0
 9528 14fa 2F       		.uleb128 0x2f
 9529 14fb 01       		.byte	0x1
 9530 14fc 79190000 		.4byte	.LASF217
 9531 1500 15       		.byte	0x15
 9532 1501 23       		.byte	0x23
 9533 1502 A60B0000 		.4byte	.LASF234
 9534 1506 01       		.byte	0x1
 9535 1507 2C       		.uleb128 0x2c
 9536 1508 0F150000 		.4byte	0x150f
 9537 150c 01       		.byte	0x1
 9538 150d 00       		.byte	0x0
 9539 150e 00       		.byte	0x0
 9540 150f 12       		.uleb128 0x12
 9541 1510 04       		.byte	0x4
 9542 1511 95140000 		.4byte	0x1495
 9543 1515 28       		.uleb128 0x28
 9544 1516 12050000 		.4byte	.LASF235
 9545 151a 0801     		.2byte	0x108
 9546 151c 16       		.byte	0x16
 9547 151d 21       		.byte	0x21
 9548 151e 1A160000 		.4byte	0x161a
 9549 1522 32       		.uleb128 0x32
 9550 1523 95140000 		.4byte	0x1495
 9551 1527 02       		.byte	0x2
 9552 1528 23       		.byte	0x23
 9553 1529 00       		.uleb128 0x0
 9554 152a 01       		.byte	0x1
 9555 152b 2D       		.uleb128 0x2d
 9556 152c 01       		.byte	0x1
 9557 152d F4080000 		.4byte	.LASF236
 9558 1531 16       		.byte	0x16
 9559 1532 23       		.byte	0x23
 9560 1533 D30E0000 		.4byte	.LASF238
 9561 1537 01       		.byte	0x1
 9562 1538 43150000 		.4byte	0x1543
 9563 153c 2C       		.uleb128 0x2c
 9564 153d 1A160000 		.4byte	0x161a
 9565 1541 01       		.byte	0x1
 9566 1542 00       		.byte	0x0
 9567 1543 2D       		.uleb128 0x2d
 9568 1544 01       		.byte	0x1
 9569 1545 740A0000 		.4byte	.LASF239
 9570 1549 16       		.byte	0x16
 9571 154a 24       		.byte	0x24
 9572 154b 08130000 		.4byte	.LASF240
 9573 154f 01       		.byte	0x1
 9574 1550 60150000 		.4byte	0x1560
 9575 1554 2C       		.uleb128 0x2c
 9576 1555 1A160000 		.4byte	0x161a
 9577 1559 01       		.byte	0x1
 9578 155a 16       		.uleb128 0x16
 9579 155b A2140000 		.4byte	0x14a2
 9580 155f 00       		.byte	0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 203


 9581 1560 2E       		.uleb128 0x2e
 9582 1561 01       		.byte	0x1
 9583 1562 97040000 		.4byte	.LASF241
 9584 1566 16       		.byte	0x16
 9585 1567 25       		.byte	0x25
 9586 1568 35170000 		.4byte	.LASF242
 9587 156c 29000000 		.4byte	0x29
 9588 1570 01       		.byte	0x1
 9589 1571 7C150000 		.4byte	0x157c
 9590 1575 2C       		.uleb128 0x2c
 9591 1576 1A160000 		.4byte	0x161a
 9592 157a 01       		.byte	0x1
 9593 157b 00       		.byte	0x0
 9594 157c 33       		.uleb128 0x33
 9595 157d 01       		.byte	0x1
 9596 157e 49535200 		.ascii	"ISR\000"
 9597 1582 16       		.byte	0x16
 9598 1583 26       		.byte	0x26
 9599 1584 980A0000 		.4byte	.LASF564
 9600 1588 01       		.byte	0x1
 9601 1589 94150000 		.4byte	0x1594
 9602 158d 2C       		.uleb128 0x2c
 9603 158e 1A160000 		.4byte	0x161a
 9604 1592 01       		.byte	0x1
 9605 1593 00       		.byte	0x0
 9606 1594 2E       		.uleb128 0x2e
 9607 1595 01       		.byte	0x1
 9608 1596 0B070000 		.4byte	.LASF243
 9609 159a 16       		.byte	0x16
 9610 159b 27       		.byte	0x27
 9611 159c 25010000 		.4byte	.LASF244
 9612 15a0 4D000000 		.4byte	0x4d
 9613 15a4 01       		.byte	0x1
 9614 15a5 B0150000 		.4byte	0x15b0
 9615 15a9 2C       		.uleb128 0x2c
 9616 15aa 1A160000 		.4byte	0x161a
 9617 15ae 01       		.byte	0x1
 9618 15af 00       		.byte	0x0
 9619 15b0 2D       		.uleb128 0x2d
 9620 15b1 01       		.byte	0x1
 9621 15b2 950D0000 		.4byte	.LASF222
 9622 15b6 16       		.byte	0x16
 9623 15b7 28       		.byte	0x28
 9624 15b8 061B0000 		.4byte	.LASF245
 9625 15bc 01       		.byte	0x1
 9626 15bd CD150000 		.4byte	0x15cd
 9627 15c1 2C       		.uleb128 0x2c
 9628 15c2 1A160000 		.4byte	0x161a
 9629 15c6 01       		.byte	0x1
 9630 15c7 16       		.uleb128 0x16
 9631 15c8 CC090000 		.4byte	0x9cc
 9632 15cc 00       		.byte	0x0
 9633 15cd 2D       		.uleb128 0x2d
 9634 15ce 01       		.byte	0x1
 9635 15cf 8D040000 		.4byte	.LASF246
 9636 15d3 16       		.byte	0x16
 9637 15d4 29       		.byte	0x29
ARM GAS  /tmp/ccNwMSzu.s 			page 204


 9638 15d5 B71A0000 		.4byte	.LASF247
 9639 15d9 01       		.byte	0x1
 9640 15da EA150000 		.4byte	0x15ea
 9641 15de 2C       		.uleb128 0x2c
 9642 15df 1A160000 		.4byte	0x161a
 9643 15e3 01       		.byte	0x1
 9644 15e4 16       		.uleb128 0x16
 9645 15e5 4D000000 		.4byte	0x4d
 9646 15e9 00       		.byte	0x0
 9647 15ea 2D       		.uleb128 0x2d
 9648 15eb 01       		.byte	0x1
 9649 15ec 1A1B0000 		.4byte	.LASF248
 9650 15f0 16       		.byte	0x16
 9651 15f1 2A       		.byte	0x2a
 9652 15f2 110B0000 		.4byte	.LASF249
 9653 15f6 01       		.byte	0x1
 9654 15f7 08160000 		.4byte	0x1608
 9655 15fb 2C       		.uleb128 0x2c
 9656 15fc 1A160000 		.4byte	0x161a
 9657 1600 01       		.byte	0x1
 9658 1601 16       		.uleb128 0x16
 9659 1602 CC090000 		.4byte	0x9cc
 9660 1606 34       		.uleb128 0x34
 9661 1607 00       		.byte	0x0
 9662 1608 35       		.uleb128 0x35
 9663 1609 01       		.byte	0x1
 9664 160a FA220000 		.4byte	.LASF306
 9665 160e 16       		.byte	0x16
 9666 160f 2C       		.byte	0x2c
 9667 1610 E60F0000 		.4byte	.LASF307
 9668 1614 20160000 		.4byte	0x1620
 9669 1618 01       		.byte	0x1
 9670 1619 00       		.byte	0x0
 9671 161a 12       		.uleb128 0x12
 9672 161b 04       		.byte	0x4
 9673 161c 15150000 		.4byte	0x1515
 9674 1620 12       		.uleb128 0x12
 9675 1621 04       		.byte	0x4
 9676 1622 15150000 		.4byte	0x1515
 9677 1626 28       		.uleb128 0x28
 9678 1627 D7020000 		.4byte	.LASF250
 9679 162b 4402     		.2byte	0x244
 9680 162d 17       		.byte	0x17
 9681 162e 1E       		.byte	0x1e
 9682 162f 51220000 		.4byte	0x2251
 9683 1633 10       		.uleb128 0x10
 9684 1634 DC200000 		.4byte	.LASF251
 9685 1638 1C       		.byte	0x1c
 9686 1639 17       		.byte	0x17
 9687 163a 4A       		.byte	0x4a
 9688 163b E8160000 		.4byte	0x16e8
 9689 163f 0C       		.uleb128 0xc
 9690 1640 8B1C0000 		.4byte	.LASF252
 9691 1644 17       		.byte	0x17
 9692 1645 4E       		.byte	0x4e
 9693 1646 58000000 		.4byte	0x58
 9694 164a 02       		.byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 205


 9695 164b 23       		.byte	0x23
 9696 164c 00       		.uleb128 0x0
 9697 164d 11       		.uleb128 0x11
 9698 164e 6F656D00 		.ascii	"oem\000"
 9699 1652 17       		.byte	0x17
 9700 1653 52       		.byte	0x52
 9701 1654 1B0A0000 		.4byte	0xa1b
 9702 1658 02       		.byte	0x2
 9703 1659 23       		.byte	0x23
 9704 165a 01       		.uleb128 0x1
 9705 165b 0C       		.uleb128 0xc
 9706 165c F1000000 		.4byte	.LASF253
 9707 1660 17       		.byte	0x17
 9708 1661 56       		.byte	0x56
 9709 1662 51220000 		.4byte	0x2251
 9710 1666 02       		.byte	0x2
 9711 1667 23       		.byte	0x23
 9712 1668 04       		.uleb128 0x4
 9713 1669 0C       		.uleb128 0xc
 9714 166a 6E010000 		.4byte	.LASF254
 9715 166e 17       		.byte	0x17
 9716 166f 5C       		.byte	0x5c
 9717 1670 58000000 		.4byte	0x58
 9718 1674 02       		.byte	0x2
 9719 1675 23       		.byte	0x23
 9720 1676 0A       		.uleb128 0xa
 9721 1677 0C       		.uleb128 0xc
 9722 1678 38160000 		.4byte	.LASF255
 9723 167c 17       		.byte	0x17
 9724 167d 60       		.byte	0x60
 9725 167e B9020000 		.4byte	0x2b9
 9726 1682 02       		.byte	0x2
 9727 1683 23       		.byte	0x23
 9728 1684 0C       		.uleb128 0xc
 9729 1685 0C       		.uleb128 0xc
 9730 1686 92020000 		.4byte	.LASF256
 9731 168a 17       		.byte	0x17
 9732 168b 66       		.byte	0x66
 9733 168c 58000000 		.4byte	0x58
 9734 1690 02       		.byte	0x2
 9735 1691 23       		.byte	0x23
 9736 1692 10       		.uleb128 0x10
 9737 1693 0C       		.uleb128 0xc
 9738 1694 8A180000 		.4byte	.LASF257
 9739 1698 17       		.byte	0x17
 9740 1699 6A       		.byte	0x6a
 9741 169a 58000000 		.4byte	0x58
 9742 169e 02       		.byte	0x2
 9743 169f 23       		.byte	0x23
 9744 16a0 11       		.uleb128 0x11
 9745 16a1 0C       		.uleb128 0xc
 9746 16a2 0C020000 		.4byte	.LASF258
 9747 16a6 17       		.byte	0x17
 9748 16a7 6E       		.byte	0x6e
 9749 16a8 B9020000 		.4byte	0x2b9
 9750 16ac 02       		.byte	0x2
 9751 16ad 23       		.byte	0x23
ARM GAS  /tmp/ccNwMSzu.s 			page 206


 9752 16ae 14       		.uleb128 0x14
 9753 16af 0C       		.uleb128 0xc
 9754 16b0 811C0000 		.4byte	.LASF259
 9755 16b4 17       		.byte	0x17
 9756 16b5 74       		.byte	0x74
 9757 16b6 58000000 		.4byte	0x58
 9758 16ba 02       		.byte	0x2
 9759 16bb 23       		.byte	0x23
 9760 16bc 18       		.uleb128 0x18
 9761 16bd 0C       		.uleb128 0xc
 9762 16be 1C0C0000 		.4byte	.LASF260
 9763 16c2 17       		.byte	0x17
 9764 16c3 7B       		.byte	0x7b
 9765 16c4 58000000 		.4byte	0x58
 9766 16c8 02       		.byte	0x2
 9767 16c9 23       		.byte	0x23
 9768 16ca 19       		.uleb128 0x19
 9769 16cb 0C       		.uleb128 0xc
 9770 16cc DF130000 		.4byte	.LASF261
 9771 16d0 17       		.byte	0x17
 9772 16d1 82       		.byte	0x82
 9773 16d2 58000000 		.4byte	0x58
 9774 16d6 02       		.byte	0x2
 9775 16d7 23       		.byte	0x23
 9776 16d8 1A       		.uleb128 0x1a
 9777 16d9 0C       		.uleb128 0xc
 9778 16da 9D140000 		.4byte	.LASF262
 9779 16de 17       		.byte	0x17
 9780 16df 8A       		.byte	0x8a
 9781 16e0 58000000 		.4byte	0x58
 9782 16e4 02       		.byte	0x2
 9783 16e5 23       		.byte	0x23
 9784 16e6 1B       		.uleb128 0x1b
 9785 16e7 00       		.byte	0x0
 9786 16e8 1D       		.uleb128 0x1d
 9787 16e9 82210000 		.4byte	.LASF263
 9788 16ed 2C       		.byte	0x2c
 9789 16ee 17       		.byte	0x17
 9790 16ef 5101     		.2byte	0x151
 9791 16f1 41170000 		.4byte	0x1741
 9792 16f5 1A       		.uleb128 0x1a
 9793 16f6 F0220000 		.4byte	.LASF264
 9794 16fa 17       		.byte	0x17
 9795 16fb 5301     		.2byte	0x153
 9796 16fd 61220000 		.4byte	0x2261
 9797 1701 02       		.byte	0x2
 9798 1702 23       		.byte	0x23
 9799 1703 00       		.uleb128 0x0
 9800 1704 1A       		.uleb128 0x1a
 9801 1705 FE0C0000 		.4byte	.LASF265
 9802 1709 17       		.byte	0x17
 9803 170a 5501     		.2byte	0x155
 9804 170c 4D000000 		.4byte	0x4d
 9805 1710 02       		.byte	0x2
 9806 1711 23       		.byte	0x23
 9807 1712 20       		.uleb128 0x20
 9808 1713 1A       		.uleb128 0x1a
ARM GAS  /tmp/ccNwMSzu.s 			page 207


 9809 1714 06230000 		.4byte	.LASF266
 9810 1718 17       		.byte	0x17
 9811 1719 5D01     		.2byte	0x15d
 9812 171b 71000000 		.4byte	0x71
 9813 171f 02       		.byte	0x2
 9814 1720 23       		.byte	0x23
 9815 1721 22       		.uleb128 0x22
 9816 1722 1A       		.uleb128 0x1a
 9817 1723 77220000 		.4byte	.LASF267
 9818 1727 17       		.byte	0x17
 9819 1728 5F01     		.2byte	0x15f
 9820 172a 95000000 		.4byte	0x95
 9821 172e 02       		.byte	0x2
 9822 172f 23       		.byte	0x23
 9823 1730 24       		.uleb128 0x24
 9824 1731 1A       		.uleb128 0x1a
 9825 1732 80110000 		.4byte	.LASF268
 9826 1736 17       		.byte	0x17
 9827 1737 6101     		.2byte	0x161
 9828 1739 95000000 		.4byte	0x95
 9829 173d 02       		.byte	0x2
 9830 173e 23       		.byte	0x23
 9831 173f 28       		.uleb128 0x28
 9832 1740 00       		.byte	0x0
 9833 1741 1D       		.uleb128 0x1d
 9834 1742 39030000 		.4byte	.LASF269
 9835 1746 18       		.byte	0x18
 9836 1747 17       		.byte	0x17
 9837 1748 DC01     		.2byte	0x1dc
 9838 174a B8170000 		.4byte	0x17b8
 9839 174e 1A       		.uleb128 0x1a
 9840 174f B40A0000 		.4byte	.LASF270
 9841 1753 17       		.byte	0x17
 9842 1754 DD01     		.2byte	0x1dd
 9843 1756 95000000 		.4byte	0x95
 9844 175a 02       		.byte	0x2
 9845 175b 23       		.byte	0x23
 9846 175c 00       		.uleb128 0x0
 9847 175d 1A       		.uleb128 0x1a
 9848 175e 80010000 		.4byte	.LASF271
 9849 1762 17       		.byte	0x17
 9850 1763 DF01     		.2byte	0x1df
 9851 1765 95000000 		.4byte	0x95
 9852 1769 02       		.byte	0x2
 9853 176a 23       		.byte	0x23
 9854 176b 04       		.uleb128 0x4
 9855 176c 1A       		.uleb128 0x1a
 9856 176d 7A040000 		.4byte	.LASF272
 9857 1771 17       		.byte	0x17
 9858 1772 E001     		.2byte	0x1e0
 9859 1774 95000000 		.4byte	0x95
 9860 1778 02       		.byte	0x2
 9861 1779 23       		.byte	0x23
 9862 177a 08       		.uleb128 0x8
 9863 177b 1A       		.uleb128 0x1a
 9864 177c 261A0000 		.4byte	.LASF273
 9865 1780 17       		.byte	0x17
ARM GAS  /tmp/ccNwMSzu.s 			page 208


 9866 1781 E201     		.2byte	0x1e2
 9867 1783 71000000 		.4byte	0x71
 9868 1787 02       		.byte	0x2
 9869 1788 23       		.byte	0x23
 9870 1789 0C       		.uleb128 0xc
 9871 178a 1A       		.uleb128 0x1a
 9872 178b 091F0000 		.4byte	.LASF274
 9873 178f 17       		.byte	0x17
 9874 1790 E301     		.2byte	0x1e3
 9875 1792 71000000 		.4byte	0x71
 9876 1796 02       		.byte	0x2
 9877 1797 23       		.byte	0x23
 9878 1798 0E       		.uleb128 0xe
 9879 1799 1A       		.uleb128 0x1a
 9880 179a DD020000 		.4byte	.LASF275
 9881 179e 17       		.byte	0x17
 9882 179f E501     		.2byte	0x1e5
 9883 17a1 95000000 		.4byte	0x95
 9884 17a5 02       		.byte	0x2
 9885 17a6 23       		.byte	0x23
 9886 17a7 10       		.uleb128 0x10
 9887 17a8 1A       		.uleb128 0x1a
 9888 17a9 C8040000 		.4byte	.LASF276
 9889 17ad 17       		.byte	0x17
 9890 17ae E701     		.2byte	0x1e7
 9891 17b0 95000000 		.4byte	0x95
 9892 17b4 02       		.byte	0x2
 9893 17b5 23       		.byte	0x23
 9894 17b6 14       		.uleb128 0x14
 9895 17b7 00       		.byte	0x0
 9896 17b8 1D       		.uleb128 0x1d
 9897 17b9 BF020000 		.4byte	.LASF277
 9898 17bd 1C       		.byte	0x1c
 9899 17be 17       		.byte	0x17
 9900 17bf EB01     		.2byte	0x1eb
 9901 17c1 E4170000 		.4byte	0x17e4
 9902 17c5 1A       		.uleb128 0x1a
 9903 17c6 070B0000 		.4byte	.LASF278
 9904 17ca 17       		.byte	0x17
 9905 17cb EC01     		.2byte	0x1ec
 9906 17cd 71220000 		.4byte	0x2271
 9907 17d1 02       		.byte	0x2
 9908 17d2 23       		.byte	0x23
 9909 17d3 00       		.uleb128 0x0
 9910 17d4 1A       		.uleb128 0x1a
 9911 17d5 DF1F0000 		.4byte	.LASF279
 9912 17d9 17       		.byte	0x17
 9913 17da ED01     		.2byte	0x1ed
 9914 17dc 41170000 		.4byte	0x1741
 9915 17e0 02       		.byte	0x2
 9916 17e1 23       		.byte	0x23
 9917 17e2 04       		.uleb128 0x4
 9918 17e3 00       		.byte	0x0
 9919 17e4 1D       		.uleb128 0x1d
 9920 17e5 A3040000 		.4byte	.LASF280
 9921 17e9 24       		.byte	0x24
 9922 17ea 17       		.byte	0x17
ARM GAS  /tmp/ccNwMSzu.s 			page 209


 9923 17eb 9102     		.2byte	0x291
 9924 17ed 70180000 		.4byte	0x1870
 9925 17f1 08       		.uleb128 0x8
 9926 17f2 0C190000 		.4byte	.LASF281
 9927 17f6 17       		.byte	0x17
 9928 17f7 6702     		.2byte	0x267
 9929 17f9 7D220000 		.4byte	0x227d
 9930 17fd 1A       		.uleb128 0x1a
 9931 17fe 0E140000 		.4byte	.LASF282
 9932 1802 17       		.byte	0x17
 9933 1803 9802     		.2byte	0x298
 9934 1805 F1170000 		.4byte	0x17f1
 9935 1809 02       		.byte	0x2
 9936 180a 23       		.byte	0x23
 9937 180b 00       		.uleb128 0x0
 9938 180c 08       		.uleb128 0x8
 9939 180d B8120000 		.4byte	.LASF283
 9940 1811 17       		.byte	0x17
 9941 1812 8302     		.2byte	0x283
 9942 1814 CF220000 		.4byte	0x22cf
 9943 1818 1A       		.uleb128 0x1a
 9944 1819 2E050000 		.4byte	.LASF284
 9945 181d 17       		.byte	0x17
 9946 181e 9F02     		.2byte	0x29f
 9947 1820 0C180000 		.4byte	0x180c
 9948 1824 02       		.byte	0x2
 9949 1825 23       		.byte	0x23
 9950 1826 08       		.uleb128 0x8
 9951 1827 08       		.uleb128 0x8
 9952 1828 C6050000 		.4byte	.LASF285
 9953 182c 17       		.byte	0x17
 9954 182d 8B02     		.2byte	0x28b
 9955 182f 80230000 		.4byte	0x2380
 9956 1833 1A       		.uleb128 0x1a
 9957 1834 18050000 		.4byte	.LASF286
 9958 1838 17       		.byte	0x17
 9959 1839 A602     		.2byte	0x2a6
 9960 183b 27180000 		.4byte	0x1827
 9961 183f 02       		.byte	0x2
 9962 1840 23       		.byte	0x23
 9963 1841 10       		.uleb128 0x10
 9964 1842 1A       		.uleb128 0x1a
 9965 1843 51060000 		.4byte	.LASF287
 9966 1847 17       		.byte	0x17
 9967 1848 AD02     		.2byte	0x2ad
 9968 184a 4D000000 		.4byte	0x4d
 9969 184e 02       		.byte	0x2
 9970 184f 23       		.byte	0x23
 9971 1850 18       		.uleb128 0x18
 9972 1851 1A       		.uleb128 0x1a
 9973 1852 B61D0000 		.4byte	.LASF288
 9974 1856 17       		.byte	0x17
 9975 1857 B102     		.2byte	0x2b1
 9976 1859 95000000 		.4byte	0x95
 9977 185d 02       		.byte	0x2
 9978 185e 23       		.byte	0x23
 9979 185f 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccNwMSzu.s 			page 210


 9980 1860 1A       		.uleb128 0x1a
 9981 1861 B8020000 		.4byte	.LASF289
 9982 1865 17       		.byte	0x17
 9983 1866 B502     		.2byte	0x2b5
 9984 1868 95000000 		.4byte	0x95
 9985 186c 02       		.byte	0x2
 9986 186d 23       		.byte	0x23
 9987 186e 20       		.uleb128 0x20
 9988 186f 00       		.byte	0x0
 9989 1870 1D       		.uleb128 0x1d
 9990 1871 00000000 		.4byte	.LASF290
 9991 1875 38       		.byte	0x38
 9992 1876 17       		.byte	0x17
 9993 1877 F101     		.2byte	0x1f1
 9994 1879 B9180000 		.4byte	0x18b9
 9995 187d 36       		.uleb128 0x36
 9996 187e 667300   		.ascii	"fs\000"
 9997 1881 17       		.byte	0x17
 9998 1882 F201     		.2byte	0x1f2
 9999 1884 77220000 		.4byte	0x2277
 10000 1888 02       		.byte	0x2
 10001 1889 23       		.byte	0x23
 10002 188a 00       		.uleb128 0x0
 10003 188b 1A       		.uleb128 0x1a
 10004 188c B3090000 		.4byte	.LASF291
 10005 1890 17       		.byte	0x17
 10006 1891 F301     		.2byte	0x1f3
 10007 1893 E8160000 		.4byte	0x16e8
 10008 1897 02       		.byte	0x2
 10009 1898 23       		.byte	0x23
 10010 1899 04       		.uleb128 0x4
 10011 189a 36       		.uleb128 0x36
 10012 189b 706F7300 		.ascii	"pos\000"
 10013 189f 17       		.byte	0x17
 10014 18a0 F401     		.2byte	0x1f4
 10015 18a2 95000000 		.4byte	0x95
 10016 18a6 02       		.byte	0x2
 10017 18a7 23       		.byte	0x23
 10018 18a8 30       		.uleb128 0x30
 10019 18a9 1A       		.uleb128 0x1a
 10020 18aa 2E000000 		.4byte	.LASF292
 10021 18ae 17       		.byte	0x17
 10022 18af F501     		.2byte	0x1f5
 10023 18b1 71000000 		.4byte	0x71
 10024 18b5 02       		.byte	0x2
 10025 18b6 23       		.byte	0x23
 10026 18b7 34       		.uleb128 0x34
 10027 18b8 00       		.byte	0x0
 10028 18b9 1D       		.uleb128 0x1d
 10029 18ba 38090000 		.4byte	.LASF293
 10030 18be 34       		.byte	0x34
 10031 18bf 17       		.byte	0x17
 10032 18c0 F901     		.2byte	0x1f9
 10033 18c2 F3180000 		.4byte	0x18f3
 10034 18c6 36       		.uleb128 0x36
 10035 18c7 667300   		.ascii	"fs\000"
 10036 18ca 17       		.byte	0x17
ARM GAS  /tmp/ccNwMSzu.s 			page 211


 10037 18cb FA01     		.2byte	0x1fa
 10038 18cd 77220000 		.4byte	0x2277
 10039 18d1 02       		.byte	0x2
 10040 18d2 23       		.byte	0x23
 10041 18d3 00       		.uleb128 0x0
 10042 18d4 1A       		.uleb128 0x1a
 10043 18d5 B3090000 		.4byte	.LASF291
 10044 18d9 17       		.byte	0x17
 10045 18da FB01     		.2byte	0x1fb
 10046 18dc E8160000 		.4byte	0x16e8
 10047 18e0 02       		.byte	0x2
 10048 18e1 23       		.byte	0x23
 10049 18e2 04       		.uleb128 0x4
 10050 18e3 1A       		.uleb128 0x1a
 10051 18e4 A5050000 		.4byte	.LASF294
 10052 18e8 17       		.byte	0x17
 10053 18e9 FC01     		.2byte	0x1fc
 10054 18eb 71000000 		.4byte	0x71
 10055 18ef 02       		.byte	0x2
 10056 18f0 23       		.byte	0x23
 10057 18f1 30       		.uleb128 0x30
 10058 18f2 00       		.byte	0x0
 10059 18f3 1D       		.uleb128 0x1d
 10060 18f4 7D0D0000 		.4byte	.LASF295
 10061 18f8 0C       		.byte	0xc
 10062 18f9 17       		.byte	0x17
 10063 18fa 0002     		.2byte	0x200
 10064 18fc 3D190000 		.4byte	0x193d
 10065 1900 1A       		.uleb128 0x1a
 10066 1901 25020000 		.4byte	.LASF296
 10067 1905 17       		.byte	0x17
 10068 1906 0102     		.2byte	0x201
 10069 1908 71000000 		.4byte	0x71
 10070 190c 02       		.byte	0x2
 10071 190d 23       		.byte	0x23
 10072 190e 00       		.uleb128 0x0
 10073 190f 1A       		.uleb128 0x1a
 10074 1910 83040000 		.4byte	.LASF297
 10075 1914 17       		.byte	0x17
 10076 1915 0202     		.2byte	0x202
 10077 1917 71000000 		.4byte	0x71
 10078 191b 02       		.byte	0x2
 10079 191c 23       		.byte	0x23
 10080 191d 02       		.uleb128 0x2
 10081 191e 1A       		.uleb128 0x1a
 10082 191f 80110000 		.4byte	.LASF268
 10083 1923 17       		.byte	0x17
 10084 1924 0302     		.2byte	0x203
 10085 1926 95000000 		.4byte	0x95
 10086 192a 02       		.byte	0x2
 10087 192b 23       		.byte	0x23
 10088 192c 04       		.uleb128 0x4
 10089 192d 1A       		.uleb128 0x1a
 10090 192e F41F0000 		.4byte	.LASF298
 10091 1932 17       		.byte	0x17
 10092 1933 0402     		.2byte	0x204
 10093 1935 4D000000 		.4byte	0x4d
ARM GAS  /tmp/ccNwMSzu.s 			page 212


 10094 1939 02       		.byte	0x2
 10095 193a 23       		.byte	0x23
 10096 193b 08       		.uleb128 0x8
 10097 193c 00       		.byte	0x0
 10098 193d 1D       		.uleb128 0x1d
 10099 193e 55030000 		.4byte	.LASF299
 10100 1942 04       		.byte	0x4
 10101 1943 17       		.byte	0x17
 10102 1944 0802     		.2byte	0x208
 10103 1946 69190000 		.4byte	0x1969
 10104 194a 1A       		.uleb128 0x1a
 10105 194b 53110000 		.4byte	.LASF300
 10106 194f 17       		.byte	0x17
 10107 1950 0902     		.2byte	0x209
 10108 1952 71000000 		.4byte	0x71
 10109 1956 02       		.byte	0x2
 10110 1957 23       		.byte	0x23
 10111 1958 00       		.uleb128 0x0
 10112 1959 1A       		.uleb128 0x1a
 10113 195a AB1F0000 		.4byte	.LASF301
 10114 195e 17       		.byte	0x17
 10115 195f 0A02     		.2byte	0x20a
 10116 1961 4D000000 		.4byte	0x4d
 10117 1965 02       		.byte	0x2
 10118 1966 23       		.byte	0x23
 10119 1967 02       		.uleb128 0x2
 10120 1968 00       		.byte	0x0
 10121 1969 1A       		.uleb128 0x1a
 10122 196a F7040000 		.4byte	.LASF302
 10123 196e 17       		.byte	0x17
 10124 196f 1D01     		.2byte	0x11d
 10125 1971 CC230000 		.4byte	0x23cc
 10126 1975 02       		.byte	0x2
 10127 1976 23       		.byte	0x23
 10128 1977 00       		.uleb128 0x0
 10129 1978 1A       		.uleb128 0x1a
 10130 1979 E20C0000 		.4byte	.LASF303
 10131 197d 17       		.byte	0x17
 10132 197e 1F01     		.2byte	0x11f
 10133 1980 B9020000 		.4byte	0x2b9
 10134 1984 03       		.byte	0x3
 10135 1985 23       		.byte	0x23
 10136 1986 8004     		.uleb128 0x200
 10137 1988 1A       		.uleb128 0x1a
 10138 1989 98080000 		.4byte	.LASF304
 10139 198d 17       		.byte	0x17
 10140 198e 2201     		.2byte	0x122
 10141 1990 58000000 		.4byte	0x58
 10142 1994 03       		.byte	0x3
 10143 1995 23       		.byte	0x23
 10144 1996 8404     		.uleb128 0x204
 10145 1998 1A       		.uleb128 0x1a
 10146 1999 B3090000 		.4byte	.LASF291
 10147 199d 17       		.byte	0x17
 10148 199e 3002     		.2byte	0x230
 10149 19a0 E8160000 		.4byte	0x16e8
 10150 19a4 03       		.byte	0x3
ARM GAS  /tmp/ccNwMSzu.s 			page 213


 10151 19a5 23       		.byte	0x23
 10152 19a6 8804     		.uleb128 0x208
 10153 19a8 36       		.uleb128 0x36
 10154 19a9 667300   		.ascii	"fs\000"
 10155 19ac 17       		.byte	0x17
 10156 19ad 3102     		.2byte	0x231
 10157 19af 77220000 		.4byte	0x2277
 10158 19b3 03       		.byte	0x3
 10159 19b4 23       		.byte	0x23
 10160 19b5 B404     		.uleb128 0x234
 10161 19b7 1A       		.uleb128 0x1a
 10162 19b8 070B0000 		.4byte	.LASF278
 10163 19bc 17       		.byte	0x17
 10164 19bd 3202     		.2byte	0x232
 10165 19bf 71220000 		.4byte	0x2271
 10166 19c3 03       		.byte	0x3
 10167 19c4 23       		.byte	0x23
 10168 19c5 B804     		.uleb128 0x238
 10169 19c7 36       		.uleb128 0x36
 10170 19c8 646400   		.ascii	"dd\000"
 10171 19cb 17       		.byte	0x17
 10172 19cc 3302     		.2byte	0x233
 10173 19ce DD230000 		.4byte	0x23dd
 10174 19d2 03       		.byte	0x3
 10175 19d3 23       		.byte	0x23
 10176 19d4 BC04     		.uleb128 0x23c
 10177 19d6 36       		.uleb128 0x36
 10178 19d7 666400   		.ascii	"fd\000"
 10179 19da 17       		.byte	0x17
 10180 19db 3402     		.2byte	0x234
 10181 19dd E3230000 		.4byte	0x23e3
 10182 19e1 03       		.byte	0x3
 10183 19e2 23       		.byte	0x23
 10184 19e3 C004     		.uleb128 0x240
 10185 19e5 02       		.uleb128 0x2
 10186 19e6 0D040000 		.4byte	.LASF305
 10187 19ea 17       		.byte	0x17
 10188 19eb 8D       		.byte	0x8d
 10189 19ec 30230000 		.4byte	0x2330
 10190 19f0 35       		.uleb128 0x35
 10191 19f1 01       		.byte	0x1
 10192 19f2 FA220000 		.4byte	.LASF306
 10193 19f6 17       		.byte	0x17
 10194 19f7 24       		.byte	0x24
 10195 19f8 3B1F0000 		.4byte	.LASF308
 10196 19fc E9230000 		.4byte	0x23e9
 10197 1a00 01       		.byte	0x1
 10198 1a01 2E       		.uleb128 0x2e
 10199 1a02 01       		.byte	0x1
 10200 1a03 8B220000 		.4byte	.LASF309
 10201 1a07 17       		.byte	0x17
 10202 1a08 8F       		.byte	0x8f
 10203 1a09 EE190000 		.4byte	.LASF310
 10204 1a0d 58000000 		.4byte	0x58
 10205 1a11 01       		.byte	0x1
 10206 1a12 1D1A0000 		.4byte	0x1a1d
 10207 1a16 2C       		.uleb128 0x2c
ARM GAS  /tmp/ccNwMSzu.s 			page 214


 10208 1a17 C3220000 		.4byte	0x22c3
 10209 1a1b 01       		.byte	0x1
 10210 1a1c 00       		.byte	0x0
 10211 1a1d 2E       		.uleb128 0x2e
 10212 1a1e 01       		.byte	0x1
 10213 1a1f 460B0000 		.4byte	.LASF311
 10214 1a23 17       		.byte	0x17
 10215 1a24 90       		.byte	0x90
 10216 1a25 C4170000 		.4byte	.LASF312
 10217 1a29 58000000 		.4byte	0x58
 10218 1a2d 01       		.byte	0x1
 10219 1a2e 391A0000 		.4byte	0x1a39
 10220 1a32 2C       		.uleb128 0x2c
 10221 1a33 C3220000 		.4byte	0x22c3
 10222 1a37 01       		.byte	0x1
 10223 1a38 00       		.byte	0x0
 10224 1a39 2E       		.uleb128 0x2e
 10225 1a3a 01       		.byte	0x1
 10226 1a3b FC170000 		.4byte	.LASF313
 10227 1a3f 17       		.byte	0x17
 10228 1a40 91       		.byte	0x91
 10229 1a41 44120000 		.4byte	.LASF314
 10230 1a45 58000000 		.4byte	0x58
 10231 1a49 01       		.byte	0x1
 10232 1a4a 551A0000 		.4byte	0x1a55
 10233 1a4e 2C       		.uleb128 0x2c
 10234 1a4f C3220000 		.4byte	0x22c3
 10235 1a53 01       		.byte	0x1
 10236 1a54 00       		.byte	0x0
 10237 1a55 2E       		.uleb128 0x2e
 10238 1a56 01       		.byte	0x1
 10239 1a57 F9090000 		.4byte	.LASF315
 10240 1a5b 17       		.byte	0x17
 10241 1a5c 93       		.byte	0x93
 10242 1a5d 81140000 		.4byte	.LASF316
 10243 1a61 58000000 		.4byte	0x58
 10244 1a65 01       		.byte	0x1
 10245 1a66 801A0000 		.4byte	0x1a80
 10246 1a6a 2C       		.uleb128 0x2c
 10247 1a6b C3220000 		.4byte	0x22c3
 10248 1a6f 01       		.byte	0x1
 10249 1a70 16       		.uleb128 0x16
 10250 1a71 B9020000 		.4byte	0x2b9
 10251 1a75 16       		.uleb128 0x16
 10252 1a76 3F050000 		.4byte	0x53f
 10253 1a7a 16       		.uleb128 0x16
 10254 1a7b 7C000000 		.4byte	0x7c
 10255 1a7f 00       		.byte	0x0
 10256 1a80 2E       		.uleb128 0x2e
 10257 1a81 01       		.byte	0x1
 10258 1a82 C60C0000 		.4byte	.LASF317
 10259 1a86 17       		.byte	0x17
 10260 1a87 94       		.byte	0x94
 10261 1a88 531D0000 		.4byte	.LASF318
 10262 1a8c 58000000 		.4byte	0x58
 10263 1a90 01       		.byte	0x1
 10264 1a91 BA1A0000 		.4byte	0x1aba
ARM GAS  /tmp/ccNwMSzu.s 			page 215


 10265 1a95 2C       		.uleb128 0x2c
 10266 1a96 C3220000 		.4byte	0x22c3
 10267 1a9a 01       		.byte	0x1
 10268 1a9b 16       		.uleb128 0x16
 10269 1a9c B9020000 		.4byte	0x2b9
 10270 1aa0 16       		.uleb128 0x16
 10271 1aa1 3F050000 		.4byte	0x53f
 10272 1aa5 16       		.uleb128 0x16
 10273 1aa6 7C000000 		.4byte	0x7c
 10274 1aaa 16       		.uleb128 0x16
 10275 1aab 7C000000 		.4byte	0x7c
 10276 1aaf 16       		.uleb128 0x16
 10277 1ab0 E5190000 		.4byte	0x19e5
 10278 1ab4 16       		.uleb128 0x16
 10279 1ab5 4C030000 		.4byte	0x34c
 10280 1ab9 00       		.byte	0x0
 10281 1aba 2E       		.uleb128 0x2e
 10282 1abb 01       		.byte	0x1
 10283 1abc 70120000 		.4byte	.LASF319
 10284 1ac0 17       		.byte	0x17
 10285 1ac1 95       		.byte	0x95
 10286 1ac2 DC1E0000 		.4byte	.LASF320
 10287 1ac6 58000000 		.4byte	0x58
 10288 1aca 01       		.byte	0x1
 10289 1acb E51A0000 		.4byte	0x1ae5
 10290 1acf 2C       		.uleb128 0x2c
 10291 1ad0 C3220000 		.4byte	0x22c3
 10292 1ad4 01       		.byte	0x1
 10293 1ad5 16       		.uleb128 0x16
 10294 1ad6 B9020000 		.4byte	0x2b9
 10295 1ada 16       		.uleb128 0x16
 10296 1adb EF230000 		.4byte	0x23ef
 10297 1adf 16       		.uleb128 0x16
 10298 1ae0 7C000000 		.4byte	0x7c
 10299 1ae4 00       		.byte	0x0
 10300 1ae5 2E       		.uleb128 0x2e
 10301 1ae6 01       		.byte	0x1
 10302 1ae7 68210000 		.4byte	.LASF321
 10303 1aeb 17       		.byte	0x17
 10304 1aec 96       		.byte	0x96
 10305 1aed 1F120000 		.4byte	.LASF322
 10306 1af1 58000000 		.4byte	0x58
 10307 1af5 01       		.byte	0x1
 10308 1af6 011B0000 		.4byte	0x1b01
 10309 1afa 2C       		.uleb128 0x2c
 10310 1afb C3220000 		.4byte	0x22c3
 10311 1aff 01       		.byte	0x1
 10312 1b00 00       		.byte	0x0
 10313 1b01 2E       		.uleb128 0x2e
 10314 1b02 01       		.byte	0x1
 10315 1b03 67060000 		.4byte	.LASF323
 10316 1b07 17       		.byte	0x17
 10317 1b08 98       		.byte	0x98
 10318 1b09 CB1D0000 		.4byte	.LASF324
 10319 1b0d 58000000 		.4byte	0x58
 10320 1b11 01       		.byte	0x1
 10321 1b12 221B0000 		.4byte	0x1b22
ARM GAS  /tmp/ccNwMSzu.s 			page 216


 10322 1b16 2C       		.uleb128 0x2c
 10323 1b17 C3220000 		.4byte	0x22c3
 10324 1b1b 01       		.byte	0x1
 10325 1b1c 16       		.uleb128 0x16
 10326 1b1d FA230000 		.4byte	0x23fa
 10327 1b21 00       		.byte	0x0
 10328 1b22 2D       		.uleb128 0x2d
 10329 1b23 01       		.byte	0x1
 10330 1b24 27030000 		.4byte	.LASF325
 10331 1b28 17       		.byte	0x17
 10332 1b29 99       		.byte	0x99
 10333 1b2a D61B0000 		.4byte	.LASF326
 10334 1b2e 01       		.byte	0x1
 10335 1b2f 3A1B0000 		.4byte	0x1b3a
 10336 1b33 2C       		.uleb128 0x2c
 10337 1b34 C3220000 		.4byte	0x22c3
 10338 1b38 01       		.byte	0x1
 10339 1b39 00       		.byte	0x0
 10340 1b3a 2E       		.uleb128 0x2e
 10341 1b3b 01       		.byte	0x1
 10342 1b3c 38120000 		.4byte	.LASF327
 10343 1b40 17       		.byte	0x17
 10344 1b41 9B       		.byte	0x9b
 10345 1b42 CC0B0000 		.4byte	.LASF328
 10346 1b46 A1090000 		.4byte	0x9a1
 10347 1b4a 01       		.byte	0x1
 10348 1b4b 5B1B0000 		.4byte	0x1b5b
 10349 1b4f 2C       		.uleb128 0x2c
 10350 1b50 C3220000 		.4byte	0x22c3
 10351 1b54 01       		.byte	0x1
 10352 1b55 16       		.uleb128 0x16
 10353 1b56 A1090000 		.4byte	0x9a1
 10354 1b5a 00       		.byte	0x0
 10355 1b5b 37       		.uleb128 0x37
 10356 1b5c 01       		.byte	0x1
 10357 1b5d E11A0000 		.4byte	.LASF329
 10358 1b61 17       		.byte	0x17
 10359 1b62 2801     		.2byte	0x128
 10360 1b64 F9110000 		.4byte	.LASF336
 10361 1b68 01       		.byte	0x1
 10362 1b69 731B0000 		.4byte	0x1b73
 10363 1b6d 16       		.uleb128 0x16
 10364 1b6e 58000000 		.4byte	0x58
 10365 1b72 00       		.byte	0x0
 10366 1b73 38       		.uleb128 0x38
 10367 1b74 01       		.byte	0x1
 10368 1b75 5B050000 		.4byte	.LASF330
 10369 1b79 17       		.byte	0x17
 10370 1b7a 2901     		.2byte	0x129
 10371 1b7c 220E0000 		.4byte	.LASF565
 10372 1b80 58000000 		.4byte	0x58
 10373 1b84 01       		.byte	0x1
 10374 1b85 39       		.uleb128 0x39
 10375 1b86 01       		.byte	0x1
 10376 1b87 01010000 		.4byte	.LASF331
 10377 1b8b 17       		.byte	0x17
 10378 1b8c 2A01     		.2byte	0x12a
ARM GAS  /tmp/ccNwMSzu.s 			page 217


 10379 1b8e 13160000 		.4byte	.LASF333
 10380 1b92 58000000 		.4byte	0x58
 10381 1b96 01       		.byte	0x1
 10382 1b97 A61B0000 		.4byte	0x1ba6
 10383 1b9b 16       		.uleb128 0x16
 10384 1b9c 58000000 		.4byte	0x58
 10385 1ba0 16       		.uleb128 0x16
 10386 1ba1 B9020000 		.4byte	0x2b9
 10387 1ba5 00       		.byte	0x0
 10388 1ba6 39       		.uleb128 0x39
 10389 1ba7 01       		.byte	0x1
 10390 1ba8 BC190000 		.4byte	.LASF332
 10391 1bac 17       		.byte	0x17
 10392 1bad 6501     		.2byte	0x165
 10393 1baf BB210000 		.4byte	.LASF334
 10394 1bb3 77220000 		.4byte	0x2277
 10395 1bb7 01       		.byte	0x1
 10396 1bb8 C81B0000 		.4byte	0x1bc8
 10397 1bbc 2C       		.uleb128 0x2c
 10398 1bbd C3220000 		.4byte	0x22c3
 10399 1bc1 01       		.byte	0x1
 10400 1bc2 16       		.uleb128 0x16
 10401 1bc3 71220000 		.4byte	0x2271
 10402 1bc7 00       		.byte	0x0
 10403 1bc8 37       		.uleb128 0x37
 10404 1bc9 01       		.byte	0x1
 10405 1bca C51C0000 		.4byte	.LASF335
 10406 1bce 17       		.byte	0x17
 10407 1bcf 6801     		.2byte	0x168
 10408 1bd1 980C0000 		.4byte	.LASF337
 10409 1bd5 01       		.byte	0x1
 10410 1bd6 E61B0000 		.4byte	0x1be6
 10411 1bda 2C       		.uleb128 0x2c
 10412 1bdb C3220000 		.4byte	0x22c3
 10413 1bdf 01       		.byte	0x1
 10414 1be0 16       		.uleb128 0x16
 10415 1be1 77220000 		.4byte	0x2277
 10416 1be5 00       		.byte	0x0
 10417 1be6 39       		.uleb128 0x39
 10418 1be7 01       		.byte	0x1
 10419 1be8 CC110000 		.4byte	.LASF338
 10420 1bec 17       		.byte	0x17
 10421 1bed 6B01     		.2byte	0x16b
 10422 1bef 5D070000 		.4byte	.LASF339
 10423 1bf3 E3230000 		.4byte	0x23e3
 10424 1bf7 01       		.byte	0x1
 10425 1bf8 0D1C0000 		.4byte	0x1c0d
 10426 1bfc 2C       		.uleb128 0x2c
 10427 1bfd C3220000 		.4byte	0x22c3
 10428 1c01 01       		.byte	0x1
 10429 1c02 16       		.uleb128 0x16
 10430 1c03 77220000 		.4byte	0x2277
 10431 1c07 16       		.uleb128 0x16
 10432 1c08 00240000 		.4byte	0x2400
 10433 1c0c 00       		.byte	0x0
 10434 1c0d 37       		.uleb128 0x37
 10435 1c0e 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 218


 10436 1c0f FE0B0000 		.4byte	.LASF340
 10437 1c13 17       		.byte	0x17
 10438 1c14 6E01     		.2byte	0x16e
 10439 1c16 090D0000 		.4byte	.LASF341
 10440 1c1a 01       		.byte	0x1
 10441 1c1b 2B1C0000 		.4byte	0x1c2b
 10442 1c1f 2C       		.uleb128 0x2c
 10443 1c20 C3220000 		.4byte	0x22c3
 10444 1c24 01       		.byte	0x1
 10445 1c25 16       		.uleb128 0x16
 10446 1c26 E3230000 		.4byte	0x23e3
 10447 1c2a 00       		.byte	0x0
 10448 1c2b 39       		.uleb128 0x39
 10449 1c2c 01       		.byte	0x1
 10450 1c2d 9B0D0000 		.4byte	.LASF342
 10451 1c31 17       		.byte	0x17
 10452 1c32 7101     		.2byte	0x171
 10453 1c34 141D0000 		.4byte	.LASF343
 10454 1c38 5F000000 		.4byte	0x5f
 10455 1c3c 01       		.byte	0x1
 10456 1c3d 571C0000 		.4byte	0x1c57
 10457 1c41 2C       		.uleb128 0x2c
 10458 1c42 C3220000 		.4byte	0x22c3
 10459 1c46 01       		.byte	0x1
 10460 1c47 16       		.uleb128 0x16
 10461 1c48 E3230000 		.4byte	0x23e3
 10462 1c4c 16       		.uleb128 0x16
 10463 1c4d 96130000 		.4byte	0x1396
 10464 1c51 16       		.uleb128 0x16
 10465 1c52 71000000 		.4byte	0x71
 10466 1c56 00       		.byte	0x0
 10467 1c57 39       		.uleb128 0x39
 10468 1c58 01       		.byte	0x1
 10469 1c59 E0060000 		.4byte	.LASF344
 10470 1c5d 17       		.byte	0x17
 10471 1c5e 7401     		.2byte	0x174
 10472 1c60 141E0000 		.4byte	.LASF345
 10473 1c64 5F000000 		.4byte	0x5f
 10474 1c68 01       		.byte	0x1
 10475 1c69 831C0000 		.4byte	0x1c83
 10476 1c6d 2C       		.uleb128 0x2c
 10477 1c6e C3220000 		.4byte	0x22c3
 10478 1c72 01       		.byte	0x1
 10479 1c73 16       		.uleb128 0x16
 10480 1c74 E3230000 		.4byte	0x23e3
 10481 1c78 16       		.uleb128 0x16
 10482 1c79 8B130000 		.4byte	0x138b
 10483 1c7d 16       		.uleb128 0x16
 10484 1c7e 71000000 		.4byte	0x71
 10485 1c82 00       		.byte	0x0
 10486 1c83 39       		.uleb128 0x39
 10487 1c84 01       		.byte	0x1
 10488 1c85 15020000 		.4byte	.LASF346
 10489 1c89 17       		.byte	0x17
 10490 1c8a 7701     		.2byte	0x177
 10491 1c8c 17180000 		.4byte	.LASF347
 10492 1c90 4D000000 		.4byte	0x4d
ARM GAS  /tmp/ccNwMSzu.s 			page 219


 10493 1c94 01       		.byte	0x1
 10494 1c95 AF1C0000 		.4byte	0x1caf
 10495 1c99 2C       		.uleb128 0x2c
 10496 1c9a C3220000 		.4byte	0x22c3
 10497 1c9e 01       		.byte	0x1
 10498 1c9f 16       		.uleb128 0x16
 10499 1ca0 E3230000 		.4byte	0x23e3
 10500 1ca4 16       		.uleb128 0x16
 10501 1ca5 0B240000 		.4byte	0x240b
 10502 1ca9 16       		.uleb128 0x16
 10503 1caa 4D000000 		.4byte	0x4d
 10504 1cae 00       		.byte	0x0
 10505 1caf 39       		.uleb128 0x39
 10506 1cb0 01       		.byte	0x1
 10507 1cb1 A9170000 		.4byte	.LASF348
 10508 1cb5 17       		.byte	0x17
 10509 1cb6 7A01     		.2byte	0x17a
 10510 1cb8 D11C0000 		.4byte	.LASF349
 10511 1cbc 4D000000 		.4byte	0x4d
 10512 1cc0 01       		.byte	0x1
 10513 1cc1 D61C0000 		.4byte	0x1cd6
 10514 1cc5 2C       		.uleb128 0x2c
 10515 1cc6 C3220000 		.4byte	0x22c3
 10516 1cca 01       		.byte	0x1
 10517 1ccb 16       		.uleb128 0x16
 10518 1ccc E3230000 		.4byte	0x23e3
 10519 1cd0 16       		.uleb128 0x16
 10520 1cd1 95000000 		.4byte	0x95
 10521 1cd5 00       		.byte	0x0
 10522 1cd6 39       		.uleb128 0x39
 10523 1cd7 01       		.byte	0x1
 10524 1cd8 D40A0000 		.4byte	.LASF350
 10525 1cdc 17       		.byte	0x17
 10526 1cdd 7D01     		.2byte	0x17d
 10527 1cdf 81030000 		.4byte	.LASF351
 10528 1ce3 DD230000 		.4byte	0x23dd
 10529 1ce7 01       		.byte	0x1
 10530 1ce8 FD1C0000 		.4byte	0x1cfd
 10531 1cec 2C       		.uleb128 0x2c
 10532 1ced C3220000 		.4byte	0x22c3
 10533 1cf1 01       		.byte	0x1
 10534 1cf2 16       		.uleb128 0x16
 10535 1cf3 77220000 		.4byte	0x2277
 10536 1cf7 16       		.uleb128 0x16
 10537 1cf8 00240000 		.4byte	0x2400
 10538 1cfc 00       		.byte	0x0
 10539 1cfd 37       		.uleb128 0x37
 10540 1cfe 01       		.byte	0x1
 10541 1cff 9A200000 		.4byte	.LASF352
 10542 1d03 17       		.byte	0x17
 10543 1d04 8001     		.2byte	0x180
 10544 1d06 050A0000 		.4byte	.LASF353
 10545 1d0a 01       		.byte	0x1
 10546 1d0b 1B1D0000 		.4byte	0x1d1b
 10547 1d0f 2C       		.uleb128 0x2c
 10548 1d10 C3220000 		.4byte	0x22c3
 10549 1d14 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 220


 10550 1d15 16       		.uleb128 0x16
 10551 1d16 DD230000 		.4byte	0x23dd
 10552 1d1a 00       		.byte	0x0
 10553 1d1b 39       		.uleb128 0x39
 10554 1d1c 01       		.byte	0x1
 10555 1d1d 6B040000 		.4byte	.LASF354
 10556 1d21 17       		.byte	0x17
 10557 1d22 8301     		.2byte	0x183
 10558 1d24 FA140000 		.4byte	.LASF355
 10559 1d28 4D000000 		.4byte	0x4d
 10560 1d2c 01       		.byte	0x1
 10561 1d2d 421D0000 		.4byte	0x1d42
 10562 1d31 2C       		.uleb128 0x2c
 10563 1d32 C3220000 		.4byte	0x22c3
 10564 1d36 01       		.byte	0x1
 10565 1d37 16       		.uleb128 0x16
 10566 1d38 DD230000 		.4byte	0x23dd
 10567 1d3c 16       		.uleb128 0x16
 10568 1d3d 11240000 		.4byte	0x2411
 10569 1d41 00       		.byte	0x0
 10570 1d42 39       		.uleb128 0x39
 10571 1d43 01       		.byte	0x1
 10572 1d44 570B0000 		.4byte	.LASF356
 10573 1d48 17       		.byte	0x17
 10574 1d49 8601     		.2byte	0x186
 10575 1d4b 5F150000 		.4byte	.LASF357
 10576 1d4f 4D000000 		.4byte	0x4d
 10577 1d53 01       		.byte	0x1
 10578 1d54 641D0000 		.4byte	0x1d64
 10579 1d58 2C       		.uleb128 0x2c
 10580 1d59 C3220000 		.4byte	0x22c3
 10581 1d5d 01       		.byte	0x1
 10582 1d5e 16       		.uleb128 0x16
 10583 1d5f DD230000 		.4byte	0x23dd
 10584 1d63 00       		.byte	0x0
 10585 1d64 39       		.uleb128 0x39
 10586 1d65 01       		.byte	0x1
 10587 1d66 BD150000 		.4byte	.LASF358
 10588 1d6a 17       		.byte	0x17
 10589 1d6b 8901     		.2byte	0x189
 10590 1d6d C8160000 		.4byte	.LASF359
 10591 1d71 4D000000 		.4byte	0x4d
 10592 1d75 01       		.byte	0x1
 10593 1d76 8B1D0000 		.4byte	0x1d8b
 10594 1d7a 2C       		.uleb128 0x2c
 10595 1d7b C3220000 		.4byte	0x22c3
 10596 1d7f 01       		.byte	0x1
 10597 1d80 16       		.uleb128 0x16
 10598 1d81 DD230000 		.4byte	0x23dd
 10599 1d85 16       		.uleb128 0x16
 10600 1d86 71000000 		.4byte	0x71
 10601 1d8a 00       		.byte	0x0
 10602 1d8b 39       		.uleb128 0x39
 10603 1d8c 01       		.byte	0x1
 10604 1d8d 161F0000 		.4byte	.LASF360
 10605 1d91 17       		.byte	0x17
 10606 1d92 8C01     		.2byte	0x18c
ARM GAS  /tmp/ccNwMSzu.s 			page 221


 10607 1d94 71100000 		.4byte	.LASF361
 10608 1d98 4D000000 		.4byte	0x4d
 10609 1d9c 01       		.byte	0x1
 10610 1d9d B71D0000 		.4byte	0x1db7
 10611 1da1 2C       		.uleb128 0x2c
 10612 1da2 C3220000 		.4byte	0x22c3
 10613 1da6 01       		.byte	0x1
 10614 1da7 16       		.uleb128 0x16
 10615 1da8 DD230000 		.4byte	0x23dd
 10616 1dac 16       		.uleb128 0x16
 10617 1dad CC090000 		.4byte	0x9cc
 10618 1db1 16       		.uleb128 0x16
 10619 1db2 11240000 		.4byte	0x2411
 10620 1db6 00       		.byte	0x0
 10621 1db7 39       		.uleb128 0x39
 10622 1db8 01       		.byte	0x1
 10623 1db9 E9210000 		.4byte	.LASF362
 10624 1dbd 17       		.byte	0x17
 10625 1dbe 8F01     		.2byte	0x18f
 10626 1dc0 D10D0000 		.4byte	.LASF363
 10627 1dc4 4D000000 		.4byte	0x4d
 10628 1dc8 01       		.byte	0x1
 10629 1dc9 DE1D0000 		.4byte	0x1dde
 10630 1dcd 2C       		.uleb128 0x2c
 10631 1dce C3220000 		.4byte	0x22c3
 10632 1dd2 01       		.byte	0x1
 10633 1dd3 16       		.uleb128 0x16
 10634 1dd4 77220000 		.4byte	0x2277
 10635 1dd8 16       		.uleb128 0x16
 10636 1dd9 11240000 		.4byte	0x2411
 10637 1ddd 00       		.byte	0x0
 10638 1dde 39       		.uleb128 0x39
 10639 1ddf 01       		.byte	0x1
 10640 1de0 97120000 		.4byte	.LASF364
 10641 1de4 17       		.byte	0x17
 10642 1de5 9201     		.2byte	0x192
 10643 1de7 A6180000 		.4byte	.LASF365
 10644 1deb 4D000000 		.4byte	0x4d
 10645 1def 01       		.byte	0x1
 10646 1df0 0A1E0000 		.4byte	0x1e0a
 10647 1df4 2C       		.uleb128 0x2c
 10648 1df5 C3220000 		.4byte	0x22c3
 10649 1df9 01       		.byte	0x1
 10650 1dfa 16       		.uleb128 0x16
 10651 1dfb 77220000 		.4byte	0x2277
 10652 1dff 16       		.uleb128 0x16
 10653 1e00 CC090000 		.4byte	0x9cc
 10654 1e04 16       		.uleb128 0x16
 10655 1e05 11240000 		.4byte	0x2411
 10656 1e09 00       		.byte	0x0
 10657 1e0a 39       		.uleb128 0x39
 10658 1e0b 01       		.byte	0x1
 10659 1e0c 35060000 		.4byte	.LASF366
 10660 1e10 17       		.byte	0x17
 10661 1e11 9501     		.2byte	0x195
 10662 1e13 241B0000 		.4byte	.LASF367
 10663 1e17 95000000 		.4byte	0x95
ARM GAS  /tmp/ccNwMSzu.s 			page 222


 10664 1e1b 01       		.byte	0x1
 10665 1e1c 2C1E0000 		.4byte	0x1e2c
 10666 1e20 2C       		.uleb128 0x2c
 10667 1e21 C3220000 		.4byte	0x22c3
 10668 1e25 01       		.byte	0x1
 10669 1e26 16       		.uleb128 0x16
 10670 1e27 17240000 		.4byte	0x2417
 10671 1e2b 00       		.byte	0x0
 10672 1e2c 39       		.uleb128 0x39
 10673 1e2d 01       		.byte	0x1
 10674 1e2e 510F0000 		.4byte	.LASF368
 10675 1e32 17       		.byte	0x17
 10676 1e33 9801     		.2byte	0x198
 10677 1e35 3E140000 		.4byte	.LASF369
 10678 1e39 95000000 		.4byte	0x95
 10679 1e3d 01       		.byte	0x1
 10680 1e3e 4E1E0000 		.4byte	0x1e4e
 10681 1e42 2C       		.uleb128 0x2c
 10682 1e43 C3220000 		.4byte	0x22c3
 10683 1e47 01       		.byte	0x1
 10684 1e48 16       		.uleb128 0x16
 10685 1e49 17240000 		.4byte	0x2417
 10686 1e4d 00       		.byte	0x0
 10687 1e4e 39       		.uleb128 0x39
 10688 1e4f 01       		.byte	0x1
 10689 1e50 2B070000 		.4byte	.LASF370
 10690 1e54 17       		.byte	0x17
 10691 1e55 9B01     		.2byte	0x19b
 10692 1e57 49090000 		.4byte	.LASF371
 10693 1e5b 4D000000 		.4byte	0x4d
 10694 1e5f 01       		.byte	0x1
 10695 1e60 7F1E0000 		.4byte	0x1e7f
 10696 1e64 2C       		.uleb128 0x2c
 10697 1e65 C3220000 		.4byte	0x22c3
 10698 1e69 01       		.byte	0x1
 10699 1e6a 16       		.uleb128 0x16
 10700 1e6b 77220000 		.4byte	0x2277
 10701 1e6f 16       		.uleb128 0x16
 10702 1e70 DD230000 		.4byte	0x23dd
 10703 1e74 16       		.uleb128 0x16
 10704 1e75 CC090000 		.4byte	0x9cc
 10705 1e79 16       		.uleb128 0x16
 10706 1e7a 11240000 		.4byte	0x2411
 10707 1e7e 00       		.byte	0x0
 10708 1e7f 39       		.uleb128 0x39
 10709 1e80 01       		.byte	0x1
 10710 1e81 FC080000 		.4byte	.LASF372
 10711 1e85 17       		.byte	0x17
 10712 1e86 9E01     		.2byte	0x19e
 10713 1e88 551E0000 		.4byte	.LASF373
 10714 1e8c E3230000 		.4byte	0x23e3
 10715 1e90 01       		.byte	0x1
 10716 1e91 AB1E0000 		.4byte	0x1eab
 10717 1e95 2C       		.uleb128 0x2c
 10718 1e96 C3220000 		.4byte	0x22c3
 10719 1e9a 01       		.byte	0x1
 10720 1e9b 16       		.uleb128 0x16
ARM GAS  /tmp/ccNwMSzu.s 			page 223


 10721 1e9c 77220000 		.4byte	0x2277
 10722 1ea0 16       		.uleb128 0x16
 10723 1ea1 DD230000 		.4byte	0x23dd
 10724 1ea5 16       		.uleb128 0x16
 10725 1ea6 CC090000 		.4byte	0x9cc
 10726 1eaa 00       		.byte	0x0
 10727 1eab 39       		.uleb128 0x39
 10728 1eac 01       		.byte	0x1
 10729 1ead 071A0000 		.4byte	.LASF374
 10730 1eb1 17       		.byte	0x17
 10731 1eb2 A001     		.2byte	0x1a0
 10732 1eb4 7E1A0000 		.4byte	.LASF375
 10733 1eb8 C0020000 		.4byte	0x2c0
 10734 1ebc 01       		.byte	0x1
 10735 1ebd CD1E0000 		.4byte	0x1ecd
 10736 1ec1 2C       		.uleb128 0x2c
 10737 1ec2 C3220000 		.4byte	0x22c3
 10738 1ec6 01       		.byte	0x1
 10739 1ec7 16       		.uleb128 0x16
 10740 1ec8 E3230000 		.4byte	0x23e3
 10741 1ecc 00       		.byte	0x0
 10742 1ecd 39       		.uleb128 0x39
 10743 1ece 01       		.byte	0x1
 10744 1ecf DB050000 		.4byte	.LASF376
 10745 1ed3 17       		.byte	0x17
 10746 1ed4 0E02     		.2byte	0x20e
 10747 1ed6 3D100000 		.4byte	.LASF377
 10748 1eda 4D000000 		.4byte	0x4d
 10749 1ede 01       		.byte	0x1
 10750 1edf EF1E0000 		.4byte	0x1eef
 10751 1ee3 2C       		.uleb128 0x2c
 10752 1ee4 C3220000 		.4byte	0x22c3
 10753 1ee8 01       		.byte	0x1
 10754 1ee9 16       		.uleb128 0x16
 10755 1eea 77220000 		.4byte	0x2277
 10756 1eee 00       		.byte	0x0
 10757 1eef 39       		.uleb128 0x39
 10758 1ef0 01       		.byte	0x1
 10759 1ef1 C51F0000 		.4byte	.LASF378
 10760 1ef5 17       		.byte	0x17
 10761 1ef6 0F02     		.2byte	0x20f
 10762 1ef8 E70E0000 		.4byte	.LASF379
 10763 1efc 4D000000 		.4byte	0x4d
 10764 1f00 01       		.byte	0x1
 10765 1f01 1B1F0000 		.4byte	0x1f1b
 10766 1f05 2C       		.uleb128 0x2c
 10767 1f06 C3220000 		.4byte	0x22c3
 10768 1f0a 01       		.byte	0x1
 10769 1f0b 16       		.uleb128 0x16
 10770 1f0c 17240000 		.4byte	0x2417
 10771 1f10 16       		.uleb128 0x16
 10772 1f11 71000000 		.4byte	0x71
 10773 1f15 16       		.uleb128 0x16
 10774 1f16 11240000 		.4byte	0x2411
 10775 1f1a 00       		.byte	0x0
 10776 1f1b 39       		.uleb128 0x39
 10777 1f1c 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 224


 10778 1f1d A8160000 		.4byte	.LASF380
 10779 1f21 17       		.byte	0x17
 10780 1f22 1002     		.2byte	0x210
 10781 1f24 FF200000 		.4byte	.LASF381
 10782 1f28 4D000000 		.4byte	0x4d
 10783 1f2c 01       		.byte	0x1
 10784 1f2d 4C1F0000 		.4byte	0x1f4c
 10785 1f31 2C       		.uleb128 0x2c
 10786 1f32 C3220000 		.4byte	0x22c3
 10787 1f36 01       		.byte	0x1
 10788 1f37 16       		.uleb128 0x16
 10789 1f38 17240000 		.4byte	0x2417
 10790 1f3c 16       		.uleb128 0x16
 10791 1f3d 71000000 		.4byte	0x71
 10792 1f41 16       		.uleb128 0x16
 10793 1f42 00240000 		.4byte	0x2400
 10794 1f46 16       		.uleb128 0x16
 10795 1f47 11240000 		.4byte	0x2411
 10796 1f4b 00       		.byte	0x0
 10797 1f4c 39       		.uleb128 0x39
 10798 1f4d 01       		.byte	0x1
 10799 1f4e 17170000 		.4byte	.LASF382
 10800 1f52 17       		.byte	0x17
 10801 1f53 1102     		.2byte	0x211
 10802 1f55 D3100000 		.4byte	.LASF383
 10803 1f59 4D000000 		.4byte	0x4d
 10804 1f5d 01       		.byte	0x1
 10805 1f5e 781F0000 		.4byte	0x1f78
 10806 1f62 2C       		.uleb128 0x2c
 10807 1f63 C3220000 		.4byte	0x22c3
 10808 1f67 01       		.byte	0x1
 10809 1f68 16       		.uleb128 0x16
 10810 1f69 96130000 		.4byte	0x1396
 10811 1f6d 16       		.uleb128 0x16
 10812 1f6e 95000000 		.4byte	0x95
 10813 1f72 16       		.uleb128 0x16
 10814 1f73 4C030000 		.4byte	0x34c
 10815 1f77 00       		.byte	0x0
 10816 1f78 39       		.uleb128 0x39
 10817 1f79 01       		.byte	0x1
 10818 1f7a 4E0D0000 		.4byte	.LASF384
 10819 1f7e 17       		.byte	0x17
 10820 1f7f 1202     		.2byte	0x212
 10821 1f81 91000000 		.4byte	.LASF385
 10822 1f85 4D000000 		.4byte	0x4d
 10823 1f89 01       		.byte	0x1
 10824 1f8a A41F0000 		.4byte	0x1fa4
 10825 1f8e 2C       		.uleb128 0x2c
 10826 1f8f C3220000 		.4byte	0x22c3
 10827 1f93 01       		.byte	0x1
 10828 1f94 16       		.uleb128 0x16
 10829 1f95 96130000 		.4byte	0x1396
 10830 1f99 16       		.uleb128 0x16
 10831 1f9a 95000000 		.4byte	0x95
 10832 1f9e 16       		.uleb128 0x16
 10833 1f9f 4C030000 		.4byte	0x34c
 10834 1fa3 00       		.byte	0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 225


 10835 1fa4 39       		.uleb128 0x39
 10836 1fa5 01       		.byte	0x1
 10837 1fa6 23100000 		.4byte	.LASF386
 10838 1faa 17       		.byte	0x17
 10839 1fab 1302     		.2byte	0x213
 10840 1fad 4B000000 		.4byte	.LASF387
 10841 1fb1 4D000000 		.4byte	0x4d
 10842 1fb5 01       		.byte	0x1
 10843 1fb6 CB1F0000 		.4byte	0x1fcb
 10844 1fba 2C       		.uleb128 0x2c
 10845 1fbb C3220000 		.4byte	0x22c3
 10846 1fbf 01       		.byte	0x1
 10847 1fc0 16       		.uleb128 0x16
 10848 1fc1 11240000 		.4byte	0x2411
 10849 1fc5 16       		.uleb128 0x16
 10850 1fc6 8B130000 		.4byte	0x138b
 10851 1fca 00       		.byte	0x0
 10852 1fcb 39       		.uleb128 0x39
 10853 1fcc 01       		.byte	0x1
 10854 1fcd 8C060000 		.4byte	.LASF388
 10855 1fd1 17       		.byte	0x17
 10856 1fd2 1402     		.2byte	0x214
 10857 1fd4 56130000 		.4byte	.LASF389
 10858 1fd8 71000000 		.4byte	0x71
 10859 1fdc 01       		.byte	0x1
 10860 1fdd F21F0000 		.4byte	0x1ff2
 10861 1fe1 2C       		.uleb128 0x2c
 10862 1fe2 C3220000 		.4byte	0x22c3
 10863 1fe6 01       		.byte	0x1
 10864 1fe7 16       		.uleb128 0x16
 10865 1fe8 17240000 		.4byte	0x2417
 10866 1fec 16       		.uleb128 0x16
 10867 1fed 71000000 		.4byte	0x71
 10868 1ff1 00       		.byte	0x0
 10869 1ff2 39       		.uleb128 0x39
 10870 1ff3 01       		.byte	0x1
 10871 1ff4 01170000 		.4byte	.LASF390
 10872 1ff8 17       		.byte	0x17
 10873 1ff9 1502     		.2byte	0x215
 10874 1ffb BF140000 		.4byte	.LASF391
 10875 1fff 71000000 		.4byte	0x71
 10876 2003 01       		.byte	0x1
 10877 2004 1E200000 		.4byte	0x201e
 10878 2008 2C       		.uleb128 0x2c
 10879 2009 C3220000 		.4byte	0x22c3
 10880 200d 01       		.byte	0x1
 10881 200e 16       		.uleb128 0x16
 10882 200f 17240000 		.4byte	0x2417
 10883 2013 16       		.uleb128 0x16
 10884 2014 71000000 		.4byte	0x71
 10885 2018 16       		.uleb128 0x16
 10886 2019 71000000 		.4byte	0x71
 10887 201d 00       		.byte	0x0
 10888 201e 39       		.uleb128 0x39
 10889 201f 01       		.byte	0x1
 10890 2020 4F0C0000 		.4byte	.LASF392
 10891 2024 17       		.byte	0x17
ARM GAS  /tmp/ccNwMSzu.s 			page 226


 10892 2025 1602     		.2byte	0x216
 10893 2027 3D020000 		.4byte	.LASF393
 10894 202b 4D000000 		.4byte	0x4d
 10895 202f 01       		.byte	0x1
 10896 2030 45200000 		.4byte	0x2045
 10897 2034 2C       		.uleb128 0x2c
 10898 2035 C3220000 		.4byte	0x22c3
 10899 2039 01       		.byte	0x1
 10900 203a 16       		.uleb128 0x16
 10901 203b 17240000 		.4byte	0x2417
 10902 203f 16       		.uleb128 0x16
 10903 2040 71000000 		.4byte	0x71
 10904 2044 00       		.byte	0x0
 10905 2045 39       		.uleb128 0x39
 10906 2046 01       		.byte	0x1
 10907 2047 B0060000 		.4byte	.LASF394
 10908 204b 17       		.byte	0x17
 10909 204c 1702     		.2byte	0x217
 10910 204e 781B0000 		.4byte	.LASF395
 10911 2052 4D000000 		.4byte	0x4d
 10912 2056 01       		.byte	0x1
 10913 2057 6C200000 		.4byte	0x206c
 10914 205b 2C       		.uleb128 0x2c
 10915 205c C3220000 		.4byte	0x22c3
 10916 2060 01       		.byte	0x1
 10917 2061 16       		.uleb128 0x16
 10918 2062 17240000 		.4byte	0x2417
 10919 2066 16       		.uleb128 0x16
 10920 2067 71000000 		.4byte	0x71
 10921 206b 00       		.byte	0x0
 10922 206c 39       		.uleb128 0x39
 10923 206d 01       		.byte	0x1
 10924 206e 91130000 		.4byte	.LASF396
 10925 2072 17       		.byte	0x17
 10926 2073 1802     		.2byte	0x218
 10927 2075 FF1F0000 		.4byte	.LASF397
 10928 2079 4D000000 		.4byte	0x4d
 10929 207d 01       		.byte	0x1
 10930 207e 93200000 		.4byte	0x2093
 10931 2082 2C       		.uleb128 0x2c
 10932 2083 C3220000 		.4byte	0x22c3
 10933 2087 01       		.byte	0x1
 10934 2088 16       		.uleb128 0x16
 10935 2089 17240000 		.4byte	0x2417
 10936 208d 16       		.uleb128 0x16
 10937 208e 00240000 		.4byte	0x2400
 10938 2092 00       		.byte	0x0
 10939 2093 39       		.uleb128 0x39
 10940 2094 01       		.byte	0x1
 10941 2095 A0210000 		.4byte	.LASF398
 10942 2099 17       		.byte	0x17
 10943 209a 1902     		.2byte	0x219
 10944 209c 39190000 		.4byte	.LASF399
 10945 20a0 4D000000 		.4byte	0x4d
 10946 20a4 01       		.byte	0x1
 10947 20a5 BF200000 		.4byte	0x20bf
 10948 20a9 2C       		.uleb128 0x2c
ARM GAS  /tmp/ccNwMSzu.s 			page 227


 10949 20aa C3220000 		.4byte	0x22c3
 10950 20ae 01       		.byte	0x1
 10951 20af 16       		.uleb128 0x16
 10952 20b0 96130000 		.4byte	0x1396
 10953 20b4 16       		.uleb128 0x16
 10954 20b5 95000000 		.4byte	0x95
 10955 20b9 16       		.uleb128 0x16
 10956 20ba 4C030000 		.4byte	0x34c
 10957 20be 00       		.byte	0x0
 10958 20bf 39       		.uleb128 0x39
 10959 20c0 01       		.byte	0x1
 10960 20c1 760F0000 		.4byte	.LASF400
 10961 20c5 17       		.byte	0x17
 10962 20c6 1E02     		.2byte	0x21e
 10963 20c8 68160000 		.4byte	.LASF401
 10964 20cc 4D000000 		.4byte	0x4d
 10965 20d0 01       		.byte	0x1
 10966 20d1 E1200000 		.4byte	0x20e1
 10967 20d5 2C       		.uleb128 0x2c
 10968 20d6 C3220000 		.4byte	0x22c3
 10969 20da 01       		.byte	0x1
 10970 20db 16       		.uleb128 0x16
 10971 20dc 17240000 		.4byte	0x2417
 10972 20e0 00       		.byte	0x0
 10973 20e1 39       		.uleb128 0x39
 10974 20e2 01       		.byte	0x1
 10975 20e3 C50E0000 		.4byte	.LASF402
 10976 20e7 17       		.byte	0x17
 10977 20e8 2102     		.2byte	0x221
 10978 20ea 12000000 		.4byte	.LASF403
 10979 20ee E3230000 		.4byte	0x23e3
 10980 20f2 01       		.byte	0x1
 10981 20f3 03210000 		.4byte	0x2103
 10982 20f7 2C       		.uleb128 0x2c
 10983 20f8 C3220000 		.4byte	0x22c3
 10984 20fc 01       		.byte	0x1
 10985 20fd 16       		.uleb128 0x16
 10986 20fe 9B090000 		.4byte	0x99b
 10987 2102 00       		.byte	0x0
 10988 2103 39       		.uleb128 0x39
 10989 2104 01       		.byte	0x1
 10990 2105 AD010000 		.4byte	.LASF404
 10991 2109 17       		.byte	0x17
 10992 210a 2402     		.2byte	0x224
 10993 210c 1A190000 		.4byte	.LASF405
 10994 2110 C0020000 		.4byte	0x2c0
 10995 2114 01       		.byte	0x1
 10996 2115 25210000 		.4byte	0x2125
 10997 2119 2C       		.uleb128 0x2c
 10998 211a C3220000 		.4byte	0x22c3
 10999 211e 01       		.byte	0x1
 11000 211f 16       		.uleb128 0x16
 11001 2120 9B090000 		.4byte	0x99b
 11002 2124 00       		.byte	0x0
 11003 2125 39       		.uleb128 0x39
 11004 2126 01       		.byte	0x1
 11005 2127 77010000 		.4byte	.LASF406
ARM GAS  /tmp/ccNwMSzu.s 			page 228


 11006 212b 17       		.byte	0x17
 11007 212c 2602     		.2byte	0x226
 11008 212e E4110000 		.4byte	.LASF407
 11009 2132 C0020000 		.4byte	0x2c0
 11010 2136 01       		.byte	0x1
 11011 2137 42210000 		.4byte	0x2142
 11012 213b 2C       		.uleb128 0x2c
 11013 213c C3220000 		.4byte	0x22c3
 11014 2140 01       		.byte	0x1
 11015 2141 00       		.byte	0x0
 11016 2142 39       		.uleb128 0x39
 11017 2143 01       		.byte	0x1
 11018 2144 FE120000 		.4byte	.LASF408
 11019 2148 17       		.byte	0x17
 11020 2149 2802     		.2byte	0x228
 11021 214b C9060000 		.4byte	.LASF409
 11022 214f E3230000 		.4byte	0x23e3
 11023 2153 01       		.byte	0x1
 11024 2154 64210000 		.4byte	0x2164
 11025 2158 2C       		.uleb128 0x2c
 11026 2159 C3220000 		.4byte	0x22c3
 11027 215d 01       		.byte	0x1
 11028 215e 16       		.uleb128 0x16
 11029 215f 9B090000 		.4byte	0x99b
 11030 2163 00       		.byte	0x0
 11031 2164 37       		.uleb128 0x37
 11032 2165 01       		.byte	0x1
 11033 2166 9C1F0000 		.4byte	.LASF410
 11034 216a 17       		.byte	0x17
 11035 216b 2A02     		.2byte	0x22a
 11036 216d 0C060000 		.4byte	.LASF411
 11037 2171 01       		.byte	0x1
 11038 2172 7D210000 		.4byte	0x217d
 11039 2176 2C       		.uleb128 0x2c
 11040 2177 C3220000 		.4byte	0x22c3
 11041 217b 01       		.byte	0x1
 11042 217c 00       		.byte	0x0
 11043 217d 39       		.uleb128 0x39
 11044 217e 01       		.byte	0x1
 11045 217f A8190000 		.4byte	.LASF412
 11046 2183 17       		.byte	0x17
 11047 2184 2B02     		.2byte	0x22b
 11048 2186 B9200000 		.4byte	.LASF413
 11049 218a C0020000 		.4byte	0x2c0
 11050 218e 01       		.byte	0x1
 11051 218f A4210000 		.4byte	0x21a4
 11052 2193 2C       		.uleb128 0x2c
 11053 2194 C3220000 		.4byte	0x22c3
 11054 2198 01       		.byte	0x1
 11055 2199 16       		.uleb128 0x16
 11056 219a 9B090000 		.4byte	0x99b
 11057 219e 16       		.uleb128 0x16
 11058 219f C0020000 		.4byte	0x2c0
 11059 21a3 00       		.byte	0x0
 11060 21a4 37       		.uleb128 0x37
 11061 21a5 01       		.byte	0x1
 11062 21a6 081E0000 		.4byte	.LASF414
ARM GAS  /tmp/ccNwMSzu.s 			page 229


 11063 21aa 17       		.byte	0x17
 11064 21ab 2C02     		.2byte	0x22c
 11065 21ad E50B0000 		.4byte	.LASF415
 11066 21b1 01       		.byte	0x1
 11067 21b2 BD210000 		.4byte	0x21bd
 11068 21b6 2C       		.uleb128 0x2c
 11069 21b7 C3220000 		.4byte	0x22c3
 11070 21bb 01       		.byte	0x1
 11071 21bc 00       		.byte	0x0
 11072 21bd 39       		.uleb128 0x39
 11073 21be 01       		.byte	0x1
 11074 21bf 631A0000 		.4byte	.LASF416
 11075 21c3 17       		.byte	0x17
 11076 21c4 2D02     		.2byte	0x22d
 11077 21c6 CC080000 		.4byte	.LASF417
 11078 21ca A1090000 		.4byte	0x9a1
 11079 21ce 01       		.byte	0x1
 11080 21cf DF210000 		.4byte	0x21df
 11081 21d3 2C       		.uleb128 0x2c
 11082 21d4 C3220000 		.4byte	0x22c3
 11083 21d8 01       		.byte	0x1
 11084 21d9 16       		.uleb128 0x16
 11085 21da C0020000 		.4byte	0x2c0
 11086 21de 00       		.byte	0x0
 11087 21df 39       		.uleb128 0x39
 11088 21e0 01       		.byte	0x1
 11089 21e1 C0000000 		.4byte	.LASF418
 11090 21e5 17       		.byte	0x17
 11091 21e6 2E02     		.2byte	0x22e
 11092 21e8 830E0000 		.4byte	.LASF419
 11093 21ec C0020000 		.4byte	0x2c0
 11094 21f0 01       		.byte	0x1
 11095 21f1 01220000 		.4byte	0x2201
 11096 21f5 2C       		.uleb128 0x2c
 11097 21f6 C3220000 		.4byte	0x22c3
 11098 21fa 01       		.byte	0x1
 11099 21fb 16       		.uleb128 0x16
 11100 21fc 9B090000 		.4byte	0x99b
 11101 2200 00       		.byte	0x0
 11102 2201 39       		.uleb128 0x39
 11103 2202 01       		.byte	0x1
 11104 2203 F3070000 		.4byte	.LASF420
 11105 2207 17       		.byte	0x17
 11106 2208 B802     		.2byte	0x2b8
 11107 220a 351C0000 		.4byte	.LASF421
 11108 220e 71220000 		.4byte	0x2271
 11109 2212 01       		.byte	0x1
 11110 2213 32220000 		.4byte	0x2232
 11111 2217 2C       		.uleb128 0x2c
 11112 2218 C3220000 		.4byte	0x22c3
 11113 221c 01       		.byte	0x1
 11114 221d 16       		.uleb128 0x16
 11115 221e F1170000 		.4byte	0x17f1
 11116 2222 16       		.uleb128 0x16
 11117 2223 0C180000 		.4byte	0x180c
 11118 2227 16       		.uleb128 0x16
 11119 2228 27180000 		.4byte	0x1827
ARM GAS  /tmp/ccNwMSzu.s 			page 230


 11120 222c 16       		.uleb128 0x16
 11121 222d 3B000000 		.4byte	0x3b
 11122 2231 00       		.byte	0x0
 11123 2232 3A       		.uleb128 0x3a
 11124 2233 01       		.byte	0x1
 11125 2234 9D010000 		.4byte	.LASF422
 11126 2238 17       		.byte	0x17
 11127 2239 B902     		.2byte	0x2b9
 11128 223b D9010000 		.4byte	.LASF423
 11129 223f 4D000000 		.4byte	0x4d
 11130 2243 01       		.byte	0x1
 11131 2244 2C       		.uleb128 0x2c
 11132 2245 C3220000 		.4byte	0x22c3
 11133 2249 01       		.byte	0x1
 11134 224a 16       		.uleb128 0x16
 11135 224b 71220000 		.4byte	0x2271
 11136 224f 00       		.byte	0x0
 11137 2250 00       		.byte	0x0
 11138 2251 0D       		.uleb128 0xd
 11139 2252 58000000 		.4byte	0x58
 11140 2256 61220000 		.4byte	0x2261
 11141 225a 0E       		.uleb128 0xe
 11142 225b B9020000 		.4byte	0x2b9
 11143 225f 05       		.byte	0x5
 11144 2260 00       		.byte	0x0
 11145 2261 0D       		.uleb128 0xd
 11146 2262 A1090000 		.4byte	0x9a1
 11147 2266 71220000 		.4byte	0x2271
 11148 226a 0E       		.uleb128 0xe
 11149 226b B9020000 		.4byte	0x2b9
 11150 226f 1F       		.byte	0x1f
 11151 2270 00       		.byte	0x0
 11152 2271 12       		.uleb128 0x12
 11153 2272 04       		.byte	0x4
 11154 2273 E4170000 		.4byte	0x17e4
 11155 2277 12       		.uleb128 0x12
 11156 2278 04       		.byte	0x4
 11157 2279 B8170000 		.4byte	0x17b8
 11158 227d 3B       		.uleb128 0x3b
 11159 227e 08       		.byte	0x8
 11160 227f 0E       		.byte	0xe
 11161 2280 00       		.byte	0x0
 11162 2281 A4220000 		.4byte	0x22a4
 11163 2285 1A       		.uleb128 0x1a
 11164 2286 5B220000 		.4byte	.LASF424
 11165 228a 17       		.byte	0x17
 11166 228b 6702     		.2byte	0x267
 11167 228d C9220000 		.4byte	0x22c9
 11168 2291 02       		.byte	0x2
 11169 2292 23       		.byte	0x23
 11170 2293 00       		.uleb128 0x0
 11171 2294 1A       		.uleb128 0x1a
 11172 2295 7C020000 		.4byte	.LASF425
 11173 2299 17       		.byte	0x17
 11174 229a 6702     		.2byte	0x267
 11175 229c C0020000 		.4byte	0x2c0
 11176 22a0 02       		.byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 231


 11177 22a1 23       		.byte	0x23
 11178 22a2 04       		.uleb128 0x4
 11179 22a3 00       		.byte	0x0
 11180 22a4 15       		.uleb128 0x15
 11181 22a5 4D000000 		.4byte	0x4d
 11182 22a9 C3220000 		.4byte	0x22c3
 11183 22ad 2C       		.uleb128 0x2c
 11184 22ae C3220000 		.4byte	0x22c3
 11185 22b2 01       		.byte	0x1
 11186 22b3 16       		.uleb128 0x16
 11187 22b4 95000000 		.4byte	0x95
 11188 22b8 16       		.uleb128 0x16
 11189 22b9 96130000 		.4byte	0x1396
 11190 22bd 16       		.uleb128 0x16
 11191 22be 71000000 		.4byte	0x71
 11192 22c2 00       		.byte	0x0
 11193 22c3 12       		.uleb128 0x12
 11194 22c4 04       		.byte	0x4
 11195 22c5 26160000 		.4byte	0x1626
 11196 22c9 12       		.uleb128 0x12
 11197 22ca 04       		.byte	0x4
 11198 22cb A4220000 		.4byte	0x22a4
 11199 22cf 3B       		.uleb128 0x3b
 11200 22d0 08       		.byte	0x8
 11201 22d1 0E       		.byte	0xe
 11202 22d2 00       		.byte	0x0
 11203 22d3 F6220000 		.4byte	0x22f6
 11204 22d7 1A       		.uleb128 0x1a
 11205 22d8 5B220000 		.4byte	.LASF424
 11206 22dc 17       		.byte	0x17
 11207 22dd 8302     		.2byte	0x283
 11208 22df 7A230000 		.4byte	0x237a
 11209 22e3 02       		.byte	0x2
 11210 22e4 23       		.byte	0x23
 11211 22e5 00       		.uleb128 0x0
 11212 22e6 1A       		.uleb128 0x1a
 11213 22e7 7C020000 		.4byte	.LASF425
 11214 22eb 17       		.byte	0x17
 11215 22ec 8302     		.2byte	0x283
 11216 22ee C0020000 		.4byte	0x2c0
 11217 22f2 02       		.byte	0x2
 11218 22f3 23       		.byte	0x23
 11219 22f4 04       		.uleb128 0x4
 11220 22f5 00       		.byte	0x0
 11221 22f6 15       		.uleb128 0x15
 11222 22f7 4D000000 		.4byte	0x4d
 11223 22fb 30230000 		.4byte	0x2330
 11224 22ff 2C       		.uleb128 0x2c
 11225 2300 C3220000 		.4byte	0x22c3
 11226 2304 01       		.byte	0x1
 11227 2305 16       		.uleb128 0x16
 11228 2306 95000000 		.4byte	0x95
 11229 230a 16       		.uleb128 0x16
 11230 230b 96130000 		.4byte	0x1396
 11231 230f 16       		.uleb128 0x16
 11232 2310 71000000 		.4byte	0x71
 11233 2314 16       		.uleb128 0x16
ARM GAS  /tmp/ccNwMSzu.s 			page 232


 11234 2315 71000000 		.4byte	0x71
 11235 2319 16       		.uleb128 0x16
 11236 231a 1E230000 		.4byte	0x231e
 11237 231e 08       		.uleb128 0x8
 11238 231f 25040000 		.4byte	.LASF426
 11239 2323 17       		.byte	0x17
 11240 2324 7002     		.2byte	0x270
 11241 2326 30230000 		.4byte	0x2330
 11242 232a 16       		.uleb128 0x16
 11243 232b 4C030000 		.4byte	0x34c
 11244 232f 00       		.byte	0x0
 11245 2330 3B       		.uleb128 0x3b
 11246 2331 08       		.byte	0x8
 11247 2332 0E       		.byte	0xe
 11248 2333 00       		.byte	0x0
 11249 2334 55230000 		.4byte	0x2355
 11250 2338 0C       		.uleb128 0xc
 11251 2339 5B220000 		.4byte	.LASF424
 11252 233d 17       		.byte	0x17
 11253 233e 8D       		.byte	0x8d
 11254 233f 74230000 		.4byte	0x2374
 11255 2343 02       		.byte	0x2
 11256 2344 23       		.byte	0x23
 11257 2345 00       		.uleb128 0x0
 11258 2346 0C       		.uleb128 0xc
 11259 2347 7C020000 		.4byte	.LASF425
 11260 234b 17       		.byte	0x17
 11261 234c 8D       		.byte	0x8d
 11262 234d C0020000 		.4byte	0x2c0
 11263 2351 02       		.byte	0x2
 11264 2352 23       		.byte	0x23
 11265 2353 04       		.uleb128 0x4
 11266 2354 00       		.byte	0x0
 11267 2355 15       		.uleb128 0x15
 11268 2356 4D000000 		.4byte	0x4d
 11269 235a 74230000 		.4byte	0x2374
 11270 235e 2C       		.uleb128 0x2c
 11271 235f C3220000 		.4byte	0x22c3
 11272 2363 01       		.byte	0x1
 11273 2364 16       		.uleb128 0x16
 11274 2365 96130000 		.4byte	0x1396
 11275 2369 16       		.uleb128 0x16
 11276 236a 95000000 		.4byte	0x95
 11277 236e 16       		.uleb128 0x16
 11278 236f 4C030000 		.4byte	0x34c
 11279 2373 00       		.byte	0x0
 11280 2374 12       		.uleb128 0x12
 11281 2375 04       		.byte	0x4
 11282 2376 55230000 		.4byte	0x2355
 11283 237a 12       		.uleb128 0x12
 11284 237b 04       		.byte	0x4
 11285 237c F6220000 		.4byte	0x22f6
 11286 2380 3B       		.uleb128 0x3b
 11287 2381 08       		.byte	0x8
 11288 2382 0E       		.byte	0xe
 11289 2383 00       		.byte	0x0
 11290 2384 A7230000 		.4byte	0x23a7
ARM GAS  /tmp/ccNwMSzu.s 			page 233


 11291 2388 1A       		.uleb128 0x1a
 11292 2389 5B220000 		.4byte	.LASF424
 11293 238d 17       		.byte	0x17
 11294 238e 8B02     		.2byte	0x28b
 11295 2390 C6230000 		.4byte	0x23c6
 11296 2394 02       		.byte	0x2
 11297 2395 23       		.byte	0x23
 11298 2396 00       		.uleb128 0x0
 11299 2397 1A       		.uleb128 0x1a
 11300 2398 7C020000 		.4byte	.LASF425
 11301 239c 17       		.byte	0x17
 11302 239d 8B02     		.2byte	0x28b
 11303 239f C0020000 		.4byte	0x2c0
 11304 23a3 02       		.byte	0x2
 11305 23a4 23       		.byte	0x23
 11306 23a5 04       		.uleb128 0x4
 11307 23a6 00       		.byte	0x0
 11308 23a7 15       		.uleb128 0x15
 11309 23a8 4D000000 		.4byte	0x4d
 11310 23ac C6230000 		.4byte	0x23c6
 11311 23b0 2C       		.uleb128 0x2c
 11312 23b1 C3220000 		.4byte	0x22c3
 11313 23b5 01       		.byte	0x1
 11314 23b6 16       		.uleb128 0x16
 11315 23b7 95000000 		.4byte	0x95
 11316 23bb 16       		.uleb128 0x16
 11317 23bc 8B130000 		.4byte	0x138b
 11318 23c0 16       		.uleb128 0x16
 11319 23c1 71000000 		.4byte	0x71
 11320 23c5 00       		.byte	0x0
 11321 23c6 12       		.uleb128 0x12
 11322 23c7 04       		.byte	0x4
 11323 23c8 A7230000 		.4byte	0x23a7
 11324 23cc 0D       		.uleb128 0xd
 11325 23cd 58000000 		.4byte	0x58
 11326 23d1 DD230000 		.4byte	0x23dd
 11327 23d5 3C       		.uleb128 0x3c
 11328 23d6 B9020000 		.4byte	0x2b9
 11329 23da FF01     		.2byte	0x1ff
 11330 23dc 00       		.byte	0x0
 11331 23dd 12       		.uleb128 0x12
 11332 23de 04       		.byte	0x4
 11333 23df B9180000 		.4byte	0x18b9
 11334 23e3 12       		.uleb128 0x12
 11335 23e4 04       		.byte	0x4
 11336 23e5 70180000 		.4byte	0x1870
 11337 23e9 12       		.uleb128 0x12
 11338 23ea 04       		.byte	0x4
 11339 23eb 26160000 		.4byte	0x1626
 11340 23ef 12       		.uleb128 0x12
 11341 23f0 04       		.byte	0x4
 11342 23f1 F5230000 		.4byte	0x23f5
 11343 23f5 1C       		.uleb128 0x1c
 11344 23f6 58000000 		.4byte	0x58
 11345 23fa 12       		.uleb128 0x12
 11346 23fb 04       		.byte	0x4
 11347 23fc 33160000 		.4byte	0x1633
ARM GAS  /tmp/ccNwMSzu.s 			page 234


 11348 2400 12       		.uleb128 0x12
 11349 2401 04       		.byte	0x4
 11350 2402 06240000 		.4byte	0x2406
 11351 2406 1C       		.uleb128 0x1c
 11352 2407 E8160000 		.4byte	0x16e8
 11353 240b 12       		.uleb128 0x12
 11354 240c 04       		.byte	0x4
 11355 240d 83000000 		.4byte	0x83
 11356 2411 12       		.uleb128 0x12
 11357 2412 04       		.byte	0x4
 11358 2413 E8160000 		.4byte	0x16e8
 11359 2417 12       		.uleb128 0x12
 11360 2418 04       		.byte	0x4
 11361 2419 1D240000 		.4byte	0x241d
 11362 241d 1C       		.uleb128 0x1c
 11363 241e B8170000 		.4byte	0x17b8
 11364 2422 3D       		.uleb128 0x3d
 11365 2423 F0190000 		.4byte	0x19f0
 11366 2427 01       		.byte	0x1
 11367 2428 44       		.byte	0x44
 11368 2429 00000000 		.4byte	.LFB109
 11369 242d 10000000 		.4byte	.LFE109
 11370 2431 02       		.byte	0x2
 11371 2432 7D       		.byte	0x7d
 11372 2433 00       		.sleb128 0
 11373 2434 3E       		.uleb128 0x3e
 11374 2435 A61B0000 		.4byte	0x1ba6
 11375 2439 01       		.byte	0x1
 11376 243a 60       		.byte	0x60
 11377 243b 00000000 		.4byte	.LFB110
 11378 243f FC000000 		.4byte	.LFE110
 11379 2443 00000000 		.4byte	.LLST0
 11380 2447 8C240000 		.4byte	0x248c
 11381 244b 3F       		.uleb128 0x3f
 11382 244c 3F0E0000 		.4byte	.LASF428
 11383 2450 8C240000 		.4byte	0x248c
 11384 2454 01       		.byte	0x1
 11385 2455 02       		.byte	0x2
 11386 2456 91       		.byte	0x91
 11387 2457 6C       		.sleb128 -20
 11388 2458 40       		.uleb128 0x40
 11389 2459 070B0000 		.4byte	.LASF278
 11390 245d 01       		.byte	0x1
 11391 245e 60       		.byte	0x60
 11392 245f 71220000 		.4byte	0x2271
 11393 2463 02       		.byte	0x2
 11394 2464 91       		.byte	0x91
 11395 2465 68       		.sleb128 -24
 11396 2466 41       		.uleb128 0x41
 11397 2467 10000000 		.4byte	.LBB2
 11398 246b E4000000 		.4byte	.LBE2
 11399 246f 42       		.uleb128 0x42
 11400 2470 750C0000 		.4byte	.LASF427
 11401 2474 01       		.byte	0x1
 11402 2475 62       		.byte	0x62
 11403 2476 1A160000 		.4byte	0x161a
 11404 247a 02       		.byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 235


 11405 247b 91       		.byte	0x91
 11406 247c 74       		.sleb128 -12
 11407 247d 43       		.uleb128 0x43
 11408 247e 667300   		.ascii	"fs\000"
 11409 2481 01       		.byte	0x1
 11410 2482 6C       		.byte	0x6c
 11411 2483 77220000 		.4byte	0x2277
 11412 2487 02       		.byte	0x2
 11413 2488 91       		.byte	0x91
 11414 2489 70       		.sleb128 -16
 11415 248a 00       		.byte	0x0
 11416 248b 00       		.byte	0x0
 11417 248c 1C       		.uleb128 0x1c
 11418 248d C3220000 		.4byte	0x22c3
 11419 2491 3E       		.uleb128 0x3e
 11420 2492 C81B0000 		.4byte	0x1bc8
 11421 2496 01       		.byte	0x1
 11422 2497 89       		.byte	0x89
 11423 2498 00000000 		.4byte	.LFB111
 11424 249c 38000000 		.4byte	.LFE111
 11425 24a0 2C000000 		.4byte	.LLST1
 11426 24a4 C3240000 		.4byte	0x24c3
 11427 24a8 3F       		.uleb128 0x3f
 11428 24a9 3F0E0000 		.4byte	.LASF428
 11429 24ad 8C240000 		.4byte	0x248c
 11430 24b1 01       		.byte	0x1
 11431 24b2 02       		.byte	0x2
 11432 24b3 91       		.byte	0x91
 11433 24b4 74       		.sleb128 -12
 11434 24b5 44       		.uleb128 0x44
 11435 24b6 667300   		.ascii	"fs\000"
 11436 24b9 01       		.byte	0x1
 11437 24ba 89       		.byte	0x89
 11438 24bb 77220000 		.4byte	0x2277
 11439 24bf 02       		.byte	0x2
 11440 24c0 91       		.byte	0x91
 11441 24c1 70       		.sleb128 -16
 11442 24c2 00       		.byte	0x0
 11443 24c3 3E       		.uleb128 0x3e
 11444 24c4 CD1E0000 		.4byte	0x1ecd
 11445 24c8 01       		.byte	0x1
 11446 24c9 98       		.byte	0x98
 11447 24ca 00000000 		.4byte	.LFB112
 11448 24ce E4030000 		.4byte	.LFE112
 11449 24d2 58000000 		.4byte	.LLST2
 11450 24d6 D4250000 		.4byte	0x25d4
 11451 24da 3F       		.uleb128 0x3f
 11452 24db 3F0E0000 		.4byte	.LASF428
 11453 24df 8C240000 		.4byte	0x248c
 11454 24e3 01       		.byte	0x1
 11455 24e4 03       		.byte	0x3
 11456 24e5 91       		.byte	0x91
 11457 24e6 AC7F     		.sleb128 -84
 11458 24e8 44       		.uleb128 0x44
 11459 24e9 667300   		.ascii	"fs\000"
 11460 24ec 01       		.byte	0x1
 11461 24ed 98       		.byte	0x98
ARM GAS  /tmp/ccNwMSzu.s 			page 236


 11462 24ee 77220000 		.4byte	0x2277
 11463 24f2 03       		.byte	0x3
 11464 24f3 91       		.byte	0x91
 11465 24f4 A87F     		.sleb128 -88
 11466 24f6 41       		.uleb128 0x41
 11467 24f7 10000000 		.4byte	.LBB3
 11468 24fb C8030000 		.4byte	.LBE3
 11469 24ff 42       		.uleb128 0x42
 11470 2500 750C0000 		.4byte	.LASF427
 11471 2504 01       		.byte	0x1
 11472 2505 9A       		.byte	0x9a
 11473 2506 1A160000 		.4byte	0x161a
 11474 250a 02       		.byte	0x2
 11475 250b 91       		.byte	0x91
 11476 250c 70       		.sleb128 -16
 11477 250d 42       		.uleb128 0x42
 11478 250e 070B0000 		.4byte	.LASF278
 11479 2512 01       		.byte	0x1
 11480 2513 9E       		.byte	0x9e
 11481 2514 71220000 		.4byte	0x2271
 11482 2518 02       		.byte	0x2
 11483 2519 91       		.byte	0x91
 11484 251a 6C       		.sleb128 -20
 11485 251b 42       		.uleb128 0x42
 11486 251c F5170000 		.4byte	.LASF215
 11487 2520 01       		.byte	0x1
 11488 2521 A6       		.byte	0xa6
 11489 2522 D4250000 		.4byte	0x25d4
 11490 2526 03       		.byte	0x3
 11491 2527 91       		.byte	0x91
 11492 2528 B07F     		.sleb128 -80
 11493 252a 42       		.uleb128 0x42
 11494 252b 9D220000 		.4byte	.LASF429
 11495 252f 01       		.byte	0x1
 11496 2530 A7       		.byte	0xa7
 11497 2531 95000000 		.4byte	0x95
 11498 2535 02       		.byte	0x2
 11499 2536 91       		.byte	0x91
 11500 2537 68       		.sleb128 -24
 11501 2538 42       		.uleb128 0x42
 11502 2539 5F120000 		.4byte	.LASF430
 11503 253d 01       		.byte	0x1
 11504 253e AC       		.byte	0xac
 11505 253f 71000000 		.4byte	0x71
 11506 2543 02       		.byte	0x2
 11507 2544 91       		.byte	0x91
 11508 2545 66       		.sleb128 -26
 11509 2546 42       		.uleb128 0x42
 11510 2547 7B0A0000 		.4byte	.LASF431
 11511 254b 01       		.byte	0x1
 11512 254c AE       		.byte	0xae
 11513 254d 4D000000 		.4byte	0x4d
 11514 2551 02       		.byte	0x2
 11515 2552 91       		.byte	0x91
 11516 2553 65       		.sleb128 -27
 11517 2554 42       		.uleb128 0x42
 11518 2555 BE010000 		.4byte	.LASF432
ARM GAS  /tmp/ccNwMSzu.s 			page 237


 11519 2559 01       		.byte	0x1
 11520 255a AF       		.byte	0xaf
 11521 255b 71000000 		.4byte	0x71
 11522 255f 02       		.byte	0x2
 11523 2560 91       		.byte	0x91
 11524 2561 62       		.sleb128 -30
 11525 2562 42       		.uleb128 0x42
 11526 2563 DC040000 		.4byte	.LASF433
 11527 2567 01       		.byte	0x1
 11528 2568 B1       		.byte	0xb1
 11529 2569 4D000000 		.4byte	0x4d
 11530 256d 02       		.byte	0x2
 11531 256e 91       		.byte	0x91
 11532 256f 61       		.sleb128 -31
 11533 2570 42       		.uleb128 0x42
 11534 2571 6C0D0000 		.4byte	.LASF434
 11535 2575 01       		.byte	0x1
 11536 2576 B2       		.byte	0xb2
 11537 2577 71000000 		.4byte	0x71
 11538 257b 02       		.byte	0x2
 11539 257c 91       		.byte	0x91
 11540 257d 5E       		.sleb128 -34
 11541 257e 42       		.uleb128 0x42
 11542 257f B51B0000 		.4byte	.LASF435
 11543 2583 01       		.byte	0x1
 11544 2584 B4       		.byte	0xb4
 11545 2585 71000000 		.4byte	0x71
 11546 2589 02       		.byte	0x2
 11547 258a 91       		.byte	0x91
 11548 258b 5C       		.sleb128 -36
 11549 258c 42       		.uleb128 0x42
 11550 258d B0050000 		.4byte	.LASF436
 11551 2591 01       		.byte	0x1
 11552 2592 B6       		.byte	0xb6
 11553 2593 71000000 		.4byte	0x71
 11554 2597 02       		.byte	0x2
 11555 2598 91       		.byte	0x91
 11556 2599 5A       		.sleb128 -38
 11557 259a 42       		.uleb128 0x42
 11558 259b 1E070000 		.4byte	.LASF437
 11559 259f 01       		.byte	0x1
 11560 25a0 B8       		.byte	0xb8
 11561 25a1 95000000 		.4byte	0x95
 11562 25a5 02       		.byte	0x2
 11563 25a6 91       		.byte	0x91
 11564 25a7 74       		.sleb128 -12
 11565 25a8 42       		.uleb128 0x42
 11566 25a9 860C0000 		.4byte	.LASF438
 11567 25ad 01       		.byte	0x1
 11568 25ae CB       		.byte	0xcb
 11569 25af 95000000 		.4byte	0x95
 11570 25b3 02       		.byte	0x2
 11571 25b4 91       		.byte	0x91
 11572 25b5 54       		.sleb128 -44
 11573 25b6 42       		.uleb128 0x42
 11574 25b7 281F0000 		.4byte	.LASF439
 11575 25bb 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 238


 11576 25bc CF       		.byte	0xcf
 11577 25bd 95000000 		.4byte	0x95
 11578 25c1 02       		.byte	0x2
 11579 25c2 91       		.byte	0x91
 11580 25c3 50       		.sleb128 -48
 11581 25c4 42       		.uleb128 0x42
 11582 25c5 DF1F0000 		.4byte	.LASF279
 11583 25c9 01       		.byte	0x1
 11584 25ca D7       		.byte	0xd7
 11585 25cb E4250000 		.4byte	0x25e4
 11586 25cf 02       		.byte	0x2
 11587 25d0 91       		.byte	0x91
 11588 25d1 4C       		.sleb128 -52
 11589 25d2 00       		.byte	0x0
 11590 25d3 00       		.byte	0x0
 11591 25d4 0D       		.uleb128 0xd
 11592 25d5 58000000 		.4byte	0x58
 11593 25d9 E4250000 		.4byte	0x25e4
 11594 25dd 0E       		.uleb128 0xe
 11595 25de B9020000 		.4byte	0x2b9
 11596 25e2 18       		.byte	0x18
 11597 25e3 00       		.byte	0x0
 11598 25e4 12       		.uleb128 0x12
 11599 25e5 04       		.byte	0x4
 11600 25e6 41170000 		.4byte	0x1741
 11601 25ea 3E       		.uleb128 0x3e
 11602 25eb EF1E0000 		.4byte	0x1eef
 11603 25ef 01       		.byte	0x1
 11604 25f0 FC       		.byte	0xfc
 11605 25f1 00000000 		.4byte	.LFB113
 11606 25f5 84020000 		.4byte	.LFE113
 11607 25f9 85000000 		.4byte	.LLST3
 11608 25fd 83260000 		.4byte	0x2683
 11609 2601 3F       		.uleb128 0x3f
 11610 2602 3F0E0000 		.4byte	.LASF428
 11611 2606 8C240000 		.4byte	0x248c
 11612 260a 01       		.byte	0x1
 11613 260b 03       		.byte	0x3
 11614 260c 91       		.byte	0x91
 11615 260d AC7F     		.sleb128 -84
 11616 260f 44       		.uleb128 0x44
 11617 2610 667300   		.ascii	"fs\000"
 11618 2613 01       		.byte	0x1
 11619 2614 FC       		.byte	0xfc
 11620 2615 17240000 		.4byte	0x2417
 11621 2619 03       		.byte	0x3
 11622 261a 91       		.byte	0x91
 11623 261b A87F     		.sleb128 -88
 11624 261d 40       		.uleb128 0x40
 11625 261e 83040000 		.4byte	.LASF297
 11626 2622 01       		.byte	0x1
 11627 2623 FC       		.byte	0xfc
 11628 2624 71000000 		.4byte	0x71
 11629 2628 03       		.byte	0x3
 11630 2629 91       		.byte	0x91
 11631 262a A67F     		.sleb128 -90
 11632 262c 40       		.uleb128 0x40
ARM GAS  /tmp/ccNwMSzu.s 			page 239


 11633 262d B3090000 		.4byte	.LASF291
 11634 2631 01       		.byte	0x1
 11635 2632 FC       		.byte	0xfc
 11636 2633 11240000 		.4byte	0x2411
 11637 2637 03       		.byte	0x3
 11638 2638 91       		.byte	0x91
 11639 2639 A07F     		.sleb128 -96
 11640 263b 41       		.uleb128 0x41
 11641 263c 18000000 		.4byte	.LBB4
 11642 2640 6C020000 		.4byte	.LBE4
 11643 2644 45       		.uleb128 0x45
 11644 2645 DF1F0000 		.4byte	.LASF279
 11645 2649 01       		.byte	0x1
 11646 264a 0201     		.2byte	0x102
 11647 264c 83260000 		.4byte	0x2683
 11648 2650 02       		.byte	0x2
 11649 2651 91       		.byte	0x91
 11650 2652 74       		.sleb128 -12
 11651 2653 45       		.uleb128 0x45
 11652 2654 2E050000 		.4byte	.LASF284
 11653 2658 01       		.byte	0x1
 11654 2659 0301     		.2byte	0x103
 11655 265b 0C180000 		.4byte	0x180c
 11656 265f 02       		.byte	0x2
 11657 2660 91       		.byte	0x91
 11658 2661 5C       		.sleb128 -36
 11659 2662 45       		.uleb128 0x45
 11660 2663 F5170000 		.4byte	.LASF215
 11661 2667 01       		.byte	0x1
 11662 2668 0401     		.2byte	0x104
 11663 266a 7B130000 		.4byte	0x137b
 11664 266e 03       		.byte	0x3
 11665 266f 91       		.byte	0x91
 11666 2670 B07F     		.sleb128 -80
 11667 2672 46       		.uleb128 0x46
 11668 2673 61726700 		.ascii	"arg\000"
 11669 2677 01       		.byte	0x1
 11670 2678 0701     		.2byte	0x107
 11671 267a F3180000 		.4byte	0x18f3
 11672 267e 02       		.byte	0x2
 11673 267f 91       		.byte	0x91
 11674 2680 50       		.sleb128 -48
 11675 2681 00       		.byte	0x0
 11676 2682 00       		.byte	0x0
 11677 2683 12       		.uleb128 0x12
 11678 2684 04       		.byte	0x4
 11679 2685 89260000 		.4byte	0x2689
 11680 2689 1C       		.uleb128 0x1c
 11681 268a 41170000 		.4byte	0x1741
 11682 268e 47       		.uleb128 0x47
 11683 268f 1B1F0000 		.4byte	0x1f1b
 11684 2693 01       		.byte	0x1
 11685 2694 2C01     		.2byte	0x12c
 11686 2696 00000000 		.4byte	.LFB114
 11687 269a 28030000 		.4byte	.LFE114
 11688 269e B2000000 		.4byte	.LLST4
 11689 26a2 49270000 		.4byte	0x2749
ARM GAS  /tmp/ccNwMSzu.s 			page 240


 11690 26a6 3F       		.uleb128 0x3f
 11691 26a7 3F0E0000 		.4byte	.LASF428
 11692 26ab 8C240000 		.4byte	0x248c
 11693 26af 01       		.byte	0x1
 11694 26b0 03       		.byte	0x3
 11695 26b1 91       		.byte	0x91
 11696 26b2 AC7F     		.sleb128 -84
 11697 26b4 48       		.uleb128 0x48
 11698 26b5 667300   		.ascii	"fs\000"
 11699 26b8 01       		.byte	0x1
 11700 26b9 2C01     		.2byte	0x12c
 11701 26bb 17240000 		.4byte	0x2417
 11702 26bf 03       		.byte	0x3
 11703 26c0 91       		.byte	0x91
 11704 26c1 A87F     		.sleb128 -88
 11705 26c3 49       		.uleb128 0x49
 11706 26c4 83040000 		.4byte	.LASF297
 11707 26c8 01       		.byte	0x1
 11708 26c9 2C01     		.2byte	0x12c
 11709 26cb 71000000 		.4byte	0x71
 11710 26cf 03       		.byte	0x3
 11711 26d0 91       		.byte	0x91
 11712 26d1 A67F     		.sleb128 -90
 11713 26d3 49       		.uleb128 0x49
 11714 26d4 AF1D0000 		.4byte	.LASF440
 11715 26d8 01       		.byte	0x1
 11716 26d9 2C01     		.2byte	0x12c
 11717 26db 00240000 		.4byte	0x2400
 11718 26df 03       		.byte	0x3
 11719 26e0 91       		.byte	0x91
 11720 26e1 A07F     		.sleb128 -96
 11721 26e3 49       		.uleb128 0x49
 11722 26e4 B3090000 		.4byte	.LASF291
 11723 26e8 01       		.byte	0x1
 11724 26e9 2C01     		.2byte	0x12c
 11725 26eb 11240000 		.4byte	0x2411
 11726 26ef 02       		.byte	0x2
 11727 26f0 91       		.byte	0x91
 11728 26f1 00       		.sleb128 0
 11729 26f2 41       		.uleb128 0x41
 11730 26f3 18000000 		.4byte	.LBB5
 11731 26f7 10030000 		.4byte	.LBE5
 11732 26fb 45       		.uleb128 0x45
 11733 26fc F5170000 		.4byte	.LASF215
 11734 2700 01       		.byte	0x1
 11735 2701 3601     		.2byte	0x136
 11736 2703 7B130000 		.4byte	0x137b
 11737 2707 03       		.byte	0x3
 11738 2708 91       		.byte	0x91
 11739 2709 B47F     		.sleb128 -76
 11740 270b 45       		.uleb128 0x45
 11741 270c 61220000 		.4byte	.LASF441
 11742 2710 01       		.byte	0x1
 11743 2711 3701     		.2byte	0x137
 11744 2713 95000000 		.4byte	0x95
 11745 2717 02       		.byte	0x2
 11746 2718 91       		.byte	0x91
ARM GAS  /tmp/ccNwMSzu.s 			page 241


 11747 2719 70       		.sleb128 -16
 11748 271a 45       		.uleb128 0x45
 11749 271b 091F0000 		.4byte	.LASF274
 11750 271f 01       		.byte	0x1
 11751 2720 3801     		.2byte	0x138
 11752 2722 71000000 		.4byte	0x71
 11753 2726 02       		.byte	0x2
 11754 2727 91       		.byte	0x91
 11755 2728 74       		.sleb128 -12
 11756 2729 45       		.uleb128 0x45
 11757 272a 7E170000 		.4byte	.LASF442
 11758 272e 01       		.byte	0x1
 11759 272f 3901     		.2byte	0x139
 11760 2731 71000000 		.4byte	0x71
 11761 2735 02       		.byte	0x2
 11762 2736 91       		.byte	0x91
 11763 2737 76       		.sleb128 -10
 11764 2738 46       		.uleb128 0x46
 11765 2739 61726700 		.ascii	"arg\000"
 11766 273d 01       		.byte	0x1
 11767 273e 3A01     		.2byte	0x13a
 11768 2740 F3180000 		.4byte	0x18f3
 11769 2744 02       		.byte	0x2
 11770 2745 91       		.byte	0x91
 11771 2746 54       		.sleb128 -44
 11772 2747 00       		.byte	0x0
 11773 2748 00       		.byte	0x0
 11774 2749 47       		.uleb128 0x47
 11775 274a 4C1F0000 		.4byte	0x1f4c
 11776 274e 01       		.byte	0x1
 11777 274f 6801     		.2byte	0x168
 11778 2751 00000000 		.4byte	.LFB115
 11779 2755 F0000000 		.4byte	.LFE115
 11780 2759 DF000000 		.4byte	.LLST5
 11781 275d B3270000 		.4byte	0x27b3
 11782 2761 3F       		.uleb128 0x3f
 11783 2762 3F0E0000 		.4byte	.LASF428
 11784 2766 8C240000 		.4byte	0x248c
 11785 276a 01       		.byte	0x1
 11786 276b 02       		.byte	0x2
 11787 276c 91       		.byte	0x91
 11788 276d 74       		.sleb128 -12
 11789 276e 49       		.uleb128 0x49
 11790 276f F5170000 		.4byte	.LASF215
 11791 2773 01       		.byte	0x1
 11792 2774 6801     		.2byte	0x168
 11793 2776 96130000 		.4byte	0x1396
 11794 277a 02       		.byte	0x2
 11795 277b 91       		.byte	0x91
 11796 277c 70       		.sleb128 -16
 11797 277d 49       		.uleb128 0x49
 11798 277e B61D0000 		.4byte	.LASF288
 11799 2782 01       		.byte	0x1
 11800 2783 6801     		.2byte	0x168
 11801 2785 95000000 		.4byte	0x95
 11802 2789 02       		.byte	0x2
 11803 278a 91       		.byte	0x91
ARM GAS  /tmp/ccNwMSzu.s 			page 242


 11804 278b 6C       		.sleb128 -20
 11805 278c 48       		.uleb128 0x48
 11806 278d 7000     		.ascii	"p\000"
 11807 278f 01       		.byte	0x1
 11808 2790 6801     		.2byte	0x168
 11809 2792 4C030000 		.4byte	0x34c
 11810 2796 02       		.byte	0x2
 11811 2797 91       		.byte	0x91
 11812 2798 68       		.sleb128 -24
 11813 2799 41       		.uleb128 0x41
 11814 279a 14000000 		.4byte	.LBB6
 11815 279e E4000000 		.4byte	.LBE6
 11816 27a2 46       		.uleb128 0x46
 11817 27a3 61726700 		.ascii	"arg\000"
 11818 27a7 01       		.byte	0x1
 11819 27a8 6A01     		.2byte	0x16a
 11820 27aa B3270000 		.4byte	0x27b3
 11821 27ae 02       		.byte	0x2
 11822 27af 91       		.byte	0x91
 11823 27b0 7C       		.sleb128 -4
 11824 27b1 00       		.byte	0x0
 11825 27b2 00       		.byte	0x0
 11826 27b3 12       		.uleb128 0x12
 11827 27b4 04       		.byte	0x4
 11828 27b5 F3180000 		.4byte	0x18f3
 11829 27b9 47       		.uleb128 0x47
 11830 27ba 781F0000 		.4byte	0x1f78
 11831 27be 01       		.byte	0x1
 11832 27bf 8401     		.2byte	0x184
 11833 27c1 00000000 		.4byte	.LFB116
 11834 27c5 BC000000 		.4byte	.LFE116
 11835 27c9 FF000000 		.4byte	.LLST6
 11836 27cd 23280000 		.4byte	0x2823
 11837 27d1 3F       		.uleb128 0x3f
 11838 27d2 3F0E0000 		.4byte	.LASF428
 11839 27d6 8C240000 		.4byte	0x248c
 11840 27da 01       		.byte	0x1
 11841 27db 02       		.byte	0x2
 11842 27dc 91       		.byte	0x91
 11843 27dd 6C       		.sleb128 -20
 11844 27de 49       		.uleb128 0x49
 11845 27df F5170000 		.4byte	.LASF215
 11846 27e3 01       		.byte	0x1
 11847 27e4 8401     		.2byte	0x184
 11848 27e6 96130000 		.4byte	0x1396
 11849 27ea 02       		.byte	0x2
 11850 27eb 91       		.byte	0x91
 11851 27ec 68       		.sleb128 -24
 11852 27ed 49       		.uleb128 0x49
 11853 27ee B61D0000 		.4byte	.LASF288
 11854 27f2 01       		.byte	0x1
 11855 27f3 8401     		.2byte	0x184
 11856 27f5 95000000 		.4byte	0x95
 11857 27f9 02       		.byte	0x2
 11858 27fa 91       		.byte	0x91
 11859 27fb 64       		.sleb128 -28
 11860 27fc 48       		.uleb128 0x48
ARM GAS  /tmp/ccNwMSzu.s 			page 243


 11861 27fd 7000     		.ascii	"p\000"
 11862 27ff 01       		.byte	0x1
 11863 2800 8401     		.2byte	0x184
 11864 2802 4C030000 		.4byte	0x34c
 11865 2806 02       		.byte	0x2
 11866 2807 91       		.byte	0x91
 11867 2808 60       		.sleb128 -32
 11868 2809 41       		.uleb128 0x41
 11869 280a 18000000 		.4byte	.LBB7
 11870 280e AC000000 		.4byte	.LBE7
 11871 2812 45       		.uleb128 0x45
 11872 2813 B3090000 		.4byte	.LASF291
 11873 2817 01       		.byte	0x1
 11874 2818 8601     		.2byte	0x186
 11875 281a 11240000 		.4byte	0x2411
 11876 281e 02       		.byte	0x2
 11877 281f 91       		.byte	0x91
 11878 2820 74       		.sleb128 -12
 11879 2821 00       		.byte	0x0
 11880 2822 00       		.byte	0x0
 11881 2823 47       		.uleb128 0x47
 11882 2824 A41F0000 		.4byte	0x1fa4
 11883 2828 01       		.byte	0x1
 11884 2829 AC01     		.2byte	0x1ac
 11885 282b 00000000 		.4byte	.LFB117
 11886 282f 48040000 		.4byte	.LFE117
 11887 2833 2B010000 		.4byte	.LLST7
 11888 2837 CB280000 		.4byte	0x28cb
 11889 283b 3F       		.uleb128 0x3f
 11890 283c 3F0E0000 		.4byte	.LASF428
 11891 2840 8C240000 		.4byte	0x248c
 11892 2844 01       		.byte	0x1
 11893 2845 02       		.byte	0x2
 11894 2846 91       		.byte	0x91
 11895 2847 6C       		.sleb128 -20
 11896 2848 49       		.uleb128 0x49
 11897 2849 B3090000 		.4byte	.LASF291
 11898 284d 01       		.byte	0x1
 11899 284e AC01     		.2byte	0x1ac
 11900 2850 11240000 		.4byte	0x2411
 11901 2854 02       		.byte	0x2
 11902 2855 91       		.byte	0x91
 11903 2856 68       		.sleb128 -24
 11904 2857 49       		.uleb128 0x49
 11905 2858 681B0000 		.4byte	.LASF443
 11906 285c 01       		.byte	0x1
 11907 285d AC01     		.2byte	0x1ac
 11908 285f 8B130000 		.4byte	0x138b
 11909 2863 02       		.byte	0x2
 11910 2864 91       		.byte	0x91
 11911 2865 64       		.sleb128 -28
 11912 2866 41       		.uleb128 0x41
 11913 2867 10000000 		.4byte	.LBB8
 11914 286b 3C040000 		.4byte	.LBE8
 11915 286f 45       		.uleb128 0x45
 11916 2870 F0220000 		.4byte	.LASF264
 11917 2874 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 244


 11918 2875 B101     		.2byte	0x1b1
 11919 2877 9B090000 		.4byte	0x99b
 11920 287b 02       		.byte	0x2
 11921 287c 91       		.byte	0x91
 11922 287d 78       		.sleb128 -8
 11923 287e 4A       		.uleb128 0x4a
 11924 287f 5C000000 		.4byte	.LBB10
 11925 2883 40020000 		.4byte	.LBE10
 11926 2887 9B280000 		.4byte	0x289b
 11927 288b 45       		.uleb128 0x45
 11928 288c A80A0000 		.4byte	.LASF444
 11929 2890 01       		.byte	0x1
 11930 2891 B401     		.2byte	0x1b4
 11931 2893 71000000 		.4byte	0x71
 11932 2897 02       		.byte	0x2
 11933 2898 91       		.byte	0x91
 11934 2899 76       		.sleb128 -10
 11935 289a 00       		.byte	0x0
 11936 289b 41       		.uleb128 0x41
 11937 289c 50020000 		.4byte	.LBB13
 11938 28a0 8C030000 		.4byte	.LBE13
 11939 28a4 46       		.uleb128 0x46
 11940 28a5 6900     		.ascii	"i\000"
 11941 28a7 01       		.byte	0x1
 11942 28a8 D201     		.2byte	0x1d2
 11943 28aa 4D000000 		.4byte	0x4d
 11944 28ae 02       		.byte	0x2
 11945 28af 91       		.byte	0x91
 11946 28b0 7F       		.sleb128 -1
 11947 28b1 41       		.uleb128 0x41
 11948 28b2 D8020000 		.4byte	.LBB15
 11949 28b6 78030000 		.4byte	.LBE15
 11950 28ba 46       		.uleb128 0x46
 11951 28bb 6A00     		.ascii	"j\000"
 11952 28bd 01       		.byte	0x1
 11953 28be DD01     		.2byte	0x1dd
 11954 28c0 4D000000 		.4byte	0x4d
 11955 28c4 02       		.byte	0x2
 11956 28c5 91       		.byte	0x91
 11957 28c6 7E       		.sleb128 -2
 11958 28c7 00       		.byte	0x0
 11959 28c8 00       		.byte	0x0
 11960 28c9 00       		.byte	0x0
 11961 28ca 00       		.byte	0x0
 11962 28cb 47       		.uleb128 0x47
 11963 28cc DE1D0000 		.4byte	0x1dde
 11964 28d0 01       		.byte	0x1
 11965 28d1 0702     		.2byte	0x207
 11966 28d3 00000000 		.4byte	.LFB118
 11967 28d7 14020000 		.4byte	.LFE118
 11968 28db 4B010000 		.4byte	.LLST8
 11969 28df 4F290000 		.4byte	0x294f
 11970 28e3 3F       		.uleb128 0x3f
 11971 28e4 3F0E0000 		.4byte	.LASF428
 11972 28e8 8C240000 		.4byte	0x248c
 11973 28ec 01       		.byte	0x1
 11974 28ed 02       		.byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 245


 11975 28ee 91       		.byte	0x91
 11976 28ef 64       		.sleb128 -28
 11977 28f0 48       		.uleb128 0x48
 11978 28f1 667300   		.ascii	"fs\000"
 11979 28f4 01       		.byte	0x1
 11980 28f5 0702     		.2byte	0x207
 11981 28f7 77220000 		.4byte	0x2277
 11982 28fb 02       		.byte	0x2
 11983 28fc 91       		.byte	0x91
 11984 28fd 60       		.sleb128 -32
 11985 28fe 49       		.uleb128 0x49
 11986 28ff B3120000 		.4byte	.LASF445
 11987 2903 01       		.byte	0x1
 11988 2904 0702     		.2byte	0x207
 11989 2906 CC090000 		.4byte	0x9cc
 11990 290a 02       		.byte	0x2
 11991 290b 91       		.byte	0x91
 11992 290c 5C       		.sleb128 -36
 11993 290d 49       		.uleb128 0x49
 11994 290e B3090000 		.4byte	.LASF291
 11995 2912 01       		.byte	0x1
 11996 2913 0702     		.2byte	0x207
 11997 2915 11240000 		.4byte	0x2411
 11998 2919 02       		.byte	0x2
 11999 291a 91       		.byte	0x91
 12000 291b 58       		.sleb128 -40
 12001 291c 4B       		.uleb128 0x4b
 12002 291d 00000000 		.4byte	.Ldebug_ranges0+0x0
 12003 2921 46       		.uleb128 0x46
 12004 2922 646400   		.ascii	"dd\000"
 12005 2925 01       		.byte	0x1
 12006 2926 1802     		.2byte	0x218
 12007 2928 DD230000 		.4byte	0x23dd
 12008 292c 02       		.byte	0x2
 12009 292d 91       		.byte	0x91
 12010 292e 74       		.sleb128 -12
 12011 292f 45       		.uleb128 0x45
 12012 2930 9E180000 		.4byte	.LASF446
 12013 2934 01       		.byte	0x1
 12014 2935 1D02     		.2byte	0x21d
 12015 2937 CC090000 		.4byte	0x9cc
 12016 293b 02       		.byte	0x2
 12017 293c 91       		.byte	0x91
 12018 293d 70       		.sleb128 -16
 12019 293e 45       		.uleb128 0x45
 12020 293f B71C0000 		.4byte	.LASF447
 12021 2943 01       		.byte	0x1
 12022 2944 2002     		.2byte	0x220
 12023 2946 4D000000 		.4byte	0x4d
 12024 294a 02       		.byte	0x2
 12025 294b 91       		.byte	0x91
 12026 294c 6F       		.sleb128 -17
 12027 294d 00       		.byte	0x0
 12028 294e 00       		.byte	0x0
 12029 294f 47       		.uleb128 0x47
 12030 2950 CB1F0000 		.4byte	0x1fcb
 12031 2954 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 246


 12032 2955 4E02     		.2byte	0x24e
 12033 2957 00000000 		.4byte	.LFB119
 12034 295b A0010000 		.4byte	.LFE119
 12035 295f 77010000 		.4byte	.LLST9
 12036 2963 AB290000 		.4byte	0x29ab
 12037 2967 3F       		.uleb128 0x3f
 12038 2968 3F0E0000 		.4byte	.LASF428
 12039 296c 8C240000 		.4byte	0x248c
 12040 2970 01       		.byte	0x1
 12041 2971 02       		.byte	0x2
 12042 2972 91       		.byte	0x91
 12043 2973 6C       		.sleb128 -20
 12044 2974 48       		.uleb128 0x48
 12045 2975 667300   		.ascii	"fs\000"
 12046 2978 01       		.byte	0x1
 12047 2979 4E02     		.2byte	0x24e
 12048 297b 17240000 		.4byte	0x2417
 12049 297f 02       		.byte	0x2
 12050 2980 91       		.byte	0x91
 12051 2981 68       		.sleb128 -24
 12052 2982 49       		.uleb128 0x49
 12053 2983 7E170000 		.4byte	.LASF442
 12054 2987 01       		.byte	0x1
 12055 2988 4E02     		.2byte	0x24e
 12056 298a 71000000 		.4byte	0x71
 12057 298e 02       		.byte	0x2
 12058 298f 91       		.byte	0x91
 12059 2990 66       		.sleb128 -26
 12060 2991 41       		.uleb128 0x41
 12061 2992 18000000 		.4byte	.LBB19
 12062 2996 84010000 		.4byte	.LBE19
 12063 299a 45       		.uleb128 0x45
 12064 299b 44040000 		.4byte	.LASF448
 12065 299f 01       		.byte	0x1
 12066 29a0 5402     		.2byte	0x254
 12067 29a2 AB290000 		.4byte	0x29ab
 12068 29a6 02       		.byte	0x2
 12069 29a7 91       		.byte	0x91
 12070 29a8 74       		.sleb128 -12
 12071 29a9 00       		.byte	0x0
 12072 29aa 00       		.byte	0x0
 12073 29ab 0D       		.uleb128 0xd
 12074 29ac 58000000 		.4byte	0x58
 12075 29b0 BB290000 		.4byte	0x29bb
 12076 29b4 0E       		.uleb128 0xe
 12077 29b5 B9020000 		.4byte	0x2b9
 12078 29b9 01       		.byte	0x1
 12079 29ba 00       		.byte	0x0
 12080 29bb 47       		.uleb128 0x47
 12081 29bc F21F0000 		.4byte	0x1ff2
 12082 29c0 01       		.byte	0x1
 12083 29c1 7102     		.2byte	0x271
 12084 29c3 00000000 		.4byte	.LFB120
 12085 29c7 B0030000 		.4byte	.LFE120
 12086 29cb A3010000 		.4byte	.LLST10
 12087 29cf 8F2A0000 		.4byte	0x2a8f
 12088 29d3 3F       		.uleb128 0x3f
ARM GAS  /tmp/ccNwMSzu.s 			page 247


 12089 29d4 3F0E0000 		.4byte	.LASF428
 12090 29d8 8C240000 		.4byte	0x248c
 12091 29dc 01       		.byte	0x1
 12092 29dd 02       		.byte	0x2
 12093 29de 91       		.byte	0x91
 12094 29df 4C       		.sleb128 -52
 12095 29e0 48       		.uleb128 0x48
 12096 29e1 667300   		.ascii	"fs\000"
 12097 29e4 01       		.byte	0x1
 12098 29e5 7102     		.2byte	0x271
 12099 29e7 17240000 		.4byte	0x2417
 12100 29eb 02       		.byte	0x2
 12101 29ec 91       		.byte	0x91
 12102 29ed 48       		.sleb128 -56
 12103 29ee 49       		.uleb128 0x49
 12104 29ef 7E170000 		.4byte	.LASF442
 12105 29f3 01       		.byte	0x1
 12106 29f4 7102     		.2byte	0x271
 12107 29f6 71000000 		.4byte	0x71
 12108 29fa 02       		.byte	0x2
 12109 29fb 91       		.byte	0x91
 12110 29fc 46       		.sleb128 -58
 12111 29fd 49       		.uleb128 0x49
 12112 29fe A8110000 		.4byte	.LASF449
 12113 2a02 01       		.byte	0x1
 12114 2a03 7102     		.2byte	0x271
 12115 2a05 71000000 		.4byte	0x71
 12116 2a09 02       		.byte	0x2
 12117 2a0a 91       		.byte	0x91
 12118 2a0b 44       		.sleb128 -60
 12119 2a0c 41       		.uleb128 0x41
 12120 2a0d 18000000 		.4byte	.LBB20
 12121 2a11 A0030000 		.4byte	.LBE20
 12122 2a15 45       		.uleb128 0x45
 12123 2a16 0E140000 		.4byte	.LASF282
 12124 2a1a 01       		.byte	0x1
 12125 2a1b 7702     		.2byte	0x277
 12126 2a1d F1170000 		.4byte	0x17f1
 12127 2a21 02       		.byte	0x2
 12128 2a22 91       		.byte	0x91
 12129 2a23 60       		.sleb128 -32
 12130 2a24 45       		.uleb128 0x45
 12131 2a25 18050000 		.4byte	.LASF286
 12132 2a29 01       		.byte	0x1
 12133 2a2a 7802     		.2byte	0x278
 12134 2a2c 27180000 		.4byte	0x1827
 12135 2a30 02       		.byte	0x2
 12136 2a31 91       		.byte	0x91
 12137 2a32 58       		.sleb128 -40
 12138 2a33 45       		.uleb128 0x45
 12139 2a34 80010000 		.4byte	.LASF271
 12140 2a38 01       		.byte	0x1
 12141 2a39 7902     		.2byte	0x279
 12142 2a3b 95000000 		.4byte	0x95
 12143 2a3f 02       		.byte	0x2
 12144 2a40 91       		.byte	0x91
 12145 2a41 6C       		.sleb128 -20
ARM GAS  /tmp/ccNwMSzu.s 			page 248


 12146 2a42 45       		.uleb128 0x45
 12147 2a43 B8080000 		.4byte	.LASF450
 12148 2a47 01       		.byte	0x1
 12149 2a48 7A02     		.2byte	0x27a
 12150 2a4a 71000000 		.4byte	0x71
 12151 2a4e 02       		.byte	0x2
 12152 2a4f 91       		.byte	0x91
 12153 2a50 6A       		.sleb128 -22
 12154 2a51 45       		.uleb128 0x45
 12155 2a52 18010000 		.4byte	.LASF451
 12156 2a56 01       		.byte	0x1
 12157 2a57 7B02     		.2byte	0x27b
 12158 2a59 71000000 		.4byte	0x71
 12159 2a5d 02       		.byte	0x2
 12160 2a5e 91       		.byte	0x91
 12161 2a5f 76       		.sleb128 -10
 12162 2a60 45       		.uleb128 0x45
 12163 2a61 6E0B0000 		.4byte	.LASF452
 12164 2a65 01       		.byte	0x1
 12165 2a66 7C02     		.2byte	0x27c
 12166 2a68 71000000 		.4byte	0x71
 12167 2a6c 02       		.byte	0x2
 12168 2a6d 91       		.byte	0x91
 12169 2a6e 74       		.sleb128 -12
 12170 2a6f 45       		.uleb128 0x45
 12171 2a70 F5170000 		.4byte	.LASF215
 12172 2a74 01       		.byte	0x1
 12173 2a75 7D02     		.2byte	0x27d
 12174 2a77 AB290000 		.4byte	0x29ab
 12175 2a7b 02       		.byte	0x2
 12176 2a7c 91       		.byte	0x91
 12177 2a7d 54       		.sleb128 -44
 12178 2a7e 45       		.uleb128 0x45
 12179 2a7f B10D0000 		.4byte	.LASF453
 12180 2a83 01       		.byte	0x1
 12181 2a84 7E02     		.2byte	0x27e
 12182 2a86 71000000 		.4byte	0x71
 12183 2a8a 02       		.byte	0x2
 12184 2a8b 91       		.byte	0x91
 12185 2a8c 72       		.sleb128 -14
 12186 2a8d 00       		.byte	0x0
 12187 2a8e 00       		.byte	0x0
 12188 2a8f 47       		.uleb128 0x47
 12189 2a90 1E200000 		.4byte	0x201e
 12190 2a94 01       		.byte	0x1
 12191 2a95 CE02     		.2byte	0x2ce
 12192 2a97 00000000 		.4byte	.LFB121
 12193 2a9b 9C020000 		.4byte	.LFE121
 12194 2a9f D0010000 		.4byte	.LLST11
 12195 2aa3 132B0000 		.4byte	0x2b13
 12196 2aa7 3F       		.uleb128 0x3f
 12197 2aa8 3F0E0000 		.4byte	.LASF428
 12198 2aac 8C240000 		.4byte	0x248c
 12199 2ab0 01       		.byte	0x1
 12200 2ab1 02       		.byte	0x2
 12201 2ab2 91       		.byte	0x91
 12202 2ab3 64       		.sleb128 -28
ARM GAS  /tmp/ccNwMSzu.s 			page 249


 12203 2ab4 48       		.uleb128 0x48
 12204 2ab5 667300   		.ascii	"fs\000"
 12205 2ab8 01       		.byte	0x1
 12206 2ab9 CE02     		.2byte	0x2ce
 12207 2abb 17240000 		.4byte	0x2417
 12208 2abf 02       		.byte	0x2
 12209 2ac0 91       		.byte	0x91
 12210 2ac1 60       		.sleb128 -32
 12211 2ac2 49       		.uleb128 0x49
 12212 2ac3 7E170000 		.4byte	.LASF442
 12213 2ac7 01       		.byte	0x1
 12214 2ac8 CE02     		.2byte	0x2ce
 12215 2aca 71000000 		.4byte	0x71
 12216 2ace 02       		.byte	0x2
 12217 2acf 91       		.byte	0x91
 12218 2ad0 5E       		.sleb128 -34
 12219 2ad1 41       		.uleb128 0x41
 12220 2ad2 18000000 		.4byte	.LBB21
 12221 2ad6 80020000 		.4byte	.LBE21
 12222 2ada 45       		.uleb128 0x45
 12223 2adb 80010000 		.4byte	.LASF271
 12224 2adf 01       		.byte	0x1
 12225 2ae0 D402     		.2byte	0x2d4
 12226 2ae2 95000000 		.4byte	0x95
 12227 2ae6 02       		.byte	0x2
 12228 2ae7 91       		.byte	0x91
 12229 2ae8 70       		.sleb128 -16
 12230 2ae9 45       		.uleb128 0x45
 12231 2aea F5170000 		.4byte	.LASF215
 12232 2aee 01       		.byte	0x1
 12233 2aef D502     		.2byte	0x2d5
 12234 2af1 AB290000 		.4byte	0x29ab
 12235 2af5 02       		.byte	0x2
 12236 2af6 91       		.byte	0x91
 12237 2af7 6C       		.sleb128 -20
 12238 2af8 41       		.uleb128 0x41
 12239 2af9 48000000 		.4byte	.LBB22
 12240 2afd 60020000 		.4byte	.LBE22
 12241 2b01 45       		.uleb128 0x45
 12242 2b02 BB0B0000 		.4byte	.LASF454
 12243 2b06 01       		.byte	0x1
 12244 2b07 DC02     		.2byte	0x2dc
 12245 2b09 71000000 		.4byte	0x71
 12246 2b0d 02       		.byte	0x2
 12247 2b0e 91       		.byte	0x91
 12248 2b0f 76       		.sleb128 -10
 12249 2b10 00       		.byte	0x0
 12250 2b11 00       		.byte	0x0
 12251 2b12 00       		.byte	0x0
 12252 2b13 47       		.uleb128 0x47
 12253 2b14 45200000 		.4byte	0x2045
 12254 2b18 01       		.byte	0x1
 12255 2b19 0C03     		.2byte	0x30c
 12256 2b1b 00000000 		.4byte	.LFB122
 12257 2b1f 6C010000 		.4byte	.LFE122
 12258 2b23 FC010000 		.4byte	.LLST12
 12259 2b27 7E2B0000 		.4byte	0x2b7e
ARM GAS  /tmp/ccNwMSzu.s 			page 250


 12260 2b2b 3F       		.uleb128 0x3f
 12261 2b2c 3F0E0000 		.4byte	.LASF428
 12262 2b30 8C240000 		.4byte	0x248c
 12263 2b34 01       		.byte	0x1
 12264 2b35 02       		.byte	0x2
 12265 2b36 91       		.byte	0x91
 12266 2b37 6C       		.sleb128 -20
 12267 2b38 48       		.uleb128 0x48
 12268 2b39 667300   		.ascii	"fs\000"
 12269 2b3c 01       		.byte	0x1
 12270 2b3d 0C03     		.2byte	0x30c
 12271 2b3f 17240000 		.4byte	0x2417
 12272 2b43 02       		.byte	0x2
 12273 2b44 91       		.byte	0x91
 12274 2b45 68       		.sleb128 -24
 12275 2b46 49       		.uleb128 0x49
 12276 2b47 7E170000 		.4byte	.LASF442
 12277 2b4b 01       		.byte	0x1
 12278 2b4c 0C03     		.2byte	0x30c
 12279 2b4e 71000000 		.4byte	0x71
 12280 2b52 02       		.byte	0x2
 12281 2b53 91       		.byte	0x91
 12282 2b54 66       		.sleb128 -26
 12283 2b55 41       		.uleb128 0x41
 12284 2b56 18000000 		.4byte	.LBB23
 12285 2b5a 5C010000 		.4byte	.LBE23
 12286 2b5e 45       		.uleb128 0x45
 12287 2b5f BB0B0000 		.4byte	.LASF454
 12288 2b63 01       		.byte	0x1
 12289 2b64 1303     		.2byte	0x313
 12290 2b66 71000000 		.4byte	0x71
 12291 2b6a 02       		.byte	0x2
 12292 2b6b 91       		.byte	0x91
 12293 2b6c 76       		.sleb128 -10
 12294 2b6d 45       		.uleb128 0x45
 12295 2b6e F5170000 		.4byte	.LASF215
 12296 2b72 01       		.byte	0x1
 12297 2b73 1603     		.2byte	0x316
 12298 2b75 AB290000 		.4byte	0x29ab
 12299 2b79 02       		.byte	0x2
 12300 2b7a 91       		.byte	0x91
 12301 2b7b 74       		.sleb128 -12
 12302 2b7c 00       		.byte	0x0
 12303 2b7d 00       		.byte	0x0
 12304 2b7e 47       		.uleb128 0x47
 12305 2b7f E61B0000 		.4byte	0x1be6
 12306 2b83 01       		.byte	0x1
 12307 2b84 2F03     		.2byte	0x32f
 12308 2b86 00000000 		.4byte	.LFB123
 12309 2b8a C0000000 		.4byte	.LFE123
 12310 2b8e 28020000 		.4byte	.LLST13
 12311 2b92 D92B0000 		.4byte	0x2bd9
 12312 2b96 3F       		.uleb128 0x3f
 12313 2b97 3F0E0000 		.4byte	.LASF428
 12314 2b9b 8C240000 		.4byte	0x248c
 12315 2b9f 01       		.byte	0x1
 12316 2ba0 02       		.byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 251


 12317 2ba1 91       		.byte	0x91
 12318 2ba2 6C       		.sleb128 -20
 12319 2ba3 48       		.uleb128 0x48
 12320 2ba4 667300   		.ascii	"fs\000"
 12321 2ba7 01       		.byte	0x1
 12322 2ba8 2F03     		.2byte	0x32f
 12323 2baa 77220000 		.4byte	0x2277
 12324 2bae 02       		.byte	0x2
 12325 2baf 91       		.byte	0x91
 12326 2bb0 68       		.sleb128 -24
 12327 2bb1 49       		.uleb128 0x49
 12328 2bb2 B3090000 		.4byte	.LASF291
 12329 2bb6 01       		.byte	0x1
 12330 2bb7 2F03     		.2byte	0x32f
 12331 2bb9 00240000 		.4byte	0x2400
 12332 2bbd 02       		.byte	0x2
 12333 2bbe 91       		.byte	0x91
 12334 2bbf 64       		.sleb128 -28
 12335 2bc0 41       		.uleb128 0x41
 12336 2bc1 14000000 		.4byte	.LBB24
 12337 2bc5 B0000000 		.4byte	.LBE24
 12338 2bc9 46       		.uleb128 0x46
 12339 2bca 666400   		.ascii	"fd\000"
 12340 2bcd 01       		.byte	0x1
 12341 2bce 3403     		.2byte	0x334
 12342 2bd0 E3230000 		.4byte	0x23e3
 12343 2bd4 02       		.byte	0x2
 12344 2bd5 91       		.byte	0x91
 12345 2bd6 74       		.sleb128 -12
 12346 2bd7 00       		.byte	0x0
 12347 2bd8 00       		.byte	0x0
 12348 2bd9 47       		.uleb128 0x47
 12349 2bda 0D1C0000 		.4byte	0x1c0d
 12350 2bde 01       		.byte	0x1
 12351 2bdf 4703     		.2byte	0x347
 12352 2be1 00000000 		.4byte	.LFB124
 12353 2be5 30000000 		.4byte	.LFE124
 12354 2be9 54020000 		.4byte	.LLST14
 12355 2bed 0D2C0000 		.4byte	0x2c0d
 12356 2bf1 3F       		.uleb128 0x3f
 12357 2bf2 3F0E0000 		.4byte	.LASF428
 12358 2bf6 8C240000 		.4byte	0x248c
 12359 2bfa 01       		.byte	0x1
 12360 2bfb 02       		.byte	0x2
 12361 2bfc 91       		.byte	0x91
 12362 2bfd 74       		.sleb128 -12
 12363 2bfe 48       		.uleb128 0x48
 12364 2bff 666400   		.ascii	"fd\000"
 12365 2c02 01       		.byte	0x1
 12366 2c03 4703     		.2byte	0x347
 12367 2c05 E3230000 		.4byte	0x23e3
 12368 2c09 02       		.byte	0x2
 12369 2c0a 91       		.byte	0x91
 12370 2c0b 70       		.sleb128 -16
 12371 2c0c 00       		.byte	0x0
 12372 2c0d 47       		.uleb128 0x47
 12373 2c0e 2B1C0000 		.4byte	0x1c2b
ARM GAS  /tmp/ccNwMSzu.s 			page 252


 12374 2c12 01       		.byte	0x1
 12375 2c13 5903     		.2byte	0x359
 12376 2c15 00000000 		.4byte	.LFB125
 12377 2c19 F4030000 		.4byte	.LFE125
 12378 2c1d 80020000 		.4byte	.LLST15
 12379 2c21 EA2C0000 		.4byte	0x2cea
 12380 2c25 3F       		.uleb128 0x3f
 12381 2c26 3F0E0000 		.4byte	.LASF428
 12382 2c2a 8C240000 		.4byte	0x248c
 12383 2c2e 01       		.byte	0x1
 12384 2c2f 02       		.byte	0x2
 12385 2c30 91       		.byte	0x91
 12386 2c31 5C       		.sleb128 -36
 12387 2c32 48       		.uleb128 0x48
 12388 2c33 666400   		.ascii	"fd\000"
 12389 2c36 01       		.byte	0x1
 12390 2c37 5903     		.2byte	0x359
 12391 2c39 E3230000 		.4byte	0x23e3
 12392 2c3d 02       		.byte	0x2
 12393 2c3e 91       		.byte	0x91
 12394 2c3f 58       		.sleb128 -40
 12395 2c40 49       		.uleb128 0x49
 12396 2c41 F5170000 		.4byte	.LASF215
 12397 2c45 01       		.byte	0x1
 12398 2c46 5903     		.2byte	0x359
 12399 2c48 96130000 		.4byte	0x1396
 12400 2c4c 02       		.byte	0x2
 12401 2c4d 91       		.byte	0x91
 12402 2c4e 54       		.sleb128 -44
 12403 2c4f 49       		.uleb128 0x49
 12404 2c50 01050000 		.4byte	.LASF455
 12405 2c54 01       		.byte	0x1
 12406 2c55 5903     		.2byte	0x359
 12407 2c57 71000000 		.4byte	0x71
 12408 2c5b 02       		.byte	0x2
 12409 2c5c 91       		.byte	0x91
 12410 2c5d 52       		.sleb128 -46
 12411 2c5e 41       		.uleb128 0x41
 12412 2c5f 18000000 		.4byte	.LBB25
 12413 2c63 E0030000 		.4byte	.LBE25
 12414 2c67 45       		.uleb128 0x45
 12415 2c68 091F0000 		.4byte	.LASF274
 12416 2c6c 01       		.byte	0x1
 12417 2c6d 6503     		.2byte	0x365
 12418 2c6f 71000000 		.4byte	0x71
 12419 2c73 02       		.byte	0x2
 12420 2c74 91       		.byte	0x91
 12421 2c75 68       		.sleb128 -24
 12422 2c76 45       		.uleb128 0x45
 12423 2c77 7E170000 		.4byte	.LASF442
 12424 2c7b 01       		.byte	0x1
 12425 2c7c 6603     		.2byte	0x366
 12426 2c7e 71000000 		.4byte	0x71
 12427 2c82 02       		.byte	0x2
 12428 2c83 91       		.byte	0x91
 12429 2c84 76       		.sleb128 -10
 12430 2c85 45       		.uleb128 0x45
ARM GAS  /tmp/ccNwMSzu.s 			page 253


 12431 2c86 FD1B0000 		.4byte	.LASF456
 12432 2c8a 01       		.byte	0x1
 12433 2c8b 6703     		.2byte	0x367
 12434 2c8d 71000000 		.4byte	0x71
 12435 2c91 02       		.byte	0x2
 12436 2c92 91       		.byte	0x91
 12437 2c93 74       		.sleb128 -12
 12438 2c94 45       		.uleb128 0x45
 12439 2c95 821F0000 		.4byte	.LASF457
 12440 2c99 01       		.byte	0x1
 12441 2c9a 6803     		.2byte	0x368
 12442 2c9c 71000000 		.4byte	0x71
 12443 2ca0 02       		.byte	0x2
 12444 2ca1 91       		.byte	0x91
 12445 2ca2 72       		.sleb128 -14
 12446 2ca3 4A       		.uleb128 0x4a
 12447 2ca4 38010000 		.4byte	.LBB29
 12448 2ca8 B0010000 		.4byte	.LBE29
 12449 2cac C02C0000 		.4byte	0x2cc0
 12450 2cb0 46       		.uleb128 0x46
 12451 2cb1 706F7300 		.ascii	"pos\000"
 12452 2cb5 01       		.byte	0x1
 12453 2cb6 7903     		.2byte	0x379
 12454 2cb8 95000000 		.4byte	0x95
 12455 2cbc 02       		.byte	0x2
 12456 2cbd 91       		.byte	0x91
 12457 2cbe 6C       		.sleb128 -20
 12458 2cbf 00       		.byte	0x0
 12459 2cc0 41       		.uleb128 0x41
 12460 2cc1 B0010000 		.4byte	.LBB30
 12461 2cc5 B8030000 		.4byte	.LBE30
 12462 2cc9 45       		.uleb128 0x45
 12463 2cca 61220000 		.4byte	.LASF441
 12464 2cce 01       		.byte	0x1
 12465 2ccf 8803     		.2byte	0x388
 12466 2cd1 95000000 		.4byte	0x95
 12467 2cd5 02       		.byte	0x2
 12468 2cd6 91       		.byte	0x91
 12469 2cd7 64       		.sleb128 -28
 12470 2cd8 45       		.uleb128 0x45
 12471 2cd9 5F040000 		.4byte	.LASF458
 12472 2cdd 01       		.byte	0x1
 12473 2cde 8A03     		.2byte	0x38a
 12474 2ce0 71000000 		.4byte	0x71
 12475 2ce4 02       		.byte	0x2
 12476 2ce5 91       		.byte	0x91
 12477 2ce6 6A       		.sleb128 -22
 12478 2ce7 00       		.byte	0x0
 12479 2ce8 00       		.byte	0x0
 12480 2ce9 00       		.byte	0x0
 12481 2cea 47       		.uleb128 0x47
 12482 2ceb 571C0000 		.4byte	0x1c57
 12483 2cef 01       		.byte	0x1
 12484 2cf0 B903     		.2byte	0x3b9
 12485 2cf2 00000000 		.4byte	.LFB126
 12486 2cf6 F4040000 		.4byte	.LFE126
 12487 2cfa AC020000 		.4byte	.LLST16
ARM GAS  /tmp/ccNwMSzu.s 			page 254


 12488 2cfe 082E0000 		.4byte	0x2e08
 12489 2d02 3F       		.uleb128 0x3f
 12490 2d03 3F0E0000 		.4byte	.LASF428
 12491 2d07 8C240000 		.4byte	0x248c
 12492 2d0b 01       		.byte	0x1
 12493 2d0c 02       		.byte	0x2
 12494 2d0d 91       		.byte	0x91
 12495 2d0e 54       		.sleb128 -44
 12496 2d0f 48       		.uleb128 0x48
 12497 2d10 666400   		.ascii	"fd\000"
 12498 2d13 01       		.byte	0x1
 12499 2d14 B903     		.2byte	0x3b9
 12500 2d16 E3230000 		.4byte	0x23e3
 12501 2d1a 02       		.byte	0x2
 12502 2d1b 91       		.byte	0x91
 12503 2d1c 50       		.sleb128 -48
 12504 2d1d 49       		.uleb128 0x49
 12505 2d1e F5170000 		.4byte	.LASF215
 12506 2d22 01       		.byte	0x1
 12507 2d23 B903     		.2byte	0x3b9
 12508 2d25 8B130000 		.4byte	0x138b
 12509 2d29 02       		.byte	0x2
 12510 2d2a 91       		.byte	0x91
 12511 2d2b 4C       		.sleb128 -52
 12512 2d2c 49       		.uleb128 0x49
 12513 2d2d 01050000 		.4byte	.LASF455
 12514 2d31 01       		.byte	0x1
 12515 2d32 B903     		.2byte	0x3b9
 12516 2d34 71000000 		.4byte	0x71
 12517 2d38 02       		.byte	0x2
 12518 2d39 91       		.byte	0x91
 12519 2d3a 4A       		.sleb128 -54
 12520 2d3b 41       		.uleb128 0x41
 12521 2d3c 18000000 		.4byte	.LBB31
 12522 2d40 E0040000 		.4byte	.LBE31
 12523 2d44 45       		.uleb128 0x45
 12524 2d45 091F0000 		.4byte	.LASF274
 12525 2d49 01       		.byte	0x1
 12526 2d4a C203     		.2byte	0x3c2
 12527 2d4c 71000000 		.4byte	0x71
 12528 2d50 02       		.byte	0x2
 12529 2d51 91       		.byte	0x91
 12530 2d52 64       		.sleb128 -28
 12531 2d53 45       		.uleb128 0x45
 12532 2d54 7E170000 		.4byte	.LASF442
 12533 2d58 01       		.byte	0x1
 12534 2d59 C303     		.2byte	0x3c3
 12535 2d5b 71000000 		.4byte	0x71
 12536 2d5f 02       		.byte	0x2
 12537 2d60 91       		.byte	0x91
 12538 2d61 76       		.sleb128 -10
 12539 2d62 45       		.uleb128 0x45
 12540 2d63 FD1B0000 		.4byte	.LASF456
 12541 2d67 01       		.byte	0x1
 12542 2d68 C403     		.2byte	0x3c4
 12543 2d6a 71000000 		.4byte	0x71
 12544 2d6e 02       		.byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 255


 12545 2d6f 91       		.byte	0x91
 12546 2d70 74       		.sleb128 -12
 12547 2d71 45       		.uleb128 0x45
 12548 2d72 821F0000 		.4byte	.LASF457
 12549 2d76 01       		.byte	0x1
 12550 2d77 C503     		.2byte	0x3c5
 12551 2d79 71000000 		.4byte	0x71
 12552 2d7d 02       		.byte	0x2
 12553 2d7e 91       		.byte	0x91
 12554 2d7f 72       		.sleb128 -14
 12555 2d80 4A       		.uleb128 0x4a
 12556 2d81 38010000 		.4byte	.LBB35
 12557 2d85 F8010000 		.4byte	.LBE35
 12558 2d89 AC2D0000 		.4byte	0x2dac
 12559 2d8d 46       		.uleb128 0x46
 12560 2d8e 706F7300 		.ascii	"pos\000"
 12561 2d92 01       		.byte	0x1
 12562 2d93 DD03     		.2byte	0x3dd
 12563 2d95 95000000 		.4byte	0x95
 12564 2d99 02       		.byte	0x2
 12565 2d9a 91       		.byte	0x91
 12566 2d9b 6C       		.sleb128 -20
 12567 2d9c 45       		.uleb128 0x45
 12568 2d9d BB0B0000 		.4byte	.LASF454
 12569 2da1 01       		.byte	0x1
 12570 2da2 DE03     		.2byte	0x3de
 12571 2da4 71000000 		.4byte	0x71
 12572 2da8 02       		.byte	0x2
 12573 2da9 91       		.byte	0x91
 12574 2daa 6A       		.sleb128 -22
 12575 2dab 00       		.byte	0x0
 12576 2dac 4C       		.uleb128 0x4c
 12577 2dad 18000000 		.4byte	.Ldebug_ranges0+0x18
 12578 2db1 ED2D0000 		.4byte	0x2ded
 12579 2db5 45       		.uleb128 0x45
 12580 2db6 61220000 		.4byte	.LASF441
 12581 2dba 01       		.byte	0x1
 12582 2dbb F203     		.2byte	0x3f2
 12583 2dbd 95000000 		.4byte	0x95
 12584 2dc1 02       		.byte	0x2
 12585 2dc2 91       		.byte	0x91
 12586 2dc3 60       		.sleb128 -32
 12587 2dc4 45       		.uleb128 0x45
 12588 2dc5 EC090000 		.4byte	.LASF459
 12589 2dc9 01       		.byte	0x1
 12590 2dca F403     		.2byte	0x3f4
 12591 2dcc 71000000 		.4byte	0x71
 12592 2dd0 02       		.byte	0x2
 12593 2dd1 91       		.byte	0x91
 12594 2dd2 68       		.sleb128 -24
 12595 2dd3 41       		.uleb128 0x41
 12596 2dd4 5C030000 		.4byte	.LBB38
 12597 2dd8 EC030000 		.4byte	.LBE38
 12598 2ddc 45       		.uleb128 0x45
 12599 2ddd BB0B0000 		.4byte	.LASF454
 12600 2de1 01       		.byte	0x1
 12601 2de2 0404     		.2byte	0x404
ARM GAS  /tmp/ccNwMSzu.s 			page 256


 12602 2de4 71000000 		.4byte	0x71
 12603 2de8 02       		.byte	0x2
 12604 2de9 91       		.byte	0x91
 12605 2dea 66       		.sleb128 -26
 12606 2deb 00       		.byte	0x0
 12607 2dec 00       		.byte	0x0
 12608 2ded 41       		.uleb128 0x41
 12609 2dee 34040000 		.4byte	.LBB41
 12610 2df2 BC040000 		.4byte	.LBE41
 12611 2df6 45       		.uleb128 0x45
 12612 2df7 790B0000 		.4byte	.LASF460
 12613 2dfb 01       		.byte	0x1
 12614 2dfc 1A04     		.2byte	0x41a
 12615 2dfe 95000000 		.4byte	0x95
 12616 2e02 02       		.byte	0x2
 12617 2e03 91       		.byte	0x91
 12618 2e04 5C       		.sleb128 -36
 12619 2e05 00       		.byte	0x0
 12620 2e06 00       		.byte	0x0
 12621 2e07 00       		.byte	0x0
 12622 2e08 47       		.uleb128 0x47
 12623 2e09 831C0000 		.4byte	0x1c83
 12624 2e0d 01       		.byte	0x1
 12625 2e0e 4B04     		.2byte	0x44b
 12626 2e10 00000000 		.4byte	.LFB127
 12627 2e14 30010000 		.4byte	.LFE127
 12628 2e18 D8020000 		.4byte	.LLST17
 12629 2e1c 732E0000 		.4byte	0x2e73
 12630 2e20 3F       		.uleb128 0x3f
 12631 2e21 3F0E0000 		.4byte	.LASF428
 12632 2e25 8C240000 		.4byte	0x248c
 12633 2e29 01       		.byte	0x1
 12634 2e2a 02       		.byte	0x2
 12635 2e2b 91       		.byte	0x91
 12636 2e2c 6C       		.sleb128 -20
 12637 2e2d 48       		.uleb128 0x48
 12638 2e2e 666400   		.ascii	"fd\000"
 12639 2e31 01       		.byte	0x1
 12640 2e32 4B04     		.2byte	0x44b
 12641 2e34 E3230000 		.4byte	0x23e3
 12642 2e38 02       		.byte	0x2
 12643 2e39 91       		.byte	0x91
 12644 2e3a 68       		.sleb128 -24
 12645 2e3b 49       		.uleb128 0x49
 12646 2e3c B61D0000 		.4byte	.LASF288
 12647 2e40 01       		.byte	0x1
 12648 2e41 4B04     		.2byte	0x44b
 12649 2e43 0B240000 		.4byte	0x240b
 12650 2e47 02       		.byte	0x2
 12651 2e48 91       		.byte	0x91
 12652 2e49 64       		.sleb128 -28
 12653 2e4a 49       		.uleb128 0x49
 12654 2e4b 3C070000 		.4byte	.LASF461
 12655 2e4f 01       		.byte	0x1
 12656 2e50 4B04     		.2byte	0x44b
 12657 2e52 4D000000 		.4byte	0x4d
 12658 2e56 02       		.byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 257


 12659 2e57 91       		.byte	0x91
 12660 2e58 63       		.sleb128 -29
 12661 2e59 41       		.uleb128 0x41
 12662 2e5a 18000000 		.4byte	.LBB42
 12663 2e5e 20010000 		.4byte	.LBE42
 12664 2e62 45       		.uleb128 0x45
 12665 2e63 C21E0000 		.4byte	.LASF462
 12666 2e67 01       		.byte	0x1
 12667 2e68 5004     		.2byte	0x450
 12668 2e6a 95000000 		.4byte	0x95
 12669 2e6e 02       		.byte	0x2
 12670 2e6f 91       		.byte	0x91
 12671 2e70 74       		.sleb128 -12
 12672 2e71 00       		.byte	0x0
 12673 2e72 00       		.byte	0x0
 12674 2e73 47       		.uleb128 0x47
 12675 2e74 AF1C0000 		.4byte	0x1caf
 12676 2e78 01       		.byte	0x1
 12677 2e79 7D04     		.2byte	0x47d
 12678 2e7b 00000000 		.4byte	.LFB128
 12679 2e7f 84020000 		.4byte	.LFE128
 12680 2e83 04030000 		.4byte	.LLST18
 12681 2e87 2E2F0000 		.4byte	0x2f2e
 12682 2e8b 3F       		.uleb128 0x3f
 12683 2e8c 3F0E0000 		.4byte	.LASF428
 12684 2e90 8C240000 		.4byte	0x248c
 12685 2e94 01       		.byte	0x1
 12686 2e95 02       		.byte	0x2
 12687 2e96 91       		.byte	0x91
 12688 2e97 64       		.sleb128 -28
 12689 2e98 48       		.uleb128 0x48
 12690 2e99 666400   		.ascii	"fd\000"
 12691 2e9c 01       		.byte	0x1
 12692 2e9d 7D04     		.2byte	0x47d
 12693 2e9f E3230000 		.4byte	0x23e3
 12694 2ea3 02       		.byte	0x2
 12695 2ea4 91       		.byte	0x91
 12696 2ea5 60       		.sleb128 -32
 12697 2ea6 49       		.uleb128 0x49
 12698 2ea7 B40A0000 		.4byte	.LASF270
 12699 2eab 01       		.byte	0x1
 12700 2eac 7D04     		.2byte	0x47d
 12701 2eae 95000000 		.4byte	0x95
 12702 2eb2 02       		.byte	0x2
 12703 2eb3 91       		.byte	0x91
 12704 2eb4 5C       		.sleb128 -36
 12705 2eb5 41       		.uleb128 0x41
 12706 2eb6 14000000 		.4byte	.LBB43
 12707 2eba 74020000 		.4byte	.LBE43
 12708 2ebe 45       		.uleb128 0x45
 12709 2ebf 7E170000 		.4byte	.LASF442
 12710 2ec3 01       		.byte	0x1
 12711 2ec4 8304     		.2byte	0x483
 12712 2ec6 71000000 		.4byte	0x71
 12713 2eca 02       		.byte	0x2
 12714 2ecb 91       		.byte	0x91
 12715 2ecc 76       		.sleb128 -10
ARM GAS  /tmp/ccNwMSzu.s 			page 258


 12716 2ecd 45       		.uleb128 0x45
 12717 2ece 091F0000 		.4byte	.LASF274
 12718 2ed2 01       		.byte	0x1
 12719 2ed3 8404     		.2byte	0x484
 12720 2ed5 71000000 		.4byte	0x71
 12721 2ed9 02       		.byte	0x2
 12722 2eda 91       		.byte	0x91
 12723 2edb 6C       		.sleb128 -20
 12724 2edc 45       		.uleb128 0x45
 12725 2edd 25050000 		.4byte	.LASF463
 12726 2ee1 01       		.byte	0x1
 12727 2ee2 8504     		.2byte	0x485
 12728 2ee4 95000000 		.4byte	0x95
 12729 2ee8 02       		.byte	0x2
 12730 2ee9 91       		.byte	0x91
 12731 2eea 70       		.sleb128 -16
 12732 2eeb 4C       		.uleb128 0x4c
 12733 2eec 30000000 		.4byte	.Ldebug_ranges0+0x30
 12734 2ef0 042F0000 		.4byte	0x2f04
 12735 2ef4 45       		.uleb128 0x45
 12736 2ef5 BB0B0000 		.4byte	.LASF454
 12737 2ef9 01       		.byte	0x1
 12738 2efa 9104     		.2byte	0x491
 12739 2efc 71000000 		.4byte	0x71
 12740 2f00 02       		.byte	0x2
 12741 2f01 91       		.byte	0x91
 12742 2f02 6A       		.sleb128 -22
 12743 2f03 00       		.byte	0x0
 12744 2f04 41       		.uleb128 0x41
 12745 2f05 F4000000 		.4byte	.LBB48
 12746 2f09 84010000 		.4byte	.LBE48
 12747 2f0d 45       		.uleb128 0x45
 12748 2f0e 53110000 		.4byte	.LASF300
 12749 2f12 01       		.byte	0x1
 12750 2f13 A204     		.2byte	0x4a2
 12751 2f15 71000000 		.4byte	0x71
 12752 2f19 02       		.byte	0x2
 12753 2f1a 91       		.byte	0x91
 12754 2f1b 6E       		.sleb128 -18
 12755 2f1c 45       		.uleb128 0x45
 12756 2f1d 0C030000 		.4byte	.LASF464
 12757 2f21 01       		.byte	0x1
 12758 2f22 A504     		.2byte	0x4a5
 12759 2f24 71000000 		.4byte	0x71
 12760 2f28 02       		.byte	0x2
 12761 2f29 91       		.byte	0x91
 12762 2f2a 68       		.sleb128 -24
 12763 2f2b 00       		.byte	0x0
 12764 2f2c 00       		.byte	0x0
 12765 2f2d 00       		.byte	0x0
 12766 2f2e 47       		.uleb128 0x47
 12767 2f2f D61C0000 		.4byte	0x1cd6
 12768 2f33 01       		.byte	0x1
 12769 2f34 DB04     		.2byte	0x4db
 12770 2f36 00000000 		.4byte	.LFB129
 12771 2f3a B0000000 		.4byte	.LFE129
 12772 2f3e 30030000 		.4byte	.LLST19
ARM GAS  /tmp/ccNwMSzu.s 			page 259


 12773 2f42 892F0000 		.4byte	0x2f89
 12774 2f46 3F       		.uleb128 0x3f
 12775 2f47 3F0E0000 		.4byte	.LASF428
 12776 2f4b 8C240000 		.4byte	0x248c
 12777 2f4f 01       		.byte	0x1
 12778 2f50 02       		.byte	0x2
 12779 2f51 91       		.byte	0x91
 12780 2f52 6C       		.sleb128 -20
 12781 2f53 48       		.uleb128 0x48
 12782 2f54 667300   		.ascii	"fs\000"
 12783 2f57 01       		.byte	0x1
 12784 2f58 DB04     		.2byte	0x4db
 12785 2f5a 77220000 		.4byte	0x2277
 12786 2f5e 02       		.byte	0x2
 12787 2f5f 91       		.byte	0x91
 12788 2f60 68       		.sleb128 -24
 12789 2f61 49       		.uleb128 0x49
 12790 2f62 B3090000 		.4byte	.LASF291
 12791 2f66 01       		.byte	0x1
 12792 2f67 DB04     		.2byte	0x4db
 12793 2f69 00240000 		.4byte	0x2400
 12794 2f6d 02       		.byte	0x2
 12795 2f6e 91       		.byte	0x91
 12796 2f6f 64       		.sleb128 -28
 12797 2f70 41       		.uleb128 0x41
 12798 2f71 14000000 		.4byte	.LBB49
 12799 2f75 A0000000 		.4byte	.LBE49
 12800 2f79 46       		.uleb128 0x46
 12801 2f7a 646400   		.ascii	"dd\000"
 12802 2f7d 01       		.byte	0x1
 12803 2f7e E004     		.2byte	0x4e0
 12804 2f80 DD230000 		.4byte	0x23dd
 12805 2f84 02       		.byte	0x2
 12806 2f85 91       		.byte	0x91
 12807 2f86 74       		.sleb128 -12
 12808 2f87 00       		.byte	0x0
 12809 2f88 00       		.byte	0x0
 12810 2f89 47       		.uleb128 0x47
 12811 2f8a FD1C0000 		.4byte	0x1cfd
 12812 2f8e 01       		.byte	0x1
 12813 2f8f F604     		.2byte	0x4f6
 12814 2f91 00000000 		.4byte	.LFB130
 12815 2f95 30000000 		.4byte	.LFE130
 12816 2f99 5C030000 		.4byte	.LLST20
 12817 2f9d BD2F0000 		.4byte	0x2fbd
 12818 2fa1 3F       		.uleb128 0x3f
 12819 2fa2 3F0E0000 		.4byte	.LASF428
 12820 2fa6 8C240000 		.4byte	0x248c
 12821 2faa 01       		.byte	0x1
 12822 2fab 02       		.byte	0x2
 12823 2fac 91       		.byte	0x91
 12824 2fad 74       		.sleb128 -12
 12825 2fae 48       		.uleb128 0x48
 12826 2faf 646400   		.ascii	"dd\000"
 12827 2fb2 01       		.byte	0x1
 12828 2fb3 F604     		.2byte	0x4f6
 12829 2fb5 DD230000 		.4byte	0x23dd
ARM GAS  /tmp/ccNwMSzu.s 			page 260


 12830 2fb9 02       		.byte	0x2
 12831 2fba 91       		.byte	0x91
 12832 2fbb 70       		.sleb128 -16
 12833 2fbc 00       		.byte	0x0
 12834 2fbd 47       		.uleb128 0x47
 12835 2fbe 1B1D0000 		.4byte	0x1d1b
 12836 2fc2 01       		.byte	0x1
 12837 2fc3 0505     		.2byte	0x505
 12838 2fc5 00000000 		.4byte	.LFB131
 12839 2fc9 30010000 		.4byte	.LFE131
 12840 2fcd 88030000 		.4byte	.LLST21
 12841 2fd1 00300000 		.4byte	0x3000
 12842 2fd5 3F       		.uleb128 0x3f
 12843 2fd6 3F0E0000 		.4byte	.LASF428
 12844 2fda 8C240000 		.4byte	0x248c
 12845 2fde 01       		.byte	0x1
 12846 2fdf 02       		.byte	0x2
 12847 2fe0 91       		.byte	0x91
 12848 2fe1 74       		.sleb128 -12
 12849 2fe2 48       		.uleb128 0x48
 12850 2fe3 646400   		.ascii	"dd\000"
 12851 2fe6 01       		.byte	0x1
 12852 2fe7 0505     		.2byte	0x505
 12853 2fe9 DD230000 		.4byte	0x23dd
 12854 2fed 02       		.byte	0x2
 12855 2fee 91       		.byte	0x91
 12856 2fef 70       		.sleb128 -16
 12857 2ff0 49       		.uleb128 0x49
 12858 2ff1 B3090000 		.4byte	.LASF291
 12859 2ff5 01       		.byte	0x1
 12860 2ff6 0505     		.2byte	0x505
 12861 2ff8 11240000 		.4byte	0x2411
 12862 2ffc 02       		.byte	0x2
 12863 2ffd 91       		.byte	0x91
 12864 2ffe 6C       		.sleb128 -20
 12865 2fff 00       		.byte	0x0
 12866 3000 47       		.uleb128 0x47
 12867 3001 421D0000 		.4byte	0x1d42
 12868 3005 01       		.byte	0x1
 12869 3006 2E05     		.2byte	0x52e
 12870 3008 00000000 		.4byte	.LFB132
 12871 300c 3C000000 		.4byte	.LFE132
 12872 3010 B4030000 		.4byte	.LLST22
 12873 3014 34300000 		.4byte	0x3034
 12874 3018 3F       		.uleb128 0x3f
 12875 3019 3F0E0000 		.4byte	.LASF428
 12876 301d 8C240000 		.4byte	0x248c
 12877 3021 01       		.byte	0x1
 12878 3022 02       		.byte	0x2
 12879 3023 91       		.byte	0x91
 12880 3024 7C       		.sleb128 -4
 12881 3025 48       		.uleb128 0x48
 12882 3026 646400   		.ascii	"dd\000"
 12883 3029 01       		.byte	0x1
 12884 302a 2E05     		.2byte	0x52e
 12885 302c DD230000 		.4byte	0x23dd
 12886 3030 02       		.byte	0x2
ARM GAS  /tmp/ccNwMSzu.s 			page 261


 12887 3031 91       		.byte	0x91
 12888 3032 78       		.sleb128 -8
 12889 3033 00       		.byte	0x0
 12890 3034 47       		.uleb128 0x47
 12891 3035 641D0000 		.4byte	0x1d64
 12892 3039 01       		.byte	0x1
 12893 303a 3705     		.2byte	0x537
 12894 303c 00000000 		.4byte	.LFB133
 12895 3040 44000000 		.4byte	.LFE133
 12896 3044 D4030000 		.4byte	.LLST23
 12897 3048 77300000 		.4byte	0x3077
 12898 304c 3F       		.uleb128 0x3f
 12899 304d 3F0E0000 		.4byte	.LASF428
 12900 3051 8C240000 		.4byte	0x248c
 12901 3055 01       		.byte	0x1
 12902 3056 02       		.byte	0x2
 12903 3057 91       		.byte	0x91
 12904 3058 7C       		.sleb128 -4
 12905 3059 48       		.uleb128 0x48
 12906 305a 646400   		.ascii	"dd\000"
 12907 305d 01       		.byte	0x1
 12908 305e 3705     		.2byte	0x537
 12909 3060 DD230000 		.4byte	0x23dd
 12910 3064 02       		.byte	0x2
 12911 3065 91       		.byte	0x91
 12912 3066 78       		.sleb128 -8
 12913 3067 49       		.uleb128 0x49
 12914 3068 B61D0000 		.4byte	.LASF288
 12915 306c 01       		.byte	0x1
 12916 306d 3705     		.2byte	0x537
 12917 306f 71000000 		.4byte	0x71
 12918 3073 02       		.byte	0x2
 12919 3074 91       		.byte	0x91
 12920 3075 76       		.sleb128 -10
 12921 3076 00       		.byte	0x0
 12922 3077 47       		.uleb128 0x47
 12923 3078 6C200000 		.4byte	0x206c
 12924 307c 01       		.byte	0x1
 12925 307d 5305     		.2byte	0x553
 12926 307f 00000000 		.4byte	.LFB134
 12927 3083 04060000 		.4byte	.LFE134
 12928 3087 F4030000 		.4byte	.LLST24
 12929 308b A0310000 		.4byte	0x31a0
 12930 308f 3F       		.uleb128 0x3f
 12931 3090 3F0E0000 		.4byte	.LASF428
 12932 3094 8C240000 		.4byte	0x248c
 12933 3098 01       		.byte	0x1
 12934 3099 03       		.byte	0x3
 12935 309a 91       		.byte	0x91
 12936 309b AC7F     		.sleb128 -84
 12937 309d 48       		.uleb128 0x48
 12938 309e 667300   		.ascii	"fs\000"
 12939 30a1 01       		.byte	0x1
 12940 30a2 5305     		.2byte	0x553
 12941 30a4 17240000 		.4byte	0x2417
 12942 30a8 03       		.byte	0x3
 12943 30a9 91       		.byte	0x91
ARM GAS  /tmp/ccNwMSzu.s 			page 262


 12944 30aa A87F     		.sleb128 -88
 12945 30ac 49       		.uleb128 0x49
 12946 30ad B3090000 		.4byte	.LASF291
 12947 30b1 01       		.byte	0x1
 12948 30b2 5305     		.2byte	0x553
 12949 30b4 00240000 		.4byte	0x2400
 12950 30b8 03       		.byte	0x3
 12951 30b9 91       		.byte	0x91
 12952 30ba A47F     		.sleb128 -92
 12953 30bc 41       		.uleb128 0x41
 12954 30bd 14000000 		.4byte	.LBB50
 12955 30c1 F0050000 		.4byte	.LBE50
 12956 30c5 45       		.uleb128 0x45
 12957 30c6 18050000 		.4byte	.LASF286
 12958 30ca 01       		.byte	0x1
 12959 30cb 5905     		.2byte	0x559
 12960 30cd 27180000 		.4byte	0x1827
 12961 30d1 02       		.byte	0x2
 12962 30d2 91       		.byte	0x91
 12963 30d3 54       		.sleb128 -44
 12964 30d4 45       		.uleb128 0x45
 12965 30d5 B61D0000 		.4byte	.LASF288
 12966 30d9 01       		.byte	0x1
 12967 30da 5A05     		.2byte	0x55a
 12968 30dc 95000000 		.4byte	0x95
 12969 30e0 02       		.byte	0x2
 12970 30e1 91       		.byte	0x91
 12971 30e2 74       		.sleb128 -12
 12972 30e3 45       		.uleb128 0x45
 12973 30e4 E7040000 		.4byte	.LASF465
 12974 30e8 01       		.byte	0x1
 12975 30e9 5B05     		.2byte	0x55b
 12976 30eb 4D000000 		.4byte	0x4d
 12977 30ef 02       		.byte	0x2
 12978 30f0 91       		.byte	0x91
 12979 30f1 73       		.sleb128 -13
 12980 30f2 45       		.uleb128 0x45
 12981 30f3 451A0000 		.4byte	.LASF466
 12982 30f7 01       		.byte	0x1
 12983 30f8 5C05     		.2byte	0x55c
 12984 30fa 4D000000 		.4byte	0x4d
 12985 30fe 02       		.byte	0x2
 12986 30ff 91       		.byte	0x91
 12987 3100 67       		.sleb128 -25
 12988 3101 45       		.uleb128 0x45
 12989 3102 F5170000 		.4byte	.LASF215
 12990 3106 01       		.byte	0x1
 12991 3107 5D05     		.2byte	0x55d
 12992 3109 7B130000 		.4byte	0x137b
 12993 310d 03       		.byte	0x3
 12994 310e 91       		.byte	0x91
 12995 310f B47F     		.sleb128 -76
 12996 3111 45       		.uleb128 0x45
 12997 3112 5F1B0000 		.4byte	.LASF467
 12998 3116 01       		.byte	0x1
 12999 3117 6305     		.2byte	0x563
 13000 3119 9B090000 		.4byte	0x99b
ARM GAS  /tmp/ccNwMSzu.s 			page 263


 13001 311d 02       		.byte	0x2
 13002 311e 91       		.byte	0x91
 13003 311f 60       		.sleb128 -32
 13004 3120 45       		.uleb128 0x45
 13005 3121 001F0000 		.4byte	.LASF468
 13006 3125 01       		.byte	0x1
 13007 3126 C805     		.2byte	0x5c8
 13008 3128 4D000000 		.4byte	0x4d
 13009 312c 02       		.byte	0x2
 13010 312d 91       		.byte	0x91
 13011 312e 71       		.sleb128 -15
 13012 312f 46       		.uleb128 0x46
 13013 3130 6900     		.ascii	"i\000"
 13014 3132 01       		.byte	0x1
 13015 3133 C905     		.2byte	0x5c9
 13016 3135 4D000000 		.4byte	0x4d
 13017 3139 02       		.byte	0x2
 13018 313a 91       		.byte	0x91
 13019 313b 70       		.sleb128 -16
 13020 313c 45       		.uleb128 0x45
 13021 313d 9B050000 		.4byte	.LASF469
 13022 3141 01       		.byte	0x1
 13023 3142 CE05     		.2byte	0x5ce
 13024 3144 4D000000 		.4byte	0x4d
 13025 3148 02       		.byte	0x2
 13026 3149 91       		.byte	0x91
 13027 314a 6F       		.sleb128 -17
 13028 314b 4A       		.uleb128 0x4a
 13029 314c C0000000 		.4byte	.LBB52
 13030 3150 24010000 		.4byte	.LBE52
 13031 3154 68310000 		.4byte	0x3168
 13032 3158 45       		.uleb128 0x45
 13033 3159 9B160000 		.4byte	.LASF470
 13034 315d 01       		.byte	0x1
 13035 315e 6805     		.2byte	0x568
 13036 3160 4D000000 		.4byte	0x4d
 13037 3164 02       		.byte	0x2
 13038 3165 91       		.byte	0x91
 13039 3166 72       		.sleb128 -14
 13040 3167 00       		.byte	0x0
 13041 3168 4A       		.uleb128 0x4a
 13042 3169 50010000 		.4byte	.LBB54
 13043 316d E8010000 		.4byte	.LBE54
 13044 3171 85310000 		.4byte	0x3185
 13045 3175 46       		.uleb128 0x46
 13046 3176 6E756D00 		.ascii	"num\000"
 13047 317a 01       		.byte	0x1
 13048 317b 7C05     		.2byte	0x57c
 13049 317d 4D000000 		.4byte	0x4d
 13050 3181 02       		.byte	0x2
 13051 3182 91       		.byte	0x91
 13052 3183 5F       		.sleb128 -33
 13053 3184 00       		.byte	0x0
 13054 3185 41       		.uleb128 0x41
 13055 3186 B0030000 		.4byte	.LBB56
 13056 318a C4050000 		.4byte	.LBE56
 13057 318e 45       		.uleb128 0x45
ARM GAS  /tmp/ccNwMSzu.s 			page 264


 13058 318f 171A0000 		.4byte	.LASF471
 13059 3193 01       		.byte	0x1
 13060 3194 DB05     		.2byte	0x5db
 13061 3196 CC090000 		.4byte	0x9cc
 13062 319a 02       		.byte	0x2
 13063 319b 91       		.byte	0x91
 13064 319c 68       		.sleb128 -24
 13065 319d 00       		.byte	0x0
 13066 319e 00       		.byte	0x0
 13067 319f 00       		.byte	0x0
 13068 31a0 47       		.uleb128 0x47
 13069 31a1 8B1D0000 		.4byte	0x1d8b
 13070 31a5 01       		.byte	0x1
 13071 31a6 1D06     		.2byte	0x61d
 13072 31a8 00000000 		.4byte	.LFB135
 13073 31ac D8030000 		.4byte	.LFE135
 13074 31b0 21040000 		.4byte	.LLST25
 13075 31b4 93320000 		.4byte	0x3293
 13076 31b8 3F       		.uleb128 0x3f
 13077 31b9 3F0E0000 		.4byte	.LASF428
 13078 31bd 8C240000 		.4byte	0x248c
 13079 31c1 01       		.byte	0x1
 13080 31c2 02       		.byte	0x2
 13081 31c3 91       		.byte	0x91
 13082 31c4 54       		.sleb128 -44
 13083 31c5 49       		.uleb128 0x49
 13084 31c6 AF1D0000 		.4byte	.LASF440
 13085 31ca 01       		.byte	0x1
 13086 31cb 1D06     		.2byte	0x61d
 13087 31cd DD230000 		.4byte	0x23dd
 13088 31d1 02       		.byte	0x2
 13089 31d2 91       		.byte	0x91
 13090 31d3 50       		.sleb128 -48
 13091 31d4 49       		.uleb128 0x49
 13092 31d5 7A0C0000 		.4byte	.LASF472
 13093 31d9 01       		.byte	0x1
 13094 31da 1D06     		.2byte	0x61d
 13095 31dc CC090000 		.4byte	0x9cc
 13096 31e0 02       		.byte	0x2
 13097 31e1 91       		.byte	0x91
 13098 31e2 4C       		.sleb128 -52
 13099 31e3 49       		.uleb128 0x49
 13100 31e4 B3090000 		.4byte	.LASF291
 13101 31e8 01       		.byte	0x1
 13102 31e9 1D06     		.2byte	0x61d
 13103 31eb 11240000 		.4byte	0x2411
 13104 31ef 02       		.byte	0x2
 13105 31f0 91       		.byte	0x91
 13106 31f1 48       		.sleb128 -56
 13107 31f2 41       		.uleb128 0x41
 13108 31f3 18000000 		.4byte	.LBB57
 13109 31f7 C4030000 		.4byte	.LBE57
 13110 31fb 45       		.uleb128 0x45
 13111 31fc 52080000 		.4byte	.LASF473
 13112 3200 01       		.byte	0x1
 13113 3201 3406     		.2byte	0x634
 13114 3203 4D000000 		.4byte	0x4d
ARM GAS  /tmp/ccNwMSzu.s 			page 265


 13115 3207 02       		.byte	0x2
 13116 3208 91       		.byte	0x91
 13117 3209 67       		.sleb128 -25
 13118 320a 45       		.uleb128 0x45
 13119 320b 981C0000 		.4byte	.LASF474
 13120 320f 01       		.byte	0x1
 13121 3210 3506     		.2byte	0x635
 13122 3212 4D000000 		.4byte	0x4d
 13123 3216 02       		.byte	0x2
 13124 3217 91       		.byte	0x91
 13125 3218 77       		.sleb128 -9
 13126 3219 46       		.uleb128 0x46
 13127 321a 667300   		.ascii	"fs\000"
 13128 321d 01       		.byte	0x1
 13129 321e 3606     		.2byte	0x636
 13130 3220 77220000 		.4byte	0x2277
 13131 3224 02       		.byte	0x2
 13132 3225 91       		.byte	0x91
 13133 3226 60       		.sleb128 -32
 13134 3227 45       		.uleb128 0x45
 13135 3228 7E170000 		.4byte	.LASF442
 13136 322c 01       		.byte	0x1
 13137 322d 3706     		.2byte	0x637
 13138 322f 71000000 		.4byte	0x71
 13139 3233 02       		.byte	0x2
 13140 3234 91       		.byte	0x91
 13141 3235 74       		.sleb128 -12
 13142 3236 45       		.uleb128 0x45
 13143 3237 56060000 		.4byte	.LASF475
 13144 323b 01       		.byte	0x1
 13145 323c 3806     		.2byte	0x638
 13146 323e 95000000 		.4byte	0x95
 13147 3242 02       		.byte	0x2
 13148 3243 91       		.byte	0x91
 13149 3244 70       		.sleb128 -16
 13150 3245 45       		.uleb128 0x45
 13151 3246 B61D0000 		.4byte	.LASF288
 13152 324a 01       		.byte	0x1
 13153 324b 3906     		.2byte	0x639
 13154 324d 95000000 		.4byte	0x95
 13155 3251 02       		.byte	0x2
 13156 3252 91       		.byte	0x91
 13157 3253 6C       		.sleb128 -20
 13158 3254 45       		.uleb128 0x45
 13159 3255 630F0000 		.4byte	.LASF476
 13160 3259 01       		.byte	0x1
 13161 325a 3A06     		.2byte	0x63a
 13162 325c 95000000 		.4byte	0x95
 13163 3260 02       		.byte	0x2
 13164 3261 91       		.byte	0x91
 13165 3262 68       		.sleb128 -24
 13166 3263 4B       		.uleb128 0x4b
 13167 3264 48000000 		.4byte	.Ldebug_ranges0+0x48
 13168 3268 45       		.uleb128 0x45
 13169 3269 321A0000 		.4byte	.LASF477
 13170 326d 01       		.byte	0x1
 13171 326e 6F06     		.2byte	0x66f
ARM GAS  /tmp/ccNwMSzu.s 			page 266


 13172 3270 4D000000 		.4byte	0x4d
 13173 3274 02       		.byte	0x2
 13174 3275 91       		.byte	0x91
 13175 3276 5D       		.sleb128 -35
 13176 3277 41       		.uleb128 0x41
 13177 3278 88010000 		.4byte	.LBB62
 13178 327c 14020000 		.4byte	.LBE62
 13179 3280 45       		.uleb128 0x45
 13180 3281 18010000 		.4byte	.LASF451
 13181 3285 01       		.byte	0x1
 13182 3286 5406     		.2byte	0x654
 13183 3288 71000000 		.4byte	0x71
 13184 328c 02       		.byte	0x2
 13185 328d 91       		.byte	0x91
 13186 328e 5E       		.sleb128 -34
 13187 328f 00       		.byte	0x0
 13188 3290 00       		.byte	0x0
 13189 3291 00       		.byte	0x0
 13190 3292 00       		.byte	0x0
 13191 3293 47       		.uleb128 0x47
 13192 3294 B71D0000 		.4byte	0x1db7
 13193 3298 01       		.byte	0x1
 13194 3299 A006     		.2byte	0x6a0
 13195 329b 00000000 		.4byte	.LFB136
 13196 329f 18020000 		.4byte	.LFE136
 13197 32a3 4D040000 		.4byte	.LLST26
 13198 32a7 FE320000 		.4byte	0x32fe
 13199 32ab 3F       		.uleb128 0x3f
 13200 32ac 3F0E0000 		.4byte	.LASF428
 13201 32b0 8C240000 		.4byte	0x248c
 13202 32b4 01       		.byte	0x1
 13203 32b5 02       		.byte	0x2
 13204 32b6 91       		.byte	0x91
 13205 32b7 64       		.sleb128 -28
 13206 32b8 48       		.uleb128 0x48
 13207 32b9 667300   		.ascii	"fs\000"
 13208 32bc 01       		.byte	0x1
 13209 32bd A006     		.2byte	0x6a0
 13210 32bf 77220000 		.4byte	0x2277
 13211 32c3 02       		.byte	0x2
 13212 32c4 91       		.byte	0x91
 13213 32c5 60       		.sleb128 -32
 13214 32c6 49       		.uleb128 0x49
 13215 32c7 B3090000 		.4byte	.LASF291
 13216 32cb 01       		.byte	0x1
 13217 32cc A006     		.2byte	0x6a0
 13218 32ce 11240000 		.4byte	0x2411
 13219 32d2 02       		.byte	0x2
 13220 32d3 91       		.byte	0x91
 13221 32d4 5C       		.sleb128 -36
 13222 32d5 41       		.uleb128 0x41
 13223 32d6 14000000 		.4byte	.LBB65
 13224 32da 08020000 		.4byte	.LBE65
 13225 32de 45       		.uleb128 0x45
 13226 32df 56060000 		.4byte	.LASF475
 13227 32e3 01       		.byte	0x1
 13228 32e4 A706     		.2byte	0x6a7
ARM GAS  /tmp/ccNwMSzu.s 			page 267


 13229 32e6 95000000 		.4byte	0x95
 13230 32ea 02       		.byte	0x2
 13231 32eb 91       		.byte	0x91
 13232 32ec 74       		.sleb128 -12
 13233 32ed 45       		.uleb128 0x45
 13234 32ee F5170000 		.4byte	.LASF215
 13235 32f2 01       		.byte	0x1
 13236 32f3 AB06     		.2byte	0x6ab
 13237 32f5 FE320000 		.4byte	0x32fe
 13238 32f9 02       		.byte	0x2
 13239 32fa 91       		.byte	0x91
 13240 32fb 68       		.sleb128 -24
 13241 32fc 00       		.byte	0x0
 13242 32fd 00       		.byte	0x0
 13243 32fe 0D       		.uleb128 0xd
 13244 32ff 58000000 		.4byte	0x58
 13245 3303 0E330000 		.4byte	0x330e
 13246 3307 0E       		.uleb128 0xe
 13247 3308 B9020000 		.4byte	0x2b9
 13248 330c 0B       		.byte	0xb
 13249 330d 00       		.byte	0x0
 13250 330e 47       		.uleb128 0x47
 13251 330f 0A1E0000 		.4byte	0x1e0a
 13252 3313 01       		.byte	0x1
 13253 3314 D006     		.2byte	0x6d0
 13254 3316 00000000 		.4byte	.LFB137
 13255 331a 48000000 		.4byte	.LFE137
 13256 331e 79040000 		.4byte	.LLST27
 13257 3322 42330000 		.4byte	0x3342
 13258 3326 3F       		.uleb128 0x3f
 13259 3327 3F0E0000 		.4byte	.LASF428
 13260 332b 8C240000 		.4byte	0x248c
 13261 332f 01       		.byte	0x1
 13262 3330 02       		.byte	0x2
 13263 3331 91       		.byte	0x91
 13264 3332 7C       		.sleb128 -4
 13265 3333 48       		.uleb128 0x48
 13266 3334 667300   		.ascii	"fs\000"
 13267 3337 01       		.byte	0x1
 13268 3338 D006     		.2byte	0x6d0
 13269 333a 17240000 		.4byte	0x2417
 13270 333e 02       		.byte	0x2
 13271 333f 91       		.byte	0x91
 13272 3340 78       		.sleb128 -8
 13273 3341 00       		.byte	0x0
 13274 3342 47       		.uleb128 0x47
 13275 3343 2C1E0000 		.4byte	0x1e2c
 13276 3347 01       		.byte	0x1
 13277 3348 E206     		.2byte	0x6e2
 13278 334a 00000000 		.4byte	.LFB138
 13279 334e B8010000 		.4byte	.LFE138
 13280 3352 99040000 		.4byte	.LLST28
 13281 3356 D7330000 		.4byte	0x33d7
 13282 335a 3F       		.uleb128 0x3f
 13283 335b 3F0E0000 		.4byte	.LASF428
 13284 335f 8C240000 		.4byte	0x248c
 13285 3363 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 268


 13286 3364 03       		.byte	0x3
 13287 3365 91       		.byte	0x91
 13288 3366 BC7F     		.sleb128 -68
 13289 3368 48       		.uleb128 0x48
 13290 3369 667300   		.ascii	"fs\000"
 13291 336c 01       		.byte	0x1
 13292 336d E206     		.2byte	0x6e2
 13293 336f 17240000 		.4byte	0x2417
 13294 3373 03       		.byte	0x3
 13295 3374 91       		.byte	0x91
 13296 3375 B87F     		.sleb128 -72
 13297 3377 41       		.uleb128 0x41
 13298 3378 10000000 		.4byte	.LBB66
 13299 337c A4010000 		.4byte	.LBE66
 13300 3380 46       		.uleb128 0x46
 13301 3381 66617400 		.ascii	"fat\000"
 13302 3385 01       		.byte	0x1
 13303 3386 E706     		.2byte	0x6e7
 13304 3388 7B130000 		.4byte	0x137b
 13305 338c 02       		.byte	0x2
 13306 338d 91       		.byte	0x91
 13307 338e 40       		.sleb128 -64
 13308 338f 45       		.uleb128 0x45
 13309 3390 D0030000 		.4byte	.LASF478
 13310 3394 01       		.byte	0x1
 13311 3395 E806     		.2byte	0x6e8
 13312 3397 3D190000 		.4byte	0x193d
 13313 339b 02       		.byte	0x2
 13314 339c 91       		.byte	0x91
 13315 339d 60       		.sleb128 -32
 13316 339e 45       		.uleb128 0x45
 13317 339f 80010000 		.4byte	.LASF271
 13318 33a3 01       		.byte	0x1
 13319 33a4 EC06     		.2byte	0x6ec
 13320 33a6 95000000 		.4byte	0x95
 13321 33aa 02       		.byte	0x2
 13322 33ab 91       		.byte	0x91
 13323 33ac 74       		.sleb128 -12
 13324 33ad 45       		.uleb128 0x45
 13325 33ae 7A040000 		.4byte	.LASF272
 13326 33b2 01       		.byte	0x1
 13327 33b3 ED06     		.2byte	0x6ed
 13328 33b5 95000000 		.4byte	0x95
 13329 33b9 02       		.byte	0x2
 13330 33ba 91       		.byte	0x91
 13331 33bb 70       		.sleb128 -16
 13332 33bc 41       		.uleb128 0x41
 13333 33bd 50000000 		.4byte	.LBB67
 13334 33c1 78010000 		.4byte	.LBE67
 13335 33c5 45       		.uleb128 0x45
 13336 33c6 B8020000 		.4byte	.LASF289
 13337 33ca 01       		.byte	0x1
 13338 33cb F006     		.2byte	0x6f0
 13339 33cd 71000000 		.4byte	0x71
 13340 33d1 02       		.byte	0x2
 13341 33d2 91       		.byte	0x91
 13342 33d3 6E       		.sleb128 -18
ARM GAS  /tmp/ccNwMSzu.s 			page 269


 13343 33d4 00       		.byte	0x0
 13344 33d5 00       		.byte	0x0
 13345 33d6 00       		.byte	0x0
 13346 33d7 47       		.uleb128 0x47
 13347 33d8 93200000 		.4byte	0x2093
 13348 33dc 01       		.byte	0x1
 13349 33dd 0907     		.2byte	0x709
 13350 33df 00000000 		.4byte	.LFB139
 13351 33e3 BC000000 		.4byte	.LFE139
 13352 33e7 C6040000 		.4byte	.LLST29
 13353 33eb 5D340000 		.4byte	0x345d
 13354 33ef 3F       		.uleb128 0x3f
 13355 33f0 3F0E0000 		.4byte	.LASF428
 13356 33f4 8C240000 		.4byte	0x248c
 13357 33f8 01       		.byte	0x1
 13358 33f9 02       		.byte	0x2
 13359 33fa 91       		.byte	0x91
 13360 33fb 6C       		.sleb128 -20
 13361 33fc 49       		.uleb128 0x49
 13362 33fd F5170000 		.4byte	.LASF215
 13363 3401 01       		.byte	0x1
 13364 3402 0907     		.2byte	0x709
 13365 3404 96130000 		.4byte	0x1396
 13366 3408 02       		.byte	0x2
 13367 3409 91       		.byte	0x91
 13368 340a 68       		.sleb128 -24
 13369 340b 49       		.uleb128 0x49
 13370 340c B61D0000 		.4byte	.LASF288
 13371 3410 01       		.byte	0x1
 13372 3411 0907     		.2byte	0x709
 13373 3413 95000000 		.4byte	0x95
 13374 3417 02       		.byte	0x2
 13375 3418 91       		.byte	0x91
 13376 3419 64       		.sleb128 -28
 13377 341a 48       		.uleb128 0x48
 13378 341b 7000     		.ascii	"p\000"
 13379 341d 01       		.byte	0x1
 13380 341e 0907     		.2byte	0x709
 13381 3420 4C030000 		.4byte	0x34c
 13382 3424 02       		.byte	0x2
 13383 3425 91       		.byte	0x91
 13384 3426 60       		.sleb128 -32
 13385 3427 41       		.uleb128 0x41
 13386 3428 14000000 		.4byte	.LBB68
 13387 342c B0000000 		.4byte	.LBE68
 13388 3430 45       		.uleb128 0x45
 13389 3431 D0030000 		.4byte	.LASF478
 13390 3435 01       		.byte	0x1
 13391 3436 0B07     		.2byte	0x70b
 13392 3438 5D340000 		.4byte	0x345d
 13393 343c 02       		.byte	0x2
 13394 343d 91       		.byte	0x91
 13395 343e 78       		.sleb128 -8
 13396 343f 45       		.uleb128 0x45
 13397 3440 AB1F0000 		.4byte	.LASF301
 13398 3444 01       		.byte	0x1
 13399 3445 0C07     		.2byte	0x70c
ARM GAS  /tmp/ccNwMSzu.s 			page 270


 13400 3447 4D000000 		.4byte	0x4d
 13401 344b 02       		.byte	0x2
 13402 344c 91       		.byte	0x91
 13403 344d 77       		.sleb128 -9
 13404 344e 46       		.uleb128 0x46
 13405 344f 6900     		.ascii	"i\000"
 13406 3451 01       		.byte	0x1
 13407 3452 0D07     		.2byte	0x70d
 13408 3454 4D000000 		.4byte	0x4d
 13409 3458 02       		.byte	0x2
 13410 3459 91       		.byte	0x91
 13411 345a 7F       		.sleb128 -1
 13412 345b 00       		.byte	0x0
 13413 345c 00       		.byte	0x0
 13414 345d 12       		.uleb128 0x12
 13415 345e 04       		.byte	0x4
 13416 345f 3D190000 		.4byte	0x193d
 13417 3463 47       		.uleb128 0x47
 13418 3464 4E1E0000 		.4byte	0x1e4e
 13419 3468 01       		.byte	0x1
 13420 3469 1907     		.2byte	0x719
 13421 346b 00000000 		.4byte	.LFB140
 13422 346f 8C000000 		.4byte	.LFE140
 13423 3473 E6040000 		.4byte	.LLST30
 13424 3477 C3340000 		.4byte	0x34c3
 13425 347b 3F       		.uleb128 0x3f
 13426 347c 3F0E0000 		.4byte	.LASF428
 13427 3480 8C240000 		.4byte	0x248c
 13428 3484 01       		.byte	0x1
 13429 3485 02       		.byte	0x2
 13430 3486 91       		.byte	0x91
 13431 3487 74       		.sleb128 -12
 13432 3488 48       		.uleb128 0x48
 13433 3489 667300   		.ascii	"fs\000"
 13434 348c 01       		.byte	0x1
 13435 348d 1907     		.2byte	0x719
 13436 348f 77220000 		.4byte	0x2277
 13437 3493 02       		.byte	0x2
 13438 3494 91       		.byte	0x91
 13439 3495 70       		.sleb128 -16
 13440 3496 48       		.uleb128 0x48
 13441 3497 646400   		.ascii	"dd\000"
 13442 349a 01       		.byte	0x1
 13443 349b 1907     		.2byte	0x719
 13444 349d DD230000 		.4byte	0x23dd
 13445 34a1 02       		.byte	0x2
 13446 34a2 91       		.byte	0x91
 13447 34a3 6C       		.sleb128 -20
 13448 34a4 49       		.uleb128 0x49
 13449 34a5 B71F0000 		.4byte	.LASF479
 13450 34a9 01       		.byte	0x1
 13451 34aa 1907     		.2byte	0x719
 13452 34ac CC090000 		.4byte	0x9cc
 13453 34b0 02       		.byte	0x2
 13454 34b1 91       		.byte	0x91
 13455 34b2 68       		.sleb128 -24
 13456 34b3 49       		.uleb128 0x49
ARM GAS  /tmp/ccNwMSzu.s 			page 271


 13457 34b4 B3090000 		.4byte	.LASF291
 13458 34b8 01       		.byte	0x1
 13459 34b9 1907     		.2byte	0x719
 13460 34bb 11240000 		.4byte	0x2411
 13461 34bf 02       		.byte	0x2
 13462 34c0 91       		.byte	0x91
 13463 34c1 00       		.sleb128 0
 13464 34c2 00       		.byte	0x0
 13465 34c3 47       		.uleb128 0x47
 13466 34c4 7F1E0000 		.4byte	0x1e7f
 13467 34c8 01       		.byte	0x1
 13468 34c9 2707     		.2byte	0x727
 13469 34cb 00000000 		.4byte	.LFB141
 13470 34cf 80000000 		.4byte	.LFE141
 13471 34d3 12050000 		.4byte	.LLST31
 13472 34d7 2F350000 		.4byte	0x352f
 13473 34db 3F       		.uleb128 0x3f
 13474 34dc 3F0E0000 		.4byte	.LASF428
 13475 34e0 8C240000 		.4byte	0x248c
 13476 34e4 01       		.byte	0x1
 13477 34e5 02       		.byte	0x2
 13478 34e6 91       		.byte	0x91
 13479 34e7 44       		.sleb128 -60
 13480 34e8 48       		.uleb128 0x48
 13481 34e9 667300   		.ascii	"fs\000"
 13482 34ec 01       		.byte	0x1
 13483 34ed 2707     		.2byte	0x727
 13484 34ef 77220000 		.4byte	0x2277
 13485 34f3 02       		.byte	0x2
 13486 34f4 91       		.byte	0x91
 13487 34f5 40       		.sleb128 -64
 13488 34f6 48       		.uleb128 0x48
 13489 34f7 646400   		.ascii	"dd\000"
 13490 34fa 01       		.byte	0x1
 13491 34fb 2707     		.2byte	0x727
 13492 34fd DD230000 		.4byte	0x23dd
 13493 3501 03       		.byte	0x3
 13494 3502 91       		.byte	0x91
 13495 3503 BC7F     		.sleb128 -68
 13496 3505 49       		.uleb128 0x49
 13497 3506 B71F0000 		.4byte	.LASF479
 13498 350a 01       		.byte	0x1
 13499 350b 2707     		.2byte	0x727
 13500 350d CC090000 		.4byte	0x9cc
 13501 3511 03       		.byte	0x3
 13502 3512 91       		.byte	0x91
 13503 3513 B87F     		.sleb128 -72
 13504 3515 41       		.uleb128 0x41
 13505 3516 18000000 		.4byte	.LBB69
 13506 351a 70000000 		.4byte	.LBE69
 13507 351e 45       		.uleb128 0x45
 13508 351f 92150000 		.4byte	.LASF480
 13509 3523 01       		.byte	0x1
 13510 3524 2907     		.2byte	0x729
 13511 3526 E8160000 		.4byte	0x16e8
 13512 352a 02       		.byte	0x2
 13513 352b 91       		.byte	0x91
ARM GAS  /tmp/ccNwMSzu.s 			page 272


 13514 352c 4C       		.sleb128 -52
 13515 352d 00       		.byte	0x0
 13516 352e 00       		.byte	0x0
 13517 352f 47       		.uleb128 0x47
 13518 3530 AB1E0000 		.4byte	0x1eab
 13519 3534 01       		.byte	0x1
 13520 3535 3007     		.2byte	0x730
 13521 3537 00000000 		.4byte	.LFB142
 13522 353b 20000000 		.4byte	.LFE142
 13523 353f 3F050000 		.4byte	.LLST32
 13524 3543 64350000 		.4byte	0x3564
 13525 3547 3F       		.uleb128 0x3f
 13526 3548 3F0E0000 		.4byte	.LASF428
 13527 354c 8C240000 		.4byte	0x248c
 13528 3550 01       		.byte	0x1
 13529 3551 02       		.byte	0x2
 13530 3552 91       		.byte	0x91
 13531 3553 7C       		.sleb128 -4
 13532 3554 49       		.uleb128 0x49
 13533 3555 7A0C0000 		.4byte	.LASF472
 13534 3559 01       		.byte	0x1
 13535 355a 3007     		.2byte	0x730
 13536 355c E3230000 		.4byte	0x23e3
 13537 3560 02       		.byte	0x2
 13538 3561 91       		.byte	0x91
 13539 3562 78       		.sleb128 -8
 13540 3563 00       		.byte	0x0
 13541 3564 45       		.uleb128 0x45
 13542 3565 A3060000 		.4byte	.LASF481
 13543 3569 18       		.byte	0x18
 13544 356a 8501     		.2byte	0x185
 13545 356c 76130000 		.4byte	0x1376
 13546 3570 05       		.byte	0x5
 13547 3571 03       		.byte	0x3
 13548 3572 38000000 		.4byte	_ZL12VIC_USB_Intr
 13549 3576 45       		.uleb128 0x45
 13550 3577 4E180000 		.4byte	.LASF482
 13551 357b 18       		.byte	0x18
 13552 357c 8801     		.2byte	0x188
 13553 357e 76130000 		.4byte	0x1376
 13554 3582 05       		.byte	0x5
 13555 3583 03       		.byte	0x3
 13556 3584 3C000000 		.4byte	_ZL9CCR_CLKEN
 13557 3588 45       		.uleb128 0x45
 13558 3589 4B220000 		.4byte	.LASF483
 13559 358d 18       		.byte	0x18
 13560 358e 8B01     		.2byte	0x18b
 13561 3590 76130000 		.4byte	0x1376
 13562 3594 05       		.byte	0x5
 13563 3595 03       		.byte	0x3
 13564 3596 40000000 		.4byte	_ZL10CCR_CTCRST
 13565 359a 45       		.uleb128 0x45
 13566 359b 8D110000 		.4byte	.LASF484
 13567 359f 18       		.byte	0x18
 13568 35a0 8E01     		.2byte	0x18e
 13569 35a2 76130000 		.4byte	0x1376
 13570 35a6 05       		.byte	0x5
ARM GAS  /tmp/ccNwMSzu.s 			page 273


 13571 35a7 03       		.byte	0x3
 13572 35a8 44000000 		.4byte	_ZL16CCR_CLKSRC_32KHZ
 13573 35ac 45       		.uleb128 0x45
 13574 35ad B10F0000 		.4byte	.LASF485
 13575 35b1 18       		.byte	0x18
 13576 35b2 9101     		.2byte	0x191
 13577 35b4 76130000 		.4byte	0x1376
 13578 35b8 05       		.byte	0x5
 13579 35b9 03       		.byte	0x3
 13580 35ba 48000000 		.4byte	_ZL18VIC_Channel_Timer0
 13581 35be 45       		.uleb128 0x45
 13582 35bf C40F0000 		.4byte	.LASF486
 13583 35c3 18       		.byte	0x18
 13584 35c4 9401     		.2byte	0x194
 13585 35c6 76130000 		.4byte	0x1376
 13586 35ca 05       		.byte	0x5
 13587 35cb 03       		.byte	0x3
 13588 35cc 4C000000 		.4byte	_ZL18VIC_Channel_Timer1
 13589 35d0 45       		.uleb128 0x45
 13590 35d1 60180000 		.4byte	.LASF487
 13591 35d5 18       		.byte	0x18
 13592 35d6 9701     		.2byte	0x197
 13593 35d8 76130000 		.4byte	0x1376
 13594 35dc 05       		.byte	0x5
 13595 35dd 03       		.byte	0x3
 13596 35de 50000000 		.4byte	_ZL17VIC_Channel_UART0
 13597 35e2 45       		.uleb128 0x45
 13598 35e3 72180000 		.4byte	.LASF488
 13599 35e7 18       		.byte	0x18
 13600 35e8 9A01     		.2byte	0x19a
 13601 35ea 76130000 		.4byte	0x1376
 13602 35ee 05       		.byte	0x5
 13603 35ef 03       		.byte	0x3
 13604 35f0 54000000 		.4byte	_ZL17VIC_Channel_UART1
 13605 35f4 45       		.uleb128 0x45
 13606 35f5 9A0F0000 		.4byte	.LASF489
 13607 35f9 18       		.byte	0x18
 13608 35fa 9D01     		.2byte	0x19d
 13609 35fc 76130000 		.4byte	0x1376
 13610 3600 05       		.byte	0x5
 13611 3601 03       		.byte	0x3
 13612 3602 58000000 		.4byte	_ZL15VIC_Channel_USB
 13613 3606 45       		.uleb128 0x45
 13614 3607 2B140000 		.4byte	.LASF490
 13615 360b 18       		.byte	0x18
 13616 360c 9F01     		.2byte	0x19f
 13617 360e 76130000 		.4byte	0x1376
 13618 3612 05       		.byte	0x5
 13619 3613 03       		.byte	0x3
 13620 3614 5C000000 		.4byte	_ZL18VICVectCntl_ENABLE
 13621 3618 45       		.uleb128 0x45
 13622 3619 E2170000 		.4byte	.LASF491
 13623 361d 18       		.byte	0x18
 13624 361e A201     		.2byte	0x1a2
 13625 3620 76130000 		.4byte	0x1376
 13626 3624 05       		.byte	0x5
 13627 3625 03       		.byte	0x3
ARM GAS  /tmp/ccNwMSzu.s 			page 274


 13628 3626 60000000 		.4byte	_ZL10UIER_ERBFI
 13629 362a 45       		.uleb128 0x45
 13630 362b 701F0000 		.4byte	.LASF492
 13631 362f 18       		.byte	0x18
 13632 3630 A401     		.2byte	0x1a4
 13633 3632 76130000 		.4byte	0x1376
 13634 3636 05       		.byte	0x5
 13635 3637 03       		.byte	0x3
 13636 3638 64000000 		.4byte	_ZL12UIIR_ID_MASK
 13637 363c 45       		.uleb128 0x45
 13638 363d F1060000 		.4byte	.LASF493
 13639 3641 18       		.byte	0x18
 13640 3642 A601     		.2byte	0x1a6
 13641 3644 76130000 		.4byte	0x1376
 13642 3648 05       		.byte	0x5
 13643 3649 03       		.byte	0x3
 13644 364a 68000000 		.4byte	_ZL12UIIR_RDA_INT
 13645 364e 45       		.uleb128 0x45
 13646 364f CD1B0000 		.4byte	.LASF494
 13647 3653 18       		.byte	0x18
 13648 3654 A801     		.2byte	0x1a8
 13649 3656 76130000 		.4byte	0x1376
 13650 365a 05       		.byte	0x5
 13651 365b 03       		.byte	0x3
 13652 365c 6C000000 		.4byte	_ZL8ULSR_RDR
 13653 3660 45       		.uleb128 0x45
 13654 3661 081D0000 		.4byte	.LASF495
 13655 3665 18       		.byte	0x18
 13656 3666 AB01     		.2byte	0x1ab
 13657 3668 76130000 		.4byte	0x1376
 13658 366c 05       		.byte	0x5
 13659 366d 03       		.byte	0x3
 13660 366e 70000000 		.4byte	_ZL5SSEL1
 13661 3672 45       		.uleb128 0x45
 13662 3673 88190000 		.4byte	.LASF496
 13663 3677 18       		.byte	0x18
 13664 3678 AE01     		.2byte	0x1ae
 13665 367a 76130000 		.4byte	0x1376
 13666 367e 05       		.byte	0x5
 13667 367f 03       		.byte	0x3
 13668 3680 74000000 		.4byte	_ZL9SSPSR_TFE
 13669 3684 45       		.uleb128 0x45
 13670 3685 541F0000 		.4byte	.LASF497
 13671 3689 18       		.byte	0x18
 13672 368a B101     		.2byte	0x1b1
 13673 368c 76130000 		.4byte	0x1376
 13674 3690 05       		.byte	0x5
 13675 3691 03       		.byte	0x3
 13676 3692 78000000 		.4byte	_ZL9SSPSR_TNF
 13677 3696 45       		.uleb128 0x45
 13678 3697 66170000 		.4byte	.LASF498
 13679 369b 18       		.byte	0x18
 13680 369c B401     		.2byte	0x1b4
 13681 369e 76130000 		.4byte	0x1376
 13682 36a2 05       		.byte	0x5
 13683 36a3 03       		.byte	0x3
 13684 36a4 7C000000 		.4byte	_ZL9SSPSR_RNE
ARM GAS  /tmp/ccNwMSzu.s 			page 275


 13685 36a8 45       		.uleb128 0x45
 13686 36a9 14070000 		.4byte	.LASF499
 13687 36ad 18       		.byte	0x18
 13688 36ae B701     		.2byte	0x1b7
 13689 36b0 76130000 		.4byte	0x1376
 13690 36b4 05       		.byte	0x5
 13691 36b5 03       		.byte	0x3
 13692 36b6 80000000 		.4byte	_ZL9SSPSR_BSY
 13693 36ba 45       		.uleb128 0x45
 13694 36bb 4E170000 		.4byte	.LASF500
 13695 36bf 18       		.byte	0x18
 13696 36c0 BA01     		.2byte	0x1ba
 13697 36c2 76130000 		.4byte	0x1376
 13698 36c6 05       		.byte	0x5
 13699 36c7 03       		.byte	0x3
 13700 36c8 84000000 		.4byte	_ZL11SSPCR0_CPOL
 13701 36cc 45       		.uleb128 0x45
 13702 36cd B8110000 		.4byte	.LASF501
 13703 36d1 18       		.byte	0x18
 13704 36d2 BD01     		.2byte	0x1bd
 13705 36d4 76130000 		.4byte	0x1376
 13706 36d8 05       		.byte	0x5
 13707 36d9 03       		.byte	0x3
 13708 36da 88000000 		.4byte	_ZL11SSPCR0_CPHA
 13709 36de 45       		.uleb128 0x45
 13710 36df DD070000 		.4byte	.LASF502
 13711 36e3 18       		.byte	0x18
 13712 36e4 BF01     		.2byte	0x1bf
 13713 36e6 76130000 		.4byte	0x1376
 13714 36ea 05       		.byte	0x5
 13715 36eb 03       		.byte	0x3
 13716 36ec 8C000000 		.4byte	_ZL13I2CxCONCLR_AA
 13717 36f0 45       		.uleb128 0x45
 13718 36f1 36110000 		.4byte	.LASF503
 13719 36f5 18       		.byte	0x18
 13720 36f6 C001     		.2byte	0x1c0
 13721 36f8 76130000 		.4byte	0x1376
 13722 36fc 05       		.byte	0x5
 13723 36fd 03       		.byte	0x3
 13724 36fe 90000000 		.4byte	_ZL13I2CxCONCLR_SI
 13725 3702 45       		.uleb128 0x45
 13726 3703 D3220000 		.4byte	.LASF504
 13727 3707 18       		.byte	0x18
 13728 3708 C101     		.2byte	0x1c1
 13729 370a 76130000 		.4byte	0x1376
 13730 370e 05       		.byte	0x5
 13731 370f 03       		.byte	0x3
 13732 3710 94000000 		.4byte	_ZL15I2CxCONCLR_STAC
 13733 3714 45       		.uleb128 0x45
 13734 3715 380A0000 		.4byte	.LASF505
 13735 3719 18       		.byte	0x18
 13736 371a C201     		.2byte	0x1c2
 13737 371c 76130000 		.4byte	0x1376
 13738 3720 05       		.byte	0x5
 13739 3721 03       		.byte	0x3
 13740 3722 98000000 		.4byte	_ZL16I2CxCONCLR_I2ENC
 13741 3726 45       		.uleb128 0x45
ARM GAS  /tmp/ccNwMSzu.s 			page 276


 13742 3727 22220000 		.4byte	.LASF506
 13743 372b 18       		.byte	0x18
 13744 372c C401     		.2byte	0x1c4
 13745 372e 76130000 		.4byte	0x1376
 13746 3732 05       		.byte	0x5
 13747 3733 03       		.byte	0x3
 13748 3734 9C000000 		.4byte	_ZL13I2CxCONSET_AA
 13749 3738 45       		.uleb128 0x45
 13750 3739 6A080000 		.4byte	.LASF507
 13751 373d 18       		.byte	0x18
 13752 373e C501     		.2byte	0x1c5
 13753 3740 76130000 		.4byte	0x1376
 13754 3744 05       		.byte	0x5
 13755 3745 03       		.byte	0x3
 13756 3746 A0000000 		.4byte	_ZL13I2CxCONSET_SI
 13757 374a 45       		.uleb128 0x45
 13758 374b 14100000 		.4byte	.LASF508
 13759 374f 18       		.byte	0x18
 13760 3750 C601     		.2byte	0x1c6
 13761 3752 76130000 		.4byte	0x1376
 13762 3756 05       		.byte	0x5
 13763 3757 03       		.byte	0x3
 13764 3758 A4000000 		.4byte	_ZL14I2CxCONSET_STO
 13765 375c 45       		.uleb128 0x45
 13766 375d 05100000 		.4byte	.LASF509
 13767 3761 18       		.byte	0x18
 13768 3762 C701     		.2byte	0x1c7
 13769 3764 76130000 		.4byte	0x1376
 13770 3768 05       		.byte	0x5
 13771 3769 03       		.byte	0x3
 13772 376a A8000000 		.4byte	_ZL14I2CxCONSET_STA
 13773 376e 45       		.uleb128 0x45
 13774 376f 58160000 		.4byte	.LASF510
 13775 3773 18       		.byte	0x18
 13776 3774 C801     		.2byte	0x1c8
 13777 3776 76130000 		.4byte	0x1376
 13778 377a 05       		.byte	0x5
 13779 377b 03       		.byte	0x3
 13780 377c AC000000 		.4byte	_ZL15I2CxCONSET_I2EN
 13781 3780 45       		.uleb128 0x45
 13782 3781 F7020000 		.4byte	.LASF511
 13783 3785 18       		.byte	0x18
 13784 3786 CB01     		.2byte	0x1cb
 13785 3788 76130000 		.4byte	0x1376
 13786 378c 05       		.byte	0x5
 13787 378d 03       		.byte	0x3
 13788 378e B0000000 		.4byte	_ZL20TxTCR_COUNTER_ENABLE
 13789 3792 45       		.uleb128 0x45
 13790 3793 A7130000 		.4byte	.LASF512
 13791 3797 18       		.byte	0x18
 13792 3798 CC01     		.2byte	0x1cc
 13793 379a 76130000 		.4byte	0x1376
 13794 379e 05       		.byte	0x5
 13795 379f 03       		.byte	0x3
 13796 37a0 B4000000 		.4byte	_ZL19TxTCR_COUNTER_RESET
 13797 37a4 45       		.uleb128 0x45
 13798 37a5 45130000 		.4byte	.LASF513
ARM GAS  /tmp/ccNwMSzu.s 			page 277


 13799 37a9 18       		.byte	0x18
 13800 37aa CD01     		.2byte	0x1cd
 13801 37ac 76130000 		.4byte	0x1376
 13802 37b0 05       		.byte	0x5
 13803 37b1 03       		.byte	0x3
 13804 37b2 B8000000 		.4byte	_ZL16TxMCR_INT_ON_MR0
 13805 37b6 45       		.uleb128 0x45
 13806 37b7 B6220000 		.4byte	.LASF514
 13807 37bb 18       		.byte	0x18
 13808 37bc CE01     		.2byte	0x1ce
 13809 37be 76130000 		.4byte	0x1376
 13810 37c2 05       		.byte	0x5
 13811 37c3 03       		.byte	0x3
 13812 37c4 BC000000 		.4byte	_ZL18TxMCR_RESET_ON_MR0
 13813 37c8 45       		.uleb128 0x45
 13814 37c9 AC140000 		.4byte	.LASF515
 13815 37cd 18       		.byte	0x18
 13816 37ce D001     		.2byte	0x1d0
 13817 37d0 76130000 		.4byte	0x1376
 13818 37d4 05       		.byte	0x5
 13819 37d5 03       		.byte	0x3
 13820 37d6 C0000000 		.4byte	_ZL13TxIR_MR0_FLAG
 13821 37da 45       		.uleb128 0x45
 13822 37db 56010000 		.4byte	.LASF516
 13823 37df 18       		.byte	0x18
 13824 37e0 D101     		.2byte	0x1d1
 13825 37e2 76130000 		.4byte	0x1376
 13826 37e6 05       		.byte	0x5
 13827 37e7 03       		.byte	0x3
 13828 37e8 C4000000 		.4byte	_ZL13TxIR_MR1_FLAG
 13829 37ec 45       		.uleb128 0x45
 13830 37ed 30220000 		.4byte	.LASF517
 13831 37f1 18       		.byte	0x18
 13832 37f2 D201     		.2byte	0x1d2
 13833 37f4 76130000 		.4byte	0x1376
 13834 37f8 05       		.byte	0x5
 13835 37f9 03       		.byte	0x3
 13836 37fa C8000000 		.4byte	_ZL13TxIR_MR2_FLAG
 13837 37fe 45       		.uleb128 0x45
 13838 37ff 8C200000 		.4byte	.LASF518
 13839 3803 18       		.byte	0x18
 13840 3804 D301     		.2byte	0x1d3
 13841 3806 76130000 		.4byte	0x1376
 13842 380a 05       		.byte	0x5
 13843 380b 03       		.byte	0x3
 13844 380c CC000000 		.4byte	_ZL13TxIR_MR3_FLAG
 13845 3810 45       		.uleb128 0x45
 13846 3811 14220000 		.4byte	.LASF519
 13847 3815 18       		.byte	0x18
 13848 3816 D501     		.2byte	0x1d5
 13849 3818 76130000 		.4byte	0x1376
 13850 381c 05       		.byte	0x5
 13851 381d 03       		.byte	0x3
 13852 381e D0000000 		.4byte	_ZL13TxIR_CR0_FLAG
 13853 3822 45       		.uleb128 0x45
 13854 3823 74210000 		.4byte	.LASF520
 13855 3827 18       		.byte	0x18
ARM GAS  /tmp/ccNwMSzu.s 			page 278


 13856 3828 D601     		.2byte	0x1d6
 13857 382a 76130000 		.4byte	0x1376
 13858 382e 05       		.byte	0x5
 13859 382f 03       		.byte	0x3
 13860 3830 D4000000 		.4byte	_ZL13TxIR_CR1_FLAG
 13861 3834 45       		.uleb128 0x45
 13862 3835 820B0000 		.4byte	.LASF521
 13863 3839 18       		.byte	0x18
 13864 383a D701     		.2byte	0x1d7
 13865 383c 76130000 		.4byte	0x1376
 13866 3840 05       		.byte	0x5
 13867 3841 03       		.byte	0x3
 13868 3842 D8000000 		.4byte	_ZL13TxIR_CR2_FLAG
 13869 3846 45       		.uleb128 0x45
 13870 3847 F90A0000 		.4byte	.LASF522
 13871 384b 18       		.byte	0x18
 13872 384c D801     		.2byte	0x1d8
 13873 384e 76130000 		.4byte	0x1376
 13874 3852 05       		.byte	0x5
 13875 3853 03       		.byte	0x3
 13876 3854 DC000000 		.4byte	_ZL13TxIR_CR3_FLAG
 13877 3858 45       		.uleb128 0x45
 13878 3859 490A0000 		.4byte	.LASF523
 13879 385d 18       		.byte	0x18
 13880 385e DA01     		.2byte	0x1da
 13881 3860 76130000 		.4byte	0x1376
 13882 3864 05       		.byte	0x5
 13883 3865 03       		.byte	0x3
 13884 3866 E0000000 		.4byte	_ZL12TxCCR_CAP0RE
 13885 386a 45       		.uleb128 0x45
 13886 386b 56200000 		.4byte	.LASF524
 13887 386f 18       		.byte	0x18
 13888 3870 DB01     		.2byte	0x1db
 13889 3872 76130000 		.4byte	0x1376
 13890 3876 05       		.byte	0x5
 13891 3877 03       		.byte	0x3
 13892 3878 E4000000 		.4byte	_ZL12TxCCR_CAP0FE
 13893 387c 45       		.uleb128 0x45
 13894 387d AC020000 		.4byte	.LASF525
 13895 3881 18       		.byte	0x18
 13896 3882 DC01     		.2byte	0x1dc
 13897 3884 76130000 		.4byte	0x1376
 13898 3888 05       		.byte	0x5
 13899 3889 03       		.byte	0x3
 13900 388a E8000000 		.4byte	_ZL11TxCCR_CAP0I
 13901 388e 45       		.uleb128 0x45
 13902 388f 28060000 		.4byte	.LASF526
 13903 3893 18       		.byte	0x18
 13904 3894 DE01     		.2byte	0x1de
 13905 3896 76130000 		.4byte	0x1376
 13906 389a 05       		.byte	0x5
 13907 389b 03       		.byte	0x3
 13908 389c EC000000 		.4byte	_ZL12TxCCR_CAP1RE
 13909 38a0 45       		.uleb128 0x45
 13910 38a1 E3220000 		.4byte	.LASF527
 13911 38a5 18       		.byte	0x18
 13912 38a6 DF01     		.2byte	0x1df
ARM GAS  /tmp/ccNwMSzu.s 			page 279


 13913 38a8 76130000 		.4byte	0x1376
 13914 38ac 05       		.byte	0x5
 13915 38ad 03       		.byte	0x3
 13916 38ae F0000000 		.4byte	_ZL12TxCCR_CAP1FE
 13917 38b2 45       		.uleb128 0x45
 13918 38b3 33080000 		.4byte	.LASF528
 13919 38b7 18       		.byte	0x18
 13920 38b8 E001     		.2byte	0x1e0
 13921 38ba 76130000 		.4byte	0x1376
 13922 38be 05       		.byte	0x5
 13923 38bf 03       		.byte	0x3
 13924 38c0 F4000000 		.4byte	_ZL11TxCCR_CAP1I
 13925 38c4 45       		.uleb128 0x45
 13926 38c5 1A090000 		.4byte	.LASF529
 13927 38c9 18       		.byte	0x18
 13928 38ca E201     		.2byte	0x1e2
 13929 38cc 76130000 		.4byte	0x1376
 13930 38d0 05       		.byte	0x5
 13931 38d1 03       		.byte	0x3
 13932 38d2 F8000000 		.4byte	_ZL12TxCCR_CAP2RE
 13933 38d6 45       		.uleb128 0x45
 13934 38d7 74030000 		.4byte	.LASF530
 13935 38db 18       		.byte	0x18
 13936 38dc E301     		.2byte	0x1e3
 13937 38de 76130000 		.4byte	0x1376
 13938 38e2 05       		.byte	0x5
 13939 38e3 03       		.byte	0x3
 13940 38e4 FC000000 		.4byte	_ZL12TxCCR_CAP2FE
 13941 38e8 45       		.uleb128 0x45
 13942 38e9 E9030000 		.4byte	.LASF531
 13943 38ed 18       		.byte	0x18
 13944 38ee E401     		.2byte	0x1e4
 13945 38f0 76130000 		.4byte	0x1376
 13946 38f4 05       		.byte	0x5
 13947 38f5 03       		.byte	0x3
 13948 38f6 00010000 		.4byte	_ZL11TxCCR_CAP2I
 13949 38fa 45       		.uleb128 0x45
 13950 38fb 0F0C0000 		.4byte	.LASF532
 13951 38ff 18       		.byte	0x18
 13952 3900 E601     		.2byte	0x1e6
 13953 3902 76130000 		.4byte	0x1376
 13954 3906 05       		.byte	0x5
 13955 3907 03       		.byte	0x3
 13956 3908 04010000 		.4byte	_ZL12TxCCR_CAP3RE
 13957 390c 45       		.uleb128 0x45
 13958 390d FF050000 		.4byte	.LASF533
 13959 3911 18       		.byte	0x18
 13960 3912 E701     		.2byte	0x1e7
 13961 3914 76130000 		.4byte	0x1376
 13962 3918 05       		.byte	0x5
 13963 3919 03       		.byte	0x3
 13964 391a 08010000 		.4byte	_ZL12TxCCR_CAP3FE
 13965 391e 45       		.uleb128 0x45
 13966 391f 53040000 		.4byte	.LASF534
 13967 3923 18       		.byte	0x18
 13968 3924 E801     		.2byte	0x1e8
 13969 3926 76130000 		.4byte	0x1376
ARM GAS  /tmp/ccNwMSzu.s 			page 280


 13970 392a 05       		.byte	0x5
 13971 392b 03       		.byte	0x3
 13972 392c 0C010000 		.4byte	_ZL11TxCCR_CAP3I
 13973 3930 45       		.uleb128 0x45
 13974 3931 5E210000 		.4byte	.LASF535
 13975 3935 18       		.byte	0x18
 13976 3936 EA01     		.2byte	0x1ea
 13977 3938 76130000 		.4byte	0x1376
 13978 393c 05       		.byte	0x5
 13979 393d 03       		.byte	0x3
 13980 393e 10010000 		.4byte	_ZL9ADxCR_PDN
 13981 3942 45       		.uleb128 0x45
 13982 3943 92190000 		.4byte	.LASF536
 13983 3947 18       		.byte	0x18
 13984 3948 EC01     		.2byte	0x1ec
 13985 394a 76130000 		.4byte	0x1376
 13986 394e 05       		.byte	0x5
 13987 394f 03       		.byte	0x3
 13988 3950 14010000 		.4byte	_ZL15ADxCR_START_NOW
 13989 3954 45       		.uleb128 0x45
 13990 3955 6D190000 		.4byte	.LASF537
 13991 3959 18       		.byte	0x18
 13992 395a EE01     		.2byte	0x1ee
 13993 395c 76130000 		.4byte	0x1376
 13994 3960 05       		.byte	0x5
 13995 3961 03       		.byte	0x3
 13996 3962 18010000 		.4byte	_ZL11ADxGDR_DONE
 13997 3966 45       		.uleb128 0x45
 13998 3967 4B1D0000 		.4byte	.LASF538
 13999 396b 18       		.byte	0x18
 14000 396c F101     		.2byte	0x1f1
 14001 396e 76130000 		.4byte	0x1376
 14002 3972 05       		.byte	0x5
 14003 3973 03       		.byte	0x3
 14004 3974 1C010000 		.4byte	_ZL7PWMMR0R
 14005 3978 45       		.uleb128 0x45
 14006 3979 C51B0000 		.4byte	.LASF539
 14007 397d 18       		.byte	0x18
 14008 397e F401     		.2byte	0x1f4
 14009 3980 76130000 		.4byte	0x1376
 14010 3984 05       		.byte	0x5
 14011 3985 03       		.byte	0x3
 14012 3986 20010000 		.4byte	_ZL7LER0_EN
 14013 398a 45       		.uleb128 0x45
 14014 398b C4080000 		.4byte	.LASF540
 14015 398f 18       		.byte	0x18
 14016 3990 F701     		.2byte	0x1f7
 14017 3992 76130000 		.4byte	0x1376
 14018 3996 05       		.byte	0x5
 14019 3997 03       		.byte	0x3
 14020 3998 24010000 		.4byte	_ZL7LER1_EN
 14021 399c 45       		.uleb128 0x45
 14022 399d 3D1A0000 		.4byte	.LASF541
 14023 39a1 18       		.byte	0x18
 14024 39a2 FA01     		.2byte	0x1fa
 14025 39a4 76130000 		.4byte	0x1376
 14026 39a8 05       		.byte	0x5
ARM GAS  /tmp/ccNwMSzu.s 			page 281


 14027 39a9 03       		.byte	0x3
 14028 39aa 28010000 		.4byte	_ZL7LER2_EN
 14029 39ae 45       		.uleb128 0x45
 14030 39af EB070000 		.4byte	.LASF542
 14031 39b3 18       		.byte	0x18
 14032 39b4 FD01     		.2byte	0x1fd
 14033 39b6 76130000 		.4byte	0x1376
 14034 39ba 05       		.byte	0x5
 14035 39bb 03       		.byte	0x3
 14036 39bc 2C010000 		.4byte	_ZL7LER3_EN
 14037 39c0 45       		.uleb128 0x45
 14038 39c1 58180000 		.4byte	.LASF543
 14039 39c5 18       		.byte	0x18
 14040 39c6 0002     		.2byte	0x200
 14041 39c8 76130000 		.4byte	0x1376
 14042 39cc 05       		.byte	0x5
 14043 39cd 03       		.byte	0x3
 14044 39ce 30010000 		.4byte	_ZL7LER4_EN
 14045 39d2 45       		.uleb128 0x45
 14046 39d3 77060000 		.4byte	.LASF544
 14047 39d7 18       		.byte	0x18
 14048 39d8 0302     		.2byte	0x203
 14049 39da 76130000 		.4byte	0x1376
 14050 39de 05       		.byte	0x5
 14051 39df 03       		.byte	0x3
 14052 39e0 34010000 		.4byte	_ZL7LER5_EN
 14053 39e4 45       		.uleb128 0x45
 14054 39e5 76170000 		.4byte	.LASF545
 14055 39e9 18       		.byte	0x18
 14056 39ea 0602     		.2byte	0x206
 14057 39ec 76130000 		.4byte	0x1376
 14058 39f0 05       		.byte	0x5
 14059 39f1 03       		.byte	0x3
 14060 39f2 38010000 		.4byte	_ZL7LER6_EN
 14061 39f6 45       		.uleb128 0x45
 14062 39f7 4D1E0000 		.4byte	.LASF546
 14063 39fb 18       		.byte	0x18
 14064 39fc 0902     		.2byte	0x209
 14065 39fe 76130000 		.4byte	0x1376
 14066 3a02 05       		.byte	0x5
 14067 3a03 03       		.byte	0x3
 14068 3a04 3C010000 		.4byte	_ZL7PWMENA1
 14069 3a08 45       		.uleb128 0x45
 14070 3a09 091C0000 		.4byte	.LASF547
 14071 3a0d 18       		.byte	0x18
 14072 3a0e 0C02     		.2byte	0x20c
 14073 3a10 76130000 		.4byte	0x1376
 14074 3a14 05       		.byte	0x5
 14075 3a15 03       		.byte	0x3
 14076 3a16 40010000 		.4byte	_ZL7PWMENA2
 14077 3a1a 45       		.uleb128 0x45
 14078 3a1b A21E0000 		.4byte	.LASF548
 14079 3a1f 18       		.byte	0x18
 14080 3a20 0F02     		.2byte	0x20f
 14081 3a22 76130000 		.4byte	0x1376
 14082 3a26 05       		.byte	0x5
 14083 3a27 03       		.byte	0x3
ARM GAS  /tmp/ccNwMSzu.s 			page 282


 14084 3a28 44010000 		.4byte	_ZL7PWMENA3
 14085 3a2c 45       		.uleb128 0x45
 14086 3a2d AA1E0000 		.4byte	.LASF549
 14087 3a31 18       		.byte	0x18
 14088 3a32 1202     		.2byte	0x212
 14089 3a34 76130000 		.4byte	0x1376
 14090 3a38 05       		.byte	0x5
 14091 3a39 03       		.byte	0x3
 14092 3a3a 48010000 		.4byte	_ZL7PWMENA4
 14093 3a3e 45       		.uleb128 0x45
 14094 3a3f B21E0000 		.4byte	.LASF550
 14095 3a43 18       		.byte	0x18
 14096 3a44 1502     		.2byte	0x215
 14097 3a46 76130000 		.4byte	0x1376
 14098 3a4a 05       		.byte	0x5
 14099 3a4b 03       		.byte	0x3
 14100 3a4c 4C010000 		.4byte	_ZL7PWMENA5
 14101 3a50 45       		.uleb128 0x45
 14102 3a51 BA1E0000 		.4byte	.LASF551
 14103 3a55 18       		.byte	0x18
 14104 3a56 1802     		.2byte	0x218
 14105 3a58 76130000 		.4byte	0x1376
 14106 3a5c 05       		.byte	0x5
 14107 3a5d 03       		.byte	0x3
 14108 3a5e 50010000 		.4byte	_ZL7PWMENA6
 14109 3a62 45       		.uleb128 0x45
 14110 3a63 C2130000 		.4byte	.LASF552
 14111 3a67 18       		.byte	0x18
 14112 3a68 1B02     		.2byte	0x21b
 14113 3a6a 76130000 		.4byte	0x1376
 14114 3a6e 05       		.byte	0x5
 14115 3a6f 03       		.byte	0x3
 14116 3a70 54010000 		.4byte	_ZL21PWMTCR_COUNTER_ENABLE
 14117 3a74 45       		.uleb128 0x45
 14118 3a75 7F060000 		.4byte	.LASF553
 14119 3a79 18       		.byte	0x18
 14120 3a7a 1E02     		.2byte	0x21e
 14121 3a7c 76130000 		.4byte	0x1376
 14122 3a80 05       		.byte	0x5
 14123 3a81 03       		.byte	0x3
 14124 3a82 58010000 		.4byte	_ZL12PWMTCR_RESET
 14125 3a86 45       		.uleb128 0x45
 14126 3a87 710E0000 		.4byte	.LASF554
 14127 3a8b 18       		.byte	0x18
 14128 3a8c 2102     		.2byte	0x221
 14129 3a8e 76130000 		.4byte	0x1376
 14130 3a92 05       		.byte	0x5
 14131 3a93 03       		.byte	0x3
 14132 3a94 5C010000 		.4byte	_ZL17PWMTCR_PWM_ENABLE
 14133 3a98 45       		.uleb128 0x45
 14134 3a99 B4040000 		.4byte	.LASF555
 14135 3a9d 18       		.byte	0x18
 14136 3a9e 2402     		.2byte	0x224
 14137 3aa0 76130000 		.4byte	0x1376
 14138 3aa4 05       		.byte	0x5
 14139 3aa5 03       		.byte	0x3
 14140 3aa6 60010000 		.4byte	_ZL10WDMOD_WDEN
ARM GAS  /tmp/ccNwMSzu.s 			page 283


 14141 3aaa 45       		.uleb128 0x45
 14142 3aab BD1D0000 		.4byte	.LASF556
 14143 3aaf 18       		.byte	0x18
 14144 3ab0 2702     		.2byte	0x227
 14145 3ab2 76130000 		.4byte	0x1376
 14146 3ab6 05       		.byte	0x5
 14147 3ab7 03       		.byte	0x3
 14148 3ab8 64010000 		.4byte	_ZL13WDMOD_WDRESET
 14149 3abc 42       		.uleb128 0x42
 14150 3abd 3A010000 		.4byte	.LASF557
 14151 3ac1 19       		.byte	0x19
 14152 3ac2 1E       		.byte	0x1e
 14153 3ac3 76130000 		.4byte	0x1376
 14154 3ac7 05       		.byte	0x5
 14155 3ac8 03       		.byte	0x3
 14156 3ac9 68010000 		.4byte	_ZL27HID_MESSAGE_ID_SYSTEM_DEBUG
 14157 3acd 42       		.uleb128 0x42
 14158 3ace 530E0000 		.4byte	.LASF558
 14159 3ad2 01       		.byte	0x1
 14160 3ad3 3F       		.byte	0x3f
 14161 3ad4 26160000 		.4byte	0x1626
 14162 3ad8 05       		.byte	0x5
 14163 3ad9 03       		.byte	0x3
 14164 3ada 00000000 		.4byte	_ZL20FAT16SingletonObject
 14165 3ade 00       		.byte	0x0
 14166              		.section	.debug_abbrev
 14167 0000 01       		.uleb128 0x1
 14168 0001 11       		.uleb128 0x11
 14169 0002 01       		.byte	0x1
 14170 0003 25       		.uleb128 0x25
 14171 0004 0E       		.uleb128 0xe
 14172 0005 13       		.uleb128 0x13
 14173 0006 0B       		.uleb128 0xb
 14174 0007 03       		.uleb128 0x3
 14175 0008 0E       		.uleb128 0xe
 14176 0009 1B       		.uleb128 0x1b
 14177 000a 0E       		.uleb128 0xe
 14178 000b 11       		.uleb128 0x11
 14179 000c 01       		.uleb128 0x1
 14180 000d 52       		.uleb128 0x52
 14181 000e 01       		.uleb128 0x1
 14182 000f 55       		.uleb128 0x55
 14183 0010 06       		.uleb128 0x6
 14184 0011 10       		.uleb128 0x10
 14185 0012 06       		.uleb128 0x6
 14186 0013 00       		.byte	0x0
 14187 0014 00       		.byte	0x0
 14188 0015 02       		.uleb128 0x2
 14189 0016 16       		.uleb128 0x16
 14190 0017 00       		.byte	0x0
 14191 0018 03       		.uleb128 0x3
 14192 0019 0E       		.uleb128 0xe
 14193 001a 3A       		.uleb128 0x3a
 14194 001b 0B       		.uleb128 0xb
 14195 001c 3B       		.uleb128 0x3b
 14196 001d 0B       		.uleb128 0xb
 14197 001e 49       		.uleb128 0x49
ARM GAS  /tmp/ccNwMSzu.s 			page 284


 14198 001f 13       		.uleb128 0x13
 14199 0020 00       		.byte	0x0
 14200 0021 00       		.byte	0x0
 14201 0022 03       		.uleb128 0x3
 14202 0023 24       		.uleb128 0x24
 14203 0024 00       		.byte	0x0
 14204 0025 0B       		.uleb128 0xb
 14205 0026 0B       		.uleb128 0xb
 14206 0027 3E       		.uleb128 0x3e
 14207 0028 0B       		.uleb128 0xb
 14208 0029 03       		.uleb128 0x3
 14209 002a 0E       		.uleb128 0xe
 14210 002b 00       		.byte	0x0
 14211 002c 00       		.byte	0x0
 14212 002d 04       		.uleb128 0x4
 14213 002e 39       		.uleb128 0x39
 14214 002f 01       		.byte	0x1
 14215 0030 03       		.uleb128 0x3
 14216 0031 08       		.uleb128 0x8
 14217 0032 3A       		.uleb128 0x3a
 14218 0033 0B       		.uleb128 0xb
 14219 0034 3B       		.uleb128 0x3b
 14220 0035 0B       		.uleb128 0xb
 14221 0036 01       		.uleb128 0x1
 14222 0037 13       		.uleb128 0x13
 14223 0038 00       		.byte	0x0
 14224 0039 00       		.byte	0x0
 14225 003a 05       		.uleb128 0x5
 14226 003b 08       		.uleb128 0x8
 14227 003c 00       		.byte	0x0
 14228 003d 3A       		.uleb128 0x3a
 14229 003e 0B       		.uleb128 0xb
 14230 003f 3B       		.uleb128 0x3b
 14231 0040 0B       		.uleb128 0xb
 14232 0041 18       		.uleb128 0x18
 14233 0042 13       		.uleb128 0x13
 14234 0043 00       		.byte	0x0
 14235 0044 00       		.byte	0x0
 14236 0045 06       		.uleb128 0x6
 14237 0046 39       		.uleb128 0x39
 14238 0047 00       		.byte	0x0
 14239 0048 03       		.uleb128 0x3
 14240 0049 0E       		.uleb128 0xe
 14241 004a 3A       		.uleb128 0x3a
 14242 004b 0B       		.uleb128 0xb
 14243 004c 3B       		.uleb128 0x3b
 14244 004d 0B       		.uleb128 0xb
 14245 004e 00       		.byte	0x0
 14246 004f 00       		.byte	0x0
 14247 0050 07       		.uleb128 0x7
 14248 0051 24       		.uleb128 0x24
 14249 0052 00       		.byte	0x0
 14250 0053 0B       		.uleb128 0xb
 14251 0054 0B       		.uleb128 0xb
 14252 0055 3E       		.uleb128 0x3e
 14253 0056 0B       		.uleb128 0xb
 14254 0057 03       		.uleb128 0x3
ARM GAS  /tmp/ccNwMSzu.s 			page 285


 14255 0058 08       		.uleb128 0x8
 14256 0059 00       		.byte	0x0
 14257 005a 00       		.byte	0x0
 14258 005b 08       		.uleb128 0x8
 14259 005c 16       		.uleb128 0x16
 14260 005d 00       		.byte	0x0
 14261 005e 03       		.uleb128 0x3
 14262 005f 0E       		.uleb128 0xe
 14263 0060 3A       		.uleb128 0x3a
 14264 0061 0B       		.uleb128 0xb
 14265 0062 3B       		.uleb128 0x3b
 14266 0063 05       		.uleb128 0x5
 14267 0064 49       		.uleb128 0x49
 14268 0065 13       		.uleb128 0x13
 14269 0066 00       		.byte	0x0
 14270 0067 00       		.byte	0x0
 14271 0068 09       		.uleb128 0x9
 14272 0069 13       		.uleb128 0x13
 14273 006a 01       		.byte	0x1
 14274 006b 0B       		.uleb128 0xb
 14275 006c 0B       		.uleb128 0xb
 14276 006d 3A       		.uleb128 0x3a
 14277 006e 0B       		.uleb128 0xb
 14278 006f 3B       		.uleb128 0x3b
 14279 0070 0B       		.uleb128 0xb
 14280 0071 03       		.uleb128 0x3
 14281 0072 0E       		.uleb128 0xe
 14282 0073 01       		.uleb128 0x1
 14283 0074 13       		.uleb128 0x13
 14284 0075 00       		.byte	0x0
 14285 0076 00       		.byte	0x0
 14286 0077 0A       		.uleb128 0xa
 14287 0078 17       		.uleb128 0x17
 14288 0079 01       		.byte	0x1
 14289 007a 0B       		.uleb128 0xb
 14290 007b 0B       		.uleb128 0xb
 14291 007c 3A       		.uleb128 0x3a
 14292 007d 0B       		.uleb128 0xb
 14293 007e 3B       		.uleb128 0x3b
 14294 007f 0B       		.uleb128 0xb
 14295 0080 01       		.uleb128 0x1
 14296 0081 13       		.uleb128 0x13
 14297 0082 00       		.byte	0x0
 14298 0083 00       		.byte	0x0
 14299 0084 0B       		.uleb128 0xb
 14300 0085 0D       		.uleb128 0xd
 14301 0086 00       		.byte	0x0
 14302 0087 03       		.uleb128 0x3
 14303 0088 0E       		.uleb128 0xe
 14304 0089 3A       		.uleb128 0x3a
 14305 008a 0B       		.uleb128 0xb
 14306 008b 3B       		.uleb128 0x3b
 14307 008c 0B       		.uleb128 0xb
 14308 008d 49       		.uleb128 0x49
 14309 008e 13       		.uleb128 0x13
 14310 008f 00       		.byte	0x0
 14311 0090 00       		.byte	0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 286


 14312 0091 0C       		.uleb128 0xc
 14313 0092 0D       		.uleb128 0xd
 14314 0093 00       		.byte	0x0
 14315 0094 03       		.uleb128 0x3
 14316 0095 0E       		.uleb128 0xe
 14317 0096 3A       		.uleb128 0x3a
 14318 0097 0B       		.uleb128 0xb
 14319 0098 3B       		.uleb128 0x3b
 14320 0099 0B       		.uleb128 0xb
 14321 009a 49       		.uleb128 0x49
 14322 009b 13       		.uleb128 0x13
 14323 009c 38       		.uleb128 0x38
 14324 009d 0A       		.uleb128 0xa
 14325 009e 00       		.byte	0x0
 14326 009f 00       		.byte	0x0
 14327 00a0 0D       		.uleb128 0xd
 14328 00a1 01       		.uleb128 0x1
 14329 00a2 01       		.byte	0x1
 14330 00a3 49       		.uleb128 0x49
 14331 00a4 13       		.uleb128 0x13
 14332 00a5 01       		.uleb128 0x1
 14333 00a6 13       		.uleb128 0x13
 14334 00a7 00       		.byte	0x0
 14335 00a8 00       		.byte	0x0
 14336 00a9 0E       		.uleb128 0xe
 14337 00aa 21       		.uleb128 0x21
 14338 00ab 00       		.byte	0x0
 14339 00ac 49       		.uleb128 0x49
 14340 00ad 13       		.uleb128 0x13
 14341 00ae 2F       		.uleb128 0x2f
 14342 00af 0B       		.uleb128 0xb
 14343 00b0 00       		.byte	0x0
 14344 00b1 00       		.byte	0x0
 14345 00b2 0F       		.uleb128 0xf
 14346 00b3 0F       		.uleb128 0xf
 14347 00b4 00       		.byte	0x0
 14348 00b5 0B       		.uleb128 0xb
 14349 00b6 0B       		.uleb128 0xb
 14350 00b7 00       		.byte	0x0
 14351 00b8 00       		.byte	0x0
 14352 00b9 10       		.uleb128 0x10
 14353 00ba 13       		.uleb128 0x13
 14354 00bb 01       		.byte	0x1
 14355 00bc 03       		.uleb128 0x3
 14356 00bd 0E       		.uleb128 0xe
 14357 00be 0B       		.uleb128 0xb
 14358 00bf 0B       		.uleb128 0xb
 14359 00c0 3A       		.uleb128 0x3a
 14360 00c1 0B       		.uleb128 0xb
 14361 00c2 3B       		.uleb128 0x3b
 14362 00c3 0B       		.uleb128 0xb
 14363 00c4 01       		.uleb128 0x1
 14364 00c5 13       		.uleb128 0x13
 14365 00c6 00       		.byte	0x0
 14366 00c7 00       		.byte	0x0
 14367 00c8 11       		.uleb128 0x11
 14368 00c9 0D       		.uleb128 0xd
ARM GAS  /tmp/ccNwMSzu.s 			page 287


 14369 00ca 00       		.byte	0x0
 14370 00cb 03       		.uleb128 0x3
 14371 00cc 08       		.uleb128 0x8
 14372 00cd 3A       		.uleb128 0x3a
 14373 00ce 0B       		.uleb128 0xb
 14374 00cf 3B       		.uleb128 0x3b
 14375 00d0 0B       		.uleb128 0xb
 14376 00d1 49       		.uleb128 0x49
 14377 00d2 13       		.uleb128 0x13
 14378 00d3 38       		.uleb128 0x38
 14379 00d4 0A       		.uleb128 0xa
 14380 00d5 00       		.byte	0x0
 14381 00d6 00       		.byte	0x0
 14382 00d7 12       		.uleb128 0x12
 14383 00d8 0F       		.uleb128 0xf
 14384 00d9 00       		.byte	0x0
 14385 00da 0B       		.uleb128 0xb
 14386 00db 0B       		.uleb128 0xb
 14387 00dc 49       		.uleb128 0x49
 14388 00dd 13       		.uleb128 0x13
 14389 00de 00       		.byte	0x0
 14390 00df 00       		.byte	0x0
 14391 00e0 13       		.uleb128 0x13
 14392 00e1 13       		.uleb128 0x13
 14393 00e2 01       		.byte	0x1
 14394 00e3 03       		.uleb128 0x3
 14395 00e4 0E       		.uleb128 0xe
 14396 00e5 0B       		.uleb128 0xb
 14397 00e6 05       		.uleb128 0x5
 14398 00e7 3A       		.uleb128 0x3a
 14399 00e8 0B       		.uleb128 0xb
 14400 00e9 3B       		.uleb128 0x3b
 14401 00ea 0B       		.uleb128 0xb
 14402 00eb 01       		.uleb128 0x1
 14403 00ec 13       		.uleb128 0x13
 14404 00ed 00       		.byte	0x0
 14405 00ee 00       		.byte	0x0
 14406 00ef 14       		.uleb128 0x14
 14407 00f0 15       		.uleb128 0x15
 14408 00f1 00       		.byte	0x0
 14409 00f2 00       		.byte	0x0
 14410 00f3 00       		.byte	0x0
 14411 00f4 15       		.uleb128 0x15
 14412 00f5 15       		.uleb128 0x15
 14413 00f6 01       		.byte	0x1
 14414 00f7 49       		.uleb128 0x49
 14415 00f8 13       		.uleb128 0x13
 14416 00f9 01       		.uleb128 0x1
 14417 00fa 13       		.uleb128 0x13
 14418 00fb 00       		.byte	0x0
 14419 00fc 00       		.byte	0x0
 14420 00fd 16       		.uleb128 0x16
 14421 00fe 05       		.uleb128 0x5
 14422 00ff 00       		.byte	0x0
 14423 0100 49       		.uleb128 0x49
 14424 0101 13       		.uleb128 0x13
 14425 0102 00       		.byte	0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 288


 14426 0103 00       		.byte	0x0
 14427 0104 17       		.uleb128 0x17
 14428 0105 13       		.uleb128 0x13
 14429 0106 01       		.byte	0x1
 14430 0107 03       		.uleb128 0x3
 14431 0108 0E       		.uleb128 0xe
 14432 0109 0B       		.uleb128 0xb
 14433 010a 05       		.uleb128 0x5
 14434 010b 3A       		.uleb128 0x3a
 14435 010c 0B       		.uleb128 0xb
 14436 010d 3B       		.uleb128 0x3b
 14437 010e 05       		.uleb128 0x5
 14438 010f 01       		.uleb128 0x1
 14439 0110 13       		.uleb128 0x13
 14440 0111 00       		.byte	0x0
 14441 0112 00       		.byte	0x0
 14442 0113 18       		.uleb128 0x18
 14443 0114 17       		.uleb128 0x17
 14444 0115 01       		.byte	0x1
 14445 0116 0B       		.uleb128 0xb
 14446 0117 0B       		.uleb128 0xb
 14447 0118 3A       		.uleb128 0x3a
 14448 0119 0B       		.uleb128 0xb
 14449 011a 3B       		.uleb128 0x3b
 14450 011b 05       		.uleb128 0x5
 14451 011c 01       		.uleb128 0x1
 14452 011d 13       		.uleb128 0x13
 14453 011e 00       		.byte	0x0
 14454 011f 00       		.byte	0x0
 14455 0120 19       		.uleb128 0x19
 14456 0121 13       		.uleb128 0x13
 14457 0122 01       		.byte	0x1
 14458 0123 0B       		.uleb128 0xb
 14459 0124 0B       		.uleb128 0xb
 14460 0125 3A       		.uleb128 0x3a
 14461 0126 0B       		.uleb128 0xb
 14462 0127 3B       		.uleb128 0x3b
 14463 0128 05       		.uleb128 0x5
 14464 0129 01       		.uleb128 0x1
 14465 012a 13       		.uleb128 0x13
 14466 012b 00       		.byte	0x0
 14467 012c 00       		.byte	0x0
 14468 012d 1A       		.uleb128 0x1a
 14469 012e 0D       		.uleb128 0xd
 14470 012f 00       		.byte	0x0
 14471 0130 03       		.uleb128 0x3
 14472 0131 0E       		.uleb128 0xe
 14473 0132 3A       		.uleb128 0x3a
 14474 0133 0B       		.uleb128 0xb
 14475 0134 3B       		.uleb128 0x3b
 14476 0135 05       		.uleb128 0x5
 14477 0136 49       		.uleb128 0x49
 14478 0137 13       		.uleb128 0x13
 14479 0138 38       		.uleb128 0x38
 14480 0139 0A       		.uleb128 0xa
 14481 013a 00       		.byte	0x0
 14482 013b 00       		.byte	0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 289


 14483 013c 1B       		.uleb128 0x1b
 14484 013d 0D       		.uleb128 0xd
 14485 013e 00       		.byte	0x0
 14486 013f 03       		.uleb128 0x3
 14487 0140 0E       		.uleb128 0xe
 14488 0141 3A       		.uleb128 0x3a
 14489 0142 0B       		.uleb128 0xb
 14490 0143 3B       		.uleb128 0x3b
 14491 0144 05       		.uleb128 0x5
 14492 0145 49       		.uleb128 0x49
 14493 0146 13       		.uleb128 0x13
 14494 0147 00       		.byte	0x0
 14495 0148 00       		.byte	0x0
 14496 0149 1C       		.uleb128 0x1c
 14497 014a 26       		.uleb128 0x26
 14498 014b 00       		.byte	0x0
 14499 014c 49       		.uleb128 0x49
 14500 014d 13       		.uleb128 0x13
 14501 014e 00       		.byte	0x0
 14502 014f 00       		.byte	0x0
 14503 0150 1D       		.uleb128 0x1d
 14504 0151 13       		.uleb128 0x13
 14505 0152 01       		.byte	0x1
 14506 0153 03       		.uleb128 0x3
 14507 0154 0E       		.uleb128 0xe
 14508 0155 0B       		.uleb128 0xb
 14509 0156 0B       		.uleb128 0xb
 14510 0157 3A       		.uleb128 0x3a
 14511 0158 0B       		.uleb128 0xb
 14512 0159 3B       		.uleb128 0x3b
 14513 015a 05       		.uleb128 0x5
 14514 015b 01       		.uleb128 0x1
 14515 015c 13       		.uleb128 0x13
 14516 015d 00       		.byte	0x0
 14517 015e 00       		.byte	0x0
 14518 015f 1E       		.uleb128 0x1e
 14519 0160 15       		.uleb128 0x15
 14520 0161 01       		.byte	0x1
 14521 0162 01       		.uleb128 0x1
 14522 0163 13       		.uleb128 0x13
 14523 0164 00       		.byte	0x0
 14524 0165 00       		.byte	0x0
 14525 0166 1F       		.uleb128 0x1f
 14526 0167 0D       		.uleb128 0xd
 14527 0168 00       		.byte	0x0
 14528 0169 03       		.uleb128 0x3
 14529 016a 0E       		.uleb128 0xe
 14530 016b 49       		.uleb128 0x49
 14531 016c 13       		.uleb128 0x13
 14532 016d 38       		.uleb128 0x38
 14533 016e 0A       		.uleb128 0xa
 14534 016f 34       		.uleb128 0x34
 14535 0170 0C       		.uleb128 0xc
 14536 0171 00       		.byte	0x0
 14537 0172 00       		.byte	0x0
 14538 0173 20       		.uleb128 0x20
 14539 0174 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccNwMSzu.s 			page 290


 14540 0175 01       		.byte	0x1
 14541 0176 3F       		.uleb128 0x3f
 14542 0177 0C       		.uleb128 0xc
 14543 0178 03       		.uleb128 0x3
 14544 0179 0E       		.uleb128 0xe
 14545 017a 3A       		.uleb128 0x3a
 14546 017b 0B       		.uleb128 0xb
 14547 017c 3B       		.uleb128 0x3b
 14548 017d 05       		.uleb128 0x5
 14549 017e 3C       		.uleb128 0x3c
 14550 017f 0C       		.uleb128 0xc
 14551 0180 01       		.uleb128 0x1
 14552 0181 13       		.uleb128 0x13
 14553 0182 00       		.byte	0x0
 14554 0183 00       		.byte	0x0
 14555 0184 21       		.uleb128 0x21
 14556 0185 2E       		.uleb128 0x2e
 14557 0186 01       		.byte	0x1
 14558 0187 3F       		.uleb128 0x3f
 14559 0188 0C       		.uleb128 0xc
 14560 0189 03       		.uleb128 0x3
 14561 018a 0E       		.uleb128 0xe
 14562 018b 3A       		.uleb128 0x3a
 14563 018c 0B       		.uleb128 0xb
 14564 018d 3B       		.uleb128 0x3b
 14565 018e 0B       		.uleb128 0xb
 14566 018f 49       		.uleb128 0x49
 14567 0190 13       		.uleb128 0x13
 14568 0191 3C       		.uleb128 0x3c
 14569 0192 0C       		.uleb128 0xc
 14570 0193 01       		.uleb128 0x1
 14571 0194 13       		.uleb128 0x13
 14572 0195 00       		.byte	0x0
 14573 0196 00       		.byte	0x0
 14574 0197 22       		.uleb128 0x22
 14575 0198 2E       		.uleb128 0x2e
 14576 0199 01       		.byte	0x1
 14577 019a 3F       		.uleb128 0x3f
 14578 019b 0C       		.uleb128 0xc
 14579 019c 03       		.uleb128 0x3
 14580 019d 0E       		.uleb128 0xe
 14581 019e 3A       		.uleb128 0x3a
 14582 019f 0B       		.uleb128 0xb
 14583 01a0 3B       		.uleb128 0x3b
 14584 01a1 05       		.uleb128 0x5
 14585 01a2 49       		.uleb128 0x49
 14586 01a3 13       		.uleb128 0x13
 14587 01a4 3C       		.uleb128 0x3c
 14588 01a5 0C       		.uleb128 0xc
 14589 01a6 01       		.uleb128 0x1
 14590 01a7 13       		.uleb128 0x13
 14591 01a8 00       		.byte	0x0
 14592 01a9 00       		.byte	0x0
 14593 01aa 23       		.uleb128 0x23
 14594 01ab 2E       		.uleb128 0x2e
 14595 01ac 00       		.byte	0x0
 14596 01ad 3F       		.uleb128 0x3f
ARM GAS  /tmp/ccNwMSzu.s 			page 291


 14597 01ae 0C       		.uleb128 0xc
 14598 01af 03       		.uleb128 0x3
 14599 01b0 0E       		.uleb128 0xe
 14600 01b1 3A       		.uleb128 0x3a
 14601 01b2 0B       		.uleb128 0xb
 14602 01b3 3B       		.uleb128 0x3b
 14603 01b4 0B       		.uleb128 0xb
 14604 01b5 49       		.uleb128 0x49
 14605 01b6 13       		.uleb128 0x13
 14606 01b7 3C       		.uleb128 0x3c
 14607 01b8 0C       		.uleb128 0xc
 14608 01b9 00       		.byte	0x0
 14609 01ba 00       		.byte	0x0
 14610 01bb 24       		.uleb128 0x24
 14611 01bc 2E       		.uleb128 0x2e
 14612 01bd 01       		.byte	0x1
 14613 01be 3F       		.uleb128 0x3f
 14614 01bf 0C       		.uleb128 0xc
 14615 01c0 03       		.uleb128 0x3
 14616 01c1 0E       		.uleb128 0xe
 14617 01c2 3A       		.uleb128 0x3a
 14618 01c3 0B       		.uleb128 0xb
 14619 01c4 3B       		.uleb128 0x3b
 14620 01c5 0B       		.uleb128 0xb
 14621 01c6 3C       		.uleb128 0x3c
 14622 01c7 0C       		.uleb128 0xc
 14623 01c8 01       		.uleb128 0x1
 14624 01c9 13       		.uleb128 0x13
 14625 01ca 00       		.byte	0x0
 14626 01cb 00       		.byte	0x0
 14627 01cc 25       		.uleb128 0x25
 14628 01cd 26       		.uleb128 0x26
 14629 01ce 00       		.byte	0x0
 14630 01cf 00       		.byte	0x0
 14631 01d0 00       		.byte	0x0
 14632 01d1 26       		.uleb128 0x26
 14633 01d2 2E       		.uleb128 0x2e
 14634 01d3 01       		.byte	0x1
 14635 01d4 3F       		.uleb128 0x3f
 14636 01d5 0C       		.uleb128 0xc
 14637 01d6 03       		.uleb128 0x3
 14638 01d7 08       		.uleb128 0x8
 14639 01d8 3A       		.uleb128 0x3a
 14640 01d9 0B       		.uleb128 0xb
 14641 01da 3B       		.uleb128 0x3b
 14642 01db 0B       		.uleb128 0xb
 14643 01dc 49       		.uleb128 0x49
 14644 01dd 13       		.uleb128 0x13
 14645 01de 3C       		.uleb128 0x3c
 14646 01df 0C       		.uleb128 0xc
 14647 01e0 01       		.uleb128 0x1
 14648 01e1 13       		.uleb128 0x13
 14649 01e2 00       		.byte	0x0
 14650 01e3 00       		.byte	0x0
 14651 01e4 27       		.uleb128 0x27
 14652 01e5 13       		.uleb128 0x13
 14653 01e6 01       		.byte	0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 292


 14654 01e7 03       		.uleb128 0x3
 14655 01e8 08       		.uleb128 0x8
 14656 01e9 0B       		.uleb128 0xb
 14657 01ea 0B       		.uleb128 0xb
 14658 01eb 3A       		.uleb128 0x3a
 14659 01ec 0B       		.uleb128 0xb
 14660 01ed 3B       		.uleb128 0x3b
 14661 01ee 0B       		.uleb128 0xb
 14662 01ef 01       		.uleb128 0x1
 14663 01f0 13       		.uleb128 0x13
 14664 01f1 00       		.byte	0x0
 14665 01f2 00       		.byte	0x0
 14666 01f3 28       		.uleb128 0x28
 14667 01f4 02       		.uleb128 0x2
 14668 01f5 01       		.byte	0x1
 14669 01f6 03       		.uleb128 0x3
 14670 01f7 0E       		.uleb128 0xe
 14671 01f8 0B       		.uleb128 0xb
 14672 01f9 05       		.uleb128 0x5
 14673 01fa 3A       		.uleb128 0x3a
 14674 01fb 0B       		.uleb128 0xb
 14675 01fc 3B       		.uleb128 0x3b
 14676 01fd 0B       		.uleb128 0xb
 14677 01fe 01       		.uleb128 0x1
 14678 01ff 13       		.uleb128 0x13
 14679 0200 00       		.byte	0x0
 14680 0201 00       		.byte	0x0
 14681 0202 29       		.uleb128 0x29
 14682 0203 0D       		.uleb128 0xd
 14683 0204 00       		.byte	0x0
 14684 0205 03       		.uleb128 0x3
 14685 0206 0E       		.uleb128 0xe
 14686 0207 3A       		.uleb128 0x3a
 14687 0208 0B       		.uleb128 0xb
 14688 0209 3B       		.uleb128 0x3b
 14689 020a 0B       		.uleb128 0xb
 14690 020b 8740     		.uleb128 0x2007
 14691 020d 0E       		.uleb128 0xe
 14692 020e 49       		.uleb128 0x49
 14693 020f 13       		.uleb128 0x13
 14694 0210 3F       		.uleb128 0x3f
 14695 0211 0C       		.uleb128 0xc
 14696 0212 32       		.uleb128 0x32
 14697 0213 0B       		.uleb128 0xb
 14698 0214 3C       		.uleb128 0x3c
 14699 0215 0C       		.uleb128 0xc
 14700 0216 1C       		.uleb128 0x1c
 14701 0217 05       		.uleb128 0x5
 14702 0218 00       		.byte	0x0
 14703 0219 00       		.byte	0x0
 14704 021a 2A       		.uleb128 0x2a
 14705 021b 0D       		.uleb128 0xd
 14706 021c 00       		.byte	0x0
 14707 021d 03       		.uleb128 0x3
 14708 021e 0E       		.uleb128 0xe
 14709 021f 3A       		.uleb128 0x3a
 14710 0220 0B       		.uleb128 0xb
ARM GAS  /tmp/ccNwMSzu.s 			page 293


 14711 0221 3B       		.uleb128 0x3b
 14712 0222 0B       		.uleb128 0xb
 14713 0223 8740     		.uleb128 0x2007
 14714 0225 0E       		.uleb128 0xe
 14715 0226 49       		.uleb128 0x49
 14716 0227 13       		.uleb128 0x13
 14717 0228 3F       		.uleb128 0x3f
 14718 0229 0C       		.uleb128 0xc
 14719 022a 32       		.uleb128 0x32
 14720 022b 0B       		.uleb128 0xb
 14721 022c 3C       		.uleb128 0x3c
 14722 022d 0C       		.uleb128 0xc
 14723 022e 1C       		.uleb128 0x1c
 14724 022f 0B       		.uleb128 0xb
 14725 0230 00       		.byte	0x0
 14726 0231 00       		.byte	0x0
 14727 0232 2B       		.uleb128 0x2b
 14728 0233 0D       		.uleb128 0xd
 14729 0234 00       		.byte	0x0
 14730 0235 03       		.uleb128 0x3
 14731 0236 0E       		.uleb128 0xe
 14732 0237 3A       		.uleb128 0x3a
 14733 0238 0B       		.uleb128 0xb
 14734 0239 3B       		.uleb128 0x3b
 14735 023a 0B       		.uleb128 0xb
 14736 023b 49       		.uleb128 0x49
 14737 023c 13       		.uleb128 0x13
 14738 023d 38       		.uleb128 0x38
 14739 023e 0A       		.uleb128 0xa
 14740 023f 32       		.uleb128 0x32
 14741 0240 0B       		.uleb128 0xb
 14742 0241 00       		.byte	0x0
 14743 0242 00       		.byte	0x0
 14744 0243 2C       		.uleb128 0x2c
 14745 0244 05       		.uleb128 0x5
 14746 0245 00       		.byte	0x0
 14747 0246 49       		.uleb128 0x49
 14748 0247 13       		.uleb128 0x13
 14749 0248 34       		.uleb128 0x34
 14750 0249 0C       		.uleb128 0xc
 14751 024a 00       		.byte	0x0
 14752 024b 00       		.byte	0x0
 14753 024c 2D       		.uleb128 0x2d
 14754 024d 2E       		.uleb128 0x2e
 14755 024e 01       		.byte	0x1
 14756 024f 3F       		.uleb128 0x3f
 14757 0250 0C       		.uleb128 0xc
 14758 0251 03       		.uleb128 0x3
 14759 0252 0E       		.uleb128 0xe
 14760 0253 3A       		.uleb128 0x3a
 14761 0254 0B       		.uleb128 0xb
 14762 0255 3B       		.uleb128 0x3b
 14763 0256 0B       		.uleb128 0xb
 14764 0257 8740     		.uleb128 0x2007
 14765 0259 0E       		.uleb128 0xe
 14766 025a 3C       		.uleb128 0x3c
 14767 025b 0C       		.uleb128 0xc
ARM GAS  /tmp/ccNwMSzu.s 			page 294


 14768 025c 01       		.uleb128 0x1
 14769 025d 13       		.uleb128 0x13
 14770 025e 00       		.byte	0x0
 14771 025f 00       		.byte	0x0
 14772 0260 2E       		.uleb128 0x2e
 14773 0261 2E       		.uleb128 0x2e
 14774 0262 01       		.byte	0x1
 14775 0263 3F       		.uleb128 0x3f
 14776 0264 0C       		.uleb128 0xc
 14777 0265 03       		.uleb128 0x3
 14778 0266 0E       		.uleb128 0xe
 14779 0267 3A       		.uleb128 0x3a
 14780 0268 0B       		.uleb128 0xb
 14781 0269 3B       		.uleb128 0x3b
 14782 026a 0B       		.uleb128 0xb
 14783 026b 8740     		.uleb128 0x2007
 14784 026d 0E       		.uleb128 0xe
 14785 026e 49       		.uleb128 0x49
 14786 026f 13       		.uleb128 0x13
 14787 0270 3C       		.uleb128 0x3c
 14788 0271 0C       		.uleb128 0xc
 14789 0272 01       		.uleb128 0x1
 14790 0273 13       		.uleb128 0x13
 14791 0274 00       		.byte	0x0
 14792 0275 00       		.byte	0x0
 14793 0276 2F       		.uleb128 0x2f
 14794 0277 2E       		.uleb128 0x2e
 14795 0278 01       		.byte	0x1
 14796 0279 3F       		.uleb128 0x3f
 14797 027a 0C       		.uleb128 0xc
 14798 027b 03       		.uleb128 0x3
 14799 027c 0E       		.uleb128 0xe
 14800 027d 3A       		.uleb128 0x3a
 14801 027e 0B       		.uleb128 0xb
 14802 027f 3B       		.uleb128 0x3b
 14803 0280 0B       		.uleb128 0xb
 14804 0281 8740     		.uleb128 0x2007
 14805 0283 0E       		.uleb128 0xe
 14806 0284 3C       		.uleb128 0x3c
 14807 0285 0C       		.uleb128 0xc
 14808 0286 00       		.byte	0x0
 14809 0287 00       		.byte	0x0
 14810 0288 30       		.uleb128 0x30
 14811 0289 04       		.uleb128 0x4
 14812 028a 01       		.byte	0x1
 14813 028b 0B       		.uleb128 0xb
 14814 028c 0B       		.uleb128 0xb
 14815 028d 3A       		.uleb128 0x3a
 14816 028e 0B       		.uleb128 0xb
 14817 028f 3B       		.uleb128 0x3b
 14818 0290 0B       		.uleb128 0xb
 14819 0291 03       		.uleb128 0x3
 14820 0292 0E       		.uleb128 0xe
 14821 0293 01       		.uleb128 0x1
 14822 0294 13       		.uleb128 0x13
 14823 0295 00       		.byte	0x0
 14824 0296 00       		.byte	0x0
ARM GAS  /tmp/ccNwMSzu.s 			page 295


 14825 0297 31       		.uleb128 0x31
 14826 0298 28       		.uleb128 0x28
 14827 0299 00       		.byte	0x0
 14828 029a 03       		.uleb128 0x3
 14829 029b 0E       		.uleb128 0xe
 14830 029c 1C       		.uleb128 0x1c
 14831 029d 0D       		.uleb128 0xd
 14832 029e 00       		.byte	0x0
 14833 029f 00       		.byte	0x0
 14834 02a0 32       		.uleb128 0x32
 14835 02a1 1C       		.uleb128 0x1c
 14836 02a2 00       		.byte	0x0
 14837 02a3 49       		.uleb128 0x49
 14838 02a4 13       		.uleb128 0x13
 14839 02a5 38       		.uleb128 0x38
 14840 02a6 0A       		.uleb128 0xa
 14841 02a7 32       		.uleb128 0x32
 14842 02a8 0B       		.uleb128 0xb
 14843 02a9 00       		.byte	0x0
 14844 02aa 00       		.byte	0x0
 14845 02ab 33       		.uleb128 0x33
 14846 02ac 2E       		.uleb128 0x2e
 14847 02ad 01       		.byte	0x1
 14848 02ae 3F       		.uleb128 0x3f
 14849 02af 0C       		.uleb128 0xc
 14850 02b0 03       		.uleb128 0x3
 14851 02b1 08       		.uleb128 0x8
 14852 02b2 3A       		.uleb128 0x3a
 14853 02b3 0B       		.uleb128 0xb
 14854 02b4 3B       		.uleb128 0x3b
 14855 02b5 0B       		.uleb128 0xb
 14856 02b6 8740     		.uleb128 0x2007
 14857 02b8 0E       		.uleb128 0xe
 14858 02b9 3C       		.uleb128 0x3c
 14859 02ba 0C       		.uleb128 0xc
 14860 02bb 01       		.uleb128 0x1
 14861 02bc 13       		.uleb128 0x13
 14862 02bd 00       		.byte	0x0
 14863 02be 00       		.byte	0x0
 14864 02bf 34       		.uleb128 0x34
 14865 02c0 18       		.uleb128 0x18
 14866 02c1 00       		.byte	0x0
 14867 02c2 00       		.byte	0x0
 14868 02c3 00       		.byte	0x0
 14869 02c4 35       		.uleb128 0x35
 14870 02c5 2E       		.uleb128 0x2e
 14871 02c6 00       		.byte	0x0
 14872 02c7 3F       		.uleb128 0x3f
 14873 02c8 0C       		.uleb128 0xc
 14874 02c9 03       		.uleb128 0x3
 14875 02ca 0E       		.uleb128 0xe
 14876 02cb 3A       		.uleb128 0x3a
 14877 02cc 0B       		.uleb128 0xb
 14878 02cd 3B       		.uleb128 0x3b
 14879 02ce 0B       		.uleb128 0xb
 14880 02cf 8740     		.uleb128 0x2007
 14881 02d1 0E       		.uleb128 0xe
ARM GAS  /tmp/ccNwMSzu.s 			page 296


 14882 02d2 49       		.uleb128 0x49
 14883 02d3 13       		.uleb128 0x13
 14884 02d4 3C       		.uleb128 0x3c
 14885 02d5 0C       		.uleb128 0xc
 14886 02d6 00       		.byte	0x0
 14887 02d7 00       		.byte	0x0
 14888 02d8 36       		.uleb128 0x36
 14889 02d9 0D       		.uleb128 0xd
 14890 02da 00       		.byte	0x0
 14891 02db 03       		.uleb128 0x3
 14892 02dc 08       		.uleb128 0x8
 14893 02dd 3A       		.uleb128 0x3a
 14894 02de 0B       		.uleb128 0xb
 14895 02df 3B       		.uleb128 0x3b
 14896 02e0 05       		.uleb128 0x5
 14897 02e1 49       		.uleb128 0x49
 14898 02e2 13       		.uleb128 0x13
 14899 02e3 38       		.uleb128 0x38
 14900 02e4 0A       		.uleb128 0xa
 14901 02e5 00       		.byte	0x0
 14902 02e6 00       		.byte	0x0
 14903 02e7 37       		.uleb128 0x37
 14904 02e8 2E       		.uleb128 0x2e
 14905 02e9 01       		.byte	0x1
 14906 02ea 3F       		.uleb128 0x3f
 14907 02eb 0C       		.uleb128 0xc
 14908 02ec 03       		.uleb128 0x3
 14909 02ed 0E       		.uleb128 0xe
 14910 02ee 3A       		.uleb128 0x3a
 14911 02ef 0B       		.uleb128 0xb
 14912 02f0 3B       		.uleb128 0x3b
 14913 02f1 05       		.uleb128 0x5
 14914 02f2 8740     		.uleb128 0x2007
 14915 02f4 0E       		.uleb128 0xe
 14916 02f5 3C       		.uleb128 0x3c
 14917 02f6 0C       		.uleb128 0xc
 14918 02f7 01       		.uleb128 0x1
 14919 02f8 13       		.uleb128 0x13
 14920 02f9 00       		.byte	0x0
 14921 02fa 00       		.byte	0x0
 14922 02fb 38       		.uleb128 0x38
 14923 02fc 2E       		.uleb128 0x2e
 14924 02fd 00       		.byte	0x0
 14925 02fe 3F       		.uleb128 0x3f
 14926 02ff 0C       		.uleb128 0xc
 14927 0300 03       		.uleb128 0x3
 14928 0301 0E       		.uleb128 0xe
 14929 0302 3A       		.uleb128 0x3a
 14930 0303 0B       		.uleb128 0xb
 14931 0304 3B       		.uleb128 0x3b
 14932 0305 05       		.uleb128 0x5
 14933 0306 8740     		.uleb128 0x2007
 14934 0308 0E       		.uleb128 0xe
 14935 0309 49       		.uleb128 0x49
 14936 030a 13       		.uleb128 0x13
 14937 030b 3C       		.uleb128 0x3c
 14938 030c 0C       		.uleb128 0xc
ARM GAS  /tmp/ccNwMSzu.s 			page 297


 14939 030d 00       		.byte	0x0
 14940 030e 00       		.byte	0x0
 14941 030f 39       		.uleb128 0x39
 14942 0310 2E       		.uleb128 0x2e
 14943 0311 01       		.byte	0x1
 14944 0312 3F       		.uleb128 0x3f
 14945 0313 0C       		.uleb128 0xc
 14946 0314 03       		.uleb128 0x3
 14947 0315 0E       		.uleb128 0xe
 14948 0316 3A       		.uleb128 0x3a
 14949 0317 0B       		.uleb128 0xb
 14950 0318 3B       		.uleb128 0x3b
 14951 0319 05       		.uleb128 0x5
 14952 031a 8740     		.uleb128 0x2007
 14953 031c 0E       		.uleb128 0xe
 14954 031d 49       		.uleb128 0x49
 14955 031e 13       		.uleb128 0x13
 14956 031f 3C       		.uleb128 0x3c
 14957 0320 0C       		.uleb128 0xc
 14958 0321 01       		.uleb128 0x1
 14959 0322 13       		.uleb128 0x13
 14960 0323 00       		.byte	0x0
 14961 0324 00       		.byte	0x0
 14962 0325 3A       		.uleb128 0x3a
 14963 0326 2E       		.uleb128 0x2e
 14964 0327 01       		.byte	0x1
 14965 0328 3F       		.uleb128 0x3f
 14966 0329 0C       		.uleb128 0xc
 14967 032a 03       		.uleb128 0x3
 14968 032b 0E       		.uleb128 0xe
 14969 032c 3A       		.uleb128 0x3a
 14970 032d 0B       		.uleb128 0xb
 14971 032e 3B       		.uleb128 0x3b
 14972 032f 05       		.uleb128 0x5
 14973 0330 8740     		.uleb128 0x2007
 14974 0332 0E       		.uleb128 0xe
 14975 0333 49       		.uleb128 0x49
 14976 0334 13       		.uleb128 0x13
 14977 0335 3C       		.uleb128 0x3c
 14978 0336 0C       		.uleb128 0xc
 14979 0337 00       		.byte	0x0
 14980 0338 00       		.byte	0x0
 14981 0339 3B       		.uleb128 0x3b
 14982 033a 13       		.uleb128 0x13
 14983 033b 01       		.byte	0x1
 14984 033c 0B       		.uleb128 0xb
 14985 033d 0B       		.uleb128 0xb
 14986 033e 3A       		.uleb128 0x3a
 14987 033f 0B       		.uleb128 0xb
 14988 0340 3B       		.uleb128 0x3b
 14989 0341 0B       		.uleb128 0xb
 14990 0342 01       		.uleb128 0x1
 14991 0343 13       		.uleb128 0x13
 14992 0344 00       		.byte	0x0
 14993 0345 00       		.byte	0x0
 14994 0346 3C       		.uleb128 0x3c
 14995 0347 21       		.uleb128 0x21
ARM GAS  /tmp/ccNwMSzu.s 			page 298


 14996 0348 00       		.byte	0x0
 14997 0349 49       		.uleb128 0x49
 14998 034a 13       		.uleb128 0x13
 14999 034b 2F       		.uleb128 0x2f
 15000 034c 05       		.uleb128 0x5
 15001 034d 00       		.byte	0x0
 15002 034e 00       		.byte	0x0
 15003 034f 3D       		.uleb128 0x3d
 15004 0350 2E       		.uleb128 0x2e
 15005 0351 00       		.byte	0x0
 15006 0352 47       		.uleb128 0x47
 15007 0353 13       		.uleb128 0x13
 15008 0354 3A       		.uleb128 0x3a
 15009 0355 0B       		.uleb128 0xb
 15010 0356 3B       		.uleb128 0x3b
 15011 0357 0B       		.uleb128 0xb
 15012 0358 11       		.uleb128 0x11
 15013 0359 01       		.uleb128 0x1
 15014 035a 12       		.uleb128 0x12
 15015 035b 01       		.uleb128 0x1
 15016 035c 40       		.uleb128 0x40
 15017 035d 0A       		.uleb128 0xa
 15018 035e 00       		.byte	0x0
 15019 035f 00       		.byte	0x0
 15020 0360 3E       		.uleb128 0x3e
 15021 0361 2E       		.uleb128 0x2e
 15022 0362 01       		.byte	0x1
 15023 0363 47       		.uleb128 0x47
 15024 0364 13       		.uleb128 0x13
 15025 0365 3A       		.uleb128 0x3a
 15026 0366 0B       		.uleb128 0xb
 15027 0367 3B       		.uleb128 0x3b
 15028 0368 0B       		.uleb128 0xb
 15029 0369 11       		.uleb128 0x11
 15030 036a 01       		.uleb128 0x1
 15031 036b 12       		.uleb128 0x12
 15032 036c 01       		.uleb128 0x1
 15033 036d 40       		.uleb128 0x40
 15034 036e 06       		.uleb128 0x6
 15035 036f 01       		.uleb128 0x1
 15036 0370 13       		.uleb128 0x13
 15037 0371 00       		.byte	0x0
 15038 0372 00       		.byte	0x0
 15039 0373 3F       		.uleb128 0x3f
 15040 0374 05       		.uleb128 0x5
 15041 0375 00       		.byte	0x0
 15042 0376 03       		.uleb128 0x3
 15043 0377 0E       		.uleb128 0xe
 15044 0378 49       		.uleb128 0x49
 15045 0379 13       		.uleb128 0x13
 15046 037a 34       		.uleb128 0x34
 15047 037b 0C       		.uleb128 0xc
 15048 037c 02       		.uleb128 0x2
 15049 037d 0A       		.uleb128 0xa
 15050 037e 00       		.byte	0x0
 15051 037f 00       		.byte	0x0
 15052 0380 40       		.uleb128 0x40
ARM GAS  /tmp/ccNwMSzu.s 			page 299


 15053 0381 05       		.uleb128 0x5
 15054 0382 00       		.byte	0x0
 15055 0383 03       		.uleb128 0x3
 15056 0384 0E       		.uleb128 0xe
 15057 0385 3A       		.uleb128 0x3a
 15058 0386 0B       		.uleb128 0xb
 15059 0387 3B       		.uleb128 0x3b
 15060 0388 0B       		.uleb128 0xb
 15061 0389 49       		.uleb128 0x49
 15062 038a 13       		.uleb128 0x13
 15063 038b 02       		.uleb128 0x2
 15064 038c 0A       		.uleb128 0xa
 15065 038d 00       		.byte	0x0
 15066 038e 00       		.byte	0x0
 15067 038f 41       		.uleb128 0x41
 15068 0390 0B       		.uleb128 0xb
 15069 0391 01       		.byte	0x1
 15070 0392 11       		.uleb128 0x11
 15071 0393 01       		.uleb128 0x1
 15072 0394 12       		.uleb128 0x12
 15073 0395 01       		.uleb128 0x1
 15074 0396 00       		.byte	0x0
 15075 0397 00       		.byte	0x0
 15076 0398 42       		.uleb128 0x42
 15077 0399 34       		.uleb128 0x34
 15078 039a 00       		.byte	0x0
 15079 039b 03       		.uleb128 0x3
 15080 039c 0E       		.uleb128 0xe
 15081 039d 3A       		.uleb128 0x3a
 15082 039e 0B       		.uleb128 0xb
 15083 039f 3B       		.uleb128 0x3b
 15084 03a0 0B       		.uleb128 0xb
 15085 03a1 49       		.uleb128 0x49
 15086 03a2 13       		.uleb128 0x13
 15087 03a3 02       		.uleb128 0x2
 15088 03a4 0A       		.uleb128 0xa
 15089 03a5 00       		.byte	0x0
 15090 03a6 00       		.byte	0x0
 15091 03a7 43       		.uleb128 0x43
 15092 03a8 34       		.uleb128 0x34
 15093 03a9 00       		.byte	0x0
 15094 03aa 03       		.uleb128 0x3
 15095 03ab 08       		.uleb128 0x8
 15096 03ac 3A       		.uleb128 0x3a
 15097 03ad 0B       		.uleb128 0xb
 15098 03ae 3B       		.uleb128 0x3b
 15099 03af 0B       		.uleb128 0xb
 15100 03b0 49       		.uleb128 0x49
 15101 03b1 13       		.uleb128 0x13
 15102 03b2 02       		.uleb128 0x2
 15103 03b3 0A       		.uleb128 0xa
 15104 03b4 00       		.byte	0x0
 15105 03b5 00       		.byte	0x0
 15106 03b6 44       		.uleb128 0x44
 15107 03b7 05       		.uleb128 0x5
 15108 03b8 00       		.byte	0x0
 15109 03b9 03       		.uleb128 0x3
ARM GAS  /tmp/ccNwMSzu.s 			page 300


 15110 03ba 08       		.uleb128 0x8
 15111 03bb 3A       		.uleb128 0x3a
 15112 03bc 0B       		.uleb128 0xb
 15113 03bd 3B       		.uleb128 0x3b
 15114 03be 0B       		.uleb128 0xb
 15115 03bf 49       		.uleb128 0x49
 15116 03c0 13       		.uleb128 0x13
 15117 03c1 02       		.uleb128 0x2
 15118 03c2 0A       		.uleb128 0xa
 15119 03c3 00       		.byte	0x0
 15120 03c4 00       		.byte	0x0
 15121 03c5 45       		.uleb128 0x45
 15122 03c6 34       		.uleb128 0x34
 15123 03c7 00       		.byte	0x0
 15124 03c8 03       		.uleb128 0x3
 15125 03c9 0E       		.uleb128 0xe
 15126 03ca 3A       		.uleb128 0x3a
 15127 03cb 0B       		.uleb128 0xb
 15128 03cc 3B       		.uleb128 0x3b
 15129 03cd 05       		.uleb128 0x5
 15130 03ce 49       		.uleb128 0x49
 15131 03cf 13       		.uleb128 0x13
 15132 03d0 02       		.uleb128 0x2
 15133 03d1 0A       		.uleb128 0xa
 15134 03d2 00       		.byte	0x0
 15135 03d3 00       		.byte	0x0
 15136 03d4 46       		.uleb128 0x46
 15137 03d5 34       		.uleb128 0x34
 15138 03d6 00       		.byte	0x0
 15139 03d7 03       		.uleb128 0x3
 15140 03d8 08       		.uleb128 0x8
 15141 03d9 3A       		.uleb128 0x3a
 15142 03da 0B       		.uleb128 0xb
 15143 03db 3B       		.uleb128 0x3b
 15144 03dc 05       		.uleb128 0x5
 15145 03dd 49       		.uleb128 0x49
 15146 03de 13       		.uleb128 0x13
 15147 03df 02       		.uleb128 0x2
 15148 03e0 0A       		.uleb128 0xa
 15149 03e1 00       		.byte	0x0
 15150 03e2 00       		.byte	0x0
 15151 03e3 47       		.uleb128 0x47
 15152 03e4 2E       		.uleb128 0x2e
 15153 03e5 01       		.byte	0x1
 15154 03e6 47       		.uleb128 0x47
 15155 03e7 13       		.uleb128 0x13
 15156 03e8 3A       		.uleb128 0x3a
 15157 03e9 0B       		.uleb128 0xb
 15158 03ea 3B       		.uleb128 0x3b
 15159 03eb 05       		.uleb128 0x5
 15160 03ec 11       		.uleb128 0x11
 15161 03ed 01       		.uleb128 0x1
 15162 03ee 12       		.uleb128 0x12
 15163 03ef 01       		.uleb128 0x1
 15164 03f0 40       		.uleb128 0x40
 15165 03f1 06       		.uleb128 0x6
 15166 03f2 01       		.uleb128 0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 301


 15167 03f3 13       		.uleb128 0x13
 15168 03f4 00       		.byte	0x0
 15169 03f5 00       		.byte	0x0
 15170 03f6 48       		.uleb128 0x48
 15171 03f7 05       		.uleb128 0x5
 15172 03f8 00       		.byte	0x0
 15173 03f9 03       		.uleb128 0x3
 15174 03fa 08       		.uleb128 0x8
 15175 03fb 3A       		.uleb128 0x3a
 15176 03fc 0B       		.uleb128 0xb
 15177 03fd 3B       		.uleb128 0x3b
 15178 03fe 05       		.uleb128 0x5
 15179 03ff 49       		.uleb128 0x49
 15180 0400 13       		.uleb128 0x13
 15181 0401 02       		.uleb128 0x2
 15182 0402 0A       		.uleb128 0xa
 15183 0403 00       		.byte	0x0
 15184 0404 00       		.byte	0x0
 15185 0405 49       		.uleb128 0x49
 15186 0406 05       		.uleb128 0x5
 15187 0407 00       		.byte	0x0
 15188 0408 03       		.uleb128 0x3
 15189 0409 0E       		.uleb128 0xe
 15190 040a 3A       		.uleb128 0x3a
 15191 040b 0B       		.uleb128 0xb
 15192 040c 3B       		.uleb128 0x3b
 15193 040d 05       		.uleb128 0x5
 15194 040e 49       		.uleb128 0x49
 15195 040f 13       		.uleb128 0x13
 15196 0410 02       		.uleb128 0x2
 15197 0411 0A       		.uleb128 0xa
 15198 0412 00       		.byte	0x0
 15199 0413 00       		.byte	0x0
 15200 0414 4A       		.uleb128 0x4a
 15201 0415 0B       		.uleb128 0xb
 15202 0416 01       		.byte	0x1
 15203 0417 11       		.uleb128 0x11
 15204 0418 01       		.uleb128 0x1
 15205 0419 12       		.uleb128 0x12
 15206 041a 01       		.uleb128 0x1
 15207 041b 01       		.uleb128 0x1
 15208 041c 13       		.uleb128 0x13
 15209 041d 00       		.byte	0x0
 15210 041e 00       		.byte	0x0
 15211 041f 4B       		.uleb128 0x4b
 15212 0420 0B       		.uleb128 0xb
 15213 0421 01       		.byte	0x1
 15214 0422 55       		.uleb128 0x55
 15215 0423 06       		.uleb128 0x6
 15216 0424 00       		.byte	0x0
 15217 0425 00       		.byte	0x0
 15218 0426 4C       		.uleb128 0x4c
 15219 0427 0B       		.uleb128 0xb
 15220 0428 01       		.byte	0x1
 15221 0429 55       		.uleb128 0x55
 15222 042a 06       		.uleb128 0x6
 15223 042b 01       		.uleb128 0x1
ARM GAS  /tmp/ccNwMSzu.s 			page 302


 15224 042c 13       		.uleb128 0x13
 15225 042d 00       		.byte	0x0
 15226 042e 00       		.byte	0x0
 15227 042f 00       		.byte	0x0
 15228              		.section	.debug_pubnames,"",%progbits
 15229 0000 13040000 		.4byte	0x413
 15230 0004 0200     		.2byte	0x2
 15231 0006 00000000 		.4byte	.Ldebug_info0
 15232 000a DF3A0000 		.4byte	0x3adf
 15233 000e 22240000 		.4byte	0x2422
 15234 0012 46415431 		.ascii	"FAT16::GetInstance\000"
 15234      363A3A47 
 15234      6574496E 
 15234      7374616E 
 15234      636500
 15235 0025 34240000 		.4byte	0x2434
 15236 0029 46415431 		.ascii	"FAT16::fat16_open\000"
 15236      363A3A66 
 15236      61743136 
 15236      5F6F7065 
 15236      6E00
 15237 003b 91240000 		.4byte	0x2491
 15238 003f 46415431 		.ascii	"FAT16::fat16_close\000"
 15238      363A3A66 
 15238      61743136 
 15238      5F636C6F 
 15238      736500
 15239 0052 C3240000 		.4byte	0x24c3
 15240 0056 46415431 		.ascii	"FAT16::fat16_read_header\000"
 15240      363A3A66 
 15240      61743136 
 15240      5F726561 
 15240      645F6865 
 15241 006f EA250000 		.4byte	0x25ea
 15242 0073 46415431 		.ascii	"FAT16::fat16_read_root_dir_entry\000"
 15242      363A3A66 
 15242      61743136 
 15242      5F726561 
 15242      645F726F 
 15243 0094 8E260000 		.4byte	0x268e
 15244 0098 46415431 		.ascii	"FAT16::fat16_read_sub_dir_entry\000"
 15244      363A3A66 
 15244      61743136 
 15244      5F726561 
 15244      645F7375 
 15245 00b8 49270000 		.4byte	0x2749
 15246 00bc 46415431 		.ascii	"FAT16::fat16_dir_entry_seek_callback\000"
 15246      363A3A66 
 15246      61743136 
 15246      5F646972 
 15246      5F656E74 
 15247 00e1 B9270000 		.4byte	0x27b9
 15248 00e5 46415431 		.ascii	"FAT16::fat16_dir_entry_read_callback\000"
 15248      363A3A66 
 15248      61743136 
 15248      5F646972 
 15248      5F656E74 
ARM GAS  /tmp/ccNwMSzu.s 			page 303


 15249 010a 23280000 		.4byte	0x2823
 15250 010e 46415431 		.ascii	"FAT16::fat16_interpret_dir_entry\000"
 15250      363A3A66 
 15250      61743136 
 15250      5F696E74 
 15250      65727072 
 15251 012f CB280000 		.4byte	0x28cb
 15252 0133 46415431 		.ascii	"FAT16::fat16_get_dir_entry_of_path\000"
 15252      363A3A66 
 15252      61743136 
 15252      5F676574 
 15252      5F646972 
 15253 0156 4F290000 		.4byte	0x294f
 15254 015a 46415431 		.ascii	"FAT16::fat16_get_next_cluster\000"
 15254      363A3A66 
 15254      61743136 
 15254      5F676574 
 15254      5F6E6578 
 15255 0178 BB290000 		.4byte	0x29bb
 15256 017c 46415431 		.ascii	"FAT16::fat16_append_clusters\000"
 15256      363A3A66 
 15256      61743136 
 15256      5F617070 
 15256      656E645F 
 15257 0199 8F2A0000 		.4byte	0x2a8f
 15258 019d 46415431 		.ascii	"FAT16::fat16_free_clusters\000"
 15258      363A3A66 
 15258      61743136 
 15258      5F667265 
 15258      655F636C 
 15259 01b8 132B0000 		.4byte	0x2b13
 15260 01bc 46415431 		.ascii	"FAT16::fat16_terminate_clusters\000"
 15260      363A3A66 
 15260      61743136 
 15260      5F746572 
 15260      6D696E61 
 15261 01dc 7E2B0000 		.4byte	0x2b7e
 15262 01e0 46415431 		.ascii	"FAT16::fat16_open_file\000"
 15262      363A3A66 
 15262      61743136 
 15262      5F6F7065 
 15262      6E5F6669 
 15263 01f7 D92B0000 		.4byte	0x2bd9
 15264 01fb 46415431 		.ascii	"FAT16::fat16_close_file\000"
 15264      363A3A66 
 15264      61743136 
 15264      5F636C6F 
 15264      73655F66 
 15265 0213 0D2C0000 		.4byte	0x2c0d
 15266 0217 46415431 		.ascii	"FAT16::fat16_read_file\000"
 15266      363A3A66 
 15266      61743136 
 15266      5F726561 
 15266      645F6669 
 15267 022e EA2C0000 		.4byte	0x2cea
 15268 0232 46415431 		.ascii	"FAT16::fat16_write_file\000"
 15268      363A3A66 
ARM GAS  /tmp/ccNwMSzu.s 			page 304


 15268      61743136 
 15268      5F777269 
 15268      74655F66 
 15269 024a 082E0000 		.4byte	0x2e08
 15270 024e 46415431 		.ascii	"FAT16::fat16_seek_file\000"
 15270      363A3A66 
 15270      61743136 
 15270      5F736565 
 15270      6B5F6669 
 15271 0265 732E0000 		.4byte	0x2e73
 15272 0269 46415431 		.ascii	"FAT16::fat16_resize_file\000"
 15272      363A3A66 
 15272      61743136 
 15272      5F726573 
 15272      697A655F 
 15273 0282 2E2F0000 		.4byte	0x2f2e
 15274 0286 46415431 		.ascii	"FAT16::fat16_open_dir\000"
 15274      363A3A66 
 15274      61743136 
 15274      5F6F7065 
 15274      6E5F6469 
 15275 029c 892F0000 		.4byte	0x2f89
 15276 02a0 46415431 		.ascii	"FAT16::fat16_close_dir\000"
 15276      363A3A66 
 15276      61743136 
 15276      5F636C6F 
 15276      73655F64 
 15277 02b7 BD2F0000 		.4byte	0x2fbd
 15278 02bb 46415431 		.ascii	"FAT16::fat16_read_dir\000"
 15278      363A3A66 
 15278      61743136 
 15278      5F726561 
 15278      645F6469 
 15279 02d1 00300000 		.4byte	0x3000
 15280 02d5 46415431 		.ascii	"FAT16::fat16_reset_dir\000"
 15280      363A3A66 
 15280      61743136 
 15280      5F726573 
 15280      65745F64 
 15281 02ec 34300000 		.4byte	0x3034
 15282 02f0 46415431 		.ascii	"FAT16::fat16_set_dir\000"
 15282      363A3A66 
 15282      61743136 
 15282      5F736574 
 15282      5F646972 
 15283 0305 77300000 		.4byte	0x3077
 15284 0309 46415431 		.ascii	"FAT16::fat16_write_dir_entry\000"
 15284      363A3A66 
 15284      61743136 
 15284      5F777269 
 15284      74655F64 
 15285 0326 A0310000 		.4byte	0x31a0
 15286 032a 46415431 		.ascii	"FAT16::fat16_create_file\000"
 15286      363A3A66 
 15286      61743136 
 15286      5F637265 
 15286      6174655F 
ARM GAS  /tmp/ccNwMSzu.s 			page 305


 15287 0343 93320000 		.4byte	0x3293
 15288 0347 46415431 		.ascii	"FAT16::fat16_delete_file\000"
 15288      363A3A66 
 15288      61743136 
 15288      5F64656C 
 15288      6574655F 
 15289 0360 0E330000 		.4byte	0x330e
 15290 0364 46415431 		.ascii	"FAT16::fat16_get_fs_size\000"
 15290      363A3A66 
 15290      61743136 
 15290      5F676574 
 15290      5F66735F 
 15291 037d 42330000 		.4byte	0x3342
 15292 0381 46415431 		.ascii	"FAT16::fat16_get_fs_free\000"
 15292      363A3A66 
 15292      61743136 
 15292      5F676574 
 15292      5F66735F 
 15293 039a D7330000 		.4byte	0x33d7
 15294 039e 46415431 		.ascii	"FAT16::fat16_get_fs_free_callback\000"
 15294      363A3A66 
 15294      61743136 
 15294      5F676574 
 15294      5F66735F 
 15295 03c0 63340000 		.4byte	0x3463
 15296 03c4 46415431 		.ascii	"FAT16::find_file_in_dir\000"
 15296      363A3A66 
 15296      696E645F 
 15296      66696C65 
 15296      5F696E5F 
 15297 03dc C3340000 		.4byte	0x34c3
 15298 03e0 46415431 		.ascii	"FAT16::open_file_in_dir\000"
 15298      363A3A6F 
 15298      70656E5F 
 15298      66696C65 
 15298      5F696E5F 
 15299 03f8 2F350000 		.4byte	0x352f
 15300 03fc 46415431 		.ascii	"FAT16::fat16_file_size\000"
 15300      363A3A66 
 15300      61743136 
 15300      5F66696C 
 15300      655F7369 
 15301 0413 00000000 		.4byte	0x0
 15302              		.section	.debug_pubtypes,"",%progbits
 15303 0000 C0010000 		.4byte	0x1c0
 15304 0004 0200     		.2byte	0x2
 15305 0006 00000000 		.4byte	.Ldebug_info0
 15306 000a DF3A0000 		.4byte	0x3adf
 15307 000e 29000000 		.4byte	0x29
 15308 0012 626F6F6C 		.ascii	"bool_t\000"
 15308      5F7400
 15309 0019 3B000000 		.4byte	0x3b
 15310 001d 696E7438 		.ascii	"int8_t\000"
 15310      5F7400
 15311 0024 4D000000 		.4byte	0x4d
 15312 0028 75696E74 		.ascii	"uint8_t\000"
 15312      385F7400 
ARM GAS  /tmp/ccNwMSzu.s 			page 306


 15313 0030 5F000000 		.4byte	0x5f
 15314 0034 696E7431 		.ascii	"int16_t\000"
 15314      365F7400 
 15315 003c 71000000 		.4byte	0x71
 15316 0040 75696E74 		.ascii	"uint16_t\000"
 15316      31365F74 
 15316      00
 15317 0049 83000000 		.4byte	0x83
 15318 004d 696E7433 		.ascii	"int32_t\000"
 15318      325F7400 
 15319 0055 95000000 		.4byte	0x95
 15320 0059 75696E74 		.ascii	"uint32_t\000"
 15320      33325F74 
 15320      00
 15321 0062 C7020000 		.4byte	0x2c7
 15322 0066 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 15322      4B5F5245 
 15322      43555253 
 15322      4956455F 
 15322      5400
 15323 0078 D2020000 		.4byte	0x2d2
 15324 007c 5F66706F 		.ascii	"_fpos_t\000"
 15324      735F7400 
 15325 0084 DD020000 		.4byte	0x2dd
 15326 0088 77696E74 		.ascii	"wint_t\000"
 15326      5F7400
 15327 008f 41030000 		.4byte	0x341
 15328 0093 5F666C6F 		.ascii	"_flock_t\000"
 15328      636B5F74 
 15328      00
 15329 009c 4E030000 		.4byte	0x34e
 15330 00a0 5F5F554C 		.ascii	"__ULong\000"
 15330      6F6E6700 
 15331 00a8 59030000 		.4byte	0x359
 15332 00ac 5F426967 		.ascii	"_Bigint\000"
 15332      696E7400 
 15333 00b4 CE030000 		.4byte	0x3ce
 15334 00b8 5F5F746D 		.ascii	"__tm\000"
 15334      00
 15335 00bd 59040000 		.4byte	0x459
 15336 00c1 5F6F6E5F 		.ascii	"_on_exit_args\000"
 15336      65786974 
 15336      5F617267 
 15336      7300
 15337 00cf B2040000 		.4byte	0x4b2
 15338 00d3 5F617465 		.ascii	"_atexit\000"
 15338      78697400 
 15339 00db 16050000 		.4byte	0x516
 15340 00df 5F5F7362 		.ascii	"__sbuf\000"
 15340      756600
 15341 00e6 45050000 		.4byte	0x545
 15342 00ea 5F5F7346 		.ascii	"__sFILE\000"
 15342      494C4500 
 15343 00f2 3B0A0000 		.4byte	0xa3b
 15344 00f6 5F5F4649 		.ascii	"__FILE\000"
 15344      4C4500
 15345 00fd 470A0000 		.4byte	0xa47
ARM GAS  /tmp/ccNwMSzu.s 			page 307


 15346 0101 5F676C75 		.ascii	"_glue\000"
 15346      6500
 15347 0107 8E0A0000 		.4byte	0xa8e
 15348 010b 5F72616E 		.ascii	"_rand48\000"
 15348      64343800 
 15349 0113 C3060000 		.4byte	0x6c3
 15350 0117 5F726565 		.ascii	"_reent\000"
 15350      6E7400
 15351 011e 900B0000 		.4byte	0xb90
 15352 0122 70747264 		.ascii	"ptrdiff_t\000"
 15352      6966665F 
 15352      7400
 15353 012c 9B0B0000 		.4byte	0xb9b
 15354 0130 73697A65 		.ascii	"size_t\000"
 15354      5F7400
 15355 0137 B10B0000 		.4byte	0xbb1
 15356 013b 5F5F7661 		.ascii	"__va_list\000"
 15356      5F6C6973 
 15356      7400
 15357 0145 A60B0000 		.4byte	0xba6
 15358 0149 5F5F676E 		.ascii	"__gnuc_va_list\000"
 15358      75635F76 
 15358      615F6C69 
 15358      737400
 15359 0158 CB0B0000 		.4byte	0xbcb
 15360 015c 636C6F63 		.ascii	"clock_t\000"
 15360      6B5F7400 
 15361 0164 D60B0000 		.4byte	0xbd6
 15362 0168 74696D65 		.ascii	"time_t\000"
 15362      5F7400
 15363 016f E10B0000 		.4byte	0xbe1
 15364 0173 46494C45 		.ascii	"FILE\000"
 15364      00
 15365 0178 EC0B0000 		.4byte	0xbec
 15366 017c 66706F73 		.ascii	"fpos_t\000"
 15366      5F7400
 15367 0183 CA110000 		.4byte	0x11ca
 15368 0187 746D00   		.ascii	"tm\000"
 15369 018a 6B130000 		.4byte	0x136b
 15370 018e 76615F6C 		.ascii	"va_list\000"
 15370      69737400 
 15371 0196 9C130000 		.4byte	0x139c
 15372 019a 4649464F 		.ascii	"FIFO\000"
 15372      00
 15373 019f 95140000 		.4byte	0x1495
 15374 01a3 55415254 		.ascii	"UARTBase\000"
 15374      42617365 
 15374      00
 15375 01ac 15150000 		.4byte	0x1515
 15376 01b0 55415254 		.ascii	"UART0\000"
 15376      3000
 15377 01b6 26160000 		.4byte	0x1626
 15378 01ba 46415431 		.ascii	"FAT16\000"
 15378      3600
 15379 01c0 00000000 		.4byte	0x0
 15380              		.section	.debug_aranges,"",%progbits
 15381 0000 24010000 		.4byte	0x124
ARM GAS  /tmp/ccNwMSzu.s 			page 308


 15382 0004 0200     		.2byte	0x2
 15383 0006 00000000 		.4byte	.Ldebug_info0
 15384 000a 04       		.byte	0x4
 15385 000b 00       		.byte	0x0
 15386 000c 0000     		.2byte	0x0
 15387 000e 0000     		.2byte	0x0
 15388 0010 00000000 		.4byte	.LFB109
 15389 0014 10000000 		.4byte	.LFE109-.LFB109
 15390 0018 00000000 		.4byte	.LFB110
 15391 001c FC000000 		.4byte	.LFE110-.LFB110
 15392 0020 00000000 		.4byte	.LFB111
 15393 0024 38000000 		.4byte	.LFE111-.LFB111
 15394 0028 00000000 		.4byte	.LFB112
 15395 002c E4030000 		.4byte	.LFE112-.LFB112
 15396 0030 00000000 		.4byte	.LFB113
 15397 0034 84020000 		.4byte	.LFE113-.LFB113
 15398 0038 00000000 		.4byte	.LFB114
 15399 003c 28030000 		.4byte	.LFE114-.LFB114
 15400 0040 00000000 		.4byte	.LFB115
 15401 0044 F0000000 		.4byte	.LFE115-.LFB115
 15402 0048 00000000 		.4byte	.LFB116
 15403 004c BC000000 		.4byte	.LFE116-.LFB116
 15404 0050 00000000 		.4byte	.LFB117
 15405 0054 48040000 		.4byte	.LFE117-.LFB117
 15406 0058 00000000 		.4byte	.LFB118
 15407 005c 14020000 		.4byte	.LFE118-.LFB118
 15408 0060 00000000 		.4byte	.LFB119
 15409 0064 A0010000 		.4byte	.LFE119-.LFB119
 15410 0068 00000000 		.4byte	.LFB120
 15411 006c B0030000 		.4byte	.LFE120-.LFB120
 15412 0070 00000000 		.4byte	.LFB121
 15413 0074 9C020000 		.4byte	.LFE121-.LFB121
 15414 0078 00000000 		.4byte	.LFB122
 15415 007c 6C010000 		.4byte	.LFE122-.LFB122
 15416 0080 00000000 		.4byte	.LFB123
 15417 0084 C0000000 		.4byte	.LFE123-.LFB123
 15418 0088 00000000 		.4byte	.LFB124
 15419 008c 30000000 		.4byte	.LFE124-.LFB124
 15420 0090 00000000 		.4byte	.LFB125
 15421 0094 F4030000 		.4byte	.LFE125-.LFB125
 15422 0098 00000000 		.4byte	.LFB126
 15423 009c F4040000 		.4byte	.LFE126-.LFB126
 15424 00a0 00000000 		.4byte	.LFB127
 15425 00a4 30010000 		.4byte	.LFE127-.LFB127
 15426 00a8 00000000 		.4byte	.LFB128
 15427 00ac 84020000 		.4byte	.LFE128-.LFB128
 15428 00b0 00000000 		.4byte	.LFB129
 15429 00b4 B0000000 		.4byte	.LFE129-.LFB129
 15430 00b8 00000000 		.4byte	.LFB130
 15431 00bc 30000000 		.4byte	.LFE130-.LFB130
 15432 00c0 00000000 		.4byte	.LFB131
 15433 00c4 30010000 		.4byte	.LFE131-.LFB131
 15434 00c8 00000000 		.4byte	.LFB132
 15435 00cc 3C000000 		.4byte	.LFE132-.LFB132
 15436 00d0 00000000 		.4byte	.LFB133
 15437 00d4 44000000 		.4byte	.LFE133-.LFB133
 15438 00d8 00000000 		.4byte	.LFB134
ARM GAS  /tmp/ccNwMSzu.s 			page 309


 15439 00dc 04060000 		.4byte	.LFE134-.LFB134
 15440 00e0 00000000 		.4byte	.LFB135
 15441 00e4 D8030000 		.4byte	.LFE135-.LFB135
 15442 00e8 00000000 		.4byte	.LFB136
 15443 00ec 18020000 		.4byte	.LFE136-.LFB136
 15444 00f0 00000000 		.4byte	.LFB137
 15445 00f4 48000000 		.4byte	.LFE137-.LFB137
 15446 00f8 00000000 		.4byte	.LFB138
 15447 00fc B8010000 		.4byte	.LFE138-.LFB138
 15448 0100 00000000 		.4byte	.LFB139
 15449 0104 BC000000 		.4byte	.LFE139-.LFB139
 15450 0108 00000000 		.4byte	.LFB140
 15451 010c 8C000000 		.4byte	.LFE140-.LFB140
 15452 0110 00000000 		.4byte	.LFB141
 15453 0114 80000000 		.4byte	.LFE141-.LFB141
 15454 0118 00000000 		.4byte	.LFB142
 15455 011c 20000000 		.4byte	.LFE142-.LFB142
 15456 0120 00000000 		.4byte	0x0
 15457 0124 00000000 		.4byte	0x0
 15458              		.section	.debug_ranges,"",%progbits
 15459              	.Ldebug_ranges0:
 15460 0000 A4000000 		.4byte	.LBB17
 15461 0004 C4000000 		.4byte	.LBE17
 15462 0008 CC000000 		.4byte	.LBB18
 15463 000c 00020000 		.4byte	.LBE18
 15464 0010 00000000 		.4byte	0x0
 15465 0014 00000000 		.4byte	0x0
 15466 0018 F8010000 		.4byte	.LBB36
 15467 001c F8030000 		.4byte	.LBE36
 15468 0020 18040000 		.4byte	.LBB39
 15469 0024 1C040000 		.4byte	.LBE39
 15470 0028 00000000 		.4byte	0x0
 15471 002c 00000000 		.4byte	0x0
 15472 0030 68000000 		.4byte	.LBB45
 15473 0034 B0000000 		.4byte	.LBE45
 15474 0038 D4000000 		.4byte	.LBB46
 15475 003c D8000000 		.4byte	.LBE46
 15476 0040 00000000 		.4byte	0x0
 15477 0044 00000000 		.4byte	0x0
 15478 0048 58010000 		.4byte	.LBB58
 15479 004c 58030000 		.4byte	.LBE58
 15480 0050 7C030000 		.4byte	.LBB64
 15481 0054 80030000 		.4byte	.LBE64
 15482 0058 5C030000 		.4byte	.LBB63
 15483 005c 78030000 		.4byte	.LBE63
 15484 0060 00000000 		.4byte	0x0
 15485 0064 00000000 		.4byte	0x0
 15486 0068 00000000 		.4byte	.LFB109
 15487 006c 10000000 		.4byte	.LFE109
 15488 0070 00000000 		.4byte	.LFB110
 15489 0074 FC000000 		.4byte	.LFE110
 15490 0078 00000000 		.4byte	.LFB111
 15491 007c 38000000 		.4byte	.LFE111
 15492 0080 00000000 		.4byte	.LFB112
 15493 0084 E4030000 		.4byte	.LFE112
 15494 0088 00000000 		.4byte	.LFB113
 15495 008c 84020000 		.4byte	.LFE113
ARM GAS  /tmp/ccNwMSzu.s 			page 310


 15496 0090 00000000 		.4byte	.LFB114
 15497 0094 28030000 		.4byte	.LFE114
 15498 0098 00000000 		.4byte	.LFB115
 15499 009c F0000000 		.4byte	.LFE115
 15500 00a0 00000000 		.4byte	.LFB116
 15501 00a4 BC000000 		.4byte	.LFE116
 15502 00a8 00000000 		.4byte	.LFB117
 15503 00ac 48040000 		.4byte	.LFE117
 15504 00b0 00000000 		.4byte	.LFB118
 15505 00b4 14020000 		.4byte	.LFE118
 15506 00b8 00000000 		.4byte	.LFB119
 15507 00bc A0010000 		.4byte	.LFE119
 15508 00c0 00000000 		.4byte	.LFB120
 15509 00c4 B0030000 		.4byte	.LFE120
 15510 00c8 00000000 		.4byte	.LFB121
 15511 00cc 9C020000 		.4byte	.LFE121
 15512 00d0 00000000 		.4byte	.LFB122
 15513 00d4 6C010000 		.4byte	.LFE122
 15514 00d8 00000000 		.4byte	.LFB123
 15515 00dc C0000000 		.4byte	.LFE123
 15516 00e0 00000000 		.4byte	.LFB124
 15517 00e4 30000000 		.4byte	.LFE124
 15518 00e8 00000000 		.4byte	.LFB125
 15519 00ec F4030000 		.4byte	.LFE125
 15520 00f0 00000000 		.4byte	.LFB126
 15521 00f4 F4040000 		.4byte	.LFE126
 15522 00f8 00000000 		.4byte	.LFB127
 15523 00fc 30010000 		.4byte	.LFE127
 15524 0100 00000000 		.4byte	.LFB128
 15525 0104 84020000 		.4byte	.LFE128
 15526 0108 00000000 		.4byte	.LFB129
 15527 010c B0000000 		.4byte	.LFE129
 15528 0110 00000000 		.4byte	.LFB130
 15529 0114 30000000 		.4byte	.LFE130
 15530 0118 00000000 		.4byte	.LFB131
 15531 011c 30010000 		.4byte	.LFE131
 15532 0120 00000000 		.4byte	.LFB132
 15533 0124 3C000000 		.4byte	.LFE132
 15534 0128 00000000 		.4byte	.LFB133
 15535 012c 44000000 		.4byte	.LFE133
 15536 0130 00000000 		.4byte	.LFB134
 15537 0134 04060000 		.4byte	.LFE134
 15538 0138 00000000 		.4byte	.LFB135
 15539 013c D8030000 		.4byte	.LFE135
 15540 0140 00000000 		.4byte	.LFB136
 15541 0144 18020000 		.4byte	.LFE136
 15542 0148 00000000 		.4byte	.LFB137
 15543 014c 48000000 		.4byte	.LFE137
 15544 0150 00000000 		.4byte	.LFB138
 15545 0154 B8010000 		.4byte	.LFE138
 15546 0158 00000000 		.4byte	.LFB139
 15547 015c BC000000 		.4byte	.LFE139
 15548 0160 00000000 		.4byte	.LFB140
 15549 0164 8C000000 		.4byte	.LFE140
 15550 0168 00000000 		.4byte	.LFB141
 15551 016c 80000000 		.4byte	.LFE141
 15552 0170 00000000 		.4byte	.LFB142
ARM GAS  /tmp/ccNwMSzu.s 			page 311


 15553 0174 20000000 		.4byte	.LFE142
 15554 0178 00000000 		.4byte	0x0
 15555 017c 00000000 		.4byte	0x0
 15556              		.section	.debug_str,"MS",%progbits,1
 15557              	.LASF290:
 15558 0000 66617431 		.ascii	"fat16_file_struct\000"
 15558      365F6669 
 15558      6C655F73 
 15558      74727563 
 15558      7400
 15559              	.LASF403:
 15560 0012 5F5A4E35 		.ascii	"_ZN5FAT1613root_open_newEPc\000"
 15560      46415431 
 15560      36313372 
 15560      6F6F745F 
 15560      6F70656E 
 15561              	.LASF292:
 15562 002e 706F735F 		.ascii	"pos_cluster\000"
 15562      636C7573 
 15562      74657200 
 15563              	.LASF197:
 15564 003a 5F5F6578 		.ascii	"__extra_1\000"
 15564      7472615F 
 15564      3100
 15565              	.LASF188:
 15566 0044 746D5F73 		.ascii	"tm_sec\000"
 15566      656300
 15567              	.LASF387:
 15568 004b 5F5A4E35 		.ascii	"_ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_di"
 15568      46415431 
 15568      36323566 
 15568      61743136 
 15568      5F696E74 
 15569 007e 725F656E 		.ascii	"r_entry_structEPKh\000"
 15569      7472795F 
 15569      73747275 
 15569      63744550 
 15569      4B6800
 15570              	.LASF385:
 15571 0091 5F5A4E35 		.ascii	"_ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv\000"
 15571      46415431 
 15571      36323966 
 15571      61743136 
 15571      5F646972 
 15572              	.LASF418:
 15573 00c0 726F6F74 		.ascii	"root_delete\000"
 15573      5F64656C 
 15573      65746500 
 15574              	.LASF133:
 15575 00cc 66706F73 		.ascii	"fpos_t\000"
 15575      5F7400
 15576              	.LASF167:
 15577 00d3 6C646976 		.ascii	"ldiv_t\000"
 15577      5F7400
 15578              	.LASF229:
 15579 00da 42617564 		.ascii	"BaudRate38400\000"
 15579      52617465 
ARM GAS  /tmp/ccNwMSzu.s 			page 312


 15579      33383430 
 15579      3000
 15580              	.LASF69:
 15581 00e8 5F6D6273 		.ascii	"_mbstate\000"
 15581      74617465 
 15581      00
 15582              	.LASF253:
 15583 00f1 70726F64 		.ascii	"product\000"
 15583      75637400 
 15584              	.LASF48:
 15585 00f9 5F617465 		.ascii	"_atexit\000"
 15585      78697400 
 15586              	.LASF331:
 15587 0101 73645F72 		.ascii	"sd_raw_send_command_r1\000"
 15587      61775F73 
 15587      656E645F 
 15587      636F6D6D 
 15587      616E645F 
 15588              	.LASF451:
 15589 0118 636C7573 		.ascii	"cluster_next\000"
 15589      7465725F 
 15589      6E657874 
 15589      00
 15590              	.LASF244:
 15591 0125 5F5A4E35 		.ascii	"_ZN5UART08ReadCharEv\000"
 15591      55415254 
 15591      30385265 
 15591      61644368 
 15591      61724576 
 15592              	.LASF557:
 15593 013a 4849445F 		.ascii	"HID_MESSAGE_ID_SYSTEM_DEBUG\000"
 15593      4D455353 
 15593      4147455F 
 15593      49445F53 
 15593      59535445 
 15594              	.LASF516:
 15595 0156 54784952 		.ascii	"TxIR_MR1_FLAG\000"
 15595      5F4D5231 
 15595      5F464C41 
 15595      4700
 15596              	.LASF562:
 15597 0164 5F5F676E 		.ascii	"__gnu_cxx\000"
 15597      755F6378 
 15597      7800
 15598              	.LASF254:
 15599 016e 72657669 		.ascii	"revision\000"
 15599      73696F6E 
 15599      00
 15600              	.LASF406:
 15601 0177 6F70656E 		.ascii	"openroot\000"
 15601      726F6F74 
 15601      00
 15602              	.LASF271:
 15603 0180 6661745F 		.ascii	"fat_offset\000"
 15603      6F666673 
 15603      657400
 15604              	.LASF38:
ARM GAS  /tmp/ccNwMSzu.s 			page 313


 15605 018b 5F5F746D 		.ascii	"__tm_mon\000"
 15605      5F6D6F6E 
 15605      00
 15606              	.LASF46:
 15607 0194 5F666E74 		.ascii	"_fntypes\000"
 15607      79706573 
 15607      00
 15608              	.LASF422:
 15609 019d 70617274 		.ascii	"partition_close\000"
 15609      6974696F 
 15609      6E5F636C 
 15609      6F736500 
 15610              	.LASF404:
 15611 01ad 726F6F74 		.ascii	"root_file_exists\000"
 15611      5F66696C 
 15611      655F6578 
 15611      69737473 
 15611      00
 15612              	.LASF432:
 15613 01be 72657365 		.ascii	"reserved_sectors\000"
 15613      72766564 
 15613      5F736563 
 15613      746F7273 
 15613      00
 15614              	.LASF98:
 15615 01cf 5F696E63 		.ascii	"_inc\000"
 15615      00
 15616              	.LASF49:
 15617 01d4 5F696E64 		.ascii	"_ind\000"
 15617      00
 15618              	.LASF423:
 15619 01d9 5F5A4E35 		.ascii	"_ZN5FAT1615partition_closeEPNS_16partition_structE\000"
 15619      46415431 
 15619      36313570 
 15619      61727469 
 15619      74696F6E 
 15620              	.LASF258:
 15621 020c 63617061 		.ascii	"capacity\000"
 15621      63697479 
 15621      00
 15622              	.LASF346:
 15623 0215 66617431 		.ascii	"fat16_seek_file\000"
 15623      365F7365 
 15623      656B5F66 
 15623      696C6500 
 15624              	.LASF296:
 15625 0225 656E7472 		.ascii	"entry_cur\000"
 15625      795F6375 
 15625      7200
 15626              	.LASF135:
 15627 022f 66656F66 		.ascii	"feof\000"
 15627      00
 15628              	.LASF8:
 15629 0234 75696E74 		.ascii	"uint16_t\000"
 15629      31365F74 
 15629      00
 15630              	.LASF393:
ARM GAS  /tmp/ccNwMSzu.s 			page 314


 15631 023d 5F5A4E35 		.ascii	"_ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_stru"
 15631      46415431 
 15631      36313966 
 15631      61743136 
 15631      5F667265 
 15632 0270 63744574 		.ascii	"ctEt\000"
 15632      00
 15633              	.LASF131:
 15634 0275 74696D65 		.ascii	"time_t\000"
 15634      5F7400
 15635              	.LASF425:
 15636 027c 5F5F6465 		.ascii	"__delta\000"
 15636      6C746100 
 15637              	.LASF559:
 15638 0284 474E5520 		.ascii	"GNU C++ 4.5.2\000"
 15638      432B2B20 
 15638      342E352E 
 15638      3200
 15639              	.LASF256:
 15640 0292 6D616E75 		.ascii	"manufacturing_year\000"
 15640      66616374 
 15640      7572696E 
 15640      675F7965 
 15640      617200
 15641              	.LASF55:
 15642 02a5 5F666C61 		.ascii	"_flags\000"
 15642      677300
 15643              	.LASF525:
 15644 02ac 54784343 		.ascii	"TxCCR_CAP0I\000"
 15644      525F4341 
 15644      50304900 
 15645              	.LASF289:
 15646 02b8 6C656E67 		.ascii	"length\000"
 15646      746800
 15647              	.LASF277:
 15648 02bf 66617431 		.ascii	"fat16_fs_struct\000"
 15648      365F6673 
 15648      5F737472 
 15648      75637400 
 15649              	.LASF108:
 15650 02cf 5F637674 		.ascii	"_cvtlen\000"
 15650      6C656E00 
 15651              	.LASF250:
 15652 02d7 46415431 		.ascii	"FAT16\000"
 15652      3600
 15653              	.LASF275:
 15654 02dd 726F6F74 		.ascii	"root_dir_offset\000"
 15654      5F646972 
 15654      5F6F6666 
 15654      73657400 
 15655              	.LASF112:
 15656 02ed 5F736967 		.ascii	"_sig_func\000"
 15656      5F66756E 
 15656      6300
 15657              	.LASF511:
 15658 02f7 54785443 		.ascii	"TxTCR_COUNTER_ENABLE\000"
 15658      525F434F 
ARM GAS  /tmp/ccNwMSzu.s 			page 315


 15658      554E5445 
 15658      525F454E 
 15658      41424C45 
 15659              	.LASF464:
 15660 030c 636C7573 		.ascii	"cluster_new_chain\000"
 15660      7465725F 
 15660      6E65775F 
 15660      63686169 
 15660      6E00
 15661              	.LASF196:
 15662 031e 746D5F69 		.ascii	"tm_isdst\000"
 15662      73647374 
 15662      00
 15663              	.LASF325:
 15664 0327 53446F66 		.ascii	"SDoff\000"
 15664      6600
 15665              	.LASF68:
 15666 032d 5F6C6F63 		.ascii	"_lock\000"
 15666      6B00
 15667              	.LASF64:
 15668 0333 5F6E6275 		.ascii	"_nbuf\000"
 15668      6600
 15669              	.LASF269:
 15670 0339 66617431 		.ascii	"fat16_header_struct\000"
 15670      365F6865 
 15670      61646572 
 15670      5F737472 
 15670      75637400 
 15671              	.LASF93:
 15672 034d 5F756E75 		.ascii	"_unused\000"
 15672      73656400 
 15673              	.LASF299:
 15674 0355 66617431 		.ascii	"fat16_usage_count_callback_arg\000"
 15674      365F7573 
 15674      6167655F 
 15674      636F756E 
 15674      745F6361 
 15675              	.LASF530:
 15676 0374 54784343 		.ascii	"TxCCR_CAP2FE\000"
 15676      525F4341 
 15676      50324645 
 15676      00
 15677              	.LASF351:
 15678 0381 5F5A4E35 		.ascii	"_ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKN"
 15678      46415431 
 15678      36313466 
 15678      61743136 
 15678      5F6F7065 
 15679 03b4 535F3232 		.ascii	"S_22fat16_dir_entry_structE\000"
 15679      66617431 
 15679      365F6469 
 15679      725F656E 
 15679      7472795F 
 15680              	.LASF478:
 15681 03d0 636F756E 		.ascii	"count_arg\000"
 15681      745F6172 
 15681      6700
ARM GAS  /tmp/ccNwMSzu.s 			page 316


 15682              	.LASF2:
 15683 03da 626F6F6C 		.ascii	"bool\000"
 15683      00
 15684              	.LASF170:
 15685 03df 61746F69 		.ascii	"atoi\000"
 15685      00
 15686              	.LASF171:
 15687 03e4 61746F6C 		.ascii	"atol\000"
 15687      00
 15688              	.LASF531:
 15689 03e9 54784343 		.ascii	"TxCCR_CAP2I\000"
 15689      525F4341 
 15689      50324900 
 15690              	.LASF160:
 15691 03f5 73747263 		.ascii	"strcoll\000"
 15691      6F6C6C00 
 15692              	.LASF101:
 15693 03fd 5F637572 		.ascii	"_current_locale\000"
 15693      72656E74 
 15693      5F6C6F63 
 15693      616C6500 
 15694              	.LASF305:
 15695 040d 73645F72 		.ascii	"sd_raw_interval_handler\000"
 15695      61775F69 
 15695      6E746572 
 15695      76616C5F 
 15695      68616E64 
 15696              	.LASF426:
 15697 0425 64657669 		.ascii	"device_read_callback_t\000"
 15697      63655F72 
 15697      6561645F 
 15697      63616C6C 
 15697      6261636B 
 15698              	.LASF10:
 15699 043c 696E7433 		.ascii	"int32_t\000"
 15699      325F7400 
 15700              	.LASF448:
 15701 0444 6661745F 		.ascii	"fat_entry\000"
 15701      656E7472 
 15701      7900
 15702              	.LASF123:
 15703 044e 5F616464 		.ascii	"_add\000"
 15703      00
 15704              	.LASF534:
 15705 0453 54784343 		.ascii	"TxCCR_CAP3I\000"
 15705      525F4341 
 15705      50334900 
 15706              	.LASF458:
 15707 045f 636F7079 		.ascii	"copy_length\000"
 15707      5F6C656E 
 15707      67746800 
 15708              	.LASF354:
 15709 046b 66617431 		.ascii	"fat16_read_dir\000"
 15709      365F7265 
 15709      61645F64 
 15709      697200
 15710              	.LASF272:
ARM GAS  /tmp/ccNwMSzu.s 			page 317


 15711 047a 6661745F 		.ascii	"fat_size\000"
 15711      73697A65 
 15711      00
 15712              	.LASF297:
 15713 0483 656E7472 		.ascii	"entry_num\000"
 15713      795F6E75 
 15713      6D00
 15714              	.LASF246:
 15715 048d 57726974 		.ascii	"WriteChar\000"
 15715      65436861 
 15715      7200
 15716              	.LASF241:
 15717 0497 49734368 		.ascii	"IsCharReady\000"
 15717      61725265 
 15717      61647900 
 15718              	.LASF280:
 15719 04a3 70617274 		.ascii	"partition_struct\000"
 15719      6974696F 
 15719      6E5F7374 
 15719      72756374 
 15719      00
 15720              	.LASF555:
 15721 04b4 57444D4F 		.ascii	"WDMOD_WDEN\000"
 15721      445F5744 
 15721      454E00
 15722              	.LASF57:
 15723 04bf 5F6C6266 		.ascii	"_lbfsize\000"
 15723      73697A65 
 15723      00
 15724              	.LASF276:
 15725 04c8 636C7573 		.ascii	"cluster_zero_offset\000"
 15725      7465725F 
 15725      7A65726F 
 15725      5F6F6666 
 15725      73657400 
 15726              	.LASF433:
 15727 04dc 6661745F 		.ascii	"fat_copies\000"
 15727      636F7069 
 15727      657300
 15728              	.LASF465:
 15729 04e7 6E616D65 		.ascii	"name_len\000"
 15729      5F6C656E 
 15729      00
 15730              	.LASF187:
 15731 04f0 7763746F 		.ascii	"wctomb\000"
 15731      6D6200
 15732              	.LASF302:
 15733 04f7 7261775F 		.ascii	"raw_block\000"
 15733      626C6F63 
 15733      6B00
 15734              	.LASF455:
 15735 0501 62756666 		.ascii	"buffer_len\000"
 15735      65725F6C 
 15735      656E00
 15736              	.LASF67:
 15737 050c 5F646174 		.ascii	"_data\000"
 15737      6100
ARM GAS  /tmp/ccNwMSzu.s 			page 318


 15738              	.LASF235:
 15739 0512 55415254 		.ascii	"UART0\000"
 15739      3000
 15740              	.LASF286:
 15741 0518 64657669 		.ascii	"device_write\000"
 15741      63655F77 
 15741      72697465 
 15741      00
 15742              	.LASF463:
 15743 0525 73697A65 		.ascii	"size_new\000"
 15743      5F6E6577 
 15743      00
 15744              	.LASF284:
 15745 052e 64657669 		.ascii	"device_read_interval\000"
 15745      63655F72 
 15745      6561645F 
 15745      696E7465 
 15745      7276616C 
 15746              	.LASF152:
 15747 0543 72656E61 		.ascii	"rename\000"
 15747      6D6500
 15748              	.LASF71:
 15749 054a 5F726565 		.ascii	"_reent\000"
 15749      6E7400
 15750              	.LASF206:
 15751 0551 6C6F6361 		.ascii	"localtime\000"
 15751      6C74696D 
 15751      6500
 15752              	.LASF330:
 15753 055b 73645F72 		.ascii	"sd_raw_rec_byte\000"
 15753      61775F72 
 15753      65635F62 
 15753      79746500 
 15754              	.LASF114:
 15755 056b 5F5F7366 		.ascii	"__sf\000"
 15755      00
 15756              	.LASF233:
 15757 0570 5F5A4E34 		.ascii	"_ZN4FIFO5WriteEh\000"
 15757      4649464F 
 15757      35577269 
 15757      74654568 
 15757      00
 15758              	.LASF52:
 15759 0581 5F626173 		.ascii	"_base\000"
 15759      6500
 15760              	.LASF142:
 15761 0587 66726561 		.ascii	"fread\000"
 15761      6400
 15762              	.LASF80:
 15763 058d 5F6D6274 		.ascii	"_mbtowc_state\000"
 15763      6F77635F 
 15763      73746174 
 15763      6500
 15764              	.LASF469:
 15765 059b 6C666E5F 		.ascii	"lfn_entry\000"
 15765      656E7472 
 15765      7900
ARM GAS  /tmp/ccNwMSzu.s 			page 319


 15766              	.LASF294:
 15767 05a5 656E7472 		.ascii	"entry_next\000"
 15767      795F6E65 
 15767      787400
 15768              	.LASF436:
 15769 05b0 73656374 		.ascii	"sectors_per_fat\000"
 15769      6F72735F 
 15769      7065725F 
 15769      66617400 
 15770              	.LASF138:
 15771 05c0 66676574 		.ascii	"fgetc\000"
 15771      6300
 15772              	.LASF285:
 15773 05c6 64657669 		.ascii	"device_write_t\000"
 15773      63655F77 
 15773      72697465 
 15773      5F7400
 15774              	.LASF140:
 15775 05d5 66676574 		.ascii	"fgets\000"
 15775      7300
 15776              	.LASF376:
 15777 05db 66617431 		.ascii	"fat16_read_header\000"
 15777      365F7265 
 15777      61645F68 
 15777      65616465 
 15777      7200
 15778              	.LASF219:
 15779 05ed 52656164 		.ascii	"Read\000"
 15779      00
 15780              	.LASF143:
 15781 05f2 6672656F 		.ascii	"freopen\000"
 15781      70656E00 
 15782              	.LASF33:
 15783 05fa 5F5F746D 		.ascii	"__tm\000"
 15783      00
 15784              	.LASF533:
 15785 05ff 54784343 		.ascii	"TxCCR_CAP3FE\000"
 15785      525F4341 
 15785      50334645 
 15785      00
 15786              	.LASF411:
 15787 060c 5F5A4E35 		.ascii	"_ZN5FAT1614root_disk_infoEv\000"
 15787      46415431 
 15787      36313472 
 15787      6F6F745F 
 15787      6469736B 
 15788              	.LASF526:
 15789 0628 54784343 		.ascii	"TxCCR_CAP1RE\000"
 15789      525F4341 
 15789      50315245 
 15789      00
 15790              	.LASF366:
 15791 0635 66617431 		.ascii	"fat16_get_fs_size\000"
 15791      365F6765 
 15791      745F6673 
 15791      5F73697A 
 15791      6500
ARM GAS  /tmp/ccNwMSzu.s 			page 320


 15792              	.LASF41:
 15793 0647 5F5F746D 		.ascii	"__tm_yday\000"
 15793      5F796461 
 15793      7900
 15794              	.LASF287:
 15795 0651 74797065 		.ascii	"type\000"
 15795      00
 15796              	.LASF475:
 15797 0656 6469725F 		.ascii	"dir_entry_offset\000"
 15797      656E7472 
 15797      795F6F66 
 15797      66736574 
 15797      00
 15798              	.LASF323:
 15799 0667 73645F72 		.ascii	"sd_raw_get_info\000"
 15799      61775F67 
 15799      65745F69 
 15799      6E666F00 
 15800              	.LASF544:
 15801 0677 4C455235 		.ascii	"LER5_EN\000"
 15801      5F454E00 
 15802              	.LASF553:
 15803 067f 50574D54 		.ascii	"PWMTCR_RESET\000"
 15803      43525F52 
 15803      45534554 
 15803      00
 15804              	.LASF388:
 15805 068c 66617431 		.ascii	"fat16_get_next_cluster\000"
 15805      365F6765 
 15805      745F6E65 
 15805      78745F63 
 15805      6C757374 
 15806              	.LASF481:
 15807 06a3 5649435F 		.ascii	"VIC_USB_Intr\000"
 15807      5553425F 
 15807      496E7472 
 15807      00
 15808              	.LASF394:
 15809 06b0 66617431 		.ascii	"fat16_terminate_clusters\000"
 15809      365F7465 
 15809      726D696E 
 15809      6174655F 
 15809      636C7573 
 15810              	.LASF409:
 15811 06c9 5F5A4E35 		.ascii	"_ZN5FAT169root_openEPc\000"
 15811      46415431 
 15811      3639726F 
 15811      6F745F6F 
 15811      70656E45 
 15812              	.LASF344:
 15813 06e0 66617431 		.ascii	"fat16_write_file\000"
 15813      365F7772 
 15813      6974655F 
 15813      66696C65 
 15813      00
 15814              	.LASF493:
 15815 06f1 55494952 		.ascii	"UIIR_RDA_INT\000"
ARM GAS  /tmp/ccNwMSzu.s 			page 321


 15815      5F524441 
 15815      5F494E54 
 15815      00
 15816              	.LASF72:
 15817 06fe 5F756E75 		.ascii	"_unused_rand\000"
 15817      7365645F 
 15817      72616E64 
 15817      00
 15818              	.LASF243:
 15819 070b 52656164 		.ascii	"ReadChar\000"
 15819      43686172 
 15819      00
 15820              	.LASF499:
 15821 0714 53535053 		.ascii	"SSPSR_BSY\000"
 15821      525F4253 
 15821      5900
 15822              	.LASF437:
 15823 071e 73656374 		.ascii	"sector_count\000"
 15823      6F725F63 
 15823      6F756E74 
 15823      00
 15824              	.LASF370:
 15825 072b 66696E64 		.ascii	"find_file_in_dir\000"
 15825      5F66696C 
 15825      655F696E 
 15825      5F646972 
 15825      00
 15826              	.LASF461:
 15827 073c 7768656E 		.ascii	"whence\000"
 15827      636500
 15828              	.LASF105:
 15829 0743 5F726573 		.ascii	"_result_k\000"
 15829      756C745F 
 15829      6B00
 15830              	.LASF97:
 15831 074d 5F737464 		.ascii	"_stderr\000"
 15831      65727200 
 15832              	.LASF104:
 15833 0755 5F726573 		.ascii	"_result\000"
 15833      756C7400 
 15834              	.LASF339:
 15835 075d 5F5A4E35 		.ascii	"_ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPK"
 15835      46415431 
 15835      36313566 
 15835      61743136 
 15835      5F6F7065 
 15836 0790 4E535F32 		.ascii	"NS_22fat16_dir_entry_structE\000"
 15836      32666174 
 15836      31365F64 
 15836      69725F65 
 15836      6E747279 
 15837              	.LASF45:
 15838 07ad 5F64736F 		.ascii	"_dso_handle\000"
 15838      5F68616E 
 15838      646C6500 
 15839              	.LASF127:
 15840 07b9 5F5F676E 		.ascii	"__gnuc_va_list\000"
ARM GAS  /tmp/ccNwMSzu.s 			page 322


 15840      75635F76 
 15840      615F6C69 
 15840      737400
 15841              	.LASF40:
 15842 07c8 5F5F746D 		.ascii	"__tm_wday\000"
 15842      5F776461 
 15842      7900
 15843              	.LASF42:
 15844 07d2 5F5F746D 		.ascii	"__tm_isdst\000"
 15844      5F697364 
 15844      737400
 15845              	.LASF502:
 15846 07dd 49324378 		.ascii	"I2CxCONCLR_AA\000"
 15846      434F4E43 
 15846      4C525F41 
 15846      4100
 15847              	.LASF542:
 15848 07eb 4C455233 		.ascii	"LER3_EN\000"
 15848      5F454E00 
 15849              	.LASF420:
 15850 07f3 70617274 		.ascii	"partition_open\000"
 15850      6974696F 
 15850      6E5F6F70 
 15850      656E00
 15851              	.LASF5:
 15852 0802 756E7369 		.ascii	"unsigned char\000"
 15852      676E6564 
 15852      20636861 
 15852      7200
 15853              	.LASF96:
 15854 0810 5F737464 		.ascii	"_stdout\000"
 15854      6F757400 
 15855              	.LASF216:
 15856 0818 4649464F 		.ascii	"FIFO\000"
 15856      00
 15857              	.LASF87:
 15858 081d 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 15858      72746F77 
 15858      63735F73 
 15858      74617465 
 15858      00
 15859              	.LASF31:
 15860 082e 5F776473 		.ascii	"_wds\000"
 15860      00
 15861              	.LASF528:
 15862 0833 54784343 		.ascii	"TxCCR_CAP1I\000"
 15862      525F4341 
 15862      50314900 
 15863              	.LASF16:
 15864 083f 666C6F61 		.ascii	"float\000"
 15864      7400
 15865              	.LASF224:
 15866 0845 42617564 		.ascii	"BaudRate1200\000"
 15866      52617465 
 15866      31323030 
 15866      00
 15867              	.LASF473:
ARM GAS  /tmp/ccNwMSzu.s 			page 323


 15868 0852 66726565 		.ascii	"free_dir_entries_needed\000"
 15868      5F646972 
 15868      5F656E74 
 15868      72696573 
 15868      5F6E6565 
 15869              	.LASF507:
 15870 086a 49324378 		.ascii	"I2CxCONSET_SI\000"
 15870      434F4E53 
 15870      45545F53 
 15870      4900
 15871              	.LASF53:
 15872 0878 5F73697A 		.ascii	"_size\000"
 15872      6500
 15873              	.LASF212:
 15874 087e 5F5A4E34 		.ascii	"_ZN4FIFO14FIFOBufferMaskE\000"
 15874      4649464F 
 15874      31344649 
 15874      464F4275 
 15874      66666572 
 15875              	.LASF304:
 15876 0898 7261775F 		.ascii	"raw_block_written\000"
 15876      626C6F63 
 15876      6B5F7772 
 15876      69747465 
 15876      6E00
 15877              	.LASF60:
 15878 08aa 5F777269 		.ascii	"_write\000"
 15878      746500
 15879              	.LASF154:
 15880 08b1 73657462 		.ascii	"setbuf\000"
 15880      756600
 15881              	.LASF450:
 15882 08b8 636C7573 		.ascii	"cluster_max\000"
 15882      7465725F 
 15882      6D617800 
 15883              	.LASF540:
 15884 08c4 4C455231 		.ascii	"LER1_EN\000"
 15884      5F454E00 
 15885              	.LASF417:
 15886 08cc 5F5A4E35 		.ascii	"_ZN5FAT1626rootDirectory_files_streamEi\000"
 15886      46415431 
 15886      36323672 
 15886      6F6F7444 
 15886      69726563 
 15887              	.LASF236:
 15888 08f4 44697361 		.ascii	"Disable\000"
 15888      626C6500 
 15889              	.LASF372:
 15890 08fc 6F70656E 		.ascii	"open_file_in_dir\000"
 15890      5F66696C 
 15890      655F696E 
 15890      5F646972 
 15890      00
 15891              	.LASF226:
 15892 090d 42617564 		.ascii	"BaudRate4800\000"
 15892      52617465 
 15892      34383030 
ARM GAS  /tmp/ccNwMSzu.s 			page 324


 15892      00
 15893              	.LASF529:
 15894 091a 54784343 		.ascii	"TxCCR_CAP2RE\000"
 15894      525F4341 
 15894      50325245 
 15894      00
 15895              	.LASF39:
 15896 0927 5F5F746D 		.ascii	"__tm_year\000"
 15896      5F796561 
 15896      7200
 15897              	.LASF153:
 15898 0931 72657769 		.ascii	"rewind\000"
 15898      6E6400
 15899              	.LASF293:
 15900 0938 66617431 		.ascii	"fat16_dir_struct\000"
 15900      365F6469 
 15900      725F7374 
 15900      72756374 
 15900      00
 15901              	.LASF371:
 15902 0949 5F5A4E35 		.ascii	"_ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEP"
 15902      46415431 
 15902      36313666 
 15902      696E645F 
 15902      66696C65 
 15903 097c 4E535F31 		.ascii	"NS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_stru"
 15903      36666174 
 15903      31365F64 
 15903      69725F73 
 15903      74727563 
 15904 09af 63744500 		.ascii	"ctE\000"
 15905              	.LASF291:
 15906 09b3 6469725F 		.ascii	"dir_entry\000"
 15906      656E7472 
 15906      7900
 15907              	.LASF122:
 15908 09bd 5F6D756C 		.ascii	"_mult\000"
 15908      7400
 15909              	.LASF232:
 15910 09c3 6669666F 		.ascii	"fifo\000"
 15910      00
 15911              	.LASF168:
 15912 09c8 61746578 		.ascii	"atexit\000"
 15912      697400
 15913              	.LASF209:
 15914 09cf 4649464F 		.ascii	"FIFOBufferSize\000"
 15914      42756666 
 15914      65725369 
 15914      7A6500
 15915              	.LASF85:
 15916 09de 5F6D6272 		.ascii	"_mbrlen_state\000"
 15916      6C656E5F 
 15916      73746174 
 15916      6500
 15917              	.LASF459:
 15918 09ec 77726974 		.ascii	"write_length\000"
 15918      655F6C65 
ARM GAS  /tmp/ccNwMSzu.s 			page 325


 15918      6E677468 
 15918      00
 15919              	.LASF315:
 15920 09f9 73645F72 		.ascii	"sd_raw_read\000"
 15920      61775F72 
 15920      65616400 
 15921              	.LASF353:
 15922 0a05 5F5A4E35 		.ascii	"_ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE\000"
 15922      46415431 
 15922      36313566 
 15922      61743136 
 15922      5F636C6F 
 15923              	.LASF505:
 15924 0a38 49324378 		.ascii	"I2CxCONCLR_I2ENC\000"
 15924      434F4E43 
 15924      4C525F49 
 15924      32454E43 
 15924      00
 15925              	.LASF523:
 15926 0a49 54784343 		.ascii	"TxCCR_CAP0RE\000"
 15926      525F4341 
 15926      50305245 
 15926      00
 15927              	.LASF146:
 15928 0a56 6674656C 		.ascii	"ftell\000"
 15928      6C00
 15929              	.LASF208:
 15930 0a5c 76615F6C 		.ascii	"va_list\000"
 15930      69737400 
 15931              	.LASF95:
 15932 0a64 5F737464 		.ascii	"_stdin\000"
 15932      696E00
 15933              	.LASF92:
 15934 0a6b 5F6E6D61 		.ascii	"_nmalloc\000"
 15934      6C6C6F63 
 15934      00
 15935              	.LASF239:
 15936 0a74 456E6162 		.ascii	"Enable\000"
 15936      6C6500
 15937              	.LASF431:
 15938 0a7b 73656374 		.ascii	"sectors_per_cluster\000"
 15938      6F72735F 
 15938      7065725F 
 15938      636C7573 
 15938      74657200 
 15939              	.LASF563:
 15940 0a8f 42617564 		.ascii	"BaudRate\000"
 15940      52617465 
 15940      00
 15941              	.LASF564:
 15942 0a98 5F5A4E35 		.ascii	"_ZN5UART03ISREv\000"
 15942      55415254 
 15942      30334953 
 15942      52457600 
 15943              	.LASF444:
 15944 0aa8 63686172 		.ascii	"char_offset\000"
 15944      5F6F6666 
ARM GAS  /tmp/ccNwMSzu.s 			page 326


 15944      73657400 
 15945              	.LASF270:
 15946 0ab4 73697A65 		.ascii	"size\000"
 15946      00
 15947              	.LASF132:
 15948 0ab9 46494C45 		.ascii	"FILE\000"
 15948      00
 15949              	.LASF199:
 15950 0abe 636C6F63 		.ascii	"clock\000"
 15950      6B00
 15951              	.LASF203:
 15952 0ac4 61736374 		.ascii	"asctime\000"
 15952      696D6500 
 15953              	.LASF157:
 15954 0acc 746D7066 		.ascii	"tmpfile\000"
 15954      696C6500 
 15955              	.LASF350:
 15956 0ad4 66617431 		.ascii	"fat16_open_dir\000"
 15956      365F6F70 
 15956      656E5F64 
 15956      697200
 15957              	.LASF126:
 15958 0ae3 73697A65 		.ascii	"size_t\000"
 15958      5F7400
 15959              	.LASF75:
 15960 0aea 5F6C6F63 		.ascii	"_localtime_buf\000"
 15960      616C7469 
 15960      6D655F62 
 15960      756600
 15961              	.LASF522:
 15962 0af9 54784952 		.ascii	"TxIR_CR3_FLAG\000"
 15962      5F435233 
 15962      5F464C41 
 15962      4700
 15963              	.LASF278:
 15964 0b07 70617274 		.ascii	"partition\000"
 15964      6974696F 
 15964      6E00
 15965              	.LASF249:
 15966 0b11 5F5A4E35 		.ascii	"_ZN5UART09WriteLineEPKcz\000"
 15966      55415254 
 15966      30395772 
 15966      6974654C 
 15966      696E6545 
 15967              	.LASF205:
 15968 0b2a 676D7469 		.ascii	"gmtime\000"
 15968      6D6500
 15969              	.LASF24:
 15970 0b31 5F5F636F 		.ascii	"__count\000"
 15970      756E7400 
 15971              	.LASF4:
 15972 0b39 75696E74 		.ascii	"uint8_t\000"
 15972      385F7400 
 15973              	.LASF166:
 15974 0b41 71756F74 		.ascii	"quot\000"
 15974      00
 15975              	.LASF311:
ARM GAS  /tmp/ccNwMSzu.s 			page 327


 15976 0b46 73645F72 		.ascii	"sd_raw_available\000"
 15976      61775F61 
 15976      7661696C 
 15976      61626C65 
 15976      00
 15977              	.LASF356:
 15978 0b57 66617431 		.ascii	"fat16_reset_dir\000"
 15978      365F7265 
 15978      7365745F 
 15978      64697200 
 15979              	.LASF150:
 15980 0b67 70657272 		.ascii	"perror\000"
 15980      6F7200
 15981              	.LASF452:
 15982 0b6e 636F756E 		.ascii	"count_left\000"
 15982      745F6C65 
 15982      667400
 15983              	.LASF460:
 15984 0b79 73697A65 		.ascii	"size_old\000"
 15984      5F6F6C64 
 15984      00
 15985              	.LASF521:
 15986 0b82 54784952 		.ascii	"TxIR_CR2_FLAG\000"
 15986      5F435232 
 15986      5F464C41 
 15986      4700
 15987              	.LASF109:
 15988 0b90 5F637674 		.ascii	"_cvtbuf\000"
 15988      62756600 
 15989              	.LASF230:
 15990 0b98 42617564 		.ascii	"BaudRate57600\000"
 15990      52617465 
 15990      35373630 
 15990      3000
 15991              	.LASF234:
 15992 0ba6 5F5A4E38 		.ascii	"_ZN8UARTBase5ClearEv\000"
 15992      55415254 
 15992      42617365 
 15992      35436C65 
 15992      61724576 
 15993              	.LASF454:
 15994 0bbb 636C7573 		.ascii	"cluster_num_next\000"
 15994      7465725F 
 15994      6E756D5F 
 15994      6E657874 
 15994      00
 15995              	.LASF328:
 15996 0bcc 5F5A4E35 		.ascii	"_ZN5FAT1611format_cardEc\000"
 15996      46415431 
 15996      36313166 
 15996      6F726D61 
 15996      745F6361 
 15997              	.LASF415:
 15998 0be5 5F5A4E35 		.ascii	"_ZN5FAT1611root_formatEv\000"
 15998      46415431 
 15998      36313172 
 15998      6F6F745F 
ARM GAS  /tmp/ccNwMSzu.s 			page 328


 15998      666F726D 
 15999              	.LASF340:
 16000 0bfe 66617431 		.ascii	"fat16_close_file\000"
 16000      365F636C 
 16000      6F73655F 
 16000      66696C65 
 16000      00
 16001              	.LASF532:
 16002 0c0f 54784343 		.ascii	"TxCCR_CAP3RE\000"
 16002      525F4341 
 16002      50335245 
 16002      00
 16003              	.LASF260:
 16004 0c1c 666C6167 		.ascii	"flag_write_protect\000"
 16004      5F777269 
 16004      74655F70 
 16004      726F7465 
 16004      637400
 16005              	.LASF23:
 16006 0c2f 5F5F7763 		.ascii	"__wchb\000"
 16006      686200
 16007              	.LASF86:
 16008 0c36 5F6D6272 		.ascii	"_mbrtowc_state\000"
 16008      746F7763 
 16008      5F737461 
 16008      746500
 16009              	.LASF36:
 16010 0c45 5F5F746D 		.ascii	"__tm_hour\000"
 16010      5F686F75 
 16010      7200
 16011              	.LASF392:
 16012 0c4f 66617431 		.ascii	"fat16_free_clusters\000"
 16012      365F6672 
 16012      65655F63 
 16012      6C757374 
 16012      65727300 
 16013              	.LASF21:
 16014 0c63 77696E74 		.ascii	"wint_t\000"
 16014      5F7400
 16015              	.LASF175:
 16016 0c6a 6D626C65 		.ascii	"mblen\000"
 16016      6E00
 16017              	.LASF110:
 16018 0c70 5F6E6577 		.ascii	"_new\000"
 16018      00
 16019              	.LASF427:
 16020 0c75 75617274 		.ascii	"uart\000"
 16020      00
 16021              	.LASF472:
 16022 0c7a 66696C65 		.ascii	"file\000"
 16022      00
 16023              	.LASF118:
 16024 0c7f 5F6E696F 		.ascii	"_niobs\000"
 16024      627300
 16025              	.LASF438:
 16026 0c86 64617461 		.ascii	"data_sector_count\000"
 16026      5F736563 
ARM GAS  /tmp/ccNwMSzu.s 			page 329


 16026      746F725F 
 16026      636F756E 
 16026      7400
 16027              	.LASF337:
 16028 0c98 5F5A4E35 		.ascii	"_ZN5FAT1611fat16_closeEPNS_15fat16_fs_structE\000"
 16028      46415431 
 16028      36313166 
 16028      61743136 
 16028      5F636C6F 
 16029              	.LASF317:
 16030 0cc6 73645F72 		.ascii	"sd_raw_read_interval\000"
 16030      61775F72 
 16030      6561645F 
 16030      696E7465 
 16030      7276616C 
 16031              	.LASF94:
 16032 0cdb 5F657272 		.ascii	"_errno\000"
 16032      6E6F00
 16033              	.LASF303:
 16034 0ce2 7261775F 		.ascii	"raw_block_address\000"
 16034      626C6F63 
 16034      6B5F6164 
 16034      64726573 
 16034      7300
 16035              	.LASF37:
 16036 0cf4 5F5F746D 		.ascii	"__tm_mday\000"
 16036      5F6D6461 
 16036      7900
 16037              	.LASF265:
 16038 0cfe 61747472 		.ascii	"attributes\000"
 16038      69627574 
 16038      657300
 16039              	.LASF341:
 16040 0d09 5F5A4E35 		.ascii	"_ZN5FAT1616fat16_close_fileEPNS_17fat16_file_struct"
 16040      46415431 
 16040      36313666 
 16040      61743136 
 16040      5F636C6F 
 16041 0d3c 4500     		.ascii	"E\000"
 16042              	.LASF44:
 16043 0d3e 5F666E61 		.ascii	"_fnargs\000"
 16043      72677300 
 16044              	.LASF218:
 16045 0d46 48617344 		.ascii	"HasData\000"
 16045      61746100 
 16046              	.LASF384:
 16047 0d4e 66617431 		.ascii	"fat16_dir_entry_read_callback\000"
 16047      365F6469 
 16047      725F656E 
 16047      7472795F 
 16047      72656164 
 16048              	.LASF434:
 16049 0d6c 6D61785F 		.ascii	"max_root_entries\000"
 16049      726F6F74 
 16049      5F656E74 
 16049      72696573 
 16049      00
ARM GAS  /tmp/ccNwMSzu.s 			page 330


 16050              	.LASF295:
 16051 0d7d 66617431 		.ascii	"fat16_read_callback_arg\000"
 16051      365F7265 
 16051      61645F63 
 16051      616C6C62 
 16051      61636B5F 
 16052              	.LASF222:
 16053 0d95 57726974 		.ascii	"Write\000"
 16053      6500
 16054              	.LASF342:
 16055 0d9b 66617431 		.ascii	"fat16_read_file\000"
 16055      365F7265 
 16055      61645F66 
 16055      696C6500 
 16056              	.LASF28:
 16057 0dab 5F6E6578 		.ascii	"_next\000"
 16057      7400
 16058              	.LASF453:
 16059 0db1 636C7573 		.ascii	"cluster_new\000"
 16059      7465725F 
 16059      6E657700 
 16060              	.LASF83:
 16061 0dbd 5F736967 		.ascii	"_signal_buf\000"
 16061      6E616C5F 
 16061      62756600 
 16062              	.LASF58:
 16063 0dc9 5F636F6F 		.ascii	"_cookie\000"
 16063      6B696500 
 16064              	.LASF363:
 16065 0dd1 5F5A4E35 		.ascii	"_ZN5FAT1617fat16_delete_fileEPNS_15fat16_fs_structE"
 16065      46415431 
 16065      36313766 
 16065      61743136 
 16065      5F64656C 
 16066 0e04 504E535F 		.ascii	"PNS_22fat16_dir_entry_structE\000"
 16066      32326661 
 16066      7431365F 
 16066      6469725F 
 16066      656E7472 
 16067              	.LASF565:
 16068 0e22 5F5A4E35 		.ascii	"_ZN5FAT1615sd_raw_rec_byteEv\000"
 16068      46415431 
 16068      36313573 
 16068      645F7261 
 16068      775F7265 
 16069              	.LASF428:
 16070 0e3f 74686973 		.ascii	"this\000"
 16070      00
 16071              	.LASF134:
 16072 0e44 66636C6F 		.ascii	"fclose\000"
 16072      736500
 16073              	.LASF184:
 16074 0e4b 73747274 		.ascii	"strtoul\000"
 16074      6F756C00 
 16075              	.LASF558:
 16076 0e53 46415431 		.ascii	"FAT16SingletonObject\000"
 16076      3653696E 
ARM GAS  /tmp/ccNwMSzu.s 			page 331


 16076      676C6574 
 16076      6F6E4F62 
 16076      6A656374 
 16077              	.LASF161:
 16078 0e68 73747265 		.ascii	"strerror\000"
 16078      72726F72 
 16078      00
 16079              	.LASF554:
 16080 0e71 50574D54 		.ascii	"PWMTCR_PWM_ENABLE\000"
 16080      43525F50 
 16080      574D5F45 
 16080      4E41424C 
 16080      4500
 16081              	.LASF419:
 16082 0e83 5F5A4E35 		.ascii	"_ZN5FAT1611root_deleteEPc\000"
 16082      46415431 
 16082      36313172 
 16082      6F6F745F 
 16082      64656C65 
 16083              	.LASF163:
 16084 0e9d 73747278 		.ascii	"strxfrm\000"
 16084      66726D00 
 16085              	.LASF34:
 16086 0ea5 5F5F746D 		.ascii	"__tm_sec\000"
 16086      5F736563 
 16086      00
 16087              	.LASF186:
 16088 0eae 77637374 		.ascii	"wcstombs\000"
 16088      6F6D6273 
 16088      00
 16089              	.LASF43:
 16090 0eb7 5F6F6E5F 		.ascii	"_on_exit_args\000"
 16090      65786974 
 16090      5F617267 
 16090      7300
 16091              	.LASF402:
 16092 0ec5 726F6F74 		.ascii	"root_open_new\000"
 16092      5F6F7065 
 16092      6E5F6E65 
 16092      7700
 16093              	.LASF238:
 16094 0ed3 5F5A4E35 		.ascii	"_ZN5UART07DisableEv\000"
 16094      55415254 
 16094      30374469 
 16094      7361626C 
 16094      65457600 
 16095              	.LASF379:
 16096 0ee7 5F5A4E35 		.ascii	"_ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_f"
 16096      46415431 
 16096      36323566 
 16096      61743136 
 16096      5F726561 
 16097 0f1a 735F7374 		.ascii	"s_structEtPNS_22fat16_dir_entry_structE\000"
 16097      72756374 
 16097      4574504E 
 16097      535F3232 
 16097      66617431 
ARM GAS  /tmp/ccNwMSzu.s 			page 332


 16098              	.LASF88:
 16099 0f42 5F776372 		.ascii	"_wcrtomb_state\000"
 16099      746F6D62 
 16099      5F737461 
 16099      746500
 16100              	.LASF368:
 16101 0f51 66617431 		.ascii	"fat16_get_fs_free\000"
 16101      365F6765 
 16101      745F6673 
 16101      5F667265 
 16101      6500
 16102              	.LASF476:
 16103 0f63 6F666673 		.ascii	"offset_to\000"
 16103      65745F74 
 16103      6F00
 16104              	.LASF149:
 16105 0f6d 636C6561 		.ascii	"clearerr\000"
 16105      72657272 
 16105      00
 16106              	.LASF400:
 16107 0f76 7072696E 		.ascii	"print_disk_info\000"
 16107      745F6469 
 16107      736B5F69 
 16107      6E666F00 
 16108              	.LASF227:
 16109 0f86 42617564 		.ascii	"BaudRate9600\000"
 16109      52617465 
 16109      39363030 
 16109      00
 16110              	.LASF159:
 16111 0f93 756E6765 		.ascii	"ungetc\000"
 16111      746300
 16112              	.LASF489:
 16113 0f9a 5649435F 		.ascii	"VIC_Channel_USB\000"
 16113      4368616E 
 16113      6E656C5F 
 16113      55534200 
 16114              	.LASF1:
 16115 0faa 696E7438 		.ascii	"int8_t\000"
 16115      5F7400
 16116              	.LASF485:
 16117 0fb1 5649435F 		.ascii	"VIC_Channel_Timer0\000"
 16117      4368616E 
 16117      6E656C5F 
 16117      54696D65 
 16117      723000
 16118              	.LASF486:
 16119 0fc4 5649435F 		.ascii	"VIC_Channel_Timer1\000"
 16119      4368616E 
 16119      6E656C5F 
 16119      54696D65 
 16119      723100
 16120              	.LASF189:
 16121 0fd7 746D5F6D 		.ascii	"tm_min\000"
 16121      696E00
 16122              	.LASF27:
 16123 0fde 5F5F554C 		.ascii	"__ULong\000"
ARM GAS  /tmp/ccNwMSzu.s 			page 333


 16123      6F6E6700 
 16124              	.LASF307:
 16125 0fe6 5F5A4E35 		.ascii	"_ZN5UART011GetInstanceEv\000"
 16125      55415254 
 16125      30313147 
 16125      6574496E 
 16125      7374616E 
 16126              	.LASF181:
 16127 0fff 7372616E 		.ascii	"srand\000"
 16127      6400
 16128              	.LASF509:
 16129 1005 49324378 		.ascii	"I2CxCONSET_STA\000"
 16129      434F4E53 
 16129      45545F53 
 16129      544100
 16130              	.LASF508:
 16131 1014 49324378 		.ascii	"I2CxCONSET_STO\000"
 16131      434F4E53 
 16131      45545F53 
 16131      544F00
 16132              	.LASF386:
 16133 1023 66617431 		.ascii	"fat16_interpret_dir_entry\000"
 16133      365F696E 
 16133      74657270 
 16133      7265745F 
 16133      6469725F 
 16134              	.LASF377:
 16135 103d 5F5A4E35 		.ascii	"_ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE"
 16135      46415431 
 16135      36313766 
 16135      61743136 
 16135      5F726561 
 16136 1070 00       		.ascii	"\000"
 16137              	.LASF361:
 16138 1071 5F5A4E35 		.ascii	"_ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_struct"
 16138      46415431 
 16138      36313766 
 16138      61743136 
 16138      5F637265 
 16139 10a4 45504B63 		.ascii	"EPKcPNS_22fat16_dir_entry_structE\000"
 16139      504E535F 
 16139      32326661 
 16139      7431365F 
 16139      6469725F 
 16140              	.LASF73:
 16141 10c6 5F737472 		.ascii	"_strtok_last\000"
 16141      746F6B5F 
 16141      6C617374 
 16141      00
 16142              	.LASF383:
 16143 10d3 5F5A4E35 		.ascii	"_ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv\000"
 16143      46415431 
 16143      36323966 
 16143      61743136 
 16143      5F646972 
 16144              	.LASF130:
 16145 1102 636C6F63 		.ascii	"clock_t\000"
ARM GAS  /tmp/ccNwMSzu.s 			page 334


 16145      6B5F7400 
 16146              	.LASF210:
 16147 110a 4649464F 		.ascii	"FIFOBufferMask\000"
 16147      42756666 
 16147      65724D61 
 16147      736B00
 16148              	.LASF121:
 16149 1119 5F736565 		.ascii	"_seed\000"
 16149      6400
 16150              	.LASF61:
 16151 111f 5F736565 		.ascii	"_seek\000"
 16151      6B00
 16152              	.LASF237:
 16153 1125 5F5A4E34 		.ascii	"_ZN4FIFO5ClearEv\000"
 16153      4649464F 
 16153      35436C65 
 16153      61724576 
 16153      00
 16154              	.LASF503:
 16155 1136 49324378 		.ascii	"I2CxCONCLR_SI\000"
 16155      434F4E43 
 16155      4C525F53 
 16155      4900
 16156              	.LASF185:
 16157 1144 73797374 		.ascii	"system\000"
 16157      656D00
 16158              	.LASF6:
 16159 114b 696E7431 		.ascii	"int16_t\000"
 16159      365F7400 
 16160              	.LASF300:
 16161 1153 636C7573 		.ascii	"cluster_count\000"
 16161      7465725F 
 16161      636F756E 
 16161      7400
 16162              	.LASF9:
 16163 1161 73686F72 		.ascii	"short unsigned int\000"
 16163      7420756E 
 16163      7369676E 
 16163      65642069 
 16163      6E7400
 16164              	.LASF3:
 16165 1174 7369676E 		.ascii	"signed char\000"
 16165      65642063 
 16165      68617200 
 16166              	.LASF268:
 16167 1180 656E7472 		.ascii	"entry_offset\000"
 16167      795F6F66 
 16167      66736574 
 16167      00
 16168              	.LASF484:
 16169 118d 4343525F 		.ascii	"CCR_CLKSRC_32KHZ\000"
 16169      434C4B53 
 16169      52435F33 
 16169      324B485A 
 16169      00
 16170              	.LASF125:
 16171 119e 70747264 		.ascii	"ptrdiff_t\000"
ARM GAS  /tmp/ccNwMSzu.s 			page 335


 16171      6966665F 
 16171      7400
 16172              	.LASF449:
 16173 11a8 636F756E 		.ascii	"count\000"
 16173      7400
 16174              	.LASF107:
 16175 11ae 5F667265 		.ascii	"_freelist\000"
 16175      656C6973 
 16175      7400
 16176              	.LASF501:
 16177 11b8 53535043 		.ascii	"SSPCR0_CPHA\000"
 16177      52305F43 
 16177      50484100 
 16178              	.LASF194:
 16179 11c4 746D5F77 		.ascii	"tm_wday\000"
 16179      64617900 
 16180              	.LASF338:
 16181 11cc 66617431 		.ascii	"fat16_open_file\000"
 16181      365F6F70 
 16181      656E5F66 
 16181      696C6500 
 16182              	.LASF177:
 16183 11dc 77636861 		.ascii	"wchar_t\000"
 16183      725F7400 
 16184              	.LASF407:
 16185 11e4 5F5A4E35 		.ascii	"_ZN5FAT168openrootEv\000"
 16185      46415431 
 16185      36386F70 
 16185      656E726F 
 16185      6F744576 
 16186              	.LASF336:
 16187 11f9 5F5A4E35 		.ascii	"_ZN5FAT1616sd_raw_send_byteEh\000"
 16187      46415431 
 16187      36313673 
 16187      645F7261 
 16187      775F7365 
 16188              	.LASF66:
 16189 1217 5F6F6666 		.ascii	"_offset\000"
 16189      73657400 
 16190              	.LASF322:
 16191 121f 5F5A4E35 		.ascii	"_ZN5FAT1611sd_raw_syncEv\000"
 16191      46415431 
 16191      36313173 
 16191      645F7261 
 16191      775F7379 
 16192              	.LASF327:
 16193 1238 666F726D 		.ascii	"format_card\000"
 16193      61745F63 
 16193      61726400 
 16194              	.LASF314:
 16195 1244 5F5A4E35 		.ascii	"_ZN5FAT1613sd_raw_lockedEv\000"
 16195      46415431 
 16195      36313373 
 16195      645F7261 
 16195      775F6C6F 
 16196              	.LASF430:
 16197 125f 62797465 		.ascii	"bytes_per_sector\000"
ARM GAS  /tmp/ccNwMSzu.s 			page 336


 16197      735F7065 
 16197      725F7365 
 16197      63746F72 
 16197      00
 16198              	.LASF319:
 16199 1270 73645F72 		.ascii	"sd_raw_write\000"
 16199      61775F77 
 16199      72697465 
 16199      00
 16200              	.LASF51:
 16201 127d 5F5F7362 		.ascii	"__sbuf\000"
 16201      756600
 16202              	.LASF176:
 16203 1284 6D627374 		.ascii	"mbstowcs\000"
 16203      6F776373 
 16203      00
 16204              	.LASF82:
 16205 128d 5F6C3634 		.ascii	"_l64a_buf\000"
 16205      615F6275 
 16205      6600
 16206              	.LASF364:
 16207 1297 66617431 		.ascii	"fat16_get_dir_entry_of_path\000"
 16207      365F6765 
 16207      745F6469 
 16207      725F656E 
 16207      7472795F 
 16208              	.LASF445:
 16209 12b3 70617468 		.ascii	"path\000"
 16209      00
 16210              	.LASF283:
 16211 12b8 64657669 		.ascii	"device_read_interval_t\000"
 16211      63655F72 
 16211      6561645F 
 16211      696E7465 
 16211      7276616C 
 16212              	.LASF195:
 16213 12cf 746D5F79 		.ascii	"tm_yday\000"
 16213      64617900 
 16214              	.LASF211:
 16215 12d7 5F5A4E34 		.ascii	"_ZN4FIFO14FIFOBufferSizeE\000"
 16215      4649464F 
 16215      31344649 
 16215      464F4275 
 16215      66666572 
 16216              	.LASF74:
 16217 12f1 5F617363 		.ascii	"_asctime_buf\000"
 16217      74696D65 
 16217      5F627566 
 16217      00
 16218              	.LASF408:
 16219 12fe 726F6F74 		.ascii	"root_open\000"
 16219      5F6F7065 
 16219      6E00
 16220              	.LASF240:
 16221 1308 5F5A4E35 		.ascii	"_ZN5UART06EnableEN8UARTBase8BaudRateE\000"
 16221      55415254 
 16221      3036456E 
ARM GAS  /tmp/ccNwMSzu.s 			page 337


 16221      61626C65 
 16221      454E3855 
 16222              	.LASF22:
 16223 132e 5F5F7763 		.ascii	"__wch\000"
 16223      6800
 16224              	.LASF89:
 16225 1334 5F776373 		.ascii	"_wcsrtombs_state\000"
 16225      72746F6D 
 16225      62735F73 
 16225      74617465 
 16225      00
 16226              	.LASF513:
 16227 1345 54784D43 		.ascii	"TxMCR_INT_ON_MR0\000"
 16227      525F494E 
 16227      545F4F4E 
 16227      5F4D5230 
 16227      00
 16228              	.LASF389:
 16229 1356 5F5A4E35 		.ascii	"_ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_s"
 16229      46415431 
 16229      36323266 
 16229      61743136 
 16229      5F676574 
 16230 1389 74727563 		.ascii	"tructEt\000"
 16230      74457400 
 16231              	.LASF396:
 16232 1391 66617431 		.ascii	"fat16_write_dir_entry\000"
 16232      365F7772 
 16232      6974655F 
 16232      6469725F 
 16232      656E7472 
 16233              	.LASF512:
 16234 13a7 54785443 		.ascii	"TxTCR_COUNTER_RESET\000"
 16234      525F434F 
 16234      554E5445 
 16234      525F5245 
 16234      53455400 
 16235              	.LASF151:
 16236 13bb 72656D6F 		.ascii	"remove\000"
 16236      766500
 16237              	.LASF552:
 16238 13c2 50574D54 		.ascii	"PWMTCR_COUNTER_ENABLE\000"
 16238      43525F43 
 16238      4F554E54 
 16238      45525F45 
 16238      4E41424C 
 16239              	.LASF192:
 16240 13d8 746D5F6D 		.ascii	"tm_mon\000"
 16240      6F6E00
 16241              	.LASF261:
 16242 13df 666C6167 		.ascii	"flag_write_protect_temp\000"
 16242      5F777269 
 16242      74655F70 
 16242      726F7465 
 16242      63745F74 
 16243              	.LASF19:
 16244 13f7 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
ARM GAS  /tmp/ccNwMSzu.s 			page 338


 16244      4B5F5245 
 16244      43555253 
 16244      4956455F 
 16244      5400
 16245              	.LASF202:
 16246 1409 74696D65 		.ascii	"time\000"
 16246      00
 16247              	.LASF282:
 16248 140e 64657669 		.ascii	"device_read\000"
 16248      63655F72 
 16248      65616400 
 16249              	.LASF11:
 16250 141a 6C6F6E67 		.ascii	"long int\000"
 16250      20696E74 
 16250      00
 16251              	.LASF139:
 16252 1423 66676574 		.ascii	"fgetpos\000"
 16252      706F7300 
 16253              	.LASF490:
 16254 142b 56494356 		.ascii	"VICVectCntl_ENABLE\000"
 16254      65637443 
 16254      6E746C5F 
 16254      454E4142 
 16254      4C4500
 16255              	.LASF369:
 16256 143e 5F5A4E35 		.ascii	"_ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_struct"
 16256      46415431 
 16256      36313766 
 16256      61743136 
 16256      5F676574 
 16257 1471 4500     		.ascii	"E\000"
 16258              	.LASF81:
 16259 1473 5F776374 		.ascii	"_wctomb_state\000"
 16259      6F6D625F 
 16259      73746174 
 16259      6500
 16260              	.LASF316:
 16261 1481 5F5A4E35 		.ascii	"_ZN5FAT1611sd_raw_readEjPht\000"
 16261      46415431 
 16261      36313173 
 16261      645F7261 
 16261      775F7265 
 16262              	.LASF262:
 16263 149d 666F726D 		.ascii	"format\000"
 16263      617400
 16264              	.LASF193:
 16265 14a4 746D5F79 		.ascii	"tm_year\000"
 16265      65617200 
 16266              	.LASF515:
 16267 14ac 54784952 		.ascii	"TxIR_MR0_FLAG\000"
 16267      5F4D5230 
 16267      5F464C41 
 16267      4700
 16268              	.LASF147:
 16269 14ba 67657463 		.ascii	"getc\000"
 16269      00
 16270              	.LASF391:
ARM GAS  /tmp/ccNwMSzu.s 			page 339


 16271 14bf 5F5A4E35 		.ascii	"_ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_st"
 16271      46415431 
 16271      36323166 
 16271      61743136 
 16271      5F617070 
 16272 14f2 72756374 		.ascii	"ructEtt\000"
 16272      45747400 
 16273              	.LASF355:
 16274 14fa 5F5A4E35 		.ascii	"_ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPN"
 16274      46415431 
 16274      36313466 
 16274      61743136 
 16274      5F726561 
 16275 152d 535F3232 		.ascii	"S_22fat16_dir_entry_structE\000"
 16275      66617431 
 16275      365F6469 
 16275      725F656E 
 16275      7472795F 
 16276              	.LASF119:
 16277 1549 5F696F62 		.ascii	"_iobs\000"
 16277      7300
 16278              	.LASF99:
 16279 154f 5F656D65 		.ascii	"_emergency\000"
 16279      7267656E 
 16279      637900
 16280              	.LASF169:
 16281 155a 61746F66 		.ascii	"atof\000"
 16281      00
 16282              	.LASF357:
 16283 155f 5F5A4E35 		.ascii	"_ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE\000"
 16283      46415431 
 16283      36313566 
 16283      61743136 
 16283      5F726573 
 16284              	.LASF480:
 16285 1592 66696C65 		.ascii	"file_entry\000"
 16285      5F656E74 
 16285      727900
 16286              	.LASF214:
 16287 159d 7461696C 		.ascii	"tail\000"
 16287      00
 16288              	.LASF91:
 16289 15a2 5F6E6578 		.ascii	"_nextf\000"
 16289      746600
 16290              	.LASF77:
 16291 15a9 5F72616E 		.ascii	"_rand_next\000"
 16291      645F6E65 
 16291      787400
 16292              	.LASF12:
 16293 15b4 75696E74 		.ascii	"uint32_t\000"
 16293      33325F74 
 16293      00
 16294              	.LASF358:
 16295 15bd 66617431 		.ascii	"fat16_set_dir\000"
 16295      365F7365 
 16295      745F6469 
 16295      7200
ARM GAS  /tmp/ccNwMSzu.s 			page 340


 16296              	.LASF29:
 16297 15cb 5F6D6178 		.ascii	"_maxwds\000"
 16297      77647300 
 16298              	.LASF221:
 16299 15d3 5F5A4E34 		.ascii	"_ZN4FIFO4ReadEv\000"
 16299      4649464F 
 16299      34526561 
 16299      64457600 
 16300              	.LASF182:
 16301 15e3 73747274 		.ascii	"strtod\000"
 16301      6F6400
 16302              	.LASF162:
 16303 15ea 73747274 		.ascii	"strtok\000"
 16303      6F6B00
 16304              	.LASF183:
 16305 15f1 73747274 		.ascii	"strtol\000"
 16305      6F6C00
 16306              	.LASF124:
 16307 15f8 6C6F6E67 		.ascii	"long double\000"
 16307      20646F75 
 16307      626C6500 
 16308              	.LASF231:
 16309 1604 42617564 		.ascii	"BaudRate115200\000"
 16309      52617465 
 16309      31313532 
 16309      303000
 16310              	.LASF333:
 16311 1613 5F5A4E35 		.ascii	"_ZN5FAT1622sd_raw_send_command_r1Ehj\000"
 16311      46415431 
 16311      36323273 
 16311      645F7261 
 16311      775F7365 
 16312              	.LASF255:
 16313 1638 73657269 		.ascii	"serial\000"
 16313      616C00
 16314              	.LASF13:
 16315 163f 6C6F6E67 		.ascii	"long unsigned int\000"
 16315      20756E73 
 16315      69676E65 
 16315      6420696E 
 16315      7400
 16316              	.LASF0:
 16317 1651 626F6F6C 		.ascii	"bool_t\000"
 16317      5F7400
 16318              	.LASF510:
 16319 1658 49324378 		.ascii	"I2CxCONSET_I2EN\000"
 16319      434F4E53 
 16319      45545F49 
 16319      32454E00 
 16320              	.LASF401:
 16321 1668 5F5A4E35 		.ascii	"_ZN5FAT1615print_disk_infoEPKNS_15fat16_fs_structE\000"
 16321      46415431 
 16321      36313570 
 16321      72696E74 
 16321      5F646973 
 16322              	.LASF470:
 16323 169b 6E616D65 		.ascii	"name_ext_len\000"
ARM GAS  /tmp/ccNwMSzu.s 			page 341


 16323      5F657874 
 16323      5F6C656E 
 16323      00
 16324              	.LASF380:
 16325 16a8 66617431 		.ascii	"fat16_read_sub_dir_entry\000"
 16325      365F7265 
 16325      61645F73 
 16325      75625F64 
 16325      69725F65 
 16326              	.LASF158:
 16327 16c1 746D706E 		.ascii	"tmpnam\000"
 16327      616D00
 16328              	.LASF359:
 16329 16c8 5F5A4E35 		.ascii	"_ZN5FAT1613fat16_set_dirEPNS_16fat16_dir_structEt\000"
 16329      46415431 
 16329      36313366 
 16329      61743136 
 16329      5F736574 
 16330              	.LASF136:
 16331 16fa 66657272 		.ascii	"ferror\000"
 16331      6F7200
 16332              	.LASF390:
 16333 1701 66617431 		.ascii	"fat16_append_clusters\000"
 16333      365F6170 
 16333      70656E64 
 16333      5F636C75 
 16333      73746572 
 16334              	.LASF382:
 16335 1717 66617431 		.ascii	"fat16_dir_entry_seek_callback\000"
 16335      365F6469 
 16335      725F656E 
 16335      7472795F 
 16335      7365656B 
 16336              	.LASF242:
 16337 1735 5F5A4E35 		.ascii	"_ZN5UART011IsCharReadyEv\000"
 16337      55415254 
 16337      30313149 
 16337      73436861 
 16337      72526561 
 16338              	.LASF500:
 16339 174e 53535043 		.ascii	"SSPCR0_CPOL\000"
 16339      52305F43 
 16339      504F4C00 
 16340              	.LASF62:
 16341 175a 5F636C6F 		.ascii	"_close\000"
 16341      736500
 16342              	.LASF115:
 16343 1761 63686172 		.ascii	"char\000"
 16343      00
 16344              	.LASF498:
 16345 1766 53535053 		.ascii	"SSPSR_RNE\000"
 16345      525F524E 
 16345      4500
 16346              	.LASF117:
 16347 1770 5F676C75 		.ascii	"_glue\000"
 16347      6500
 16348              	.LASF545:
ARM GAS  /tmp/ccNwMSzu.s 			page 342


 16349 1776 4C455236 		.ascii	"LER6_EN\000"
 16349      5F454E00 
 16350              	.LASF442:
 16351 177e 636C7573 		.ascii	"cluster_num\000"
 16351      7465725F 
 16351      6E756D00 
 16352              	.LASF228:
 16353 178a 42617564 		.ascii	"BaudRate19200\000"
 16353      52617465 
 16353      31393230 
 16353      3000
 16354              	.LASF32:
 16355 1798 5F426967 		.ascii	"_Bigint\000"
 16355      696E7400 
 16356              	.LASF200:
 16357 17a0 64696666 		.ascii	"difftime\000"
 16357      74696D65 
 16357      00
 16358              	.LASF348:
 16359 17a9 66617431 		.ascii	"fat16_resize_file\000"
 16359      365F7265 
 16359      73697A65 
 16359      5F66696C 
 16359      6500
 16360              	.LASF111:
 16361 17bb 5F617465 		.ascii	"_atexit0\000"
 16361      78697430 
 16361      00
 16362              	.LASF312:
 16363 17c4 5F5A4E35 		.ascii	"_ZN5FAT1616sd_raw_availableEv\000"
 16363      46415431 
 16363      36313673 
 16363      645F7261 
 16363      775F6176 
 16364              	.LASF491:
 16365 17e2 55494552 		.ascii	"UIER_ERBFI\000"
 16365      5F455242 
 16365      464900
 16366              	.LASF190:
 16367 17ed 746D5F68 		.ascii	"tm_hour\000"
 16367      6F757200 
 16368              	.LASF215:
 16369 17f5 62756666 		.ascii	"buffer\000"
 16369      657200
 16370              	.LASF313:
 16371 17fc 73645F72 		.ascii	"sd_raw_locked\000"
 16371      61775F6C 
 16371      6F636B65 
 16371      6400
 16372              	.LASF84:
 16373 180a 5F676574 		.ascii	"_getdate_err\000"
 16373      64617465 
 16373      5F657272 
 16373      00
 16374              	.LASF347:
 16375 1817 5F5A4E35 		.ascii	"_ZN5FAT1615fat16_seek_fileEPNS_17fat16_file_structE"
 16375      46415431 
ARM GAS  /tmp/ccNwMSzu.s 			page 343


 16375      36313566 
 16375      61743136 
 16375      5F736565 
 16376 184a 506C6800 		.ascii	"Plh\000"
 16377              	.LASF482:
 16378 184e 4343525F 		.ascii	"CCR_CLKEN\000"
 16378      434C4B45 
 16378      4E00
 16379              	.LASF543:
 16380 1858 4C455234 		.ascii	"LER4_EN\000"
 16380      5F454E00 
 16381              	.LASF487:
 16382 1860 5649435F 		.ascii	"VIC_Channel_UART0\000"
 16382      4368616E 
 16382      6E656C5F 
 16382      55415254 
 16382      3000
 16383              	.LASF488:
 16384 1872 5649435F 		.ascii	"VIC_Channel_UART1\000"
 16384      4368616E 
 16384      6E656C5F 
 16384      55415254 
 16384      3100
 16385              	.LASF144:
 16386 1884 66736565 		.ascii	"fseek\000"
 16386      6B00
 16387              	.LASF257:
 16388 188a 6D616E75 		.ascii	"manufacturing_month\000"
 16388      66616374 
 16388      7572696E 
 16388      675F6D6F 
 16388      6E746800 
 16389              	.LASF446:
 16390 189e 7365705F 		.ascii	"sep_pos\000"
 16390      706F7300 
 16391              	.LASF365:
 16392 18a6 5F5A4E35 		.ascii	"_ZN5FAT1627fat16_get_dir_entry_of_pathEPNS_15fat16_"
 16392      46415431 
 16392      36323766 
 16392      61743136 
 16392      5F676574 
 16393 18d9 66735F73 		.ascii	"fs_structEPKcPNS_22fat16_dir_entry_structE\000"
 16393      74727563 
 16393      7445504B 
 16393      63504E53 
 16393      5F323266 
 16394              	.LASF172:
 16395 1904 62736561 		.ascii	"bsearch\000"
 16395      72636800 
 16396              	.LASF281:
 16397 190c 64657669 		.ascii	"device_read_t\000"
 16397      63655F72 
 16397      6561645F 
 16397      7400
 16398              	.LASF405:
 16399 191a 5F5A4E35 		.ascii	"_ZN5FAT1616root_file_existsEPc\000"
 16399      46415431 
ARM GAS  /tmp/ccNwMSzu.s 			page 344


 16399      36313672 
 16399      6F6F745F 
 16399      66696C65 
 16400              	.LASF399:
 16401 1939 5F5A4E35 		.ascii	"_ZN5FAT1626fat16_get_fs_free_callbackEPhmPv\000"
 16401      46415431 
 16401      36323666 
 16401      61743136 
 16401      5F676574 
 16402              	.LASF191:
 16403 1965 746D5F6D 		.ascii	"tm_mday\000"
 16403      64617900 
 16404              	.LASF537:
 16405 196d 41447847 		.ascii	"ADxGDR_DONE\000"
 16405      44525F44 
 16405      4F4E4500 
 16406              	.LASF217:
 16407 1979 436C6561 		.ascii	"Clear\000"
 16407      7200
 16408              	.LASF65:
 16409 197f 5F626C6B 		.ascii	"_blksize\000"
 16409      73697A65 
 16409      00
 16410              	.LASF496:
 16411 1988 53535053 		.ascii	"SSPSR_TFE\000"
 16411      525F5446 
 16411      4500
 16412              	.LASF536:
 16413 1992 41447843 		.ascii	"ADxCR_START_NOW\000"
 16413      525F5354 
 16413      4152545F 
 16413      4E4F5700 
 16414              	.LASF63:
 16415 19a2 5F756275 		.ascii	"_ubuf\000"
 16415      6600
 16416              	.LASF412:
 16417 19a8 726F6F74 		.ascii	"rootDirectory_files\000"
 16417      44697265 
 16417      63746F72 
 16417      795F6669 
 16417      6C657300 
 16418              	.LASF332:
 16419 19bc 66617431 		.ascii	"fat16_open\000"
 16419      365F6F70 
 16419      656E00
 16420              	.LASF79:
 16421 19c7 5F6D626C 		.ascii	"_mblen_state\000"
 16421      656E5F73 
 16421      74617465 
 16421      00
 16422              	.LASF113:
 16423 19d4 5F5F7367 		.ascii	"__sglue\000"
 16423      6C756500 
 16424              	.LASF145:
 16425 19dc 66736574 		.ascii	"fsetpos\000"
 16425      706F7300 
 16426              	.LASF103:
ARM GAS  /tmp/ccNwMSzu.s 			page 345


 16427 19e4 5F5F636C 		.ascii	"__cleanup\000"
 16427      65616E75 
 16427      7000
 16428              	.LASF310:
 16429 19ee 5F5A4E35 		.ascii	"_ZN5FAT1611sd_raw_initEv\000"
 16429      46415431 
 16429      36313173 
 16429      645F7261 
 16429      775F696E 
 16430              	.LASF374:
 16431 1a07 66617431 		.ascii	"fat16_file_size\000"
 16431      365F6669 
 16431      6C655F73 
 16431      697A6500 
 16432              	.LASF471:
 16433 1a17 6C6F6E67 		.ascii	"long_name_curr\000"
 16433      5F6E616D 
 16433      655F6375 
 16433      727200
 16434              	.LASF273:
 16435 1a26 73656374 		.ascii	"sector_size\000"
 16435      6F725F73 
 16435      697A6500 
 16436              	.LASF477:
 16437 1a32 66697273 		.ascii	"first_char\000"
 16437      745F6368 
 16437      617200
 16438              	.LASF541:
 16439 1a3d 4C455232 		.ascii	"LER2_EN\000"
 16439      5F454E00 
 16440              	.LASF466:
 16441 1a45 6C666E5F 		.ascii	"lfn_entry_count\000"
 16441      656E7472 
 16441      795F636F 
 16441      756E7400 
 16442              	.LASF20:
 16443 1a55 5F66706F 		.ascii	"_fpos_t\000"
 16443      735F7400 
 16444              	.LASF56:
 16445 1a5d 5F66696C 		.ascii	"_file\000"
 16445      6500
 16446              	.LASF416:
 16447 1a63 726F6F74 		.ascii	"rootDirectory_files_stream\000"
 16447      44697265 
 16447      63746F72 
 16447      795F6669 
 16447      6C65735F 
 16448              	.LASF375:
 16449 1a7e 5F5A4E35 		.ascii	"_ZN5FAT1615fat16_file_sizeEPNS_17fat16_file_structE"
 16449      46415431 
 16449      36313566 
 16449      61743136 
 16449      5F66696C 
 16450 1ab1 00       		.ascii	"\000"
 16451              	.LASF174:
 16452 1ab2 6C646976 		.ascii	"ldiv\000"
 16452      00
ARM GAS  /tmp/ccNwMSzu.s 			page 346


 16453              	.LASF247:
 16454 1ab7 5F5A4E35 		.ascii	"_ZN5UART09WriteCharEh\000"
 16454      55415254 
 16454      30395772 
 16454      69746543 
 16454      68617245 
 16455              	.LASF54:
 16456 1acd 5F5F7346 		.ascii	"__sFILE\000"
 16456      494C4500 
 16457              	.LASF17:
 16458 1ad5 646F7562 		.ascii	"double\000"
 16458      6C6500
 16459              	.LASF50:
 16460 1adc 5F666E73 		.ascii	"_fns\000"
 16460      00
 16461              	.LASF329:
 16462 1ae1 73645F72 		.ascii	"sd_raw_send_byte\000"
 16462      61775F73 
 16462      656E645F 
 16462      62797465 
 16462      00
 16463              	.LASF164:
 16464 1af2 5F6D6273 		.ascii	"_mbstate_t\000"
 16464      74617465 
 16464      5F7400
 16465              	.LASF90:
 16466 1afd 5F685F65 		.ascii	"_h_errno\000"
 16466      72726E6F 
 16466      00
 16467              	.LASF245:
 16468 1b06 5F5A4E35 		.ascii	"_ZN5UART05WriteEPKc\000"
 16468      55415254 
 16468      30355772 
 16468      69746545 
 16468      504B6300 
 16469              	.LASF248:
 16470 1b1a 57726974 		.ascii	"WriteLine\000"
 16470      654C696E 
 16470      6500
 16471              	.LASF367:
 16472 1b24 5F5A4E35 		.ascii	"_ZN5FAT1617fat16_get_fs_sizeEPKNS_15fat16_fs_struct"
 16472      46415431 
 16472      36313766 
 16472      61743136 
 16472      5F676574 
 16473 1b57 4500     		.ascii	"E\000"
 16474              	.LASF204:
 16475 1b59 6374696D 		.ascii	"ctime\000"
 16475      6500
 16476              	.LASF467:
 16477 1b5f 6E616D65 		.ascii	"name_ext\000"
 16477      5F657874 
 16477      00
 16478              	.LASF443:
 16479 1b68 7261775F 		.ascii	"raw_entry\000"
 16479      656E7472 
 16479      7900
ARM GAS  /tmp/ccNwMSzu.s 			page 347


 16480              	.LASF179:
 16481 1b72 71736F72 		.ascii	"qsort\000"
 16481      7400
 16482              	.LASF395:
 16483 1b78 5F5A4E35 		.ascii	"_ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs"
 16483      46415431 
 16483      36323466 
 16483      61743136 
 16483      5F746572 
 16484 1bab 5F737472 		.ascii	"_structEt\000"
 16484      75637445 
 16484      7400
 16485              	.LASF435:
 16486 1bb5 73656374 		.ascii	"sector_count_16\000"
 16486      6F725F63 
 16486      6F756E74 
 16486      5F313600 
 16487              	.LASF539:
 16488 1bc5 4C455230 		.ascii	"LER0_EN\000"
 16488      5F454E00 
 16489              	.LASF494:
 16490 1bcd 554C5352 		.ascii	"ULSR_RDR\000"
 16490      5F524452 
 16490      00
 16491              	.LASF326:
 16492 1bd6 5F5A4E35 		.ascii	"_ZN5FAT165SDoffEv\000"
 16492      46415431 
 16492      36355344 
 16492      6F666645 
 16492      7600
 16493              	.LASF25:
 16494 1be8 5F5F7661 		.ascii	"__value\000"
 16494      6C756500 
 16495              	.LASF47:
 16496 1bf0 5F69735F 		.ascii	"_is_cxa\000"
 16496      63786100 
 16497              	.LASF213:
 16498 1bf8 68656164 		.ascii	"head\000"
 16498      00
 16499              	.LASF456:
 16500 1bfd 62756666 		.ascii	"buffer_left\000"
 16500      65725F6C 
 16500      65667400 
 16501              	.LASF547:
 16502 1c09 50574D45 		.ascii	"PWMENA2\000"
 16502      4E413200 
 16503              	.LASF561:
 16504 1c11 2F686F6D 		.ascii	"/home/elijah/projects/arm7_app\000"
 16504      652F656C 
 16504      696A6168 
 16504      2F70726F 
 16504      6A656374 
 16505              	.LASF106:
 16506 1c30 5F703573 		.ascii	"_p5s\000"
 16506      00
 16507              	.LASF421:
 16508 1c35 5F5A4E35 		.ascii	"_ZN5FAT1614partition_openEMS_FhmPhtEMS_FhmS0_ttMS_F"
ARM GAS  /tmp/ccNwMSzu.s 			page 348


 16508      46415431 
 16508      36313470 
 16508      61727469 
 16508      74696F6E 
 16509 1c68 6853305F 		.ascii	"hS0_mPvES3_EMS_FhmPKhtEa\000"
 16509      6D507645 
 16509      53335F45 
 16509      4D535F46 
 16509      686D504B 
 16510              	.LASF259:
 16511 1c81 666C6167 		.ascii	"flag_copy\000"
 16511      5F636F70 
 16511      7900
 16512              	.LASF252:
 16513 1c8b 6D616E75 		.ascii	"manufacturer\000"
 16513      66616374 
 16513      75726572 
 16513      00
 16514              	.LASF474:
 16515 1c98 66726565 		.ascii	"free_dir_entries_found\000"
 16515      5F646972 
 16515      5F656E74 
 16515      72696573 
 16515      5F666F75 
 16516              	.LASF155:
 16517 1caf 73657476 		.ascii	"setvbuf\000"
 16517      62756600 
 16518              	.LASF447:
 16519 1cb7 6C656E67 		.ascii	"length_to_sep\000"
 16519      74685F74 
 16519      6F5F7365 
 16519      7000
 16520              	.LASF335:
 16521 1cc5 66617431 		.ascii	"fat16_close\000"
 16521      365F636C 
 16521      6F736500 
 16522              	.LASF349:
 16523 1cd1 5F5A4E35 		.ascii	"_ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_struc"
 16523      46415431 
 16523      36313766 
 16523      61743136 
 16523      5F726573 
 16524 1d04 74456D00 		.ascii	"tEm\000"
 16525              	.LASF495:
 16526 1d08 5353454C 		.ascii	"SSEL1\000"
 16526      3100
 16527              	.LASF165:
 16528 1d0e 6469765F 		.ascii	"div_t\000"
 16528      7400
 16529              	.LASF343:
 16530 1d14 5F5A4E35 		.ascii	"_ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structE"
 16530      46415431 
 16530      36313566 
 16530      61743136 
 16530      5F726561 
 16531 1d47 50687400 		.ascii	"Pht\000"
 16532              	.LASF538:
ARM GAS  /tmp/ccNwMSzu.s 			page 349


 16533 1d4b 50574D4D 		.ascii	"PWMMR0R\000"
 16533      52305200 
 16534              	.LASF318:
 16535 1d53 5F5A4E35 		.ascii	"_ZN5FAT1620sd_raw_read_intervalEjPhttMS_FhS0_mPvES1"
 16535      46415431 
 16535      36323073 
 16535      645F7261 
 16535      775F7265 
 16536 1d86 5F00     		.ascii	"_\000"
 16537              	.LASF207:
 16538 1d88 73747266 		.ascii	"strftime\000"
 16538      74696D65 
 16538      00
 16539              	.LASF178:
 16540 1d91 6D62746F 		.ascii	"mbtowc\000"
 16540      776300
 16541              	.LASF15:
 16542 1d98 6C6F6E67 		.ascii	"long long unsigned int\000"
 16542      206C6F6E 
 16542      6720756E 
 16542      7369676E 
 16542      65642069 
 16543              	.LASF440:
 16544 1daf 70617265 		.ascii	"parent\000"
 16544      6E7400
 16545              	.LASF288:
 16546 1db6 6F666673 		.ascii	"offset\000"
 16546      657400
 16547              	.LASF556:
 16548 1dbd 57444D4F 		.ascii	"WDMOD_WDRESET\000"
 16548      445F5744 
 16548      52455345 
 16548      5400
 16549              	.LASF324:
 16550 1dcb 5F5A4E35 		.ascii	"_ZN5FAT1615sd_raw_get_infoEPNS_11sd_raw_infoE\000"
 16550      46415431 
 16550      36313573 
 16550      645F7261 
 16550      775F6765 
 16551              	.LASF76:
 16552 1df9 5F67616D 		.ascii	"_gamma_signgam\000"
 16552      6D615F73 
 16552      69676E67 
 16552      616D00
 16553              	.LASF414:
 16554 1e08 726F6F74 		.ascii	"root_format\000"
 16554      5F666F72 
 16554      6D617400 
 16555              	.LASF345:
 16556 1e14 5F5A4E35 		.ascii	"_ZN5FAT1616fat16_write_fileEPNS_17fat16_file_struct"
 16556      46415431 
 16556      36313666 
 16556      61743136 
 16556      5F777269 
 16557 1e47 45504B68 		.ascii	"EPKht\000"
 16557      7400
 16558              	.LASF546:
ARM GAS  /tmp/ccNwMSzu.s 			page 350


 16559 1e4d 50574D45 		.ascii	"PWMENA1\000"
 16559      4E413100 
 16560              	.LASF373:
 16561 1e55 5F5A4E35 		.ascii	"_ZN5FAT1616open_file_in_dirEPNS_15fat16_fs_structEP"
 16561      46415431 
 16561      3631366F 
 16561      70656E5F 
 16561      66696C65 
 16562 1e88 4E535F31 		.ascii	"NS_16fat16_dir_structEPKc\000"
 16562      36666174 
 16562      31365F64 
 16562      69725F73 
 16562      74727563 
 16563              	.LASF548:
 16564 1ea2 50574D45 		.ascii	"PWMENA3\000"
 16564      4E413300 
 16565              	.LASF549:
 16566 1eaa 50574D45 		.ascii	"PWMENA4\000"
 16566      4E413400 
 16567              	.LASF550:
 16568 1eb2 50574D45 		.ascii	"PWMENA5\000"
 16568      4E413500 
 16569              	.LASF551:
 16570 1eba 50574D45 		.ascii	"PWMENA6\000"
 16570      4E413600 
 16571              	.LASF462:
 16572 1ec2 6E65775F 		.ascii	"new_pos\000"
 16572      706F7300 
 16573              	.LASF100:
 16574 1eca 5F637572 		.ascii	"_current_category\000"
 16574      72656E74 
 16574      5F636174 
 16574      65676F72 
 16574      7900
 16575              	.LASF320:
 16576 1edc 5F5A4E35 		.ascii	"_ZN5FAT1612sd_raw_writeEjPKht\000"
 16576      46415431 
 16576      36313273 
 16576      645F7261 
 16576      775F7772 
 16577              	.LASF141:
 16578 1efa 666F7065 		.ascii	"fopen\000"
 16578      6E00
 16579              	.LASF468:
 16580 1f00 63686563 		.ascii	"checksum\000"
 16580      6B73756D 
 16580      00
 16581              	.LASF274:
 16582 1f09 636C7573 		.ascii	"cluster_size\000"
 16582      7465725F 
 16582      73697A65 
 16582      00
 16583              	.LASF360:
 16584 1f16 66617431 		.ascii	"fat16_create_file\000"
 16584      365F6372 
 16584      65617465 
 16584      5F66696C 
ARM GAS  /tmp/ccNwMSzu.s 			page 351


 16584      6500
 16585              	.LASF439:
 16586 1f28 64617461 		.ascii	"data_cluster_count\000"
 16586      5F636C75 
 16586      73746572 
 16586      5F636F75 
 16586      6E7400
 16587              	.LASF308:
 16588 1f3b 5F5A4E35 		.ascii	"_ZN5FAT1611GetInstanceEv\000"
 16588      46415431 
 16588      36313147 
 16588      6574496E 
 16588      7374616E 
 16589              	.LASF497:
 16590 1f54 53535053 		.ascii	"SSPSR_TNF\000"
 16590      525F544E 
 16590      4600
 16591              	.LASF173:
 16592 1f5e 67657465 		.ascii	"getenv\000"
 16592      6E7600
 16593              	.LASF102:
 16594 1f65 5F5F7364 		.ascii	"__sdidinit\000"
 16594      6964696E 
 16594      697400
 16595              	.LASF492:
 16596 1f70 55494952 		.ascii	"UIIR_ID_MASK\000"
 16596      5F49445F 
 16596      4D41534B 
 16596      00
 16597              	.LASF129:
 16598 1f7d 5F5F6170 		.ascii	"__ap\000"
 16598      00
 16599              	.LASF457:
 16600 1f82 66697273 		.ascii	"first_cluster_offset\000"
 16600      745F636C 
 16600      75737465 
 16600      725F6F66 
 16600      66736574 
 16601              	.LASF180:
 16602 1f97 72616E64 		.ascii	"rand\000"
 16602      00
 16603              	.LASF410:
 16604 1f9c 726F6F74 		.ascii	"root_disk_info\000"
 16604      5F646973 
 16604      6B5F696E 
 16604      666F00
 16605              	.LASF301:
 16606 1fab 62756666 		.ascii	"buffer_size\000"
 16606      65725F73 
 16606      697A6500 
 16607              	.LASF479:
 16608 1fb7 6E616D65 		.ascii	"name\000"
 16608      00
 16609              	.LASF26:
 16610 1fbc 5F666C6F 		.ascii	"_flock_t\000"
 16610      636B5F74 
 16610      00
ARM GAS  /tmp/ccNwMSzu.s 			page 352


 16611              	.LASF378:
 16612 1fc5 66617431 		.ascii	"fat16_read_root_dir_entry\000"
 16612      365F7265 
 16612      61645F72 
 16612      6F6F745F 
 16612      6469725F 
 16613              	.LASF279:
 16614 1fdf 68656164 		.ascii	"header\000"
 16614      657200
 16615              	.LASF223:
 16616 1fe6 55415254 		.ascii	"UARTBase\000"
 16616      42617365 
 16616      00
 16617              	.LASF148:
 16618 1fef 67657473 		.ascii	"gets\000"
 16618      00
 16619              	.LASF298:
 16620 1ff4 62797465 		.ascii	"byte_count\000"
 16620      5F636F75 
 16620      6E7400
 16621              	.LASF397:
 16622 1fff 5F5A4E35 		.ascii	"_ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_st"
 16622      46415431 
 16622      36323166 
 16622      61743136 
 16622      5F777269 
 16623 2032 72756374 		.ascii	"ructEPKNS_22fat16_dir_entry_structE\000"
 16623      45504B4E 
 16623      535F3232 
 16623      66617431 
 16623      365F6469 
 16624              	.LASF524:
 16625 2056 54784343 		.ascii	"TxCCR_CAP0FE\000"
 16625      525F4341 
 16625      50304645 
 16625      00
 16626              	.LASF14:
 16627 2063 6C6F6E67 		.ascii	"long long int\000"
 16627      206C6F6E 
 16627      6720696E 
 16627      7400
 16628              	.LASF70:
 16629 2071 5F666C61 		.ascii	"_flags2\000"
 16629      67733200 
 16630              	.LASF220:
 16631 2079 5F5A4E34 		.ascii	"_ZN4FIFO7HasDataEv\000"
 16631      4649464F 
 16631      37486173 
 16631      44617461 
 16631      457600
 16632              	.LASF518:
 16633 208c 54784952 		.ascii	"TxIR_MR3_FLAG\000"
 16633      5F4D5233 
 16633      5F464C41 
 16633      4700
 16634              	.LASF352:
 16635 209a 66617431 		.ascii	"fat16_close_dir\000"
ARM GAS  /tmp/ccNwMSzu.s 			page 353


 16635      365F636C 
 16635      6F73655F 
 16635      64697200 
 16636              	.LASF201:
 16637 20aa 6D6B7469 		.ascii	"mktime\000"
 16637      6D6500
 16638              	.LASF156:
 16639 20b1 67657463 		.ascii	"getchar\000"
 16639      68617200 
 16640              	.LASF413:
 16641 20b9 5F5A4E35 		.ascii	"_ZN5FAT1619rootDirectory_filesEPci\000"
 16641      46415431 
 16641      36313972 
 16641      6F6F7444 
 16641      69726563 
 16642              	.LASF251:
 16643 20dc 73645F72 		.ascii	"sd_raw_info\000"
 16643      61775F69 
 16643      6E666F00 
 16644              	.LASF225:
 16645 20e8 42617564 		.ascii	"BaudRate2400\000"
 16645      52617465 
 16645      32343030 
 16645      00
 16646              	.LASF198:
 16647 20f5 5F5F6578 		.ascii	"__extra_2\000"
 16647      7472615F 
 16647      3200
 16648              	.LASF381:
 16649 20ff 5F5A4E35 		.ascii	"_ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs"
 16649      46415431 
 16649      36323466 
 16649      61743136 
 16649      5F726561 
 16650 2132 5F737472 		.ascii	"_structEtPKNS_22fat16_dir_entry_structEPS3_\000"
 16650      75637445 
 16650      74504B4E 
 16650      535F3232 
 16650      66617431 
 16651              	.LASF535:
 16652 215e 41447843 		.ascii	"ADxCR_PDN\000"
 16652      525F5044 
 16652      4E00
 16653              	.LASF321:
 16654 2168 73645F72 		.ascii	"sd_raw_sync\000"
 16654      61775F73 
 16654      796E6300 
 16655              	.LASF520:
 16656 2174 54784952 		.ascii	"TxIR_CR1_FLAG\000"
 16656      5F435231 
 16656      5F464C41 
 16656      4700
 16657              	.LASF263:
 16658 2182 66617431 		.ascii	"fat16_dir_entry_struct\000"
 16658      365F6469 
 16658      725F656E 
 16658      7472795F 
ARM GAS  /tmp/ccNwMSzu.s 			page 354


 16658      73747275 
 16659              	.LASF116:
 16660 2199 5F5F4649 		.ascii	"__FILE\000"
 16660      4C4500
 16661              	.LASF398:
 16662 21a0 66617431 		.ascii	"fat16_get_fs_free_callback\000"
 16662      365F6765 
 16662      745F6673 
 16662      5F667265 
 16662      655F6361 
 16663              	.LASF334:
 16664 21bb 5F5A4E35 		.ascii	"_ZN5FAT1610fat16_openEPNS_16partition_structE\000"
 16664      46415431 
 16664      36313066 
 16664      61743136 
 16664      5F6F7065 
 16665              	.LASF362:
 16666 21e9 66617431 		.ascii	"fat16_delete_file\000"
 16666      365F6465 
 16666      6C657465 
 16666      5F66696C 
 16666      6500
 16667              	.LASF30:
 16668 21fb 5F736967 		.ascii	"_sign\000"
 16668      6E00
 16669              	.LASF35:
 16670 2201 5F5F746D 		.ascii	"__tm_min\000"
 16670      5F6D696E 
 16670      00
 16671              	.LASF560:
 16672 220a 66617431 		.ascii	"fat16.cpp\000"
 16672      362E6370 
 16672      7000
 16673              	.LASF519:
 16674 2214 54784952 		.ascii	"TxIR_CR0_FLAG\000"
 16674      5F435230 
 16674      5F464C41 
 16674      4700
 16675              	.LASF506:
 16676 2222 49324378 		.ascii	"I2CxCONSET_AA\000"
 16676      434F4E53 
 16676      45545F41 
 16676      4100
 16677              	.LASF517:
 16678 2230 54784952 		.ascii	"TxIR_MR2_FLAG\000"
 16678      5F4D5232 
 16678      5F464C41 
 16678      4700
 16679              	.LASF18:
 16680 223e 756E7369 		.ascii	"unsigned int\000"
 16680      676E6564 
 16680      20696E74 
 16680      00
 16681              	.LASF483:
 16682 224b 4343525F 		.ascii	"CCR_CTCRST\000"
 16682      43544352 
 16682      535400
ARM GAS  /tmp/ccNwMSzu.s 			page 355


 16683              	.LASF78:
 16684 2256 5F723438 		.ascii	"_r48\000"
 16684      00
 16685              	.LASF424:
 16686 225b 5F5F7066 		.ascii	"__pfn\000"
 16686      6E00
 16687              	.LASF441:
 16688 2261 636C7573 		.ascii	"cluster_offset\000"
 16688      7465725F 
 16688      6F666673 
 16688      657400
 16689              	.LASF137:
 16690 2270 66666C75 		.ascii	"fflush\000"
 16690      736800
 16691              	.LASF267:
 16692 2277 66696C65 		.ascii	"file_size\000"
 16692      5F73697A 
 16692      6500
 16693              	.LASF7:
 16694 2281 73686F72 		.ascii	"short int\000"
 16694      7420696E 
 16694      7400
 16695              	.LASF309:
 16696 228b 73645F72 		.ascii	"sd_raw_init\000"
 16696      61775F69 
 16696      6E697400 
 16697              	.LASF59:
 16698 2297 5F726561 		.ascii	"_read\000"
 16698      6400
 16699              	.LASF429:
 16700 229d 70617274 		.ascii	"partition_offset\000"
 16700      6974696F 
 16700      6E5F6F66 
 16700      66736574 
 16700      00
 16701              	.LASF120:
 16702 22ae 5F72616E 		.ascii	"_rand48\000"
 16702      64343800 
 16703              	.LASF514:
 16704 22b6 54784D43 		.ascii	"TxMCR_RESET_ON_MR0\000"
 16704      525F5245 
 16704      5345545F 
 16704      4F4E5F4D 
 16704      523000
 16705              	.LASF128:
 16706 22c9 5F5F7661 		.ascii	"__va_list\000"
 16706      5F6C6973 
 16706      7400
 16707              	.LASF504:
 16708 22d3 49324378 		.ascii	"I2CxCONCLR_STAC\000"
 16708      434F4E43 
 16708      4C525F53 
 16708      54414300 
 16709              	.LASF527:
 16710 22e3 54784343 		.ascii	"TxCCR_CAP1FE\000"
 16710      525F4341 
 16710      50314645 
ARM GAS  /tmp/ccNwMSzu.s 			page 356


 16710      00
 16711              	.LASF264:
 16712 22f0 6C6F6E67 		.ascii	"long_name\000"
 16712      5F6E616D 
 16712      6500
 16713              	.LASF306:
 16714 22fa 47657449 		.ascii	"GetInstance\000"
 16714      6E737461 
 16714      6E636500 
 16715              	.LASF266:
 16716 2306 636C7573 		.ascii	"cluster\000"
 16716      74657200 
 16717              		.ident	"GCC: (Sourcery G++ Lite 2011.03-42) 4.5.2"
ARM GAS  /tmp/ccNwMSzu.s 			page 357


DEFINED SYMBOLS
                            *ABS*:00000000 fat16.cpp
     /tmp/ccNwMSzu.s:56     .bss:00000000 $d
     /tmp/ccNwMSzu.s:57     .bss:00000000 _ZL20FAT16SingletonObject
     /tmp/ccNwMSzu.s:60     .text._ZN5FAT1611GetInstanceEv:00000000 $a
     /tmp/ccNwMSzu.s:63     .text._ZN5FAT1611GetInstanceEv:00000000 _ZN5FAT1611GetInstanceEv
     /tmp/ccNwMSzu.s:80     .text._ZN5FAT1611GetInstanceEv:0000000c $d
     /tmp/ccNwMSzu.s:85     .rodata:00000000 $d
     /tmp/ccNwMSzu.s:92     .text._ZN5FAT1610fat16_openEPNS_16partition_structE:00000000 $a
     /tmp/ccNwMSzu.s:95     .text._ZN5FAT1610fat16_openEPNS_16partition_structE:00000000 _ZN5FAT1610fat16_openEPNS_16partition_structE
     /tmp/ccNwMSzu.s:251    .text._ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE:00000000 _ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE
     /tmp/ccNwMSzu.s:196    .text._ZN5FAT1610fat16_openEPNS_16partition_structE:000000f4 $d
     /tmp/ccNwMSzu.s:202    .text._ZN5FAT1611fat16_closeEPNS_15fat16_fs_structE:00000000 $a
     /tmp/ccNwMSzu.s:205    .text._ZN5FAT1611fat16_closeEPNS_15fat16_fs_structE:00000000 _ZN5FAT1611fat16_closeEPNS_15fat16_fs_structE
     /tmp/ccNwMSzu.s:248    .text._ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE:00000000 $a
     /tmp/ccNwMSzu.s:580    .text._ZN5FAT1617fat16_read_headerEPNS_15fat16_fs_structE:000003d8 $d
     /tmp/ccNwMSzu.s:587    .text._ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_structE:00000000 $a
     /tmp/ccNwMSzu.s:590    .text._ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_structE:00000000 _ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_structE
     /tmp/ccNwMSzu.s:811    .text._ZN5FAT1625fat16_read_root_dir_entryEPKNS_15fat16_fs_structEtPNS_22fat16_dir_entry_structE:0000027c $d
     /tmp/ccNwMSzu.s:1097   .text._ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv:00000000 _ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv
     /tmp/ccNwMSzu.s:1200   .text._ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv:00000000 _ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv
     /tmp/ccNwMSzu.s:817    .text._ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_structEPS3_:00000000 $a
     /tmp/ccNwMSzu.s:820    .text._ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_structEPS3_:00000000 _ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_structEPS3_
     /tmp/ccNwMSzu.s:1868   .text._ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt:00000000 _ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt
     /tmp/ccNwMSzu.s:1088   .text._ZN5FAT1624fat16_read_sub_dir_entryEPKNS_15fat16_fs_structEtPKNS_22fat16_dir_entry_structEPS3_:00000320 $d
     /tmp/ccNwMSzu.s:1094   .text._ZN5FAT1629fat16_dir_entry_seek_callbackEPhmPv:00000000 $a
     /tmp/ccNwMSzu.s:1197   .text._ZN5FAT1629fat16_dir_entry_read_callbackEPhmPv:00000000 $a
     /tmp/ccNwMSzu.s:1288   .text._ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_dir_entry_structEPKh:00000000 _ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_dir_entry_structEPKh
     /tmp/ccNwMSzu.s:1285   .text._ZN5FAT1625fat16_interpret_dir_entryEPNS_22fat16_dir_entry_structEPKh:00000000 $a
     /tmp/ccNwMSzu.s:1657   .text._ZN5FAT1627fat16_get_dir_entry_of_pathEPNS_15fat16_fs_structEPKcPNS_22fat16_dir_entry_structE:00000000 $a
     /tmp/ccNwMSzu.s:1660   .text._ZN5FAT1627fat16_get_dir_entry_of_pathEPNS_15fat16_fs_structEPKcPNS_22fat16_dir_entry_structE:00000000 _ZN5FAT1627fat16_get_dir_entry_of_pathEPNS_15fat16_fs_structEPKcPNS_22fat16_dir_entry_structE
     /tmp/ccNwMSzu.s:4013   .text._ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:00000000 _ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE
     /tmp/ccNwMSzu.s:4094   .text._ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE:00000000 _ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE
     /tmp/ccNwMSzu.s:4129   .text._ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE:00000000 _ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE
     /tmp/ccNwMSzu.s:1865   .text._ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt:00000000 $a
     /tmp/ccNwMSzu.s:2013   .text._ZN5FAT1622fat16_get_next_clusterEPKNS_15fat16_fs_structEt:00000194 $d
     /tmp/ccNwMSzu.s:2020   .text._ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt:00000000 $a
     /tmp/ccNwMSzu.s:2023   .text._ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt:00000000 _ZN5FAT1621fat16_append_clustersEPKNS_15fat16_fs_structEtt
     /tmp/ccNwMSzu.s:2349   .text._ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt:00000000 _ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt
     /tmp/ccNwMSzu.s:2346   .text._ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt:00000000 $a
     /tmp/ccNwMSzu.s:2576   .text._ZN5FAT1619fat16_free_clustersEPKNS_15fat16_fs_structEt:00000290 $d
     /tmp/ccNwMSzu.s:2583   .text._ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs_structEt:00000000 $a
     /tmp/ccNwMSzu.s:2586   .text._ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs_structEt:00000000 _ZN5FAT1624fat16_terminate_clustersEPKNS_15fat16_fs_structEt
     /tmp/ccNwMSzu.s:2717   .text._ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:00000000 $a
     /tmp/ccNwMSzu.s:2720   .text._ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:00000000 _ZN5FAT1615fat16_open_fileEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE
     /tmp/ccNwMSzu.s:2803   .text._ZN5FAT1616fat16_close_fileEPNS_17fat16_file_structE:00000000 $a
     /tmp/ccNwMSzu.s:2806   .text._ZN5FAT1616fat16_close_fileEPNS_17fat16_file_structE:00000000 _ZN5FAT1616fat16_close_fileEPNS_17fat16_file_structE
     /tmp/ccNwMSzu.s:2839   .text._ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structEPht:00000000 $a
     /tmp/ccNwMSzu.s:2842   .text._ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structEPht:00000000 _ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structEPht
     /tmp/ccNwMSzu.s:3184   .text._ZN5FAT1615fat16_read_fileEPNS_17fat16_file_structEPht:000003f0 $d
     /tmp/ccNwMSzu.s:3189   .text._ZN5FAT1616fat16_write_fileEPNS_17fat16_file_structEPKht:00000000 $a
     /tmp/ccNwMSzu.s:3192   .text._ZN5FAT1616fat16_write_fileEPNS_17fat16_file_structEPKht:00000000 _ZN5FAT1616fat16_write_fileEPNS_17fat16_file_structEPKht
     /tmp/ccNwMSzu.s:4322   .text._ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:00000000 _ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE
     /tmp/ccNwMSzu.s:3628   .text._ZN5FAT1616fat16_write_fileEPNS_17fat16_file_structEPKht:000004f0 $d
     /tmp/ccNwMSzu.s:3633   .text._ZN5FAT1615fat16_seek_fileEPNS_17fat16_file_structEPlh:00000000 $a
     /tmp/ccNwMSzu.s:3636   .text._ZN5FAT1615fat16_seek_fileEPNS_17fat16_file_structEPlh:00000000 _ZN5FAT1615fat16_seek_fileEPNS_17fat16_file_structEPlh
     /tmp/ccNwMSzu.s:3767   .text._ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_structEm:00000000 _ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_structEm
ARM GAS  /tmp/ccNwMSzu.s 			page 358


     /tmp/ccNwMSzu.s:3764   .text._ZN5FAT1617fat16_resize_fileEPNS_17fat16_file_structEm:00000000 $a
     /tmp/ccNwMSzu.s:4010   .text._ZN5FAT1614fat16_open_dirEPNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:00000000 $a
     /tmp/ccNwMSzu.s:4091   .text._ZN5FAT1615fat16_close_dirEPNS_16fat16_dir_structE:00000000 $a
     /tmp/ccNwMSzu.s:4126   .text._ZN5FAT1614fat16_read_dirEPNS_16fat16_dir_structEPNS_22fat16_dir_entry_structE:00000000 $a
     /tmp/ccNwMSzu.s:4239   .text._ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE:00000000 $a
     /tmp/ccNwMSzu.s:4242   .text._ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE:00000000 _ZN5FAT1615fat16_reset_dirEPNS_16fat16_dir_structE
     /tmp/ccNwMSzu.s:4278   .text._ZN5FAT1613fat16_set_dirEPNS_16fat16_dir_structEt:00000000 $a
     /tmp/ccNwMSzu.s:4281   .text._ZN5FAT1613fat16_set_dirEPNS_16fat16_dir_structEt:00000000 _ZN5FAT1613fat16_set_dirEPNS_16fat16_dir_structEt
     /tmp/ccNwMSzu.s:4319   .text._ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:00000000 $a
     /tmp/ccNwMSzu.s:4842   .text._ZN5FAT1621fat16_write_dir_entryEPKNS_15fat16_fs_structEPKNS_22fat16_dir_entry_structE:00000600 $d
     /tmp/ccNwMSzu.s:4847   .text._ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE:00000000 $a
     /tmp/ccNwMSzu.s:4850   .text._ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE:00000000 _ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE
     /tmp/ccNwMSzu.s:5206   .text._ZN5FAT1617fat16_create_fileEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE:000003d4 $d
     /tmp/ccNwMSzu.s:5211   .text._ZN5FAT1617fat16_delete_fileEPNS_15fat16_fs_structEPNS_22fat16_dir_entry_structE:00000000 $a
     /tmp/ccNwMSzu.s:5214   .text._ZN5FAT1617fat16_delete_fileEPNS_15fat16_fs_structEPNS_22fat16_dir_entry_structE:00000000 _ZN5FAT1617fat16_delete_fileEPNS_15fat16_fs_structEPNS_22fat16_dir_entry_structE
     /tmp/ccNwMSzu.s:5399   .text._ZN5FAT1617fat16_get_fs_sizeEPKNS_15fat16_fs_structE:00000000 $a
     /tmp/ccNwMSzu.s:5402   .text._ZN5FAT1617fat16_get_fs_sizeEPKNS_15fat16_fs_structE:00000000 _ZN5FAT1617fat16_get_fs_sizeEPKNS_15fat16_fs_structE
     /tmp/ccNwMSzu.s:5440   .text._ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_structE:00000000 $a
     /tmp/ccNwMSzu.s:5443   .text._ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_structE:00000000 _ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_structE
     /tmp/ccNwMSzu.s:5601   .text._ZN5FAT1617fat16_get_fs_freeEPKNS_15fat16_fs_structE:000001b4 $d
     /tmp/ccNwMSzu.s:5609   .text._ZN5FAT1626fat16_get_fs_free_callbackEPhmPv:00000000 _ZN5FAT1626fat16_get_fs_free_callbackEPhmPv
     /tmp/ccNwMSzu.s:5606   .text._ZN5FAT1626fat16_get_fs_free_callbackEPhmPv:00000000 $a
     /tmp/ccNwMSzu.s:5685   .text._ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE:00000000 $a
     /tmp/ccNwMSzu.s:5688   .text._ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE:00000000 _ZN5FAT1616find_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKcPNS_22fat16_dir_entry_structE
     /tmp/ccNwMSzu.s:5749   .text._ZN5FAT1616open_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKc:00000000 $a
     /tmp/ccNwMSzu.s:5752   .text._ZN5FAT1616open_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKc:00000000 _ZN5FAT1616open_file_in_dirEPNS_15fat16_fs_structEPNS_16fat16_dir_structEPKc
     /tmp/ccNwMSzu.s:5808   .text._ZN5FAT1615fat16_file_sizeEPNS_17fat16_file_structE:00000000 $a
     /tmp/ccNwMSzu.s:5811   .text._ZN5FAT1615fat16_file_sizeEPNS_17fat16_file_structE:00000000 _ZN5FAT1615fat16_file_sizeEPNS_17fat16_file_structE
     /tmp/ccNwMSzu.s:5838   .rodata:00000038 _ZL12VIC_USB_Intr
     /tmp/ccNwMSzu.s:5843   .rodata:0000003c _ZL9CCR_CLKEN
     /tmp/ccNwMSzu.s:5848   .rodata:00000040 _ZL10CCR_CTCRST
     /tmp/ccNwMSzu.s:5853   .rodata:00000044 _ZL16CCR_CLKSRC_32KHZ
     /tmp/ccNwMSzu.s:5858   .rodata:00000048 _ZL18VIC_Channel_Timer0
     /tmp/ccNwMSzu.s:5863   .rodata:0000004c _ZL18VIC_Channel_Timer1
     /tmp/ccNwMSzu.s:5868   .rodata:00000050 _ZL17VIC_Channel_UART0
     /tmp/ccNwMSzu.s:5873   .rodata:00000054 _ZL17VIC_Channel_UART1
     /tmp/ccNwMSzu.s:5878   .rodata:00000058 _ZL15VIC_Channel_USB
     /tmp/ccNwMSzu.s:5883   .rodata:0000005c _ZL18VICVectCntl_ENABLE
     /tmp/ccNwMSzu.s:5888   .rodata:00000060 _ZL10UIER_ERBFI
     /tmp/ccNwMSzu.s:5893   .rodata:00000064 _ZL12UIIR_ID_MASK
     /tmp/ccNwMSzu.s:5898   .rodata:00000068 _ZL12UIIR_RDA_INT
     /tmp/ccNwMSzu.s:5903   .rodata:0000006c _ZL8ULSR_RDR
     /tmp/ccNwMSzu.s:5908   .rodata:00000070 _ZL5SSEL1
     /tmp/ccNwMSzu.s:5913   .rodata:00000074 _ZL9SSPSR_TFE
     /tmp/ccNwMSzu.s:5918   .rodata:00000078 _ZL9SSPSR_TNF
     /tmp/ccNwMSzu.s:5923   .rodata:0000007c _ZL9SSPSR_RNE
     /tmp/ccNwMSzu.s:5928   .rodata:00000080 _ZL9SSPSR_BSY
     /tmp/ccNwMSzu.s:5933   .rodata:00000084 _ZL11SSPCR0_CPOL
     /tmp/ccNwMSzu.s:5938   .rodata:00000088 _ZL11SSPCR0_CPHA
     /tmp/ccNwMSzu.s:5943   .rodata:0000008c _ZL13I2CxCONCLR_AA
     /tmp/ccNwMSzu.s:5948   .rodata:00000090 _ZL13I2CxCONCLR_SI
     /tmp/ccNwMSzu.s:5953   .rodata:00000094 _ZL15I2CxCONCLR_STAC
     /tmp/ccNwMSzu.s:5958   .rodata:00000098 _ZL16I2CxCONCLR_I2ENC
     /tmp/ccNwMSzu.s:5963   .rodata:0000009c _ZL13I2CxCONSET_AA
     /tmp/ccNwMSzu.s:5968   .rodata:000000a0 _ZL13I2CxCONSET_SI
     /tmp/ccNwMSzu.s:5973   .rodata:000000a4 _ZL14I2CxCONSET_STO
     /tmp/ccNwMSzu.s:5978   .rodata:000000a8 _ZL14I2CxCONSET_STA
ARM GAS  /tmp/ccNwMSzu.s 			page 359


     /tmp/ccNwMSzu.s:5983   .rodata:000000ac _ZL15I2CxCONSET_I2EN
     /tmp/ccNwMSzu.s:5988   .rodata:000000b0 _ZL20TxTCR_COUNTER_ENABLE
     /tmp/ccNwMSzu.s:5993   .rodata:000000b4 _ZL19TxTCR_COUNTER_RESET
     /tmp/ccNwMSzu.s:5998   .rodata:000000b8 _ZL16TxMCR_INT_ON_MR0
     /tmp/ccNwMSzu.s:6003   .rodata:000000bc _ZL18TxMCR_RESET_ON_MR0
     /tmp/ccNwMSzu.s:6008   .rodata:000000c0 _ZL13TxIR_MR0_FLAG
     /tmp/ccNwMSzu.s:6013   .rodata:000000c4 _ZL13TxIR_MR1_FLAG
     /tmp/ccNwMSzu.s:6018   .rodata:000000c8 _ZL13TxIR_MR2_FLAG
     /tmp/ccNwMSzu.s:6023   .rodata:000000cc _ZL13TxIR_MR3_FLAG
     /tmp/ccNwMSzu.s:6028   .rodata:000000d0 _ZL13TxIR_CR0_FLAG
     /tmp/ccNwMSzu.s:6033   .rodata:000000d4 _ZL13TxIR_CR1_FLAG
     /tmp/ccNwMSzu.s:6038   .rodata:000000d8 _ZL13TxIR_CR2_FLAG
     /tmp/ccNwMSzu.s:6043   .rodata:000000dc _ZL13TxIR_CR3_FLAG
     /tmp/ccNwMSzu.s:6048   .rodata:000000e0 _ZL12TxCCR_CAP0RE
     /tmp/ccNwMSzu.s:6053   .rodata:000000e4 _ZL12TxCCR_CAP0FE
     /tmp/ccNwMSzu.s:6058   .rodata:000000e8 _ZL11TxCCR_CAP0I
     /tmp/ccNwMSzu.s:6063   .rodata:000000ec _ZL12TxCCR_CAP1RE
     /tmp/ccNwMSzu.s:6068   .rodata:000000f0 _ZL12TxCCR_CAP1FE
     /tmp/ccNwMSzu.s:6073   .rodata:000000f4 _ZL11TxCCR_CAP1I
     /tmp/ccNwMSzu.s:6078   .rodata:000000f8 _ZL12TxCCR_CAP2RE
     /tmp/ccNwMSzu.s:6083   .rodata:000000fc _ZL12TxCCR_CAP2FE
     /tmp/ccNwMSzu.s:6088   .rodata:00000100 _ZL11TxCCR_CAP2I
     /tmp/ccNwMSzu.s:6093   .rodata:00000104 _ZL12TxCCR_CAP3RE
     /tmp/ccNwMSzu.s:6098   .rodata:00000108 _ZL12TxCCR_CAP3FE
     /tmp/ccNwMSzu.s:6103   .rodata:0000010c _ZL11TxCCR_CAP3I
     /tmp/ccNwMSzu.s:6108   .rodata:00000110 _ZL9ADxCR_PDN
     /tmp/ccNwMSzu.s:6113   .rodata:00000114 _ZL15ADxCR_START_NOW
     /tmp/ccNwMSzu.s:6118   .rodata:00000118 _ZL11ADxGDR_DONE
     /tmp/ccNwMSzu.s:6123   .rodata:0000011c _ZL7PWMMR0R
     /tmp/ccNwMSzu.s:6128   .rodata:00000120 _ZL7LER0_EN
     /tmp/ccNwMSzu.s:6133   .rodata:00000124 _ZL7LER1_EN
     /tmp/ccNwMSzu.s:6138   .rodata:00000128 _ZL7LER2_EN
     /tmp/ccNwMSzu.s:6143   .rodata:0000012c _ZL7LER3_EN
     /tmp/ccNwMSzu.s:6148   .rodata:00000130 _ZL7LER4_EN
     /tmp/ccNwMSzu.s:6153   .rodata:00000134 _ZL7LER5_EN
     /tmp/ccNwMSzu.s:6158   .rodata:00000138 _ZL7LER6_EN
     /tmp/ccNwMSzu.s:6163   .rodata:0000013c _ZL7PWMENA1
     /tmp/ccNwMSzu.s:6168   .rodata:00000140 _ZL7PWMENA2
     /tmp/ccNwMSzu.s:6173   .rodata:00000144 _ZL7PWMENA3
     /tmp/ccNwMSzu.s:6178   .rodata:00000148 _ZL7PWMENA4
     /tmp/ccNwMSzu.s:6183   .rodata:0000014c _ZL7PWMENA5
     /tmp/ccNwMSzu.s:6188   .rodata:00000150 _ZL7PWMENA6
     /tmp/ccNwMSzu.s:6193   .rodata:00000154 _ZL21PWMTCR_COUNTER_ENABLE
     /tmp/ccNwMSzu.s:6198   .rodata:00000158 _ZL12PWMTCR_RESET
     /tmp/ccNwMSzu.s:6203   .rodata:0000015c _ZL17PWMTCR_PWM_ENABLE
     /tmp/ccNwMSzu.s:6208   .rodata:00000160 _ZL10WDMOD_WDEN
     /tmp/ccNwMSzu.s:6213   .rodata:00000164 _ZL13WDMOD_WDRESET
     /tmp/ccNwMSzu.s:6218   .rodata:00000168 _ZL27HID_MESSAGE_ID_SYSTEM_DEBUG
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN5UART011GetInstanceEv
malloc
_ZN5UART09WriteLineEPKcz
memset
free
__aeabi_idiv
ARM GAS  /tmp/ccNwMSzu.s 			page 360


__aeabi_uidiv
strchr
strlen
strncmp
memcpy
__aeabi_uidivmod
strrchr
strncpy
strcmp
