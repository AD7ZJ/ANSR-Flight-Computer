ARM GAS  /tmp/ccwDRvq0.s 			page 1


   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"fat16.cpp"
  12              	@ GNU C++ (Sourcery G++ Lite 2011.03-42) version 4.5.2 (arm-none-eabi)
  13              	@	compiled by GNU C version 4.3.2, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  14              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  15              	@ options passed:  -I . -I../arm/arm7lib -iprefix
  16              	@ /home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/
  17              	@ -isysroot
  18              	@ /home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../arm-none-eabi -MD
  19              	@ fat16.d -MF .dep/fat16.o.d -MP -MQ fat16.o -D__USES_INITFINI__
  20              	@ -D__CS_SOURCERYGXX_MAJ__=2011 -D__CS_SOURCERYGXX_MIN__=3
  21              	@ -D__CS_SOURCERYGXX_REV__=42 fat16.cpp -mcpu=arm7tdmi -auxbase-strip
  22              	@ fat16.o -gdwarf-2 -O0 -Wall -fno-rtti -fno-exceptions
  23              	@ -fomit-frame-pointer -ffunction-sections -fverbose-asm
  24              	@ options enabled:  -falign-loops -fargument-alias -fauto-inc-dec
  25              	@ -fbranch-count-reg -fcommon -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  26              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  27              	@ -ffunction-sections -fgcse-lm -fident -finline-functions-called-once
  28              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  29              	@ -fkeep-static-consts -fleading-underscore -fmath-errno
  30              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  31              	@ -fpeephole -fpromote-loop-indices -freg-struct-return
  32              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  33              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  34              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  35              	@ -fsched-stalled-insns-dep -fshow-column -fsigned-zeros
  36              	@ -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -ftrapping-math
  37              	@ -ftree-cselim -ftree-forwprop -ftree-loop-im -ftree-loop-ivcanon
  38              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pta
  39              	@ -ftree-reassoc -ftree-scev-cprop -ftree-slp-vectorize
  40              	@ -ftree-vect-loop-version -funit-at-a-time -fverbose-asm
  41              	@ -fzero-initialized-in-bss -mlittle-endian -msched-prolog
  42              	@ -mthumb-interwork
  43              	
  44              		.section	.debug_abbrev,"",%progbits
  45              	.Ldebug_abbrev0:
  46              		.section	.debug_info,"",%progbits
  47              	.Ldebug_info0:
  48              		.section	.debug_line,"",%progbits
  49              	.Ldebug_line0:
  50 0000 D80A0000 		.text
  50      02009F03 
  50      00000201 
  50      FB0E0D00 
  50      01010101 
  51              	.Ltext0:
  52              	@ Compiler executable checksum: cfdaeede3ac8e9b2b599068efabc405c
  53              	
ARM GAS  /tmp/ccwDRvq0.s 			page 2


  54              		.cfi_sections	.debug_frame
  55              		.section	.rodata
  56              		.align	2
  57              	.LC0:
  58 0000 4D414C4C 		.ascii	"MALLOC FAILS\012\015\000"
  58      4F432046 
  58      41494C53 
  58      0A0D00
  59 000f 00       		.align	2
  60              	.LC1:
  61 0010 4661696C 		.ascii	"Failed Reading Header\012\015\000"
  61      65642052 
  61      65616469 
  61      6E672048 
  61      65616465 
  62              		.section	.text._Z10fat16_openP16partition_struct,"ax",%progbits
  63              		.align	2
  64              		.global	_Z10fat16_openP16partition_struct
  65              		.type	_Z10fat16_openP16partition_struct, %function
  66              	_Z10fat16_openP16partition_struct:
  67              	.LFB109:
  68              		.file 1 "fat16.cpp"
   1:fat16.cpp     **** /* This program is free software; you can redistribute it and/or modify
   2:fat16.cpp     ****  * it under the terms of the GNU General Public License version 2 as
   3:fat16.cpp     ****  * published by the Free Software Foundation.
   4:fat16.cpp     ****  */
   5:fat16.cpp     **** 
   6:fat16.cpp     **** //#include "armlib.h"
   7:fat16.cpp     **** //#include "partition.h"
   8:fat16.cpp     **** //#include "fat16.h"
   9:fat16.cpp     **** //#include "fat16_config.h"
  10:fat16.cpp     **** //#include "sd_raw.h"
  11:fat16.cpp     **** 
  12:fat16.cpp     **** #include "main.h"
  13:fat16.cpp     **** 
  14:fat16.cpp     **** 
  15:fat16.cpp     **** /**
  16:fat16.cpp     ****  * \addtogroup fat16 FAT16 support
  17:fat16.cpp     ****  *
  18:fat16.cpp     ****  * This module implements FAT16 read and write access.
  19:fat16.cpp     ****  *
  20:fat16.cpp     ****  * The following features are supported:
  21:fat16.cpp     ****  * - File names up to 31 characters long.
  22:fat16.cpp     ****  * - Unlimited depth of subdirectories.
  23:fat16.cpp     ****  * - Short 8.3 and long filenames.
  24:fat16.cpp     ****  * - Creating and deleting files.
  25:fat16.cpp     ****  * - Reading and writing from and to files.
  26:fat16.cpp     ****  * - File resizing.
  27:fat16.cpp     ****  * - File sizes of up to 4 gigabytes.
  28:fat16.cpp     ****  *
  29:fat16.cpp     ****  * @{
  30:fat16.cpp     ****  */
  31:fat16.cpp     **** /**
  32:fat16.cpp     ****  * \file
  33:fat16.cpp     ****  * FAT16 implementation.
  34:fat16.cpp     ****  *
  35:fat16.cpp     ****  * \author Roland Riegel
ARM GAS  /tmp/ccwDRvq0.s 			page 3


  36:fat16.cpp     ****  */
  37:fat16.cpp     **** 
  38:fat16.cpp     **** /**
  39:fat16.cpp     ****  * \addtogroup fat16_config FAT16 configuration
  40:fat16.cpp     ****  * Preprocessor defines to configure the FAT16 implementation.
  41:fat16.cpp     ****  */
  42:fat16.cpp     **** 
  43:fat16.cpp     **** /**
  44:fat16.cpp     ****  * \addtogroup fat16_fs FAT16 access
  45:fat16.cpp     ****  * Basic functions for handling a FAT16 filesystem.
  46:fat16.cpp     ****  */
  47:fat16.cpp     **** 
  48:fat16.cpp     **** /**
  49:fat16.cpp     ****  * \addtogroup fat16_file FAT16 file functions
  50:fat16.cpp     ****  * Functions for managing files.
  51:fat16.cpp     ****  */
  52:fat16.cpp     **** 
  53:fat16.cpp     **** /**
  54:fat16.cpp     ****  * \addtogroup fat16_dir FAT16 directory functions
  55:fat16.cpp     ****  * Functions for managing directories.
  56:fat16.cpp     ****  */
  57:fat16.cpp     **** 
  58:fat16.cpp     **** /**
  59:fat16.cpp     ****  * @}
  60:fat16.cpp     ****  */
  61:fat16.cpp     **** 
  62:fat16.cpp     **** #define FAT16_CLUSTER_FREE 0x0000
  63:fat16.cpp     **** #define FAT16_CLUSTER_RESERVED_MIN (uint16_t)0xfff0
  64:fat16.cpp     **** #define FAT16_CLUSTER_RESERVED_MAX (uint16_t)0xfff6
  65:fat16.cpp     **** #define FAT16_CLUSTER_BAD (uint16_t)0xfff7
  66:fat16.cpp     **** #define FAT16_CLUSTER_LAST_MIN (uint16_t)0xfff8
  67:fat16.cpp     **** #define FAT16_CLUSTER_LAST_MAX (uint16_t)0xffff
  68:fat16.cpp     **** 
  69:fat16.cpp     **** #define FAT16_DIRENTRY_DELETED 0xe5
  70:fat16.cpp     **** #define FAT16_DIRENTRY_LFNLAST (1 << 6)
  71:fat16.cpp     **** #define FAT16_DIRENTRY_LFNSEQMASK ((1 << 6) - 1)
  72:fat16.cpp     **** 
  73:fat16.cpp     **** /* Each entry within the directory table has a size of 32 bytes
  74:fat16.cpp     ****  * and either contains a 8.3 DOS-style file name or a part of a
  75:fat16.cpp     ****  * long file name, which may consist of several directory table
  76:fat16.cpp     ****  * entries at once.
  77:fat16.cpp     ****  *
  78:fat16.cpp     ****  * multi-byte integer values are stored little-endian!
  79:fat16.cpp     ****  *
  80:fat16.cpp     ****  * 8.3 file name entry:
  81:fat16.cpp     ****  * ====================
  82:fat16.cpp     ****  * offset  length  description
  83:fat16.cpp     ****  *      0       8  name (space padded)
  84:fat16.cpp     ****  *      8       3  extension (space padded)
  85:fat16.cpp     ****  *     11       1  attributes (FAT16_ATTRIB_*)
  86:fat16.cpp     ****  
  87:fat16.cpp     ****  *     0x0E     2  Creation Time
  88:fat16.cpp     ****  *     0x10     2  Creation Date
  89:fat16.cpp     ****  
  90:fat16.cpp     ****  *
  91:fat16.cpp     ****  * long file name (lfn) entry ordering for a single file name:
  92:fat16.cpp     ****  * ===========================================================
ARM GAS  /tmp/ccwDRvq0.s 			page 4


  93:fat16.cpp     ****  * LFN entry n
  94:fat16.cpp     ****  *     ...
  95:fat16.cpp     ****  * LFN entry 2
  96:fat16.cpp     ****  * LFN entry 1
  97:fat16.cpp     ****  * 8.3 entry (see above)
  98:fat16.cpp     ****  *
  99:fat16.cpp     ****  * lfn entry:
 100:fat16.cpp     ****  * ==========
 101:fat16.cpp     ****  * offset  length  description
 102:fat16.cpp     ****  *      0       1  ordinal field
 103:fat16.cpp     ****  *      1       2  unicode character 1
 104:fat16.cpp     ****  *      3       3  unicode character 2
 105:fat16.cpp     ****  *      5       3  unicode character 3
 106:fat16.cpp     ****  *      7       3  unicode character 4
 107:fat16.cpp     ****  *      9       3  unicode character 5
 108:fat16.cpp     ****  *     11       1  attribute (always 0x0f)
 109:fat16.cpp     ****  *     12       1  type (reserved, always 0)
 110:fat16.cpp     ****  *     13       1  checksum
 111:fat16.cpp     ****  *     14       2  unicode character 6
 112:fat16.cpp     ****  *     16       2  unicode character 7
 113:fat16.cpp     ****  *     18       2  unicode character 8
 114:fat16.cpp     ****  *     20       2  unicode character 9
 115:fat16.cpp     ****  *     22       2  unicode character 10
 116:fat16.cpp     ****  *     24       2  unicode character 11
 117:fat16.cpp     ****  *     26       2  cluster (unused, always 0)
 118:fat16.cpp     ****  *     28       2  unicode character 12
 119:fat16.cpp     ****  *     30       2  unicode character 13
 120:fat16.cpp     ****  *
 121:fat16.cpp     ****  * The ordinal field contains a descending number, from n to 1.
 122:fat16.cpp     ****  * For the n'th lfn entry the ordinal field is or'ed with 0x40.
 123:fat16.cpp     ****  * For deleted lfn entries, the ordinal field is set to 0xe5.
 124:fat16.cpp     ****  */
 125:fat16.cpp     **** 
 126:fat16.cpp     **** struct fat16_header_struct
 127:fat16.cpp     **** {
 128:fat16.cpp     ****     uint32_t size;
 129:fat16.cpp     **** 
 130:fat16.cpp     ****     uint32_t fat_offset;
 131:fat16.cpp     ****     uint32_t fat_size;
 132:fat16.cpp     **** 
 133:fat16.cpp     ****     uint16_t sector_size;
 134:fat16.cpp     ****     uint16_t cluster_size;
 135:fat16.cpp     **** 
 136:fat16.cpp     ****     uint32_t root_dir_offset;
 137:fat16.cpp     **** 
 138:fat16.cpp     ****     uint32_t cluster_zero_offset;
 139:fat16.cpp     **** };
 140:fat16.cpp     **** 
 141:fat16.cpp     **** struct fat16_fs_struct
 142:fat16.cpp     **** {
 143:fat16.cpp     ****     struct partition_struct* partition;
 144:fat16.cpp     ****     struct fat16_header_struct header;
 145:fat16.cpp     **** };
 146:fat16.cpp     **** 
 147:fat16.cpp     **** struct fat16_file_struct
 148:fat16.cpp     **** {
 149:fat16.cpp     ****     struct fat16_fs_struct* fs;
ARM GAS  /tmp/ccwDRvq0.s 			page 5


 150:fat16.cpp     ****     struct fat16_dir_entry_struct dir_entry;
 151:fat16.cpp     ****     uint32_t pos;
 152:fat16.cpp     ****     uint16_t pos_cluster;
 153:fat16.cpp     **** };
 154:fat16.cpp     **** 
 155:fat16.cpp     **** struct fat16_dir_struct
 156:fat16.cpp     **** {
 157:fat16.cpp     ****     struct fat16_fs_struct* fs;
 158:fat16.cpp     ****     struct fat16_dir_entry_struct dir_entry;
 159:fat16.cpp     ****     uint16_t entry_next;
 160:fat16.cpp     **** };
 161:fat16.cpp     **** 
 162:fat16.cpp     **** struct fat16_read_callback_arg
 163:fat16.cpp     **** {
 164:fat16.cpp     ****     uint16_t entry_cur;
 165:fat16.cpp     ****     uint16_t entry_num;
 166:fat16.cpp     ****     uint32_t entry_offset;
 167:fat16.cpp     ****     uint8_t byte_count;
 168:fat16.cpp     **** };
 169:fat16.cpp     **** 
 170:fat16.cpp     **** struct fat16_usage_count_callback_arg
 171:fat16.cpp     **** {
 172:fat16.cpp     ****     uint16_t cluster_count;
 173:fat16.cpp     ****     uint8_t buffer_size;
 174:fat16.cpp     **** };
 175:fat16.cpp     **** 
 176:fat16.cpp     **** static uint8_t fat16_read_header(struct fat16_fs_struct* fs);
 177:fat16.cpp     **** static uint8_t fat16_read_root_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, stru
 178:fat16.cpp     **** static uint8_t fat16_read_sub_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, const
 179:fat16.cpp     **** static uint8_t fat16_dir_entry_seek_callback(uint8_t* buffer, uint32_t offset, void* p);
 180:fat16.cpp     **** static uint8_t fat16_dir_entry_read_callback(uint8_t* buffer, uint32_t offset, void* p);
 181:fat16.cpp     **** static uint8_t fat16_interpret_dir_entry(struct fat16_dir_entry_struct* dir_entry, const uint8_t* r
 182:fat16.cpp     **** static uint16_t fat16_get_next_cluster(const struct fat16_fs_struct* fs, uint16_t cluster_num);
 183:fat16.cpp     **** static uint16_t fat16_append_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num, uint1
 184:fat16.cpp     **** static uint8_t fat16_free_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num);
 185:fat16.cpp     **** static uint8_t fat16_terminate_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num);
 186:fat16.cpp     **** static uint8_t fat16_write_dir_entry(const struct fat16_fs_struct* fs, const struct fat16_dir_entry
 187:fat16.cpp     **** 
 188:fat16.cpp     **** static uint8_t fat16_get_fs_free_callback(uint8_t* buffer, uint32_t offset, void* p);
 189:fat16.cpp     **** 
 190:fat16.cpp     **** /**
 191:fat16.cpp     ****  * \ingroup fat16_fs
 192:fat16.cpp     ****  * Opens a FAT16 filesystem.
 193:fat16.cpp     ****  *
 194:fat16.cpp     ****  * \param[in] partition Discriptor of partition on which the filesystem resides.
 195:fat16.cpp     ****  * \returns 0 on error, a FAT16 filesystem descriptor on success.
 196:fat16.cpp     ****  * \see fat16_open
 197:fat16.cpp     ****  */
 198:fat16.cpp     **** struct fat16_fs_struct* fat16_open(struct partition_struct* partition)
 199:fat16.cpp     **** {
  69              		.loc 1 199 0
  70              		.cfi_startproc
  71              		@ Function supports interworking.
  72              		@ args = 0, pretend = 0, frame = 16
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
  75              	.LCFI0:
ARM GAS  /tmp/ccwDRvq0.s 			page 6


  76              		.cfi_def_cfa_offset 4
  77 0004 14D04DE2 		sub	sp, sp, #20	@,,
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 24
  80 0008 04008DE5 		str	r0, [sp, #4]	@ partition, partition
  81              	.LBB2:
 200:fat16.cpp     **** 	UART0 * uart = UART0::GetInstance();
  82              		.loc 1 200 0
  83              		.cfi_offset 14, -4
  84 000c FEFFFFEB 		bl	_ZN5UART011GetInstanceEv	@
  85 0010 0C008DE5 		str	r0, [sp, #12]	@, uart
 201:fat16.cpp     ****     if(!partition ||
  86              		.loc 1 201 0
  87 0014 04309DE5 		ldr	r3, [sp, #4]	@ tmp139, partition
  88 0018 000053E3 		cmp	r3, #0	@ tmp139,
  89 001c 0300000A 		beq	.L2	@,
 202:fat16.cpp     ****         #if FAT16_WRITE_SUPPORT
 203:fat16.cpp     ****         !partition->device_write
  90              		.loc 1 203 0 discriminator 1
  91 0020 04309DE5 		ldr	r3, [sp, #4]	@ tmp140, partition
  92 0024 083093E5 		ldr	r3, [r3, #8]	@ D.11921, partition_3(D)->device_write
 201:fat16.cpp     ****     if(!partition ||
  93              		.loc 1 201 0 discriminator 1
  94 0028 000053E3 		cmp	r3, #0	@ D.11921,
  95 002c 0100001A 		bne	.L3	@,
  96              	.L2:
 204:fat16.cpp     ****        #else
 205:fat16.cpp     ****         0
 206:fat16.cpp     ****        #endif
 207:fat16.cpp     ****        )
 208:fat16.cpp     ****     return 0;
  97              		.loc 1 208 0
  98 0030 0030A0E3 		mov	r3, #0	@ D.11922,
  99 0034 230000EA 		b	.L4	@
 100              	.L3:
 209:fat16.cpp     **** 
 210:fat16.cpp     ****     struct fat16_fs_struct* fs = (fat16_fs_struct*)malloc(sizeof(*fs));
 101              		.loc 1 210 0
 102 0038 1C00A0E3 		mov	r0, #28	@,
 103 003c FEFFFFEB 		bl	malloc	@
 104 0040 0030A0E1 		mov	r3, r0	@ tmp141,
 105 0044 08308DE5 		str	r3, [sp, #8]	@ D.11923, fs
 211:fat16.cpp     ****     if(!fs)
 106              		.loc 1 211 0
 107 0048 08309DE5 		ldr	r3, [sp, #8]	@ tmp142, fs
 108 004c 000053E3 		cmp	r3, #0	@ tmp142,
 109 0050 0400001A 		bne	.L5	@,
 212:fat16.cpp     ****     {
 213:fat16.cpp     ****     	uart->WriteLine("MALLOC FAILS\n\r");
 110              		.loc 1 213 0
 111 0054 0C009DE5 		ldr	r0, [sp, #12]	@, uart
 112 0058 78109FE5 		ldr	r1, .L7	@,
 113 005c FEFFFFEB 		bl	_ZN5UART09WriteLineEPKcz	@
 214:fat16.cpp     ****         return 0;
 114              		.loc 1 214 0
 115 0060 0030A0E3 		mov	r3, #0	@ D.11922,
 116 0064 170000EA 		b	.L4	@
ARM GAS  /tmp/ccwDRvq0.s 			page 7


 117              	.L5:
 215:fat16.cpp     ****     }
 216:fat16.cpp     ****     memset(fs, 0, sizeof(*fs));
 118              		.loc 1 216 0
 119 0068 08009DE5 		ldr	r0, [sp, #8]	@, fs
 120 006c 0010A0E3 		mov	r1, #0	@,
 121 0070 1C20A0E3 		mov	r2, #28	@,
 122 0074 FEFFFFEB 		bl	memset	@
 217:fat16.cpp     **** 
 218:fat16.cpp     ****     fs->partition = partition;
 123              		.loc 1 218 0
 124 0078 08309DE5 		ldr	r3, [sp, #8]	@ tmp143, fs
 125 007c 04209DE5 		ldr	r2, [sp, #4]	@ tmp144, partition
 126 0080 002083E5 		str	r2, [r3, #0]	@ tmp144, fs_6->partition
 219:fat16.cpp     ****     if(!fat16_read_header(fs))
 127              		.loc 1 219 0
 128 0084 08009DE5 		ldr	r0, [sp, #8]	@, fs
 129 0088 FEFFFFEB 		bl	_ZL17fat16_read_headerP15fat16_fs_struct	@
 130 008c 0030A0E1 		mov	r3, r0	@ tmp145,
 131 0090 000053E3 		cmp	r3, #0	@ D.11927,
 132 0094 0030A013 		movne	r3, #0	@, tmp147
 133 0098 0130A003 		moveq	r3, #1	@, tmp147
 134 009c FF3003E2 		and	r3, r3, #255	@ retval.45, tmp146,
 135 00a0 000053E3 		cmp	r3, #0	@ retval.45,
 136 00a4 0600000A 		beq	.L6	@,
 220:fat16.cpp     ****     {
 221:fat16.cpp     ****     	uart->WriteLine("Failed Reading Header\n\r");
 137              		.loc 1 221 0
 138 00a8 0C009DE5 		ldr	r0, [sp, #12]	@, uart
 139 00ac 28109FE5 		ldr	r1, .L7+4	@,
 140 00b0 FEFFFFEB 		bl	_ZN5UART09WriteLineEPKcz	@
 222:fat16.cpp     ****         free(fs);
 141              		.loc 1 222 0
 142 00b4 08009DE5 		ldr	r0, [sp, #8]	@, fs
 143 00b8 FEFFFFEB 		bl	free	@
 223:fat16.cpp     ****         return 0;
 144              		.loc 1 223 0
 145 00bc 0030A0E3 		mov	r3, #0	@ D.11922,
 146 00c0 000000EA 		b	.L4	@
 147              	.L6:
 224:fat16.cpp     ****     }
 225:fat16.cpp     **** 
 226:fat16.cpp     ****     return fs;
 148              		.loc 1 226 0
 149 00c4 08309DE5 		ldr	r3, [sp, #8]	@ D.11922, fs
 150              	.L4:
 151              	.LBE2:
 227:fat16.cpp     **** }
 152              		.loc 1 227 0
 153 00c8 0300A0E1 		mov	r0, r3	@, <retval>
 154 00cc 14D08DE2 		add	sp, sp, #20	@,,
 155 00d0 04E09DE4 		ldr	lr, [sp], #4
 156 00d4 1EFF2FE1 		bx	lr
 157              	.L8:
 158              		.align	2
 159              	.L7:
 160 00d8 00000000 		.word	.LC0
ARM GAS  /tmp/ccwDRvq0.s 			page 8


 161 00dc 10000000 		.word	.LC1
 162              		.cfi_endproc
 163              	.LFE109:
 164              		.size	_Z10fat16_openP16partition_struct, .-_Z10fat16_openP16partition_struct
 165              		.section	.text._Z11fat16_closeP15fat16_fs_struct,"ax",%progbits
 166              		.align	2
 167              		.global	_Z11fat16_closeP15fat16_fs_struct
 168              		.type	_Z11fat16_closeP15fat16_fs_struct, %function
 169              	_Z11fat16_closeP15fat16_fs_struct:
 170              	.LFB110:
 228:fat16.cpp     **** 
 229:fat16.cpp     **** /**
 230:fat16.cpp     ****  * \ingroup fat16_fs
 231:fat16.cpp     ****  * Closes a FAT16 filesystem.
 232:fat16.cpp     ****  *
 233:fat16.cpp     ****  * When this function returns, the given filesystem descriptor
 234:fat16.cpp     ****  * will be invalid.
 235:fat16.cpp     ****  *
 236:fat16.cpp     ****  * \param[in] fs The filesystem to close.
 237:fat16.cpp     ****  * \see fat16_open
 238:fat16.cpp     ****  */
 239:fat16.cpp     **** void fat16_close(struct fat16_fs_struct* fs)
 240:fat16.cpp     **** {
 171              		.loc 1 240 0
 172              		.cfi_startproc
 173              		@ Function supports interworking.
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 4
 179 0004 0CD04DE2 		sub	sp, sp, #12	@,,
 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 16
 182 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 241:fat16.cpp     ****     if(!fs)
 183              		.loc 1 241 0
 184 000c 04309DE5 		ldr	r3, [sp, #4]	@ tmp133, fs
 185 0010 000053E3 		cmp	r3, #0	@ tmp133,
 186 0014 0200000A 		beq	.L12	@,
 187              		.cfi_offset 14, -4
 188              	.L10:
 242:fat16.cpp     ****         return;
 243:fat16.cpp     **** 
 244:fat16.cpp     ****     free(fs);
 189              		.loc 1 244 0
 190 0018 04009DE5 		ldr	r0, [sp, #4]	@, fs
 191 001c FEFFFFEB 		bl	free	@
 192 0020 000000EA 		b	.L9	@
 193              	.L12:
 242:fat16.cpp     ****         return;
 194              		.loc 1 242 0
 195 0024 0000A0E1 		mov	r0, r0	@ nop
 196              	.L9:
 245:fat16.cpp     **** }
 197              		.loc 1 245 0
 198 0028 0CD08DE2 		add	sp, sp, #12	@,,
ARM GAS  /tmp/ccwDRvq0.s 			page 9


 199 002c 04E09DE4 		ldr	lr, [sp], #4
 200 0030 1EFF2FE1 		bx	lr
 201              		.cfi_endproc
 202              	.LFE110:
 203              		.size	_Z11fat16_closeP15fat16_fs_struct, .-_Z11fat16_closeP15fat16_fs_struct
 204              		.section	.rodata
 205              		.align	2
 206              	.LC2:
 207 0028 50617274 		.ascii	"Partition = 0\012\015\000"
 207      6974696F 
 207      6E203D20 
 207      300A0D00 
 208              		.global	__aeabi_idiv
 209              		.global	__aeabi_uidiv
 210              		.section	.text._ZL17fat16_read_headerP15fat16_fs_struct,"ax",%progbits
 211              		.align	2
 212              		.type	_ZL17fat16_read_headerP15fat16_fs_struct, %function
 213              	_ZL17fat16_read_headerP15fat16_fs_struct:
 214              	.LFB111:
 246:fat16.cpp     **** 
 247:fat16.cpp     **** /**
 248:fat16.cpp     ****  * \ingroup fat16_fs
 249:fat16.cpp     ****  * Reads and parses the header of a FAT16 filesystem.
 250:fat16.cpp     ****  *
 251:fat16.cpp     ****  * \param[inout] fs The filesystem for which to parse the header.
 252:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
 253:fat16.cpp     ****  */
 254:fat16.cpp     **** uint8_t fat16_read_header(struct fat16_fs_struct* fs)
 255:fat16.cpp     **** {
 215              		.loc 1 255 0
 216              		.cfi_startproc
 217              		@ Function supports interworking.
 218              		@ args = 0, pretend = 0, frame = 80
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220 0000 10402DE9 		stmfd	sp!, {r4, lr}	@,
 221              	.LCFI4:
 222              		.cfi_def_cfa_offset 8
 223 0004 50D04DE2 		sub	sp, sp, #80	@,,
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 88
 226 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 227              	.LBB3:
 256:fat16.cpp     **** 	UART0 * uart = UART0::GetInstance();
 228              		.loc 1 256 0
 229              		.cfi_offset 14, -4
 230              		.cfi_offset 4, -8
 231 000c FEFFFFEB 		bl	_ZN5UART011GetInstanceEv	@
 232 0010 48008DE5 		str	r0, [sp, #72]	@, uart
 257:fat16.cpp     ****     if(!fs)
 233              		.loc 1 257 0
 234 0014 04309DE5 		ldr	r3, [sp, #4]	@ tmp224, fs
 235 0018 000053E3 		cmp	r3, #0	@ tmp224,
 236 001c 0100001A 		bne	.L14	@,
 258:fat16.cpp     ****         return 0;
 237              		.loc 1 258 0
 238 0020 0030A0E3 		mov	r3, #0	@ D.11810,
 239 0024 CE0000EA 		b	.L15	@
ARM GAS  /tmp/ccwDRvq0.s 			page 10


 240              	.L14:
 259:fat16.cpp     **** 
 260:fat16.cpp     ****     struct partition_struct* partition = fs->partition;
 241              		.loc 1 260 0
 242 0028 04309DE5 		ldr	r3, [sp, #4]	@ tmp225, fs
 243 002c 003093E5 		ldr	r3, [r3, #0]	@ tmp226, fs_4(D)->partition
 244 0030 44308DE5 		str	r3, [sp, #68]	@ tmp226, partition
 261:fat16.cpp     ****     if(!partition)
 245              		.loc 1 261 0
 246 0034 44309DE5 		ldr	r3, [sp, #68]	@ tmp227, partition
 247 0038 000053E3 		cmp	r3, #0	@ tmp227,
 248 003c 0400001A 		bne	.L16	@,
 262:fat16.cpp     ****     {
 263:fat16.cpp     ****     	uart->WriteLine("Partition = 0\n\r");
 249              		.loc 1 263 0
 250 0040 48009DE5 		ldr	r0, [sp, #72]	@, uart
 251 0044 28139FE5 		ldr	r1, .L23	@,
 252 0048 FEFFFFEB 		bl	_ZN5UART09WriteLineEPKcz	@
 264:fat16.cpp     ****         return 0;
 253              		.loc 1 264 0
 254 004c 0030A0E3 		mov	r3, #0	@ D.11810,
 255 0050 C30000EA 		b	.L15	@
 256              	.L16:
 265:fat16.cpp     ****     }
 266:fat16.cpp     **** 
 267:fat16.cpp     ****     /* read fat parameters */
 268:fat16.cpp     ****     uint8_t buffer[25];
 269:fat16.cpp     ****     uint32_t partition_offset = partition->offset * 512;
 257              		.loc 1 269 0
 258 0054 44309DE5 		ldr	r3, [sp, #68]	@ tmp228, partition
 259 0058 103093E5 		ldr	r3, [r3, #16]	@ D.11813, partition_6->offset
 260 005c 8334A0E1 		mov	r3, r3, asl #9	@ tmp229, D.11813,
 261 0060 40308DE5 		str	r3, [sp, #64]	@ tmp229, partition_offset
 270:fat16.cpp     **** 
 271:fat16.cpp     ****     if(!partition->device_read(partition_offset + 0x0b, buffer, sizeof(buffer)))
 262              		.loc 1 271 0
 263 0064 44309DE5 		ldr	r3, [sp, #68]	@ tmp230, partition
 264 0068 003093E5 		ldr	r3, [r3, #0]	@ D.11815, partition_6->device_read
 265 006c 40209DE5 		ldr	r2, [sp, #64]	@ tmp231, partition_offset
 266 0070 0B1082E2 		add	r1, r2, #11	@ D.11816, tmp231,
 267 0074 08208DE2 		add	r2, sp, #8	@ tmp232,,
 268 0078 0100A0E1 		mov	r0, r1	@, D.11816
 269 007c 0210A0E1 		mov	r1, r2	@, tmp232
 270 0080 1920A0E3 		mov	r2, #25	@,
 271 0084 0FE0A0E1 		mov	lr, pc
 272 0088 13FF2FE1 		bx	r3	@ D.11815
 273 008c 0030A0E1 		mov	r3, r0	@ tmp233,
 274 0090 000053E3 		cmp	r3, #0	@ D.11817,
 275 0094 0030A013 		movne	r3, #0	@, tmp235
 276 0098 0130A003 		moveq	r3, #1	@, tmp235
 277 009c FF3003E2 		and	r3, r3, #255	@ retval.44, tmp234,
 278 00a0 000053E3 		cmp	r3, #0	@ retval.44,
 279 00a4 0100000A 		beq	.L17	@,
 272:fat16.cpp     ****         return 0;
 280              		.loc 1 272 0
 281 00a8 0030A0E3 		mov	r3, #0	@ D.11810,
 282 00ac AC0000EA 		b	.L15	@
ARM GAS  /tmp/ccwDRvq0.s 			page 11


 283              	.L17:
 273:fat16.cpp     **** 
 274:fat16.cpp     ****     uint16_t bytes_per_sector = ((uint16_t) buffer[0x00]) |
 284              		.loc 1 274 0
 285 00b0 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2	@ D.11820, buffer
 275:fat16.cpp     ****     ((uint16_t) buffer[0x01] << 8);
 286              		.loc 1 275 0
 287 00b4 0320A0E1 		mov	r2, r3	@ D.11821, D.11820
 288 00b8 0930DDE5 		ldrb	r3, [sp, #9]	@ zero_extendqisi2	@ D.11822, buffer
 289 00bc 0334A0E1 		mov	r3, r3, asl #8	@ D.11824, D.11823,
 290 00c0 0338A0E1 		mov	r3, r3, asl #16	@ tmp236, D.11824,
 291 00c4 2338A0E1 		mov	r3, r3, lsr #16	@ D.11825, tmp236,
 292 00c8 033082E1 		orr	r3, r2, r3	@ tmp239, tmp237, tmp238
 293 00cc 0338A0E1 		mov	r3, r3, asl #16	@ tmp240, tmp239,
 294 00d0 2338A0E1 		mov	r3, r3, lsr #16	@ D.11826, tmp240,
 295 00d4 BE33CDE1 		strh	r3, [sp, #62]	@ movhi	@ D.11826, bytes_per_sector
 276:fat16.cpp     ****     uint8_t sectors_per_cluster = buffer[0x02];
 296              		.loc 1 276 0
 297 00d8 0A30DDE5 		ldrb	r3, [sp, #10]	@ tmp241, buffer
 298 00dc 3D30CDE5 		strb	r3, [sp, #61]	@ tmp241, sectors_per_cluster
 277:fat16.cpp     ****     uint16_t reserved_sectors = ((uint16_t) buffer[0x03]) |
 299              		.loc 1 277 0
 300 00e0 0B30DDE5 		ldrb	r3, [sp, #11]	@ zero_extendqisi2	@ D.11827, buffer
 278:fat16.cpp     ****     ((uint16_t) buffer[0x04] << 8);
 301              		.loc 1 278 0
 302 00e4 0320A0E1 		mov	r2, r3	@ D.11828, D.11827
 303 00e8 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ D.11829, buffer
 304 00ec 0334A0E1 		mov	r3, r3, asl #8	@ D.11831, D.11830,
 305 00f0 0338A0E1 		mov	r3, r3, asl #16	@ tmp242, D.11831,
 306 00f4 2338A0E1 		mov	r3, r3, lsr #16	@ D.11832, tmp242,
 307 00f8 033082E1 		orr	r3, r2, r3	@ tmp245, tmp243, tmp244
 308 00fc 0338A0E1 		mov	r3, r3, asl #16	@ tmp246, tmp245,
 309 0100 2338A0E1 		mov	r3, r3, lsr #16	@ D.11833, tmp246,
 310 0104 BA33CDE1 		strh	r3, [sp, #58]	@ movhi	@ D.11833, reserved_sectors
 279:fat16.cpp     ****     uint8_t fat_copies = buffer[0x05];
 311              		.loc 1 279 0
 312 0108 0D30DDE5 		ldrb	r3, [sp, #13]	@ tmp247, buffer
 313 010c 3930CDE5 		strb	r3, [sp, #57]	@ tmp247, fat_copies
 280:fat16.cpp     ****     uint16_t max_root_entries = ((uint16_t) buffer[0x06]) |
 314              		.loc 1 280 0
 315 0110 0E30DDE5 		ldrb	r3, [sp, #14]	@ zero_extendqisi2	@ D.11834, buffer
 281:fat16.cpp     ****     ((uint16_t) buffer[0x07] << 8);
 316              		.loc 1 281 0
 317 0114 0320A0E1 		mov	r2, r3	@ D.11835, D.11834
 318 0118 0F30DDE5 		ldrb	r3, [sp, #15]	@ zero_extendqisi2	@ D.11836, buffer
 319 011c 0334A0E1 		mov	r3, r3, asl #8	@ D.11838, D.11837,
 320 0120 0338A0E1 		mov	r3, r3, asl #16	@ tmp248, D.11838,
 321 0124 2338A0E1 		mov	r3, r3, lsr #16	@ D.11839, tmp248,
 322 0128 033082E1 		orr	r3, r2, r3	@ tmp251, tmp249, tmp250
 323 012c 0338A0E1 		mov	r3, r3, asl #16	@ tmp252, tmp251,
 324 0130 2338A0E1 		mov	r3, r3, lsr #16	@ D.11840, tmp252,
 325 0134 B633CDE1 		strh	r3, [sp, #54]	@ movhi	@ D.11840, max_root_entries
 282:fat16.cpp     ****     uint16_t sector_count_16 = ((uint16_t) buffer[0x08]) |
 326              		.loc 1 282 0
 327 0138 1030DDE5 		ldrb	r3, [sp, #16]	@ zero_extendqisi2	@ D.11841, buffer
 283:fat16.cpp     ****     ((uint16_t) buffer[0x09] << 8);
 328              		.loc 1 283 0
ARM GAS  /tmp/ccwDRvq0.s 			page 12


 329 013c 0320A0E1 		mov	r2, r3	@ D.11842, D.11841
 330 0140 1130DDE5 		ldrb	r3, [sp, #17]	@ zero_extendqisi2	@ D.11843, buffer
 331 0144 0334A0E1 		mov	r3, r3, asl #8	@ D.11845, D.11844,
 332 0148 0338A0E1 		mov	r3, r3, asl #16	@ tmp253, D.11845,
 333 014c 2338A0E1 		mov	r3, r3, lsr #16	@ D.11846, tmp253,
 334 0150 033082E1 		orr	r3, r2, r3	@ tmp256, tmp254, tmp255
 335 0154 0338A0E1 		mov	r3, r3, asl #16	@ tmp257, tmp256,
 336 0158 2338A0E1 		mov	r3, r3, lsr #16	@ D.11847, tmp257,
 337 015c B433CDE1 		strh	r3, [sp, #52]	@ movhi	@ D.11847, sector_count_16
 284:fat16.cpp     ****     uint16_t sectors_per_fat = ((uint16_t) buffer[0x0b]) |
 338              		.loc 1 284 0
 339 0160 1330DDE5 		ldrb	r3, [sp, #19]	@ zero_extendqisi2	@ D.11848, buffer
 285:fat16.cpp     ****     ((uint16_t) buffer[0x0c] << 8);
 340              		.loc 1 285 0
 341 0164 0320A0E1 		mov	r2, r3	@ D.11849, D.11848
 342 0168 1430DDE5 		ldrb	r3, [sp, #20]	@ zero_extendqisi2	@ D.11850, buffer
 343 016c 0334A0E1 		mov	r3, r3, asl #8	@ D.11852, D.11851,
 344 0170 0338A0E1 		mov	r3, r3, asl #16	@ tmp258, D.11852,
 345 0174 2338A0E1 		mov	r3, r3, lsr #16	@ D.11853, tmp258,
 346 0178 033082E1 		orr	r3, r2, r3	@ tmp261, tmp259, tmp260
 347 017c 0338A0E1 		mov	r3, r3, asl #16	@ tmp262, tmp261,
 348 0180 2338A0E1 		mov	r3, r3, lsr #16	@ D.11854, tmp262,
 349 0184 B233CDE1 		strh	r3, [sp, #50]	@ movhi	@ D.11854, sectors_per_fat
 286:fat16.cpp     ****     uint32_t sector_count = ((uint32_t) buffer[0x15]) |
 350              		.loc 1 286 0
 351 0188 1D30DDE5 		ldrb	r3, [sp, #29]	@ zero_extendqisi2	@ D.11855, buffer
 287:fat16.cpp     ****     ((uint32_t) buffer[0x16] << 8) |
 288:fat16.cpp     ****     ((uint32_t) buffer[0x17] << 16) |
 289:fat16.cpp     ****     ((uint32_t) buffer[0x18] << 24);
 352              		.loc 1 289 0
 353 018c 0320A0E1 		mov	r2, r3	@ D.11856, D.11855
 287:fat16.cpp     ****     ((uint32_t) buffer[0x16] << 8) |
 354              		.loc 1 287 0
 355 0190 1E30DDE5 		ldrb	r3, [sp, #30]	@ zero_extendqisi2	@ D.11857, buffer
 356              		.loc 1 289 0
 357 0194 0334A0E1 		mov	r3, r3, asl #8	@ D.11859, D.11858,
 358 0198 032082E1 		orr	r2, r2, r3	@ D.11860, D.11856, D.11859
 288:fat16.cpp     ****     ((uint32_t) buffer[0x17] << 16) |
 359              		.loc 1 288 0
 360 019c 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ D.11861, buffer
 361              		.loc 1 289 0
 362 01a0 0338A0E1 		mov	r3, r3, asl #16	@ D.11863, D.11862,
 363 01a4 032082E1 		orr	r2, r2, r3	@ D.11864, D.11860, D.11863
 364 01a8 2030DDE5 		ldrb	r3, [sp, #32]	@ zero_extendqisi2	@ D.11865, buffer
 365 01ac 033CA0E1 		mov	r3, r3, asl #24	@ D.11867, D.11866,
 366 01b0 033082E1 		orr	r3, r2, r3	@ tmp263, D.11864, D.11867
 367 01b4 4C308DE5 		str	r3, [sp, #76]	@ tmp263, sector_count
 290:fat16.cpp     **** 
 291:fat16.cpp     ****     if(sectors_per_fat == 0)
 368              		.loc 1 291 0
 369 01b8 B233DDE1 		ldrh	r3, [sp, #50]	@ tmp264, sectors_per_fat
 370 01bc 000053E3 		cmp	r3, #0	@ tmp264,
 371 01c0 0100001A 		bne	.L18	@,
 292:fat16.cpp     ****     /* this is not a FAT16 */
 293:fat16.cpp     ****         return 0;
 372              		.loc 1 293 0
 373 01c4 0030A0E3 		mov	r3, #0	@ D.11810,
ARM GAS  /tmp/ccwDRvq0.s 			page 13


 374 01c8 650000EA 		b	.L15	@
 375              	.L18:
 294:fat16.cpp     **** 
 295:fat16.cpp     ****     if(sector_count == 0)
 376              		.loc 1 295 0
 377 01cc 4C309DE5 		ldr	r3, [sp, #76]	@ tmp265, sector_count
 378 01d0 000053E3 		cmp	r3, #0	@ tmp265,
 379 01d4 0600001A 		bne	.L19	@,
 296:fat16.cpp     ****     {
 297:fat16.cpp     ****         if(sector_count_16 == 0)
 380              		.loc 1 297 0
 381 01d8 B433DDE1 		ldrh	r3, [sp, #52]	@ tmp266, sector_count_16
 382 01dc 000053E3 		cmp	r3, #0	@ tmp266,
 383 01e0 0100001A 		bne	.L20	@,
 298:fat16.cpp     ****     /* illegal volume size */
 299:fat16.cpp     ****             return 0;
 384              		.loc 1 299 0
 385 01e4 0030A0E3 		mov	r3, #0	@ D.11810,
 386 01e8 5D0000EA 		b	.L15	@
 387              	.L20:
 300:fat16.cpp     ****         else
 301:fat16.cpp     ****             sector_count = sector_count_16;
 388              		.loc 1 301 0
 389 01ec B433DDE1 		ldrh	r3, [sp, #52]	@ tmp267, sector_count_16
 390 01f0 4C308DE5 		str	r3, [sp, #76]	@ tmp267, sector_count
 391              	.L19:
 302:fat16.cpp     ****     }
 303:fat16.cpp     **** 
 304:fat16.cpp     ****     /* ensure we really have a FAT16 fs here */
 305:fat16.cpp     ****     uint32_t data_sector_count = sector_count
 306:fat16.cpp     ****     - reserved_sectors
 307:fat16.cpp     ****     - (uint32_t) sectors_per_fat * fat_copies
 308:fat16.cpp     ****     - ((max_root_entries * 32 + bytes_per_sector - 1) / bytes_per_sector);
 392              		.loc 1 308 0
 393 01f4 BA33DDE1 		ldrh	r3, [sp, #58]	@ D.11875, reserved_sectors
 394 01f8 4C209DE5 		ldr	r2, [sp, #76]	@ tmp268, sector_count
 395 01fc 022063E0 		rsb	r2, r3, r2	@ D.11876, D.11875, tmp268
 396 0200 B233DDE1 		ldrh	r3, [sp, #50]	@ D.11877, sectors_per_fat
 397 0204 3910DDE5 		ldrb	r1, [sp, #57]	@ zero_extendqisi2	@ D.11878, fat_copies
 398 0208 910303E0 		mul	r3, r1, r3	@ D.11879, D.11878, D.11877
 399 020c 024063E0 		rsb	r4, r3, r2	@ D.11880, D.11879, D.11876
 400 0210 B633DDE1 		ldrh	r3, [sp, #54]	@ D.11881, max_root_entries
 401 0214 8322A0E1 		mov	r2, r3, asl #5	@ D.11882, D.11881,
 402 0218 BE33DDE1 		ldrh	r3, [sp, #62]	@ D.11883, bytes_per_sector
 403 021c 033082E0 		add	r3, r2, r3	@ D.11884, D.11882, D.11883
 404 0220 012043E2 		sub	r2, r3, #1	@ D.11885, D.11884,
 405 0224 BE33DDE1 		ldrh	r3, [sp, #62]	@ D.11886, bytes_per_sector
 406 0228 0200A0E1 		mov	r0, r2	@, D.11885
 407 022c 0310A0E1 		mov	r1, r3	@, D.11886
 408 0230 FEFFFFEB 		bl	__aeabi_idiv	@
 409 0234 0030A0E1 		mov	r3, r0	@ tmp271,
 410 0238 043063E0 		rsb	r3, r3, r4	@ tmp272, D.11888, D.11880
 411 023c 2C308DE5 		str	r3, [sp, #44]	@ tmp272, data_sector_count
 309:fat16.cpp     ****     uint32_t data_cluster_count = data_sector_count / sectors_per_cluster;
 412              		.loc 1 309 0
 413 0240 3D30DDE5 		ldrb	r3, [sp, #61]	@ zero_extendqisi2	@ D.11889, sectors_per_cluster
 414 0244 2C009DE5 		ldr	r0, [sp, #44]	@, data_sector_count
ARM GAS  /tmp/ccwDRvq0.s 			page 14


 415 0248 0310A0E1 		mov	r1, r3	@, D.11889
 416 024c FEFFFFEB 		bl	__aeabi_uidiv	@
 417 0250 0030A0E1 		mov	r3, r0	@ tmp275,
 418 0254 28308DE5 		str	r3, [sp, #40]	@ tmp275, data_cluster_count
 310:fat16.cpp     ****     if(data_cluster_count < 4085 || data_cluster_count >= 65525)
 419              		.loc 1 310 0
 420 0258 28209DE5 		ldr	r2, [sp, #40]	@ tmp276, data_cluster_count
 421 025c 14319FE5 		ldr	r3, .L23+4	@ tmp277,
 422 0260 030052E1 		cmp	r2, r3	@ tmp276, tmp277
 423 0264 0300009A 		bls	.L21	@,
 424              		.loc 1 310 0 is_stmt 0 discriminator 1
 425 0268 28209DE5 		ldr	r2, [sp, #40]	@ tmp278, data_cluster_count
 426 026c 08319FE5 		ldr	r3, .L23+8	@ tmp279,
 427 0270 030052E1 		cmp	r2, r3	@ tmp278, tmp279
 428 0274 0100009A 		bls	.L22	@,
 429              	.L21:
 311:fat16.cpp     ****     /* this is not a FAT16 */
 312:fat16.cpp     ****         return 0;
 430              		.loc 1 312 0 is_stmt 1
 431 0278 0030A0E3 		mov	r3, #0	@ D.11810,
 432 027c 380000EA 		b	.L15	@
 433              	.L22:
 313:fat16.cpp     **** 
 314:fat16.cpp     ****     partition->type = PARTITION_TYPE_FAT16;
 434              		.loc 1 314 0
 435 0280 44309DE5 		ldr	r3, [sp, #68]	@ tmp280, partition
 436 0284 0620A0E3 		mov	r2, #6	@ tmp281,
 437 0288 0C20C3E5 		strb	r2, [r3, #12]	@ tmp282, partition_6->type
 315:fat16.cpp     **** 
 316:fat16.cpp     ****     /* fill header information */
 317:fat16.cpp     ****     struct fat16_header_struct* header = &fs->header;
 438              		.loc 1 317 0
 439 028c 04309DE5 		ldr	r3, [sp, #4]	@ tmp283, fs
 440 0290 043083E2 		add	r3, r3, #4	@ tmp284, tmp283,
 441 0294 24308DE5 		str	r3, [sp, #36]	@ tmp284, header
 318:fat16.cpp     ****     memset(header, 0, sizeof(*header));
 442              		.loc 1 318 0
 443 0298 24009DE5 		ldr	r0, [sp, #36]	@, header
 444 029c 0010A0E3 		mov	r1, #0	@,
 445 02a0 1820A0E3 		mov	r2, #24	@,
 446 02a4 FEFFFFEB 		bl	memset	@
 319:fat16.cpp     **** 
 320:fat16.cpp     ****     header->size = sector_count * bytes_per_sector;
 447              		.loc 1 320 0
 448 02a8 BE33DDE1 		ldrh	r3, [sp, #62]	@ D.11893, bytes_per_sector
 449 02ac 4C209DE5 		ldr	r2, [sp, #76]	@ tmp285, sector_count
 450 02b0 930202E0 		mul	r2, r3, r2	@ D.11894, D.11893, tmp285
 451 02b4 24309DE5 		ldr	r3, [sp, #36]	@ tmp286, header
 452 02b8 002083E5 		str	r2, [r3, #0]	@ D.11894, header_91->size
 321:fat16.cpp     **** 
 322:fat16.cpp     ****     header->fat_offset = /* jump to partition */
 323:fat16.cpp     ****     partition_offset +
 324:fat16.cpp     ****     /* jump to fat */
 325:fat16.cpp     ****     (uint32_t) reserved_sectors * bytes_per_sector;
 453              		.loc 1 325 0
 454 02bc BA33DDE1 		ldrh	r3, [sp, #58]	@ D.11895, reserved_sectors
 455 02c0 BE23DDE1 		ldrh	r2, [sp, #62]	@ D.11896, bytes_per_sector
ARM GAS  /tmp/ccwDRvq0.s 			page 15


 456 02c4 930202E0 		mul	r2, r3, r2	@ D.11897, D.11895, D.11896
 457 02c8 40309DE5 		ldr	r3, [sp, #64]	@ tmp287, partition_offset
 458 02cc 032082E0 		add	r2, r2, r3	@ D.11898, D.11897, tmp287
 459 02d0 24309DE5 		ldr	r3, [sp, #36]	@ tmp288, header
 460 02d4 042083E5 		str	r2, [r3, #4]	@ D.11898, header_91->fat_offset
 326:fat16.cpp     ****     header->fat_size = (data_cluster_count + 2) * 2;
 461              		.loc 1 326 0
 462 02d8 28309DE5 		ldr	r3, [sp, #40]	@ tmp289, data_cluster_count
 463 02dc 023083E2 		add	r3, r3, #2	@ D.11899, tmp289,
 464 02e0 8320A0E1 		mov	r2, r3, asl #1	@ D.11900, D.11899,
 465 02e4 24309DE5 		ldr	r3, [sp, #36]	@ tmp290, header
 466 02e8 082083E5 		str	r2, [r3, #8]	@ D.11900, header_91->fat_size
 327:fat16.cpp     **** 
 328:fat16.cpp     ****     header->sector_size = bytes_per_sector;
 467              		.loc 1 328 0
 468 02ec 24309DE5 		ldr	r3, [sp, #36]	@ tmp291, header
 469 02f0 BE23DDE1 		ldrh	r2, [sp, #62]	@ movhi	@ tmp292, bytes_per_sector
 470 02f4 BC20C3E1 		strh	r2, [r3, #12]	@ movhi	@ tmp292, header_91->sector_size
 329:fat16.cpp     ****     header->cluster_size = (uint32_t) bytes_per_sector * sectors_per_cluster;
 471              		.loc 1 329 0
 472 02f8 3D30DDE5 		ldrb	r3, [sp, #61]	@ zero_extendqisi2	@ tmp294, sectors_per_cluster
 473 02fc 0338A0E1 		mov	r3, r3, asl #16	@ tmp295, tmp293,
 474 0300 2338A0E1 		mov	r3, r3, lsr #16	@ D.11901, tmp295,
 475 0304 BE23DDE1 		ldrh	r2, [sp, #62]	@ movhi	@ tmp296, bytes_per_sector
 476 0308 920303E0 		mul	r3, r2, r3	@ tmp297, tmp296, D.11901
 477 030c 0338A0E1 		mov	r3, r3, asl #16	@ tmp298, tmp297,
 478 0310 2328A0E1 		mov	r2, r3, lsr #16	@ D.11902, tmp298,
 479 0314 24309DE5 		ldr	r3, [sp, #36]	@ tmp299, header
 480 0318 BE20C3E1 		strh	r2, [r3, #14]	@ movhi	@ D.11902, header_91->cluster_size
 330:fat16.cpp     **** 
 331:fat16.cpp     ****     header->root_dir_offset = /* jump to fats */
 332:fat16.cpp     ****     header->fat_offset +
 333:fat16.cpp     ****     /* jump to root directory entries */
 334:fat16.cpp     ****     (uint32_t) fat_copies * sectors_per_fat * bytes_per_sector;
 481              		.loc 1 334 0
 482 031c 24309DE5 		ldr	r3, [sp, #36]	@ tmp300, header
 483 0320 042093E5 		ldr	r2, [r3, #4]	@ D.11903, header_91->fat_offset
 484 0324 3930DDE5 		ldrb	r3, [sp, #57]	@ zero_extendqisi2	@ D.11904, fat_copies
 485 0328 B213DDE1 		ldrh	r1, [sp, #50]	@ D.11905, sectors_per_fat
 486 032c 910303E0 		mul	r3, r1, r3	@ D.11906, D.11905, D.11904
 487 0330 BE13DDE1 		ldrh	r1, [sp, #62]	@ D.11907, bytes_per_sector
 488 0334 910303E0 		mul	r3, r1, r3	@ D.11908, D.11907, D.11906
 489 0338 032082E0 		add	r2, r2, r3	@ D.11909, D.11903, D.11908
 490 033c 24309DE5 		ldr	r3, [sp, #36]	@ tmp301, header
 491 0340 102083E5 		str	r2, [r3, #16]	@ D.11909, header_91->root_dir_offset
 335:fat16.cpp     **** 
 336:fat16.cpp     ****     header->cluster_zero_offset = /* jump to root directory entries */
 337:fat16.cpp     ****     header->root_dir_offset +
 338:fat16.cpp     ****     /* skip root directory entries */
 339:fat16.cpp     ****     (uint32_t) max_root_entries * 32;
 492              		.loc 1 339 0
 493 0344 24309DE5 		ldr	r3, [sp, #36]	@ tmp302, header
 494 0348 102093E5 		ldr	r2, [r3, #16]	@ D.11910, header_91->root_dir_offset
 495 034c B633DDE1 		ldrh	r3, [sp, #54]	@ D.11911, max_root_entries
 496 0350 8332A0E1 		mov	r3, r3, asl #5	@ D.11912, D.11911,
 497 0354 032082E0 		add	r2, r2, r3	@ D.11913, D.11910, D.11912
 498 0358 24309DE5 		ldr	r3, [sp, #36]	@ tmp303, header
ARM GAS  /tmp/ccwDRvq0.s 			page 16


 499 035c 142083E5 		str	r2, [r3, #20]	@ D.11913, header_91->cluster_zero_offset
 340:fat16.cpp     **** 
 341:fat16.cpp     ****     return 1;
 500              		.loc 1 341 0
 501 0360 0130A0E3 		mov	r3, #1	@ D.11810,
 502              	.L15:
 503              	.LBE3:
 342:fat16.cpp     **** }
 504              		.loc 1 342 0
 505 0364 0300A0E1 		mov	r0, r3	@, <retval>
 506 0368 50D08DE2 		add	sp, sp, #80	@,,
 507 036c 1040BDE8 		ldmfd	sp!, {r4, lr}
 508 0370 1EFF2FE1 		bx	lr
 509              	.L24:
 510              		.align	2
 511              	.L23:
 512 0374 28000000 		.word	.LC2
 513 0378 F40F0000 		.word	4084
 514 037c F4FF0000 		.word	65524
 515              		.cfi_endproc
 516              	.LFE111:
 517              		.size	_ZL17fat16_read_headerP15fat16_fs_struct, .-_ZL17fat16_read_headerP15fat16_fs_struct
 518              		.section	.text._ZL25fat16_read_root_dir_entryPK15fat16_fs_structtP22fat16_dir_entry_struct,"ax",%p
 519              		.align	2
 520              		.type	_ZL25fat16_read_root_dir_entryPK15fat16_fs_structtP22fat16_dir_entry_struct, %function
 521              	_ZL25fat16_read_root_dir_entryPK15fat16_fs_structtP22fat16_dir_entry_struct:
 522              	.LFB112:
 343:fat16.cpp     **** 
 344:fat16.cpp     **** /**
 345:fat16.cpp     ****  * \ingroup fat16_fs
 346:fat16.cpp     ****  * Reads a directory entry of the root directory.
 347:fat16.cpp     ****  *
 348:fat16.cpp     ****  * \param[in] fs Descriptor of file system to use.
 349:fat16.cpp     ****  * \param[in] entry_num The index of the directory entry to read.
 350:fat16.cpp     ****  * \param[out] dir_entry Directory entry descriptor which will get filled.
 351:fat16.cpp     ****  * \returns 0 on failure, 1 on success
 352:fat16.cpp     ****  * \see fat16_read_sub_dir_entry, fat16_read_dir_entry_by_path
 353:fat16.cpp     ****  */
 354:fat16.cpp     **** uint8_t fat16_read_root_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, struct fat1
 355:fat16.cpp     **** {
 523              		.loc 1 355 0
 524              		.cfi_startproc
 525              		@ Function supports interworking.
 526              		@ args = 0, pretend = 0, frame = 72
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 529              	.LCFI6:
 530              		.cfi_def_cfa_offset 4
 531 0004 54D04DE2 		sub	sp, sp, #84	@,,
 532              	.LCFI7:
 533              		.cfi_def_cfa_offset 88
 534 0008 14008DE5 		str	r0, [sp, #20]	@ fs, fs
 535 000c 0130A0E1 		mov	r3, r1	@ tmp153, entry_num
 536 0010 0C208DE5 		str	r2, [sp, #12]	@ dir_entry, dir_entry
 537 0014 B231CDE1 		strh	r3, [sp, #18]	@ movhi	@ tmp153, entry_num
 538              	.LBB4:
 356:fat16.cpp     ****     if(!fs || !dir_entry)
ARM GAS  /tmp/ccwDRvq0.s 			page 17


 539              		.loc 1 356 0
 540 0018 14309DE5 		ldr	r3, [sp, #20]	@ tmp154, fs
 541 001c 000053E3 		cmp	r3, #0	@ tmp154,
 542 0020 0200000A 		beq	.L26	@,
 543              		.cfi_offset 14, -4
 544              		.loc 1 356 0 is_stmt 0 discriminator 1
 545 0024 0C309DE5 		ldr	r3, [sp, #12]	@ tmp155, dir_entry
 546 0028 000053E3 		cmp	r3, #0	@ tmp155,
 547 002c 0100001A 		bne	.L27	@,
 548              	.L26:
 357:fat16.cpp     ****         return 0;
 549              		.loc 1 357 0 is_stmt 1
 550 0030 0030A0E3 		mov	r3, #0	@ D.11777,
 551 0034 530000EA 		b	.L28	@
 552              	.L27:
 358:fat16.cpp     **** 
 359:fat16.cpp     ****     /* we read from the root directory entry */
 360:fat16.cpp     ****     const struct fat16_header_struct* header = &fs->header;
 553              		.loc 1 360 0
 554 0038 14309DE5 		ldr	r3, [sp, #20]	@ tmp156, fs
 555 003c 043083E2 		add	r3, r3, #4	@ tmp157, tmp156,
 556 0040 4C308DE5 		str	r3, [sp, #76]	@ tmp157, header
 361:fat16.cpp     ****     device_read_interval_t device_read_interval = fs->partition->device_read_interval;
 557              		.loc 1 361 0
 558 0044 14309DE5 		ldr	r3, [sp, #20]	@ tmp158, fs
 559 0048 003093E5 		ldr	r3, [r3, #0]	@ D.11778, fs_4(D)->partition
 560 004c 043093E5 		ldr	r3, [r3, #4]	@ tmp159, D.11778_7->device_read_interval
 561 0050 48308DE5 		str	r3, [sp, #72]	@ tmp159, device_read_interval
 362:fat16.cpp     ****     uint8_t buffer[32];
 363:fat16.cpp     **** 
 364:fat16.cpp     ****     /* seek to the n-th entry */
 365:fat16.cpp     ****     struct fat16_read_callback_arg arg;
 366:fat16.cpp     ****     memset(&arg, 0, sizeof(arg));
 562              		.loc 1 366 0
 563 0054 3C308DE2 		add	r3, sp, #60	@ tmp160,,
 564 0058 0300A0E1 		mov	r0, r3	@, tmp160
 565 005c 0010A0E3 		mov	r1, #0	@,
 566 0060 0C20A0E3 		mov	r2, #12	@,
 567 0064 FEFFFFEB 		bl	memset	@
 367:fat16.cpp     ****     arg.entry_num = entry_num;
 568              		.loc 1 367 0
 569 0068 B231DDE1 		ldrh	r3, [sp, #18]	@ movhi	@ tmp161, entry_num
 570 006c BE33CDE1 		strh	r3, [sp, #62]	@ movhi	@ tmp161, arg.entry_num
 368:fat16.cpp     ****     if(!device_read_interval(header->root_dir_offset,
 369:fat16.cpp     ****         buffer,
 370:fat16.cpp     ****        sizeof(buffer),
 371:fat16.cpp     ****        header->cluster_zero_offset - header->root_dir_offset,
 372:fat16.cpp     ****        fat16_dir_entry_seek_callback,
 373:fat16.cpp     ****        &arg) ||
 571              		.loc 1 373 0
 572 0070 4C309DE5 		ldr	r3, [sp, #76]	@ tmp162, header
 573 0074 101093E5 		ldr	r1, [r3, #16]	@ D.11784, header_6->root_dir_offset
 574 0078 4C309DE5 		ldr	r3, [sp, #76]	@ tmp163, header
 575 007c 143093E5 		ldr	r3, [r3, #20]	@ D.11785, header_6->cluster_zero_offset
 576 0080 0338A0E1 		mov	r3, r3, asl #16	@ tmp164, D.11785,
 577 0084 2328A0E1 		mov	r2, r3, lsr #16	@ D.11786, tmp164,
 578 0088 4C309DE5 		ldr	r3, [sp, #76]	@ tmp165, header
ARM GAS  /tmp/ccwDRvq0.s 			page 18


 579 008c 103093E5 		ldr	r3, [r3, #16]	@ D.11787, header_6->root_dir_offset
 580 0090 0338A0E1 		mov	r3, r3, asl #16	@ tmp166, D.11787,
 581 0094 2338A0E1 		mov	r3, r3, lsr #16	@ D.11788, tmp166,
 582 0098 023063E0 		rsb	r3, r3, r2	@ tmp167, D.11788, D.11786
 583 009c 0338A0E1 		mov	r3, r3, asl #16	@ tmp168, tmp167,
 584 00a0 2338A0E1 		mov	r3, r3, lsr #16	@ D.11789, tmp168,
 585 00a4 1C208DE2 		add	r2, sp, #28	@ tmp169,,
 586 00a8 E8009FE5 		ldr	r0, .L36	@ tmp170,
 587 00ac 00008DE5 		str	r0, [sp, #0]	@ tmp170,
 588 00b0 3C008DE2 		add	r0, sp, #60	@ tmp171,,
 589 00b4 04008DE5 		str	r0, [sp, #4]	@ tmp171,
 590 00b8 48C09DE5 		ldr	ip, [sp, #72]	@ tmp172, device_read_interval
 591 00bc 0100A0E1 		mov	r0, r1	@, D.11784
 592 00c0 0210A0E1 		mov	r1, r2	@, tmp169
 593 00c4 2020A0E3 		mov	r2, #32	@,
 594 00c8 0FE0A0E1 		mov	lr, pc
 595 00cc 1CFF2FE1 		bx	ip	@ tmp172
 596 00d0 0030A0E1 		mov	r3, r0	@ tmp173,
 368:fat16.cpp     ****     if(!device_read_interval(header->root_dir_offset,
 597              		.loc 1 368 0
 598 00d4 000053E3 		cmp	r3, #0	@ D.11790,
 599 00d8 0200000A 		beq	.L29	@,
 368:fat16.cpp     ****     if(!device_read_interval(header->root_dir_offset,
 600              		.loc 1 368 0 is_stmt 0 discriminator 2
 601 00dc 40309DE5 		ldr	r3, [sp, #64]	@ D.11792, arg.entry_offset
 602 00e0 000053E3 		cmp	r3, #0	@ D.11792,
 603 00e4 0100001A 		bne	.L30	@,
 604              	.L29:
 368:fat16.cpp     ****     if(!device_read_interval(header->root_dir_offset,
 605              		.loc 1 368 0 discriminator 1
 606 00e8 0130A0E3 		mov	r3, #1	@ iftmp.41,
 607 00ec 000000EA 		b	.L31	@
 608              	.L30:
 368:fat16.cpp     ****     if(!device_read_interval(header->root_dir_offset,
 609              		.loc 1 368 0 discriminator 3
 610 00f0 0030A0E3 		mov	r3, #0	@ iftmp.41,
 611              	.L31:
 368:fat16.cpp     ****     if(!device_read_interval(header->root_dir_offset,
 612              		.loc 1 368 0 discriminator 4
 613 00f4 000053E3 		cmp	r3, #0	@ retval.40,
 614 00f8 0100000A 		beq	.L32	@,
 374:fat16.cpp     ****        arg.entry_offset == 0
 375:fat16.cpp     ****        )
 376:fat16.cpp     ****     return 0;
 615              		.loc 1 376 0 is_stmt 1
 616 00fc 0030A0E3 		mov	r3, #0	@ D.11777,
 617 0100 200000EA 		b	.L28	@
 618              	.L32:
 377:fat16.cpp     **** 
 378:fat16.cpp     ****     /* read entry */
 379:fat16.cpp     ****     memset(dir_entry, 0, sizeof(*dir_entry));
 619              		.loc 1 379 0
 620 0104 0C009DE5 		ldr	r0, [sp, #12]	@, dir_entry
 621 0108 0010A0E3 		mov	r1, #0	@,
 622 010c 2C20A0E3 		mov	r2, #44	@,
 623 0110 FEFFFFEB 		bl	memset	@
 380:fat16.cpp     ****     if(!device_read_interval(arg.entry_offset,
ARM GAS  /tmp/ccwDRvq0.s 			page 19


 381:fat16.cpp     ****         buffer,
 382:fat16.cpp     ****        sizeof(buffer),
 383:fat16.cpp     ****        arg.byte_count,
 384:fat16.cpp     ****        fat16_dir_entry_read_callback,
 385:fat16.cpp     ****        dir_entry))
 624              		.loc 1 385 0
 625 0114 40109DE5 		ldr	r1, [sp, #64]	@ D.11796, arg.entry_offset
 626 0118 4430DDE5 		ldrb	r3, [sp, #68]	@ zero_extendqisi2	@ D.11797, arg.byte_count
 627 011c 1C208DE2 		add	r2, sp, #28	@ tmp174,,
 628 0120 74009FE5 		ldr	r0, .L36+4	@ tmp175,
 629 0124 00008DE5 		str	r0, [sp, #0]	@ tmp175,
 630 0128 0C009DE5 		ldr	r0, [sp, #12]	@ tmp176, dir_entry
 631 012c 04008DE5 		str	r0, [sp, #4]	@ tmp176,
 632 0130 48C09DE5 		ldr	ip, [sp, #72]	@ tmp177, device_read_interval
 633 0134 0100A0E1 		mov	r0, r1	@, D.11796
 634 0138 0210A0E1 		mov	r1, r2	@, tmp174
 635 013c 2020A0E3 		mov	r2, #32	@,
 636 0140 0FE0A0E1 		mov	lr, pc
 637 0144 1CFF2FE1 		bx	ip	@ tmp177
 638 0148 0030A0E1 		mov	r3, r0	@ tmp178,
 380:fat16.cpp     ****     if(!device_read_interval(arg.entry_offset,
 639              		.loc 1 380 0
 640 014c 000053E3 		cmp	r3, #0	@ D.11799,
 641 0150 0030A013 		movne	r3, #0	@, tmp180
 642 0154 0130A003 		moveq	r3, #1	@, tmp180
 643 0158 FF3003E2 		and	r3, r3, #255	@ retval.42, tmp179,
 644 015c 000053E3 		cmp	r3, #0	@ retval.42,
 645 0160 0100000A 		beq	.L33	@,
 386:fat16.cpp     ****     return 0;
 646              		.loc 1 386 0
 647 0164 0030A0E3 		mov	r3, #0	@ D.11777,
 648 0168 060000EA 		b	.L28	@
 649              	.L33:
 387:fat16.cpp     **** 
 388:fat16.cpp     ****     return dir_entry->long_name[0] != '\0' ? 1 : 0;
 650              		.loc 1 388 0
 651 016c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp181, dir_entry
 652 0170 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11803, dir_entry_5(D)->long_name
 653 0174 000053E3 		cmp	r3, #0	@ D.11803,
 654 0178 0100000A 		beq	.L34	@,
 655              		.loc 1 388 0 is_stmt 0 discriminator 1
 656 017c 0130A0E3 		mov	r3, #1	@ iftmp.43,
 657 0180 000000EA 		b	.L35	@
 658              	.L34:
 659              		.loc 1 388 0 discriminator 2
 660 0184 0030A0E3 		mov	r3, #0	@ iftmp.43,
 661              	.L35:
 662              	.L28:
 663              	.LBE4:
 389:fat16.cpp     **** }
 664              		.loc 1 389 0 is_stmt 1
 665 0188 0300A0E1 		mov	r0, r3	@, <retval>
 666 018c 54D08DE2 		add	sp, sp, #84	@,,
 667 0190 04E09DE4 		ldr	lr, [sp], #4
 668 0194 1EFF2FE1 		bx	lr
 669              	.L37:
 670              		.align	2
ARM GAS  /tmp/ccwDRvq0.s 			page 20


 671              	.L36:
 672 0198 00000000 		.word	_ZL29fat16_dir_entry_seek_callbackPhmPv
 673 019c 00000000 		.word	_ZL29fat16_dir_entry_read_callbackPhmPv
 674              		.cfi_endproc
 675              	.LFE112:
 676              		.size	_ZL25fat16_read_root_dir_entryPK15fat16_fs_structtP22fat16_dir_entry_struct, .-_ZL25fat16_re
 677              		.section	.text._ZL24fat16_read_sub_dir_entryPK15fat16_fs_structtPK22fat16_dir_entry_structPS2_,"ax
 678              		.align	2
 679              		.type	_ZL24fat16_read_sub_dir_entryPK15fat16_fs_structtPK22fat16_dir_entry_structPS2_, %function
 680              	_ZL24fat16_read_sub_dir_entryPK15fat16_fs_structtPK22fat16_dir_entry_structPS2_:
 681              	.LFB113:
 390:fat16.cpp     **** 
 391:fat16.cpp     **** /**
 392:fat16.cpp     ****  * \ingroup fat16_fs
 393:fat16.cpp     ****  * Reads a directory entry of a given parent directory.
 394:fat16.cpp     ****  *
 395:fat16.cpp     ****  * \param[in] fs Descriptor of file system to use.
 396:fat16.cpp     ****  * \param[in] entry_num The index of the directory entry to read.
 397:fat16.cpp     ****  * \param[in] parent Directory entry descriptor in which to read directory entry.
 398:fat16.cpp     ****  * \param[out] dir_entry Directory entry descriptor which will get filled.
 399:fat16.cpp     ****  * \returns 0 on failure, 1 on success
 400:fat16.cpp     ****  * \see fat16_read_root_dir_entry, fat16_read_dir_entry_by_path
 401:fat16.cpp     ****  */
 402:fat16.cpp     **** uint8_t fat16_read_sub_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, const struct
 403:fat16.cpp     **** {
 682              		.loc 1 403 0
 683              		.cfi_startproc
 684              		@ Function supports interworking.
 685              		@ args = 0, pretend = 0, frame = 72
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 688              	.LCFI8:
 689              		.cfi_def_cfa_offset 4
 690 0004 54D04DE2 		sub	sp, sp, #84	@,,
 691              	.LCFI9:
 692              		.cfi_def_cfa_offset 88
 693 0008 14008DE5 		str	r0, [sp, #20]	@ fs, fs
 694 000c 0C208DE5 		str	r2, [sp, #12]	@ parent, parent
 695 0010 08308DE5 		str	r3, [sp, #8]	@ dir_entry, dir_entry
 696 0014 B211CDE1 		strh	r1, [sp, #18]	@ movhi	@ tmp159, entry_num
 697              	.LBB5:
 404:fat16.cpp     ****     if(!fs || !parent || !dir_entry)
 698              		.loc 1 404 0
 699 0018 14309DE5 		ldr	r3, [sp, #20]	@ tmp160, fs
 700 001c 000053E3 		cmp	r3, #0	@ tmp160,
 701 0020 0500000A 		beq	.L39	@,
 702              		.cfi_offset 14, -4
 703              		.loc 1 404 0 is_stmt 0 discriminator 1
 704 0024 0C309DE5 		ldr	r3, [sp, #12]	@ tmp161, parent
 705 0028 000053E3 		cmp	r3, #0	@ tmp161,
 706 002c 0200000A 		beq	.L39	@,
 707              		.loc 1 404 0 discriminator 2
 708 0030 08309DE5 		ldr	r3, [sp, #8]	@ tmp162, dir_entry
 709 0034 000053E3 		cmp	r3, #0	@ tmp162,
 710 0038 0100001A 		bne	.L40	@,
 711              	.L39:
 405:fat16.cpp     ****         return 0;
ARM GAS  /tmp/ccwDRvq0.s 			page 21


 712              		.loc 1 405 0 is_stmt 1
 713 003c 0030A0E3 		mov	r3, #0	@ D.11732,
 714 0040 6A0000EA 		b	.L41	@
 715              	.L40:
 406:fat16.cpp     **** 
 407:fat16.cpp     ****     /* we are in a parent directory and want to search within its directory entry table */
 408:fat16.cpp     ****     if(!(parent->attributes & FAT16_ATTRIB_DIR))
 716              		.loc 1 408 0
 717 0044 0C309DE5 		ldr	r3, [sp, #12]	@ tmp163, parent
 718 0048 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.11733, parent_5(D)->attributes
 719 004c 103003E2 		and	r3, r3, #16	@ D.11735, D.11734,
 720 0050 000053E3 		cmp	r3, #0	@ D.11735,
 721 0054 0100001A 		bne	.L42	@,
 409:fat16.cpp     ****         return 0;
 722              		.loc 1 409 0
 723 0058 0030A0E3 		mov	r3, #0	@ D.11732,
 724 005c 630000EA 		b	.L41	@
 725              	.L42:
 410:fat16.cpp     **** 
 411:fat16.cpp     ****     /* loop through all clusters of the directory */
 412:fat16.cpp     ****     uint8_t buffer[32];
 413:fat16.cpp     ****     uint32_t cluster_offset;
 414:fat16.cpp     ****     uint16_t cluster_size = fs->header.cluster_size;
 726              		.loc 1 414 0
 727 0060 14309DE5 		ldr	r3, [sp, #20]	@ tmp164, fs
 728 0064 B231D3E1 		ldrh	r3, [r3, #18]	@ movhi	@ tmp165, fs_4(D)->header.cluster_size
 729 0068 BC34CDE1 		strh	r3, [sp, #76]	@ movhi	@ tmp165, cluster_size
 415:fat16.cpp     ****     uint16_t cluster_num = parent->cluster;
 730              		.loc 1 415 0
 731 006c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp166, parent
 732 0070 B232D3E1 		ldrh	r3, [r3, #34]	@ movhi	@ tmp167, parent_5(D)->cluster
 733 0074 BE34CDE1 		strh	r3, [sp, #78]	@ movhi	@ tmp167, cluster_num
 734 0078 000000EA 		b	.L48	@
 735              	.L52:
 416:fat16.cpp     ****     struct fat16_read_callback_arg arg;
 417:fat16.cpp     **** 
 418:fat16.cpp     ****     while(1)
 736              		.loc 1 418 0
 737 007c 0000A0E1 		mov	r0, r0	@ nop
 738              	.L48:
 419:fat16.cpp     ****     {
 420:fat16.cpp     ****         /* calculate new cluster offset */
 421:fat16.cpp     ****         cluster_offset = fs->header.cluster_zero_offset + (uint32_t) (cluster_num - 2) * cluster_si
 739              		.loc 1 421 0
 740 0080 14309DE5 		ldr	r3, [sp, #20]	@ tmp168, fs
 741 0084 182093E5 		ldr	r2, [r3, #24]	@ D.11741, fs_4(D)->header.cluster_zero_offset
 742 0088 BE34DDE1 		ldrh	r3, [sp, #78]	@ D.11742, cluster_num
 743 008c 023043E2 		sub	r3, r3, #2	@ D.11743, D.11742,
 744 0090 BC14DDE1 		ldrh	r1, [sp, #76]	@ D.11745, cluster_size
 745 0094 910303E0 		mul	r3, r1, r3	@ D.11746, D.11745, D.11744
 746 0098 033082E0 		add	r3, r2, r3	@ tmp169, D.11741, D.11746
 747 009c 48308DE5 		str	r3, [sp, #72]	@ tmp169, cluster_offset
 422:fat16.cpp     **** 
 423:fat16.cpp     ****         /* seek to the n-th entry */
 424:fat16.cpp     ****         memset(&arg, 0, sizeof(arg));
 748              		.loc 1 424 0
 749 00a0 3C308DE2 		add	r3, sp, #60	@ tmp170,,
ARM GAS  /tmp/ccwDRvq0.s 			page 22


 750 00a4 0300A0E1 		mov	r0, r3	@, tmp170
 751 00a8 0010A0E3 		mov	r1, #0	@,
 752 00ac 0C20A0E3 		mov	r2, #12	@,
 753 00b0 FEFFFFEB 		bl	memset	@
 425:fat16.cpp     ****         arg.entry_num = entry_num;
 754              		.loc 1 425 0
 755 00b4 B231DDE1 		ldrh	r3, [sp, #18]	@ movhi	@ tmp171, entry_num
 756 00b8 BE33CDE1 		strh	r3, [sp, #62]	@ movhi	@ tmp171, arg.entry_num
 426:fat16.cpp     ****         if(!fs->partition->device_read_interval(cluster_offset,
 427:fat16.cpp     ****             buffer,
 428:fat16.cpp     ****            sizeof(buffer),
 429:fat16.cpp     ****            cluster_size,
 430:fat16.cpp     ****            fat16_dir_entry_seek_callback,
 431:fat16.cpp     ****            &arg)
 757              		.loc 1 431 0
 758 00bc 14309DE5 		ldr	r3, [sp, #20]	@ tmp172, fs
 759 00c0 003093E5 		ldr	r3, [r3, #0]	@ D.11748, fs_4(D)->partition
 760 00c4 04C093E5 		ldr	ip, [r3, #4]	@ D.11749, D.11748_21->device_read_interval
 761 00c8 1C208DE2 		add	r2, sp, #28	@ tmp173,,
 762 00cc BC34DDE1 		ldrh	r3, [sp, #76]	@ tmp174, cluster_size
 763 00d0 28119FE5 		ldr	r1, .L53	@ tmp175,
 764 00d4 00108DE5 		str	r1, [sp, #0]	@ tmp175,
 765 00d8 3C108DE2 		add	r1, sp, #60	@ tmp176,,
 766 00dc 04108DE5 		str	r1, [sp, #4]	@ tmp176,
 767 00e0 48009DE5 		ldr	r0, [sp, #72]	@, cluster_offset
 768 00e4 0210A0E1 		mov	r1, r2	@, tmp173
 769 00e8 2020A0E3 		mov	r2, #32	@,
 770 00ec 0FE0A0E1 		mov	lr, pc
 771 00f0 1CFF2FE1 		bx	ip	@ D.11749
 772 00f4 0030A0E1 		mov	r3, r0	@ tmp177,
 426:fat16.cpp     ****         if(!fs->partition->device_read_interval(cluster_offset,
 773              		.loc 1 426 0
 774 00f8 000053E3 		cmp	r3, #0	@ D.11750,
 775 00fc 0030A013 		movne	r3, #0	@, tmp179
 776 0100 0130A003 		moveq	r3, #1	@, tmp179
 777 0104 FF3003E2 		and	r3, r3, #255	@ retval.36, tmp178,
 778 0108 000053E3 		cmp	r3, #0	@ retval.36,
 779 010c 0100000A 		beq	.L43	@,
 432:fat16.cpp     ****            )
 433:fat16.cpp     ****         return 0;
 780              		.loc 1 433 0
 781 0110 0030A0E3 		mov	r3, #0	@ D.11732,
 782 0114 350000EA 		b	.L41	@
 783              	.L43:
 434:fat16.cpp     **** 
 435:fat16.cpp     ****         /* check if we found the entry */
 436:fat16.cpp     ****         if(arg.entry_offset)
 784              		.loc 1 436 0
 785 0118 40309DE5 		ldr	r3, [sp, #64]	@ D.11753, arg.entry_offset
 786 011c 000053E3 		cmp	r3, #0	@ D.11753,
 787 0120 1A00000A 		beq	.L44	@,
 437:fat16.cpp     ****             break;
 438:fat16.cpp     **** 
 439:fat16.cpp     ****         /* get number of next cluster */
 440:fat16.cpp     ****         if(!(cluster_num = fat16_get_next_cluster(fs, cluster_num)))
 441:fat16.cpp     ****             return 0; /* directory entry not found */
 442:fat16.cpp     ****     }
ARM GAS  /tmp/ccwDRvq0.s 			page 23


 443:fat16.cpp     **** 
 444:fat16.cpp     ****     memset(dir_entry, 0, sizeof(*dir_entry));
 788              		.loc 1 444 0
 789 0124 08009DE5 		ldr	r0, [sp, #8]	@, dir_entry
 790 0128 0010A0E3 		mov	r1, #0	@,
 791 012c 2C20A0E3 		mov	r2, #44	@,
 792 0130 FEFFFFEB 		bl	memset	@
 445:fat16.cpp     **** 
 446:fat16.cpp     ****     /* read entry */
 447:fat16.cpp     ****     if(!fs->partition->device_read_interval(arg.entry_offset,
 448:fat16.cpp     ****         buffer,
 449:fat16.cpp     ****        sizeof(buffer),
 450:fat16.cpp     ****        arg.byte_count,
 451:fat16.cpp     ****        fat16_dir_entry_read_callback,
 452:fat16.cpp     ****        dir_entry))
 793              		.loc 1 452 0
 794 0134 14309DE5 		ldr	r3, [sp, #20]	@ tmp180, fs
 795 0138 003093E5 		ldr	r3, [r3, #0]	@ D.11760, fs_4(D)->partition
 796 013c 04C093E5 		ldr	ip, [r3, #4]	@ D.11761, D.11760_27->device_read_interval
 797 0140 40109DE5 		ldr	r1, [sp, #64]	@ D.11762, arg.entry_offset
 798 0144 4430DDE5 		ldrb	r3, [sp, #68]	@ zero_extendqisi2	@ D.11763, arg.byte_count
 799 0148 1C208DE2 		add	r2, sp, #28	@ tmp181,,
 800 014c B0009FE5 		ldr	r0, .L53+4	@ tmp182,
 801 0150 00008DE5 		str	r0, [sp, #0]	@ tmp182,
 802 0154 08009DE5 		ldr	r0, [sp, #8]	@ tmp183, dir_entry
 803 0158 04008DE5 		str	r0, [sp, #4]	@ tmp183,
 804 015c 0100A0E1 		mov	r0, r1	@, D.11762
 805 0160 0210A0E1 		mov	r1, r2	@, tmp181
 806 0164 2020A0E3 		mov	r2, #32	@,
 807 0168 0FE0A0E1 		mov	lr, pc
 808 016c 1CFF2FE1 		bx	ip	@ D.11761
 809 0170 0030A0E1 		mov	r3, r0	@ tmp184,
 447:fat16.cpp     ****     if(!fs->partition->device_read_interval(arg.entry_offset,
 810              		.loc 1 447 0
 811 0174 000053E3 		cmp	r3, #0	@ D.11765,
 812 0178 0030A013 		movne	r3, #0	@, tmp186
 813 017c 0130A003 		moveq	r3, #1	@, tmp186
 814 0180 FF3003E2 		and	r3, r3, #255	@ retval.38, tmp185,
 815 0184 000053E3 		cmp	r3, #0	@ retval.38,
 816 0188 0F00001A 		bne	.L45	@,
 817 018c 100000EA 		b	.L51	@
 818              	.L44:
 440:fat16.cpp     ****         if(!(cluster_num = fat16_get_next_cluster(fs, cluster_num)))
 819              		.loc 1 440 0
 820 0190 BE34DDE1 		ldrh	r3, [sp, #78]	@ tmp187, cluster_num
 821 0194 14009DE5 		ldr	r0, [sp, #20]	@, fs
 822 0198 0310A0E1 		mov	r1, r3	@, tmp187
 823 019c FEFFFFEB 		bl	_ZL22fat16_get_next_clusterPK15fat16_fs_structt	@
 824 01a0 0030A0E1 		mov	r3, r0	@ tmp188,
 825 01a4 BE34CDE1 		strh	r3, [sp, #78]	@ movhi	@ tmp188, cluster_num
 826 01a8 BE34DDE1 		ldrh	r3, [sp, #78]	@ tmp190, cluster_num
 827 01ac 000053E3 		cmp	r3, #0	@ tmp190,
 828 01b0 0030A013 		movne	r3, #0	@, tmp191
 829 01b4 0130A003 		moveq	r3, #1	@, tmp191
 830 01b8 FF3003E2 		and	r3, r3, #255	@ retval.37, tmp189,
 831 01bc 000053E3 		cmp	r3, #0	@ retval.37,
 832 01c0 ADFFFF0A 		beq	.L52	@,
ARM GAS  /tmp/ccwDRvq0.s 			page 24


 441:fat16.cpp     ****             return 0; /* directory entry not found */
 833              		.loc 1 441 0
 834 01c4 0030A0E3 		mov	r3, #0	@ D.11732,
 835 01c8 080000EA 		b	.L41	@
 836              	.L45:
 453:fat16.cpp     ****     return 0;
 837              		.loc 1 453 0
 838 01cc 0030A0E3 		mov	r3, #0	@ D.11732,
 839 01d0 060000EA 		b	.L41	@
 840              	.L51:
 454:fat16.cpp     **** 
 455:fat16.cpp     ****     return dir_entry->long_name[0] != '\0' ? 1 : 0;
 841              		.loc 1 455 0
 842 01d4 08309DE5 		ldr	r3, [sp, #8]	@ tmp192, dir_entry
 843 01d8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11769, dir_entry_6(D)->long_name
 844 01dc 000053E3 		cmp	r3, #0	@ D.11769,
 845 01e0 0100000A 		beq	.L49	@,
 846              		.loc 1 455 0 is_stmt 0 discriminator 1
 847 01e4 0130A0E3 		mov	r3, #1	@ iftmp.39,
 848 01e8 000000EA 		b	.L50	@
 849              	.L49:
 850              		.loc 1 455 0 discriminator 2
 851 01ec 0030A0E3 		mov	r3, #0	@ iftmp.39,
 852              	.L50:
 853              	.L41:
 854              	.LBE5:
 456:fat16.cpp     **** }
 855              		.loc 1 456 0 is_stmt 1
 856 01f0 0300A0E1 		mov	r0, r3	@, <retval>
 857 01f4 54D08DE2 		add	sp, sp, #84	@,,
 858 01f8 04E09DE4 		ldr	lr, [sp], #4
 859 01fc 1EFF2FE1 		bx	lr
 860              	.L54:
 861              		.align	2
 862              	.L53:
 863 0200 00000000 		.word	_ZL29fat16_dir_entry_seek_callbackPhmPv
 864 0204 00000000 		.word	_ZL29fat16_dir_entry_read_callbackPhmPv
 865              		.cfi_endproc
 866              	.LFE113:
 867              		.size	_ZL24fat16_read_sub_dir_entryPK15fat16_fs_structtPK22fat16_dir_entry_structPS2_, .-_ZL24fat1
 868              		.section	.text._ZL29fat16_dir_entry_seek_callbackPhmPv,"ax",%progbits
 869              		.align	2
 870              		.type	_ZL29fat16_dir_entry_seek_callbackPhmPv, %function
 871              	_ZL29fat16_dir_entry_seek_callbackPhmPv:
 872              	.LFB114:
 457:fat16.cpp     **** 
 458:fat16.cpp     **** /**
 459:fat16.cpp     ****  * \ingroup fat16_fs
 460:fat16.cpp     ****  * Callback function for seeking through subdirectory entries.
 461:fat16.cpp     ****  */
 462:fat16.cpp     **** uint8_t fat16_dir_entry_seek_callback(uint8_t* buffer, uint32_t offset, void* p)
 463:fat16.cpp     **** {
 873              		.loc 1 463 0
 874              		.cfi_startproc
 875              		@ Function supports interworking.
 876              		@ args = 0, pretend = 0, frame = 24
 877              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwDRvq0.s 			page 25


 878              		@ link register save eliminated.
 879 0000 18D04DE2 		sub	sp, sp, #24	@,,
 880              	.LCFI10:
 881              		.cfi_def_cfa_offset 24
 882 0004 0C008DE5 		str	r0, [sp, #12]	@ buffer, buffer
 883 0008 08108DE5 		str	r1, [sp, #8]	@ offset, offset
 884 000c 04208DE5 		str	r2, [sp, #4]	@ p, p
 885              	.LBB6:
 464:fat16.cpp     ****     struct fat16_read_callback_arg* arg = (fat16_read_callback_arg*)p;
 886              		.loc 1 464 0
 887 0010 04309DE5 		ldr	r3, [sp, #4]	@ tmp151, p
 888 0014 14308DE5 		str	r3, [sp, #20]	@ tmp151, arg
 465:fat16.cpp     **** 
 466:fat16.cpp     ****     /* skip deleted or empty entries */
 467:fat16.cpp     ****     if(buffer[0] == FAT16_DIRENTRY_DELETED || !buffer[0])
 889              		.loc 1 467 0
 890 0018 0C309DE5 		ldr	r3, [sp, #12]	@ tmp152, buffer
 891 001c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11701,
 892 0020 E50053E3 		cmp	r3, #229	@ D.11701,
 893 0024 0300000A 		beq	.L56	@,
 894              		.loc 1 467 0 is_stmt 0 discriminator 1
 895 0028 0C309DE5 		ldr	r3, [sp, #12]	@ tmp153, buffer
 896 002c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11703,
 897 0030 000053E3 		cmp	r3, #0	@ D.11703,
 898 0034 0100001A 		bne	.L57	@,
 899              	.L56:
 468:fat16.cpp     ****         return 1;
 900              		.loc 1 468 0 is_stmt 1
 901 0038 0130A0E3 		mov	r3, #1	@ D.11704,
 902 003c 270000EA 		b	.L58	@
 903              	.L57:
 469:fat16.cpp     **** 
 470:fat16.cpp     ****     if(arg->entry_cur == arg->entry_num)
 904              		.loc 1 470 0
 905 0040 14309DE5 		ldr	r3, [sp, #20]	@ tmp154, arg
 906 0044 B020D3E1 		ldrh	r2, [r3, #0]	@ D.11705, arg_4->entry_cur
 907 0048 14309DE5 		ldr	r3, [sp, #20]	@ tmp155, arg
 908 004c B230D3E1 		ldrh	r3, [r3, #2]	@ D.11706, arg_4->entry_num
 909 0050 030052E1 		cmp	r2, r3	@ D.11705, D.11706
 910 0054 1400001A 		bne	.L59	@,
 471:fat16.cpp     ****     {
 472:fat16.cpp     ****         arg->entry_offset = offset;
 911              		.loc 1 472 0
 912 0058 14309DE5 		ldr	r3, [sp, #20]	@ tmp156, arg
 913 005c 08209DE5 		ldr	r2, [sp, #8]	@ tmp157, offset
 914 0060 042083E5 		str	r2, [r3, #4]	@ tmp157, arg_4->entry_offset
 473:fat16.cpp     ****         arg->byte_count = buffer[11] == 0x0f ?
 915              		.loc 1 473 0
 916 0064 0C309DE5 		ldr	r3, [sp, #12]	@ tmp158, buffer
 917 0068 0B3083E2 		add	r3, r3, #11	@ D.11710, tmp158,
 918 006c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11711,* D.11710
 474:fat16.cpp     ****         ((buffer[0] & FAT16_DIRENTRY_LFNSEQMASK) + 1) * 32 :
 475:fat16.cpp     ****         32;
 919              		.loc 1 475 0
 920 0070 0F0053E3 		cmp	r3, #15	@ D.11711,
 921 0074 0700001A 		bne	.L60	@,
 474:fat16.cpp     ****         ((buffer[0] & FAT16_DIRENTRY_LFNSEQMASK) + 1) * 32 :
ARM GAS  /tmp/ccwDRvq0.s 			page 26


 922              		.loc 1 474 0
 923 0078 0C309DE5 		ldr	r3, [sp, #12]	@ tmp159, buffer
 924 007c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11714,
 925              		.loc 1 475 0
 926 0080 3F3003E2 		and	r3, r3, #63	@ D.11716, D.11715,
 927 0084 013083E2 		add	r3, r3, #1	@ D.11717, D.11716,
 928 0088 FF3003E2 		and	r3, r3, #255	@ D.11718, D.11717,
 929 008c 8332A0E1 		mov	r3, r3, asl #5	@ tmp160, D.11718,
 930 0090 FF3003E2 		and	r3, r3, #255	@ iftmp.35, tmp160,
 931 0094 000000EA 		b	.L61	@
 932              	.L60:
 933              		.loc 1 475 0 is_stmt 0 discriminator 1
 934 0098 2030A0E3 		mov	r3, #32	@ iftmp.35,
 935              	.L61:
 936              		.loc 1 475 0 discriminator 2
 937 009c 14209DE5 		ldr	r2, [sp, #20]	@ tmp161, arg
 938 00a0 0830C2E5 		strb	r3, [r2, #8]	@ tmp162, arg_4->byte_count
 476:fat16.cpp     ****         return 0;
 939              		.loc 1 476 0 is_stmt 1 discriminator 2
 940 00a4 0030A0E3 		mov	r3, #0	@ D.11704,
 941 00a8 0C0000EA 		b	.L58	@
 942              	.L59:
 477:fat16.cpp     ****     }
 478:fat16.cpp     **** 
 479:fat16.cpp     ****     /* if we read a 8.3 entry, we reached a new directory entry */
 480:fat16.cpp     ****     if(buffer[11] != 0x0f)
 943              		.loc 1 480 0
 944 00ac 0C309DE5 		ldr	r3, [sp, #12]	@ tmp163, buffer
 945 00b0 0B3083E2 		add	r3, r3, #11	@ D.11720, tmp163,
 946 00b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11721,* D.11720
 947 00b8 0F0053E3 		cmp	r3, #15	@ D.11721,
 948 00bc 0600000A 		beq	.L62	@,
 481:fat16.cpp     ****         ++arg->entry_cur;
 949              		.loc 1 481 0
 950 00c0 14309DE5 		ldr	r3, [sp, #20]	@ tmp164, arg
 951 00c4 B030D3E1 		ldrh	r3, [r3, #0]	@ D.11724, arg_4->entry_cur
 952 00c8 013083E2 		add	r3, r3, #1	@ tmp165, D.11724,
 953 00cc 0338A0E1 		mov	r3, r3, asl #16	@ tmp166, tmp165,
 954 00d0 2328A0E1 		mov	r2, r3, lsr #16	@ D.11725, tmp166,
 955 00d4 14309DE5 		ldr	r3, [sp, #20]	@ tmp167, arg
 956 00d8 B020C3E1 		strh	r2, [r3, #0]	@ movhi	@ D.11725, arg_4->entry_cur
 957              	.L62:
 482:fat16.cpp     **** 
 483:fat16.cpp     ****     return 1;
 958              		.loc 1 483 0
 959 00dc 0130A0E3 		mov	r3, #1	@ D.11704,
 960              	.L58:
 961              	.LBE6:
 484:fat16.cpp     **** }
 962              		.loc 1 484 0
 963 00e0 0300A0E1 		mov	r0, r3	@, <retval>
 964 00e4 18D08DE2 		add	sp, sp, #24	@,,
 965 00e8 1EFF2FE1 		bx	lr
 966              		.cfi_endproc
 967              	.LFE114:
 968              		.size	_ZL29fat16_dir_entry_seek_callbackPhmPv, .-_ZL29fat16_dir_entry_seek_callbackPhmPv
 969              		.section	.text._ZL29fat16_dir_entry_read_callbackPhmPv,"ax",%progbits
ARM GAS  /tmp/ccwDRvq0.s 			page 27


 970              		.align	2
 971              		.type	_ZL29fat16_dir_entry_read_callbackPhmPv, %function
 972              	_ZL29fat16_dir_entry_read_callbackPhmPv:
 973              	.LFB115:
 485:fat16.cpp     **** 
 486:fat16.cpp     **** /**
 487:fat16.cpp     ****  * \ingroup fat16_fs
 488:fat16.cpp     ****  * Callback function for reading a directory entry.
 489:fat16.cpp     ****  */
 490:fat16.cpp     **** uint8_t fat16_dir_entry_read_callback(uint8_t* buffer, uint32_t offset, void* p)
 491:fat16.cpp     **** {
 974              		.loc 1 491 0
 975              		.cfi_startproc
 976              		@ Function supports interworking.
 977              		@ args = 0, pretend = 0, frame = 24
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 980              	.LCFI11:
 981              		.cfi_def_cfa_offset 4
 982 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 983              	.LCFI12:
 984              		.cfi_def_cfa_offset 32
 985 0008 0C008DE5 		str	r0, [sp, #12]	@ buffer, buffer
 986 000c 08108DE5 		str	r1, [sp, #8]	@ offset, offset
 987 0010 04208DE5 		str	r2, [sp, #4]	@ p, p
 988              	.LBB7:
 492:fat16.cpp     ****     struct fat16_dir_entry_struct* dir_entry = (fat16_dir_entry_struct*)p;
 989              		.loc 1 492 0
 990 0014 04309DE5 		ldr	r3, [sp, #4]	@ tmp140, p
 991 0018 14308DE5 		str	r3, [sp, #20]	@ tmp140, dir_entry
 493:fat16.cpp     **** 
 494:fat16.cpp     ****     /* there should not be any deleted or empty entries */
 495:fat16.cpp     ****     if(buffer[0] == FAT16_DIRENTRY_DELETED || !buffer[0])
 992              		.loc 1 495 0
 993 001c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp141, buffer
 994 0020 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11686,
 995 0024 E50053E3 		cmp	r3, #229	@ D.11686,
 996 0028 0300000A 		beq	.L64	@,
 997              		.cfi_offset 14, -4
 998              		.loc 1 495 0 is_stmt 0 discriminator 1
 999 002c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp142, buffer
 1000 0030 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11688,
 1001 0034 000053E3 		cmp	r3, #0	@ D.11688,
 1002 0038 0100001A 		bne	.L65	@,
 1003              	.L64:
 496:fat16.cpp     ****         return 0;
 1004              		.loc 1 496 0 is_stmt 1
 1005 003c 0030A0E3 		mov	r3, #0	@ D.11689,
 1006 0040 170000EA 		b	.L66	@
 1007              	.L65:
 497:fat16.cpp     **** 
 498:fat16.cpp     ****     if(!dir_entry->entry_offset)
 1008              		.loc 1 498 0
 1009 0044 14309DE5 		ldr	r3, [sp, #20]	@ tmp143, dir_entry
 1010 0048 283093E5 		ldr	r3, [r3, #40]	@ D.11690, dir_entry_3->entry_offset
 1011 004c 000053E3 		cmp	r3, #0	@ D.11690,
 1012 0050 0200001A 		bne	.L67	@,
ARM GAS  /tmp/ccwDRvq0.s 			page 28


 499:fat16.cpp     ****         dir_entry->entry_offset = offset;
 1013              		.loc 1 499 0
 1014 0054 14309DE5 		ldr	r3, [sp, #20]	@ tmp144, dir_entry
 1015 0058 08209DE5 		ldr	r2, [sp, #8]	@ tmp145, offset
 1016 005c 282083E5 		str	r2, [r3, #40]	@ tmp145, dir_entry_3->entry_offset
 1017              	.L67:
 500:fat16.cpp     **** 
 501:fat16.cpp     ****     switch(fat16_interpret_dir_entry(dir_entry, buffer))
 1018              		.loc 1 501 0
 1019 0060 14009DE5 		ldr	r0, [sp, #20]	@, dir_entry
 1020 0064 0C109DE5 		ldr	r1, [sp, #12]	@, buffer
 1021 0068 FEFFFFEB 		bl	_ZL25fat16_interpret_dir_entryP22fat16_dir_entry_structPKh	@
 1022 006c 0030A0E1 		mov	r3, r0	@ tmp146,
 1023 0070 010053E3 		cmp	r3, #1	@ retval.34,
 1024 0074 0500000A 		beq	.L70	@,
 1025 0078 020053E3 		cmp	r3, #2	@ retval.34,
 1026 007c 0500000A 		beq	.L71	@,
 1027 0080 000053E3 		cmp	r3, #0	@ retval.34,
 1028 0084 0500001A 		bne	.L72	@,
 1029              	.L69:
 502:fat16.cpp     ****     {
 503:fat16.cpp     ****         case 0: /* failure */
 504:fat16.cpp     ****             return 0;
 1030              		.loc 1 504 0
 1031 0088 0030A0E3 		mov	r3, #0	@ D.11689,
 1032 008c 040000EA 		b	.L66	@
 1033              	.L70:
 505:fat16.cpp     ****             case 1: /* buffer successfully parsed, continue */
 506:fat16.cpp     ****             return 1;
 1034              		.loc 1 506 0
 1035 0090 0130A0E3 		mov	r3, #1	@ D.11689,
 1036 0094 020000EA 		b	.L66	@
 1037              	.L71:
 507:fat16.cpp     ****             case 2: /* directory entry complete, finish */
 508:fat16.cpp     ****             return 0;
 1038              		.loc 1 508 0
 1039 0098 0030A0E3 		mov	r3, #0	@ D.11689,
 1040 009c 000000EA 		b	.L66	@
 1041              	.L72:
 509:fat16.cpp     ****         }
 510:fat16.cpp     **** 
 511:fat16.cpp     ****     return 0;
 1042              		.loc 1 511 0
 1043 00a0 0030A0E3 		mov	r3, #0	@ D.11689,
 1044              	.L66:
 1045              	.LBE7:
 512:fat16.cpp     **** }
 1046              		.loc 1 512 0
 1047 00a4 0300A0E1 		mov	r0, r3	@, <retval>
 1048 00a8 1CD08DE2 		add	sp, sp, #28	@,,
 1049 00ac 04E09DE4 		ldr	lr, [sp], #4
 1050 00b0 1EFF2FE1 		bx	lr
 1051              		.cfi_endproc
 1052              	.LFE115:
 1053              		.size	_ZL29fat16_dir_entry_read_callbackPhmPv, .-_ZL29fat16_dir_entry_read_callbackPhmPv
 1054              		.section	.text._ZL25fat16_interpret_dir_entryP22fat16_dir_entry_structPKh,"ax",%progbits
 1055              		.align	2
ARM GAS  /tmp/ccwDRvq0.s 			page 29


 1056              		.type	_ZL25fat16_interpret_dir_entryP22fat16_dir_entry_structPKh, %function
 1057              	_ZL25fat16_interpret_dir_entryP22fat16_dir_entry_structPKh:
 1058              	.LFB116:
 513:fat16.cpp     **** 
 514:fat16.cpp     **** /**
 515:fat16.cpp     ****  * \ingroup fat16_fs
 516:fat16.cpp     ****  * Interprets a raw directory entry and puts the contained
 517:fat16.cpp     ****  * information into the directory entry.
 518:fat16.cpp     ****  *
 519:fat16.cpp     ****  * For a single file there may exist multiple directory
 520:fat16.cpp     ****  * entries. All except the last one are lfn entries, which
 521:fat16.cpp     ****  * contain parts of the long filename. The last directory
 522:fat16.cpp     ****  * entry is a traditional 8.3 style one. It contains all
 523:fat16.cpp     ****  * other information like size, cluster, date and time.
 524:fat16.cpp     ****  *
 525:fat16.cpp     ****  * \param[in,out] dir_entry The directory entry to fill.
 526:fat16.cpp     ****  * \param[in] raw_entry A pointer to 32 bytes of raw data.
 527:fat16.cpp     ****  * \returns 0 on failure, 1 on success and 2 if the
 528:fat16.cpp     ****  *          directory entry is complete.
 529:fat16.cpp     ****  */
 530:fat16.cpp     **** uint8_t fat16_interpret_dir_entry(struct fat16_dir_entry_struct* dir_entry, const uint8_t* raw_entr
 531:fat16.cpp     **** {
 1059              		.loc 1 531 0
 1060              		.cfi_startproc
 1061              		@ Function supports interworking.
 1062              		@ args = 0, pretend = 0, frame = 24
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              		@ link register save eliminated.
 1065 0000 18D04DE2 		sub	sp, sp, #24	@,,
 1066              	.LCFI13:
 1067              		.cfi_def_cfa_offset 24
 1068 0004 04008DE5 		str	r0, [sp, #4]	@ dir_entry, dir_entry
 1069 0008 00108DE5 		str	r1, [sp, #0]	@ raw_entry, raw_entry
 1070              	.LBB8:
 532:fat16.cpp     ****     if(!dir_entry || !raw_entry || !raw_entry[0])
 1071              		.loc 1 532 0
 1072 000c 04309DE5 		ldr	r3, [sp, #4]	@ tmp265, dir_entry
 1073 0010 000053E3 		cmp	r3, #0	@ tmp265,
 1074 0014 0600000A 		beq	.L74	@,
 1075              		.loc 1 532 0 is_stmt 0 discriminator 1
 1076 0018 00309DE5 		ldr	r3, [sp, #0]	@ tmp266, raw_entry
 1077 001c 000053E3 		cmp	r3, #0	@ tmp266,
 1078 0020 0300000A 		beq	.L74	@,
 1079              		.loc 1 532 0 discriminator 2
 1080 0024 00309DE5 		ldr	r3, [sp, #0]	@ tmp267, raw_entry
 1081 0028 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11528,
 1082 002c 000053E3 		cmp	r3, #0	@ D.11528,
 1083 0030 0100001A 		bne	.L75	@,
 1084              	.L74:
 533:fat16.cpp     ****         return 0;
 1085              		.loc 1 533 0 is_stmt 1
 1086 0034 0030A0E3 		mov	r3, #0	@ D.11529,
 1087 0038 FE0000EA 		b	.L76	@
 1088              	.L75:
 534:fat16.cpp     **** 
 535:fat16.cpp     ****     char* long_name = dir_entry->long_name;
 1089              		.loc 1 535 0
ARM GAS  /tmp/ccwDRvq0.s 			page 30


 1090 003c 04309DE5 		ldr	r3, [sp, #4]	@ tmp268, dir_entry
 1091 0040 10308DE5 		str	r3, [sp, #16]	@ tmp268, long_name
 1092              	.LBB9:
 536:fat16.cpp     ****     if(raw_entry[11] == 0x0f)
 1093              		.loc 1 536 0
 1094 0044 00309DE5 		ldr	r3, [sp, #0]	@ tmp269, raw_entry
 1095 0048 0B3083E2 		add	r3, r3, #11	@ D.11530, tmp269,
 1096 004c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11531,* D.11530
 1097 0050 0F0053E3 		cmp	r3, #15	@ D.11531,
 1098 0054 7800001A 		bne	.L77	@,
 1099              	.LBB10:
 537:fat16.cpp     ****     {
 538:fat16.cpp     ****         uint16_t char_offset = ((raw_entry[0] & 0x3f) - 1) * 13;
 1100              		.loc 1 538 0
 1101 0058 00309DE5 		ldr	r3, [sp, #0]	@ tmp270, raw_entry
 1102 005c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11534,
 1103 0060 3F3003E2 		and	r3, r3, #63	@ D.11536, D.11535,
 1104 0064 013043E2 		sub	r3, r3, #1	@ D.11537, D.11536,
 1105 0068 0338A0E1 		mov	r3, r3, asl #16	@ tmp271, D.11537,
 1106 006c 2338A0E1 		mov	r3, r3, lsr #16	@ D.11538, tmp271,
 1107 0070 0320A0E1 		mov	r2, r3	@ movhi	@ tmp273, tmp272
 1108 0074 8220A0E1 		mov	r2, r2, asl #1	@ tmp274, tmp273,
 1109 0078 032082E0 		add	r2, r2, r3	@ tmp276, tmp275, tmp272
 1110 007c 0221A0E1 		mov	r2, r2, asl #2	@ tmp278, tmp277,
 1111 0080 033082E0 		add	r3, r2, r3	@ tmp280, tmp279, tmp272
 1112 0084 BE30CDE1 		strh	r3, [sp, #14]	@ movhi	@ tmp280, char_offset
 539:fat16.cpp     **** 
 540:fat16.cpp     ****         if(char_offset + 12 < sizeof(dir_entry->long_name))
 1113              		.loc 1 540 0
 1114 0088 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11539, char_offset
 1115 008c 0C3083E2 		add	r3, r3, #12	@ D.11540, D.11539,
 1116 0090 1F0053E3 		cmp	r3, #31	@ D.11541,
 1117 0094 6600008A 		bhi	.L78	@,
 541:fat16.cpp     ****         {
 542:fat16.cpp     ****             /* Lfn supports unicode, but we do not, for now.
 543:fat16.cpp     ****                                                  * So we assume pure ascii and read only every
 544:fat16.cpp     ****                                                  * second byte.
 545:fat16.cpp     ****                                                  */
 546:fat16.cpp     ****             long_name[char_offset + 0] = raw_entry[1];
 1118              		.loc 1 546 0
 1119 0098 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11544, char_offset
 1120 009c 10209DE5 		ldr	r2, [sp, #16]	@ tmp281, long_name
 1121 00a0 033082E0 		add	r3, r2, r3	@ D.11545, tmp281, D.11544
 1122 00a4 00209DE5 		ldr	r2, [sp, #0]	@ tmp282, raw_entry
 1123 00a8 012082E2 		add	r2, r2, #1	@ D.11546, tmp282,
 1124 00ac 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11547,* D.11546
 1125 00b0 0020C3E5 		strb	r2, [r3, #0]	@ tmp283,* D.11545
 547:fat16.cpp     ****             long_name[char_offset + 1] = raw_entry[3];
 1126              		.loc 1 547 0
 1127 00b4 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11548, char_offset
 1128 00b8 013083E2 		add	r3, r3, #1	@ D.11549, D.11548,
 1129 00bc 10209DE5 		ldr	r2, [sp, #16]	@ tmp284, long_name
 1130 00c0 033082E0 		add	r3, r2, r3	@ D.11550, tmp284, D.11549
 1131 00c4 00209DE5 		ldr	r2, [sp, #0]	@ tmp285, raw_entry
 1132 00c8 032082E2 		add	r2, r2, #3	@ D.11551, tmp285,
 1133 00cc 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11552,* D.11551
 1134 00d0 0020C3E5 		strb	r2, [r3, #0]	@ tmp286,* D.11550
ARM GAS  /tmp/ccwDRvq0.s 			page 31


 548:fat16.cpp     ****             long_name[char_offset + 2] = raw_entry[5];
 1135              		.loc 1 548 0
 1136 00d4 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11553, char_offset
 1137 00d8 023083E2 		add	r3, r3, #2	@ D.11554, D.11553,
 1138 00dc 10209DE5 		ldr	r2, [sp, #16]	@ tmp287, long_name
 1139 00e0 033082E0 		add	r3, r2, r3	@ D.11555, tmp287, D.11554
 1140 00e4 00209DE5 		ldr	r2, [sp, #0]	@ tmp288, raw_entry
 1141 00e8 052082E2 		add	r2, r2, #5	@ D.11556, tmp288,
 1142 00ec 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11557,* D.11556
 1143 00f0 0020C3E5 		strb	r2, [r3, #0]	@ tmp289,* D.11555
 549:fat16.cpp     ****             long_name[char_offset + 3] = raw_entry[7];
 1144              		.loc 1 549 0
 1145 00f4 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11558, char_offset
 1146 00f8 033083E2 		add	r3, r3, #3	@ D.11559, D.11558,
 1147 00fc 10209DE5 		ldr	r2, [sp, #16]	@ tmp290, long_name
 1148 0100 033082E0 		add	r3, r2, r3	@ D.11560, tmp290, D.11559
 1149 0104 00209DE5 		ldr	r2, [sp, #0]	@ tmp291, raw_entry
 1150 0108 072082E2 		add	r2, r2, #7	@ D.11561, tmp291,
 1151 010c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11562,* D.11561
 1152 0110 0020C3E5 		strb	r2, [r3, #0]	@ tmp292,* D.11560
 550:fat16.cpp     ****             long_name[char_offset + 4] = raw_entry[9];
 1153              		.loc 1 550 0
 1154 0114 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11563, char_offset
 1155 0118 043083E2 		add	r3, r3, #4	@ D.11564, D.11563,
 1156 011c 10209DE5 		ldr	r2, [sp, #16]	@ tmp293, long_name
 1157 0120 033082E0 		add	r3, r2, r3	@ D.11565, tmp293, D.11564
 1158 0124 00209DE5 		ldr	r2, [sp, #0]	@ tmp294, raw_entry
 1159 0128 092082E2 		add	r2, r2, #9	@ D.11566, tmp294,
 1160 012c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11567,* D.11566
 1161 0130 0020C3E5 		strb	r2, [r3, #0]	@ tmp295,* D.11565
 551:fat16.cpp     ****             long_name[char_offset + 5] = raw_entry[14];
 1162              		.loc 1 551 0
 1163 0134 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11568, char_offset
 1164 0138 053083E2 		add	r3, r3, #5	@ D.11569, D.11568,
 1165 013c 10209DE5 		ldr	r2, [sp, #16]	@ tmp296, long_name
 1166 0140 033082E0 		add	r3, r2, r3	@ D.11570, tmp296, D.11569
 1167 0144 00209DE5 		ldr	r2, [sp, #0]	@ tmp297, raw_entry
 1168 0148 0E2082E2 		add	r2, r2, #14	@ D.11571, tmp297,
 1169 014c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11572,* D.11571
 1170 0150 0020C3E5 		strb	r2, [r3, #0]	@ tmp298,* D.11570
 552:fat16.cpp     ****             long_name[char_offset + 6] = raw_entry[16];
 1171              		.loc 1 552 0
 1172 0154 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11573, char_offset
 1173 0158 063083E2 		add	r3, r3, #6	@ D.11574, D.11573,
 1174 015c 10209DE5 		ldr	r2, [sp, #16]	@ tmp299, long_name
 1175 0160 033082E0 		add	r3, r2, r3	@ D.11575, tmp299, D.11574
 1176 0164 00209DE5 		ldr	r2, [sp, #0]	@ tmp300, raw_entry
 1177 0168 102082E2 		add	r2, r2, #16	@ D.11576, tmp300,
 1178 016c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11577,* D.11576
 1179 0170 0020C3E5 		strb	r2, [r3, #0]	@ tmp301,* D.11575
 553:fat16.cpp     ****             long_name[char_offset + 7] = raw_entry[18];
 1180              		.loc 1 553 0
 1181 0174 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11578, char_offset
 1182 0178 073083E2 		add	r3, r3, #7	@ D.11579, D.11578,
 1183 017c 10209DE5 		ldr	r2, [sp, #16]	@ tmp302, long_name
 1184 0180 033082E0 		add	r3, r2, r3	@ D.11580, tmp302, D.11579
 1185 0184 00209DE5 		ldr	r2, [sp, #0]	@ tmp303, raw_entry
ARM GAS  /tmp/ccwDRvq0.s 			page 32


 1186 0188 122082E2 		add	r2, r2, #18	@ D.11581, tmp303,
 1187 018c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11582,* D.11581
 1188 0190 0020C3E5 		strb	r2, [r3, #0]	@ tmp304,* D.11580
 554:fat16.cpp     ****             long_name[char_offset + 8] = raw_entry[20];
 1189              		.loc 1 554 0
 1190 0194 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11583, char_offset
 1191 0198 083083E2 		add	r3, r3, #8	@ D.11584, D.11583,
 1192 019c 10209DE5 		ldr	r2, [sp, #16]	@ tmp305, long_name
 1193 01a0 033082E0 		add	r3, r2, r3	@ D.11585, tmp305, D.11584
 1194 01a4 00209DE5 		ldr	r2, [sp, #0]	@ tmp306, raw_entry
 1195 01a8 142082E2 		add	r2, r2, #20	@ D.11586, tmp306,
 1196 01ac 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11587,* D.11586
 1197 01b0 0020C3E5 		strb	r2, [r3, #0]	@ tmp307,* D.11585
 555:fat16.cpp     ****             long_name[char_offset + 9] = raw_entry[22];
 1198              		.loc 1 555 0
 1199 01b4 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11588, char_offset
 1200 01b8 093083E2 		add	r3, r3, #9	@ D.11589, D.11588,
 1201 01bc 10209DE5 		ldr	r2, [sp, #16]	@ tmp308, long_name
 1202 01c0 033082E0 		add	r3, r2, r3	@ D.11590, tmp308, D.11589
 1203 01c4 00209DE5 		ldr	r2, [sp, #0]	@ tmp309, raw_entry
 1204 01c8 162082E2 		add	r2, r2, #22	@ D.11591, tmp309,
 1205 01cc 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11592,* D.11591
 1206 01d0 0020C3E5 		strb	r2, [r3, #0]	@ tmp310,* D.11590
 556:fat16.cpp     ****             long_name[char_offset + 10] = raw_entry[24];
 1207              		.loc 1 556 0
 1208 01d4 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11593, char_offset
 1209 01d8 0A3083E2 		add	r3, r3, #10	@ D.11594, D.11593,
 1210 01dc 10209DE5 		ldr	r2, [sp, #16]	@ tmp311, long_name
 1211 01e0 033082E0 		add	r3, r2, r3	@ D.11595, tmp311, D.11594
 1212 01e4 00209DE5 		ldr	r2, [sp, #0]	@ tmp312, raw_entry
 1213 01e8 182082E2 		add	r2, r2, #24	@ D.11596, tmp312,
 1214 01ec 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11597,* D.11596
 1215 01f0 0020C3E5 		strb	r2, [r3, #0]	@ tmp313,* D.11595
 557:fat16.cpp     ****             long_name[char_offset + 11] = raw_entry[28];
 1216              		.loc 1 557 0
 1217 01f4 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11598, char_offset
 1218 01f8 0B3083E2 		add	r3, r3, #11	@ D.11599, D.11598,
 1219 01fc 10209DE5 		ldr	r2, [sp, #16]	@ tmp314, long_name
 1220 0200 033082E0 		add	r3, r2, r3	@ D.11600, tmp314, D.11599
 1221 0204 00209DE5 		ldr	r2, [sp, #0]	@ tmp315, raw_entry
 1222 0208 1C2082E2 		add	r2, r2, #28	@ D.11601, tmp315,
 1223 020c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11602,* D.11601
 1224 0210 0020C3E5 		strb	r2, [r3, #0]	@ tmp316,* D.11600
 558:fat16.cpp     ****             long_name[char_offset + 12] = raw_entry[30];
 1225              		.loc 1 558 0
 1226 0214 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11603, char_offset
 1227 0218 0C3083E2 		add	r3, r3, #12	@ D.11604, D.11603,
 1228 021c 10209DE5 		ldr	r2, [sp, #16]	@ tmp317, long_name
 1229 0220 033082E0 		add	r3, r2, r3	@ D.11605, tmp317, D.11604
 1230 0224 00209DE5 		ldr	r2, [sp, #0]	@ tmp318, raw_entry
 1231 0228 1E2082E2 		add	r2, r2, #30	@ D.11606, tmp318,
 1232 022c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11607,* D.11606
 1233 0230 0020C3E5 		strb	r2, [r3, #0]	@ tmp319,* D.11605
 1234              	.L78:
 559:fat16.cpp     ****         }
 560:fat16.cpp     **** 
 561:fat16.cpp     ****         return 1;
ARM GAS  /tmp/ccwDRvq0.s 			page 33


 1235              		.loc 1 561 0
 1236 0234 0130A0E3 		mov	r3, #1	@ D.11529,
 1237 0238 7E0000EA 		b	.L76	@
 1238              	.L77:
 1239              	.LBE10:
 1240              	.LBB11:
 1241              	.LBB12:
 562:fat16.cpp     ****     }
 563:fat16.cpp     ****     else
 564:fat16.cpp     ****     {
 565:fat16.cpp     ****         /* if we do not have a long name, take the short one */
 566:fat16.cpp     ****         if(long_name[0] == '\0')
 1242              		.loc 1 566 0
 1243 023c 10309DE5 		ldr	r3, [sp, #16]	@ tmp320, long_name
 1244 0240 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11609,
 1245 0244 000053E3 		cmp	r3, #0	@ D.11609,
 1246 0248 4E00001A 		bne	.L79	@,
 1247              	.LBB13:
 567:fat16.cpp     ****         {
 568:fat16.cpp     ****             uint8_t i;
 569:fat16.cpp     ****             for(i = 0; i < 8; ++i)
 1248              		.loc 1 569 0
 1249 024c 0030A0E3 		mov	r3, #0	@ tmp321,
 1250 0250 1730CDE5 		strb	r3, [sp, #23]	@ tmp322, i
 1251 0254 100000EA 		b	.L80	@
 1252              	.L83:
 570:fat16.cpp     ****             {
 571:fat16.cpp     ****                 if(raw_entry[i] == ' ')
 1253              		.loc 1 571 0
 1254 0258 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.11617, i
 1255 025c 00209DE5 		ldr	r2, [sp, #0]	@ tmp323, raw_entry
 1256 0260 033082E0 		add	r3, r2, r3	@ D.11618, tmp323, D.11617
 1257 0264 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11619,* D.11618
 1258 0268 200053E3 		cmp	r3, #32	@ D.11619,
 1259 026c 1200000A 		beq	.L89	@,
 1260              	.L81:
 572:fat16.cpp     ****                     break;
 573:fat16.cpp     ****                 long_name[i] = raw_entry[i];
 1261              		.loc 1 573 0
 1262 0270 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.11622, i
 1263 0274 10209DE5 		ldr	r2, [sp, #16]	@ tmp324, long_name
 1264 0278 033082E0 		add	r3, r2, r3	@ D.11623, tmp324, D.11622
 1265 027c 1720DDE5 		ldrb	r2, [sp, #23]	@ zero_extendqisi2	@ D.11624, i
 1266 0280 00109DE5 		ldr	r1, [sp, #0]	@ tmp325, raw_entry
 1267 0284 022081E0 		add	r2, r1, r2	@ D.11625, tmp325, D.11624
 1268 0288 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11626,* D.11625
 1269 028c 0020C3E5 		strb	r2, [r3, #0]	@ tmp326,* D.11623
 569:fat16.cpp     ****             for(i = 0; i < 8; ++i)
 1270              		.loc 1 569 0
 1271 0290 1730DDE5 		ldrb	r3, [sp, #23]	@ tmp327, i
 1272 0294 013083E2 		add	r3, r3, #1	@ tmp328, tmp327,
 1273 0298 1730CDE5 		strb	r3, [sp, #23]	@ tmp329, i
 1274              	.L80:
 569:fat16.cpp     ****             for(i = 0; i < 8; ++i)
 1275              		.loc 1 569 0 is_stmt 0 discriminator 1
 1276 029c 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ tmp331, i
 1277 02a0 070053E3 		cmp	r3, #7	@ tmp331,
ARM GAS  /tmp/ccwDRvq0.s 			page 34


 1278 02a4 0030A083 		movhi	r3, #0	@, tmp332
 1279 02a8 0130A093 		movls	r3, #1	@, tmp332
 1280 02ac FF3003E2 		and	r3, r3, #255	@ D.11615, tmp330,
 1281 02b0 000053E3 		cmp	r3, #0	@ D.11615,
 1282 02b4 E7FFFF1A 		bne	.L83	@,
 1283 02b8 000000EA 		b	.L82	@
 1284              	.L89:
 572:fat16.cpp     ****                     break;
 1285              		.loc 1 572 0 is_stmt 1
 1286 02bc 0000A0E1 		mov	r0, r0	@ nop
 1287              	.L82:
 1288              	.LBB14:
 574:fat16.cpp     ****             }
 575:fat16.cpp     ****             if(raw_entry[8] != ' ')
 1289              		.loc 1 575 0
 1290 02c0 00309DE5 		ldr	r3, [sp, #0]	@ tmp333, raw_entry
 1291 02c4 083083E2 		add	r3, r3, #8	@ D.11627, tmp333,
 1292 02c8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11628,* D.11627
 1293 02cc 200053E3 		cmp	r3, #32	@ D.11628,
 1294 02d0 2700000A 		beq	.L84	@,
 1295              	.LBB15:
 576:fat16.cpp     ****             {
 577:fat16.cpp     ****                 long_name[i++] = '.';
 1296              		.loc 1 577 0
 1297 02d4 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.11631, i
 1298 02d8 10209DE5 		ldr	r2, [sp, #16]	@ tmp334, long_name
 1299 02dc 033082E0 		add	r3, r2, r3	@ D.11632, tmp334, D.11631
 1300 02e0 2E20A0E3 		mov	r2, #46	@ tmp335,
 1301 02e4 0020C3E5 		strb	r2, [r3, #0]	@ tmp336,* D.11632
 1302 02e8 1730DDE5 		ldrb	r3, [sp, #23]	@ tmp337, i
 1303 02ec 013083E2 		add	r3, r3, #1	@ tmp338, tmp337,
 1304 02f0 1730CDE5 		strb	r3, [sp, #23]	@ tmp339, i
 578:fat16.cpp     **** 
 579:fat16.cpp     ****                 uint8_t j = 8;
 1305              		.loc 1 579 0
 1306 02f4 0830A0E3 		mov	r3, #8	@ tmp340,
 1307 02f8 1630CDE5 		strb	r3, [sp, #22]	@ tmp341, j
 580:fat16.cpp     ****                 for(; j < 11; ++j)
 1308              		.loc 1 580 0
 1309 02fc 130000EA 		b	.L85	@
 1310              	.L88:
 581:fat16.cpp     ****                 {
 582:fat16.cpp     ****                     if(raw_entry[j] != ' ')
 1311              		.loc 1 582 0
 1312 0300 1630DDE5 		ldrb	r3, [sp, #22]	@ zero_extendqisi2	@ D.11638, j
 1313 0304 00209DE5 		ldr	r2, [sp, #0]	@ tmp342, raw_entry
 1314 0308 033082E0 		add	r3, r2, r3	@ D.11639, tmp342, D.11638
 1315 030c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11640,* D.11639
 1316 0310 200053E3 		cmp	r3, #32	@ D.11640,
 1317 0314 1500000A 		beq	.L90	@,
 583:fat16.cpp     ****                     {
 584:fat16.cpp     ****                         long_name[i++] = raw_entry[j];
 1318              		.loc 1 584 0
 1319 0318 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.11643, i
 1320 031c 10209DE5 		ldr	r2, [sp, #16]	@ tmp343, long_name
 1321 0320 033082E0 		add	r3, r2, r3	@ D.11644, tmp343, D.11643
 1322 0324 1620DDE5 		ldrb	r2, [sp, #22]	@ zero_extendqisi2	@ D.11645, j
ARM GAS  /tmp/ccwDRvq0.s 			page 35


 1323 0328 00109DE5 		ldr	r1, [sp, #0]	@ tmp344, raw_entry
 1324 032c 022081E0 		add	r2, r1, r2	@ D.11646, tmp344, D.11645
 1325 0330 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2	@ D.11647,* D.11646
 1326 0334 0020C3E5 		strb	r2, [r3, #0]	@ tmp345,* D.11644
 1327 0338 1730DDE5 		ldrb	r3, [sp, #23]	@ tmp346, i
 1328 033c 013083E2 		add	r3, r3, #1	@ tmp347, tmp346,
 1329 0340 1730CDE5 		strb	r3, [sp, #23]	@ tmp348, i
 580:fat16.cpp     ****                 for(; j < 11; ++j)
 1330              		.loc 1 580 0
 1331 0344 1630DDE5 		ldrb	r3, [sp, #22]	@ tmp349, j
 1332 0348 013083E2 		add	r3, r3, #1	@ tmp350, tmp349,
 1333 034c 1630CDE5 		strb	r3, [sp, #22]	@ tmp351, j
 1334              	.L85:
 580:fat16.cpp     ****                 for(; j < 11; ++j)
 1335              		.loc 1 580 0 is_stmt 0 discriminator 1
 1336 0350 1630DDE5 		ldrb	r3, [sp, #22]	@ zero_extendqisi2	@ tmp353, j
 1337 0354 0A0053E3 		cmp	r3, #10	@ tmp353,
 1338 0358 0030A083 		movhi	r3, #0	@, tmp354
 1339 035c 0130A093 		movls	r3, #1	@, tmp354
 1340 0360 FF3003E2 		and	r3, r3, #255	@ D.11636, tmp352,
 1341 0364 000053E3 		cmp	r3, #0	@ D.11636,
 1342 0368 E4FFFF1A 		bne	.L88	@,
 1343 036c 000000EA 		b	.L84	@
 1344              	.L90:
 585:fat16.cpp     ****                     }
 586:fat16.cpp     ****                     else
 587:fat16.cpp     ****                     {
 588:fat16.cpp     ****                         break;
 1345              		.loc 1 588 0 is_stmt 1
 1346 0370 0000A0E1 		mov	r0, r0	@ nop
 1347              	.L84:
 1348              	.LBE15:
 1349              	.LBE14:
 589:fat16.cpp     ****                     }
 590:fat16.cpp     ****                 }
 591:fat16.cpp     ****             }
 592:fat16.cpp     **** 
 593:fat16.cpp     ****             long_name[i] = '\0';
 1350              		.loc 1 593 0
 1351 0374 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.11650, i
 1352 0378 10209DE5 		ldr	r2, [sp, #16]	@ tmp355, long_name
 1353 037c 033082E0 		add	r3, r2, r3	@ D.11651, tmp355, D.11650
 1354 0380 0020A0E3 		mov	r2, #0	@ tmp356,
 1355 0384 0020C3E5 		strb	r2, [r3, #0]	@ tmp357,* D.11651
 1356              	.L79:
 1357              	.LBE13:
 1358              	.LBE12:
 594:fat16.cpp     ****         }
 595:fat16.cpp     **** 
 596:fat16.cpp     ****         /* extract properties of file and store them within the structure */
 597:fat16.cpp     ****         dir_entry->attributes = raw_entry[11];
 1359              		.loc 1 597 0
 1360 0388 00309DE5 		ldr	r3, [sp, #0]	@ tmp358, raw_entry
 1361 038c 0B3083E2 		add	r3, r3, #11	@ D.11653, tmp358,
 1362 0390 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ D.11654,* D.11653
 1363 0394 04309DE5 		ldr	r3, [sp, #4]	@ tmp359, dir_entry
 1364 0398 2020C3E5 		strb	r2, [r3, #32]	@ tmp360, dir_entry_6(D)->attributes
ARM GAS  /tmp/ccwDRvq0.s 			page 36


 598:fat16.cpp     ****         dir_entry->cluster = ((uint16_t) raw_entry[26]) |
 1365              		.loc 1 598 0
 1366 039c 00309DE5 		ldr	r3, [sp, #0]	@ tmp361, raw_entry
 1367 03a0 1A3083E2 		add	r3, r3, #26	@ D.11655, tmp361,
 1368 03a4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11656,* D.11655
 599:fat16.cpp     ****         ((uint16_t) raw_entry[27] << 8);
 1369              		.loc 1 599 0
 1370 03a8 0320A0E1 		mov	r2, r3	@ D.11657, D.11656
 1371 03ac 00309DE5 		ldr	r3, [sp, #0]	@ tmp362, raw_entry
 1372 03b0 1B3083E2 		add	r3, r3, #27	@ D.11658, tmp362,
 1373 03b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11659,* D.11658
 1374 03b8 0334A0E1 		mov	r3, r3, asl #8	@ D.11661, D.11660,
 1375 03bc 0338A0E1 		mov	r3, r3, asl #16	@ tmp363, D.11661,
 1376 03c0 2338A0E1 		mov	r3, r3, lsr #16	@ D.11662, tmp363,
 1377 03c4 033082E1 		orr	r3, r2, r3	@ tmp366, tmp364, tmp365
 1378 03c8 0338A0E1 		mov	r3, r3, asl #16	@ tmp367, tmp366,
 1379 03cc 2338A0E1 		mov	r3, r3, lsr #16	@ D.11663, tmp367,
 1380 03d0 0338A0E1 		mov	r3, r3, asl #16	@ tmp368, D.11663,
 1381 03d4 2328A0E1 		mov	r2, r3, lsr #16	@ D.11664, tmp368,
 1382 03d8 04309DE5 		ldr	r3, [sp, #4]	@ tmp369, dir_entry
 1383 03dc B222C3E1 		strh	r2, [r3, #34]	@ movhi	@ D.11664, dir_entry_6(D)->cluster
 600:fat16.cpp     ****         dir_entry->file_size = ((uint32_t) raw_entry[28]) |
 1384              		.loc 1 600 0
 1385 03e0 00309DE5 		ldr	r3, [sp, #0]	@ tmp370, raw_entry
 1386 03e4 1C3083E2 		add	r3, r3, #28	@ D.11665, tmp370,
 1387 03e8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11666,* D.11665
 601:fat16.cpp     ****         ((uint32_t) raw_entry[29] << 8) |
 602:fat16.cpp     ****         ((uint32_t) raw_entry[30] << 16) |
 603:fat16.cpp     ****         ((uint32_t) raw_entry[31] << 24);
 1388              		.loc 1 603 0
 1389 03ec 0320A0E1 		mov	r2, r3	@ D.11667, D.11666
 601:fat16.cpp     ****         ((uint32_t) raw_entry[29] << 8) |
 1390              		.loc 1 601 0
 1391 03f0 00309DE5 		ldr	r3, [sp, #0]	@ tmp371, raw_entry
 1392 03f4 1D3083E2 		add	r3, r3, #29	@ D.11668, tmp371,
 1393 03f8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11669,* D.11668
 1394              		.loc 1 603 0
 1395 03fc 0334A0E1 		mov	r3, r3, asl #8	@ D.11671, D.11670,
 1396 0400 032082E1 		orr	r2, r2, r3	@ D.11672, D.11667, D.11671
 602:fat16.cpp     ****         ((uint32_t) raw_entry[30] << 16) |
 1397              		.loc 1 602 0
 1398 0404 00309DE5 		ldr	r3, [sp, #0]	@ tmp372, raw_entry
 1399 0408 1E3083E2 		add	r3, r3, #30	@ D.11673, tmp372,
 1400 040c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11674,* D.11673
 1401              		.loc 1 603 0
 1402 0410 0338A0E1 		mov	r3, r3, asl #16	@ D.11676, D.11675,
 1403 0414 032082E1 		orr	r2, r2, r3	@ D.11677, D.11672, D.11676
 1404 0418 00309DE5 		ldr	r3, [sp, #0]	@ tmp373, raw_entry
 1405 041c 1F3083E2 		add	r3, r3, #31	@ D.11678, tmp373,
 1406 0420 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11679,* D.11678
 1407 0424 033CA0E1 		mov	r3, r3, asl #24	@ D.11681, D.11680,
 1408 0428 032082E1 		orr	r2, r2, r3	@ D.11682, D.11677, D.11681
 1409 042c 04309DE5 		ldr	r3, [sp, #4]	@ tmp374, dir_entry
 1410 0430 242083E5 		str	r2, [r3, #36]	@ D.11682, dir_entry_6(D)->file_size
 604:fat16.cpp     **** 
 605:fat16.cpp     ****         return 2;
 1411              		.loc 1 605 0
ARM GAS  /tmp/ccwDRvq0.s 			page 37


 1412 0434 0230A0E3 		mov	r3, #2	@ D.11529,
 1413              	.L76:
 1414              	.LBE11:
 1415              	.LBE9:
 1416              	.LBE8:
 606:fat16.cpp     ****     }
 607:fat16.cpp     **** }
 1417              		.loc 1 607 0
 1418 0438 0300A0E1 		mov	r0, r3	@, <retval>
 1419 043c 18D08DE2 		add	sp, sp, #24	@,,
 1420 0440 1EFF2FE1 		bx	lr
 1421              		.cfi_endproc
 1422              	.LFE116:
 1423              		.size	_ZL25fat16_interpret_dir_entryP22fat16_dir_entry_structPKh, .-_ZL25fat16_interpret_dir_entry
 1424              		.section	.text._Z27fat16_get_dir_entry_of_pathP15fat16_fs_structPKcP22fat16_dir_entry_struct,"ax",
 1425              		.align	2
 1426              		.global	_Z27fat16_get_dir_entry_of_pathP15fat16_fs_structPKcP22fat16_dir_entry_struct
 1427              		.type	_Z27fat16_get_dir_entry_of_pathP15fat16_fs_structPKcP22fat16_dir_entry_struct, %function
 1428              	_Z27fat16_get_dir_entry_of_pathP15fat16_fs_structPKcP22fat16_dir_entry_struct:
 1429              	.LFB117:
 608:fat16.cpp     **** 
 609:fat16.cpp     **** /**
 610:fat16.cpp     ****  * \ingroup fat16_file
 611:fat16.cpp     ****  * Retrieves the directory entry of a path.
 612:fat16.cpp     ****  *
 613:fat16.cpp     ****  * The given path may both describe a file or a directory.
 614:fat16.cpp     ****  *
 615:fat16.cpp     ****  * \param[in] fs The FAT16 filesystem on which to search.
 616:fat16.cpp     ****  * \param[in] path The path of which to read the directory entry.
 617:fat16.cpp     ****  * \param[out] dir_entry The directory entry to fill.
 618:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
 619:fat16.cpp     ****  * \see fat16_read_dir
 620:fat16.cpp     ****  */
 621:fat16.cpp     **** uint8_t fat16_get_dir_entry_of_path(struct fat16_fs_struct* fs, const char* path, struct fat16_dir_
 622:fat16.cpp     **** {
 1430              		.loc 1 622 0
 1431              		.cfi_startproc
 1432              		@ Function supports interworking.
 1433              		@ args = 0, pretend = 0, frame = 32
 1434              		@ frame_needed = 0, uses_anonymous_args = 0
 1435 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 1436              	.LCFI14:
 1437              		.cfi_def_cfa_offset 4
 1438 0004 24D04DE2 		sub	sp, sp, #36	@,,
 1439              	.LCFI15:
 1440              		.cfi_def_cfa_offset 40
 1441 0008 0C008DE5 		str	r0, [sp, #12]	@ fs, fs
 1442 000c 08108DE5 		str	r1, [sp, #8]	@ path, path
 1443 0010 04208DE5 		str	r2, [sp, #4]	@ dir_entry, dir_entry
 1444              	.LBB16:
 623:fat16.cpp     ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 1445              		.loc 1 623 0
 1446 0014 0C309DE5 		ldr	r3, [sp, #12]	@ tmp157, fs
 1447 0018 000053E3 		cmp	r3, #0	@ tmp157,
 1448 001c 0900000A 		beq	.L92	@,
 1449              		.cfi_offset 14, -4
 1450              		.loc 1 623 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccwDRvq0.s 			page 38


 1451 0020 08309DE5 		ldr	r3, [sp, #8]	@ tmp158, path
 1452 0024 000053E3 		cmp	r3, #0	@ tmp158,
 1453 0028 0600000A 		beq	.L92	@,
 1454              		.loc 1 623 0 discriminator 2
 1455 002c 08309DE5 		ldr	r3, [sp, #8]	@ tmp159, path
 1456 0030 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11476,
 1457 0034 000053E3 		cmp	r3, #0	@ D.11476,
 1458 0038 0200000A 		beq	.L92	@,
 1459              		.loc 1 623 0 discriminator 3
 1460 003c 04309DE5 		ldr	r3, [sp, #4]	@ tmp160, dir_entry
 1461 0040 000053E3 		cmp	r3, #0	@ tmp160,
 1462 0044 0100001A 		bne	.L93	@,
 1463              	.L92:
 624:fat16.cpp     ****         return 0;
 1464              		.loc 1 624 0 is_stmt 1
 1465 0048 0030A0E3 		mov	r3, #0	@ D.11478,
 1466 004c 670000EA 		b	.L94	@
 1467              	.L93:
 625:fat16.cpp     **** 
 626:fat16.cpp     ****     if(path[0] == '/')
 1468              		.loc 1 626 0
 1469 0050 08309DE5 		ldr	r3, [sp, #8]	@ tmp161, path
 1470 0054 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11479,
 1471 0058 2F0053E3 		cmp	r3, #47	@ D.11479,
 1472 005c 0200001A 		bne	.L95	@,
 627:fat16.cpp     ****         ++path;
 1473              		.loc 1 627 0
 1474 0060 08309DE5 		ldr	r3, [sp, #8]	@ tmp162, path
 1475 0064 013083E2 		add	r3, r3, #1	@ tmp163, tmp162,
 1476 0068 08308DE5 		str	r3, [sp, #8]	@ tmp163, path
 1477              	.L95:
 628:fat16.cpp     **** 
 629:fat16.cpp     ****     /* begin with the root directory */
 630:fat16.cpp     ****     memset(dir_entry, 0, sizeof(*dir_entry));
 1478              		.loc 1 630 0
 1479 006c 04009DE5 		ldr	r0, [sp, #4]	@, dir_entry
 1480 0070 0010A0E3 		mov	r1, #0	@,
 1481 0074 2C20A0E3 		mov	r2, #44	@,
 1482 0078 FEFFFFEB 		bl	memset	@
 631:fat16.cpp     ****     dir_entry->attributes = FAT16_ATTRIB_DIR;
 1483              		.loc 1 631 0
 1484 007c 04309DE5 		ldr	r3, [sp, #4]	@ tmp164, dir_entry
 1485 0080 1020A0E3 		mov	r2, #16	@ tmp165,
 1486 0084 2020C3E5 		strb	r2, [r3, #32]	@ tmp166, dir_entry_10(D)->attributes
 632:fat16.cpp     **** 
 633:fat16.cpp     ****     if(path[0] == '\0')
 1487              		.loc 1 633 0
 1488 0088 08309DE5 		ldr	r3, [sp, #8]	@ tmp167, path
 1489 008c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11483,
 1490 0090 000053E3 		cmp	r3, #0	@ D.11483,
 1491 0094 0100001A 		bne	.L96	@,
 634:fat16.cpp     ****         return 1;
 1492              		.loc 1 634 0
 1493 0098 0130A0E3 		mov	r3, #1	@ D.11478,
 1494 009c 530000EA 		b	.L94	@
 1495              	.L96:
 1496              	.LBB17:
ARM GAS  /tmp/ccwDRvq0.s 			page 39


 635:fat16.cpp     **** 
 636:fat16.cpp     ****     while(1)
 637:fat16.cpp     ****     {
 638:fat16.cpp     ****         struct fat16_dir_struct* dd = fat16_open_dir(fs, dir_entry);
 1497              		.loc 1 638 0
 1498 00a0 0C009DE5 		ldr	r0, [sp, #12]	@, fs
 1499 00a4 04109DE5 		ldr	r1, [sp, #4]	@, dir_entry
 1500 00a8 FEFFFFEB 		bl	_Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_entry_struct	@
 1501 00ac 1C008DE5 		str	r0, [sp, #28]	@, dd
 639:fat16.cpp     ****         if(!dd)
 1502              		.loc 1 639 0
 1503 00b0 1C309DE5 		ldr	r3, [sp, #28]	@ tmp168, dd
 1504 00b4 000053E3 		cmp	r3, #0	@ tmp168,
 1505 00b8 0100001A 		bne	.L97	@,
 1506              	.LBE17:
 640:fat16.cpp     ****             break;
 641:fat16.cpp     **** 
 642:fat16.cpp     ****         /* extract the next hierarchy we will search for */
 643:fat16.cpp     ****         const char* sep_pos = strchr(path, '/');
 644:fat16.cpp     ****         if(!sep_pos)
 645:fat16.cpp     ****             sep_pos = path + strlen(path);
 646:fat16.cpp     ****         uint8_t length_to_sep = sep_pos - path;
 647:fat16.cpp     **** 
 648:fat16.cpp     ****         /* read directory entries */
 649:fat16.cpp     ****         while(fat16_read_dir(dd, dir_entry))
 650:fat16.cpp     ****         {
 651:fat16.cpp     ****             /* check if we have found the next hierarchy */
 652:fat16.cpp     ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 653:fat16.cpp     ****                 strncmp(path, dir_entry->long_name, length_to_sep) != 0))
 654:fat16.cpp     ****             continue;
 655:fat16.cpp     **** 
 656:fat16.cpp     ****             fat16_close_dir(dd);
 657:fat16.cpp     ****             dd = 0;
 658:fat16.cpp     **** 
 659:fat16.cpp     ****             if(path[length_to_sep] == '\0')
 660:fat16.cpp     ****     /* we iterated through the whole path and have found the file */
 661:fat16.cpp     ****                 return 1;
 662:fat16.cpp     **** 
 663:fat16.cpp     ****             if(dir_entry->attributes & FAT16_ATTRIB_DIR)
 664:fat16.cpp     ****             {
 665:fat16.cpp     ****                 /* we found a parent directory of the file we are searching for */
 666:fat16.cpp     ****                 path = sep_pos + 1;
 667:fat16.cpp     ****                 break;
 668:fat16.cpp     ****             }
 669:fat16.cpp     **** 
 670:fat16.cpp     ****             /* a parent of the file exists, but not the file itself */
 671:fat16.cpp     ****             return 0;
 672:fat16.cpp     ****         }
 673:fat16.cpp     **** 
 674:fat16.cpp     ****         fat16_close_dir(dd);
 675:fat16.cpp     ****     }
 676:fat16.cpp     **** 
 677:fat16.cpp     ****     return 0;
 1507              		.loc 1 677 0
 1508 00bc 0030A0E3 		mov	r3, #0	@ D.11478,
 1509 00c0 4A0000EA 		b	.L94	@
 1510              	.L97:
ARM GAS  /tmp/ccwDRvq0.s 			page 40


 1511              	.LBB18:
 643:fat16.cpp     ****         const char* sep_pos = strchr(path, '/');
 1512              		.loc 1 643 0
 1513 00c4 08009DE5 		ldr	r0, [sp, #8]	@, path
 1514 00c8 2F10A0E3 		mov	r1, #47	@,
 1515 00cc FEFFFFEB 		bl	strchr	@
 1516 00d0 18008DE5 		str	r0, [sp, #24]	@, sep_pos
 644:fat16.cpp     ****         if(!sep_pos)
 1517              		.loc 1 644 0
 1518 00d4 18309DE5 		ldr	r3, [sp, #24]	@ tmp169, sep_pos
 1519 00d8 000053E3 		cmp	r3, #0	@ tmp169,
 1520 00dc 0500001A 		bne	.L98	@,
 645:fat16.cpp     ****             sep_pos = path + strlen(path);
 1521              		.loc 1 645 0
 1522 00e0 08009DE5 		ldr	r0, [sp, #8]	@, path
 1523 00e4 FEFFFFEB 		bl	strlen	@
 1524 00e8 0030A0E1 		mov	r3, r0	@ tmp170,
 1525 00ec 08209DE5 		ldr	r2, [sp, #8]	@ tmp171, path
 1526 00f0 033082E0 		add	r3, r2, r3	@ tmp172, tmp171, D.11493
 1527 00f4 18308DE5 		str	r3, [sp, #24]	@ tmp172, sep_pos
 1528              	.L98:
 646:fat16.cpp     ****         uint8_t length_to_sep = sep_pos - path;
 1529              		.loc 1 646 0
 1530 00f8 18309DE5 		ldr	r3, [sp, #24]	@ sep_pos.31, sep_pos
 1531 00fc FF2003E2 		and	r2, r3, #255	@ D.11496, sep_pos.31,
 1532 0100 08309DE5 		ldr	r3, [sp, #8]	@ path.32, path
 1533 0104 FF3003E2 		and	r3, r3, #255	@ D.11498, path.32,
 1534 0108 023063E0 		rsb	r3, r3, r2	@ tmp173, D.11498, D.11496
 1535 010c 1730CDE5 		strb	r3, [sp, #23]	@ tmp174, length_to_sep
 649:fat16.cpp     ****         while(fat16_read_dir(dd, dir_entry))
 1536              		.loc 1 649 0
 1537 0110 290000EA 		b	.L99	@
 1538              	.L105:
 652:fat16.cpp     ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 1539              		.loc 1 652 0
 1540 0114 04309DE5 		ldr	r3, [sp, #4]	@ D.11506, dir_entry
 1541 0118 0300A0E1 		mov	r0, r3	@, D.11506
 1542 011c FEFFFFEB 		bl	strlen	@
 1543 0120 0020A0E1 		mov	r2, r0	@ D.11507,
 1544 0124 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.11508, length_to_sep
 1545 0128 030052E1 		cmp	r2, r3	@ D.11507, D.11508
 1546 012c 1F00001A 		bne	.L106	@,
 653:fat16.cpp     ****                 strncmp(path, dir_entry->long_name, length_to_sep) != 0))
 1547              		.loc 1 653 0 discriminator 1
 1548 0130 04209DE5 		ldr	r2, [sp, #4]	@ D.11510, dir_entry
 1549 0134 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.11511, length_to_sep
 1550 0138 08009DE5 		ldr	r0, [sp, #8]	@, path
 1551 013c 0210A0E1 		mov	r1, r2	@, D.11510
 1552 0140 0320A0E1 		mov	r2, r3	@, D.11511
 1553 0144 FEFFFFEB 		bl	strncmp	@
 1554 0148 0030A0E1 		mov	r3, r0	@ tmp175,
 652:fat16.cpp     ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 1555              		.loc 1 652 0 discriminator 1
 1556 014c 000053E3 		cmp	r3, #0	@ D.11512,
 1557 0150 1800001A 		bne	.L107	@,
 1558              	.L101:
 656:fat16.cpp     ****             fat16_close_dir(dd);
ARM GAS  /tmp/ccwDRvq0.s 			page 41


 1559              		.loc 1 656 0
 1560 0154 1C009DE5 		ldr	r0, [sp, #28]	@, dd
 1561 0158 FEFFFFEB 		bl	_Z15fat16_close_dirP16fat16_dir_struct	@
 657:fat16.cpp     ****             dd = 0;
 1562              		.loc 1 657 0
 1563 015c 0030A0E3 		mov	r3, #0	@ tmp176,
 1564 0160 1C308DE5 		str	r3, [sp, #28]	@ tmp176, dd
 659:fat16.cpp     ****             if(path[length_to_sep] == '\0')
 1565              		.loc 1 659 0
 1566 0164 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ D.11513, length_to_sep
 1567 0168 08209DE5 		ldr	r2, [sp, #8]	@ tmp177, path
 1568 016c 033082E0 		add	r3, r2, r3	@ D.11514, tmp177, D.11513
 1569 0170 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.11515,* D.11514
 1570 0174 000053E3 		cmp	r3, #0	@ D.11515,
 1571 0178 0100001A 		bne	.L102	@,
 661:fat16.cpp     ****                 return 1;
 1572              		.loc 1 661 0
 1573 017c 0130A0E3 		mov	r3, #1	@ D.11478,
 1574 0180 1A0000EA 		b	.L94	@
 1575              	.L102:
 663:fat16.cpp     ****             if(dir_entry->attributes & FAT16_ATTRIB_DIR)
 1576              		.loc 1 663 0
 1577 0184 04309DE5 		ldr	r3, [sp, #4]	@ tmp178, dir_entry
 1578 0188 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.11518, dir_entry_10(D)->attributes
 1579 018c 103003E2 		and	r3, r3, #16	@ D.11520, D.11519,
 1580 0190 000053E3 		cmp	r3, #0	@ D.11520,
 1581 0194 0300000A 		beq	.L103	@,
 666:fat16.cpp     ****                 path = sep_pos + 1;
 1582              		.loc 1 666 0
 1583 0198 18309DE5 		ldr	r3, [sp, #24]	@ tmp179, sep_pos
 1584 019c 013083E2 		add	r3, r3, #1	@ tmp180, tmp179,
 1585 01a0 08308DE5 		str	r3, [sp, #8]	@ tmp180, path
 667:fat16.cpp     ****                 break;
 1586              		.loc 1 667 0
 1587 01a4 0E0000EA 		b	.L104	@
 1588              	.L103:
 671:fat16.cpp     ****             return 0;
 1589              		.loc 1 671 0
 1590 01a8 0030A0E3 		mov	r3, #0	@ D.11478,
 1591 01ac 0F0000EA 		b	.L94	@
 1592              	.L106:
 654:fat16.cpp     ****             continue;
 1593              		.loc 1 654 0
 1594 01b0 0000A0E1 		mov	r0, r0	@ nop
 1595 01b4 000000EA 		b	.L99	@
 1596              	.L107:
 1597 01b8 0000A0E1 		mov	r0, r0	@ nop
 1598              	.L99:
 649:fat16.cpp     ****         while(fat16_read_dir(dd, dir_entry))
 1599              		.loc 1 649 0 discriminator 1
 1600 01bc 1C009DE5 		ldr	r0, [sp, #28]	@, dd
 1601 01c0 04109DE5 		ldr	r1, [sp, #4]	@, dir_entry
 1602 01c4 FEFFFFEB 		bl	_Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct	@
 1603 01c8 0030A0E1 		mov	r3, r0	@ tmp181,
 1604 01cc 000053E3 		cmp	r3, #0	@ D.11503,
 1605 01d0 0030A003 		moveq	r3, #0	@, tmp183
 1606 01d4 0130A013 		movne	r3, #1	@, tmp183
ARM GAS  /tmp/ccwDRvq0.s 			page 42


 1607 01d8 FF3003E2 		and	r3, r3, #255	@ retval.33, tmp182,
 1608 01dc 000053E3 		cmp	r3, #0	@ retval.33,
 1609 01e0 CBFFFF1A 		bne	.L105	@,
 1610              	.L104:
 674:fat16.cpp     ****         fat16_close_dir(dd);
 1611              		.loc 1 674 0
 1612 01e4 1C009DE5 		ldr	r0, [sp, #28]	@, dd
 1613 01e8 FEFFFFEB 		bl	_Z15fat16_close_dirP16fat16_dir_struct	@
 1614              	.LBE18:
 636:fat16.cpp     ****     while(1)
 1615              		.loc 1 636 0
 1616 01ec ABFFFFEA 		b	.L96	@
 1617              	.L94:
 1618              	.LBE16:
 678:fat16.cpp     **** }
 1619              		.loc 1 678 0
 1620 01f0 0300A0E1 		mov	r0, r3	@, <retval>
 1621 01f4 24D08DE2 		add	sp, sp, #36	@,,
 1622 01f8 04E09DE4 		ldr	lr, [sp], #4
 1623 01fc 1EFF2FE1 		bx	lr
 1624              		.cfi_endproc
 1625              	.LFE117:
 1626              		.size	_Z27fat16_get_dir_entry_of_pathP15fat16_fs_structPKcP22fat16_dir_entry_struct, .-_Z27fat16_g
 1627              		.section	.text._ZL22fat16_get_next_clusterPK15fat16_fs_structt,"ax",%progbits
 1628              		.align	2
 1629              		.type	_ZL22fat16_get_next_clusterPK15fat16_fs_structt, %function
 1630              	_ZL22fat16_get_next_clusterPK15fat16_fs_structt:
 1631              	.LFB118:
 679:fat16.cpp     **** 
 680:fat16.cpp     **** /**
 681:fat16.cpp     ****  * \ingroup fat16_fs
 682:fat16.cpp     ****  * Retrieves the next following cluster of a given cluster.
 683:fat16.cpp     ****  *
 684:fat16.cpp     ****  * Using the filesystem file allocation table, this function returns
 685:fat16.cpp     ****  * the number of the cluster containing the data directly following
 686:fat16.cpp     ****  * the data within the cluster with the given number.
 687:fat16.cpp     ****  *
 688:fat16.cpp     ****  * \param[in] fs The filesystem for which to determine the next cluster.
 689:fat16.cpp     ****  * \param[in] cluster_num The number of the cluster for which to determine its successor.
 690:fat16.cpp     ****  * \returns The wanted cluster number, or 0 on error.
 691:fat16.cpp     ****  */
 692:fat16.cpp     **** uint16_t fat16_get_next_cluster(const struct fat16_fs_struct* fs, uint16_t cluster_num)
 693:fat16.cpp     **** {
 1632              		.loc 1 693 0
 1633              		.cfi_startproc
 1634              		@ Function supports interworking.
 1635              		@ args = 0, pretend = 0, frame = 16
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 1638              	.LCFI16:
 1639              		.cfi_def_cfa_offset 4
 1640 0004 14D04DE2 		sub	sp, sp, #20	@,,
 1641              	.LCFI17:
 1642              		.cfi_def_cfa_offset 24
 1643 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 1644 000c 0130A0E1 		mov	r3, r1	@ tmp151, cluster_num
 1645 0010 B230CDE1 		strh	r3, [sp, #2]	@ movhi	@ tmp151, cluster_num
ARM GAS  /tmp/ccwDRvq0.s 			page 43


 1646              	.LBB19:
 694:fat16.cpp     ****     if(!fs || cluster_num < 2)
 1647              		.loc 1 694 0
 1648 0014 04309DE5 		ldr	r3, [sp, #4]	@ tmp152, fs
 1649 0018 000053E3 		cmp	r3, #0	@ tmp152,
 1650 001c 0200000A 		beq	.L109	@,
 1651              		.cfi_offset 14, -4
 1652              		.loc 1 694 0 is_stmt 0 discriminator 1
 1653 0020 B230DDE1 		ldrh	r3, [sp, #2]	@ tmp153, cluster_num
 1654 0024 010053E3 		cmp	r3, #1	@ tmp153,
 1655 0028 0100008A 		bhi	.L110	@,
 1656              	.L109:
 695:fat16.cpp     ****         return 0;
 1657              		.loc 1 695 0 is_stmt 1
 1658 002c 0030A0E3 		mov	r3, #0	@ D.11446,
 1659 0030 360000EA 		b	.L111	@
 1660              	.L110:
 696:fat16.cpp     **** 
 697:fat16.cpp     ****     /* read appropriate fat entry */
 698:fat16.cpp     ****     uint8_t fat_entry[2];
 699:fat16.cpp     ****     if(!fs->partition->device_read(fs->header.fat_offset + 2 * cluster_num, fat_entry, 2))
 1661              		.loc 1 699 0
 1662 0034 04309DE5 		ldr	r3, [sp, #4]	@ tmp154, fs
 1663 0038 003093E5 		ldr	r3, [r3, #0]	@ D.11448, fs_2(D)->partition
 1664 003c 003093E5 		ldr	r3, [r3, #0]	@ D.11449, D.11448_4->device_read
 1665 0040 04209DE5 		ldr	r2, [sp, #4]	@ tmp155, fs
 1666 0044 081092E5 		ldr	r1, [r2, #8]	@ D.11450, fs_2(D)->header.fat_offset
 1667 0048 B220DDE1 		ldrh	r2, [sp, #2]	@ D.11451, cluster_num
 1668 004c 8220A0E1 		mov	r2, r2, asl #1	@ D.11452, D.11451,
 1669 0050 021081E0 		add	r1, r1, r2	@ D.11454, D.11450, D.11453
 1670 0054 0C208DE2 		add	r2, sp, #12	@ tmp156,,
 1671 0058 0100A0E1 		mov	r0, r1	@, D.11454
 1672 005c 0210A0E1 		mov	r1, r2	@, tmp156
 1673 0060 0220A0E3 		mov	r2, #2	@,
 1674 0064 0FE0A0E1 		mov	lr, pc
 1675 0068 13FF2FE1 		bx	r3	@ D.11449
 1676 006c 0030A0E1 		mov	r3, r0	@ tmp157,
 1677 0070 000053E3 		cmp	r3, #0	@ D.11455,
 1678 0074 0030A013 		movne	r3, #0	@, tmp159
 1679 0078 0130A003 		moveq	r3, #1	@, tmp159
 1680 007c FF3003E2 		and	r3, r3, #255	@ retval.30, tmp158,
 1681 0080 000053E3 		cmp	r3, #0	@ retval.30,
 1682 0084 0100000A 		beq	.L112	@,
 700:fat16.cpp     ****         return 0;
 1683              		.loc 1 700 0
 1684 0088 0030A0E3 		mov	r3, #0	@ D.11446,
 1685 008c 1F0000EA 		b	.L111	@
 1686              	.L112:
 701:fat16.cpp     **** 
 702:fat16.cpp     ****     /* determine next cluster from fat */
 703:fat16.cpp     ****     cluster_num = ((uint16_t) fat_entry[0]) |
 1687              		.loc 1 703 0
 1688 0090 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ D.11458, fat_entry
 704:fat16.cpp     ****     ((uint16_t) fat_entry[1] << 8);
 1689              		.loc 1 704 0
 1690 0094 0320A0E1 		mov	r2, r3	@ D.11459, D.11458
 1691 0098 0D30DDE5 		ldrb	r3, [sp, #13]	@ zero_extendqisi2	@ D.11460, fat_entry
ARM GAS  /tmp/ccwDRvq0.s 			page 44


 1692 009c 0334A0E1 		mov	r3, r3, asl #8	@ D.11462, D.11461,
 1693 00a0 0338A0E1 		mov	r3, r3, asl #16	@ tmp160, D.11462,
 1694 00a4 2338A0E1 		mov	r3, r3, lsr #16	@ D.11463, tmp160,
 1695 00a8 033082E1 		orr	r3, r2, r3	@ tmp163, tmp161, tmp162
 1696 00ac 0338A0E1 		mov	r3, r3, asl #16	@ tmp164, tmp163,
 1697 00b0 2338A0E1 		mov	r3, r3, lsr #16	@ D.11464, tmp164,
 1698 00b4 B230CDE1 		strh	r3, [sp, #2]	@ movhi	@ D.11464, cluster_num
 705:fat16.cpp     **** 	///*
 706:fat16.cpp     ****     if(cluster_num == FAT16_CLUSTER_FREE ||
 1699              		.loc 1 706 0
 1700 00b8 B230DDE1 		ldrh	r3, [sp, #2]	@ tmp165, cluster_num
 1701 00bc 000053E3 		cmp	r3, #0	@ tmp165,
 1702 00c0 0F00000A 		beq	.L113	@,
 1703              		.loc 1 706 0 is_stmt 0 discriminator 1
 1704 00c4 B220DDE1 		ldrh	r2, [sp, #2]	@ tmp166, cluster_num
 1705 00c8 50309FE5 		ldr	r3, .L116	@ tmp167,
 1706 00cc 030052E1 		cmp	r2, r3	@ tmp166, tmp167
 1707 00d0 0B00000A 		beq	.L113	@,
 1708              		.loc 1 706 0 discriminator 2
 1709 00d4 B220DDE1 		ldrh	r2, [sp, #2]	@ tmp168, cluster_num
 1710 00d8 44309FE5 		ldr	r3, .L116+4	@ tmp169,
 1711 00dc 030052E1 		cmp	r2, r3	@ tmp168, tmp169
 1712 00e0 0300009A 		bls	.L114	@,
 1713              		.loc 1 706 0 discriminator 3
 1714 00e4 B220DDE1 		ldrh	r2, [sp, #2]	@ tmp170, cluster_num
 1715 00e8 38309FE5 		ldr	r3, .L116+8	@ tmp171,
 1716 00ec 030052E1 		cmp	r2, r3	@ tmp170, tmp171
 1717 00f0 0300009A 		bls	.L113	@,
 1718              	.L114:
 1719              		.loc 1 706 0 discriminator 4
 1720 00f4 B220DDE1 		ldrh	r2, [sp, #2]	@ tmp172, cluster_num
 1721 00f8 20309FE5 		ldr	r3, .L116	@ tmp173,
 1722 00fc 030052E1 		cmp	r2, r3	@ tmp172, tmp173
 1723 0100 0100009A 		bls	.L115	@,
 1724              	.L113:
 707:fat16.cpp     ****         cluster_num == FAT16_CLUSTER_BAD ||
 708:fat16.cpp     ****        (cluster_num >= FAT16_CLUSTER_RESERVED_MIN && cluster_num <= FAT16_CLUSTER_RESERVED_MAX) ||
 709:fat16.cpp     ****        (cluster_num >= FAT16_CLUSTER_LAST_MIN && cluster_num <= FAT16_CLUSTER_LAST_MAX))
 710:fat16.cpp     ****     //*/
 711:fat16.cpp     **** 	return 0;
 1725              		.loc 1 711 0 is_stmt 1
 1726 0104 0030A0E3 		mov	r3, #0	@ D.11446,
 1727 0108 000000EA 		b	.L111	@
 1728              	.L115:
 712:fat16.cpp     **** 
 713:fat16.cpp     ****     return cluster_num;
 1729              		.loc 1 713 0
 1730 010c B230DDE1 		ldrh	r3, [sp, #2]	@ D.11446, cluster_num
 1731              	.L111:
 1732              	.LBE19:
 714:fat16.cpp     **** }
 1733              		.loc 1 714 0
 1734 0110 0300A0E1 		mov	r0, r3	@, <retval>
 1735 0114 14D08DE2 		add	sp, sp, #20	@,,
 1736 0118 04E09DE4 		ldr	lr, [sp], #4
 1737 011c 1EFF2FE1 		bx	lr
 1738              	.L117:
ARM GAS  /tmp/ccwDRvq0.s 			page 45


 1739              		.align	2
 1740              	.L116:
 1741 0120 F7FF0000 		.word	65527
 1742 0124 EFFF0000 		.word	65519
 1743 0128 F6FF0000 		.word	65526
 1744              		.cfi_endproc
 1745              	.LFE118:
 1746              		.size	_ZL22fat16_get_next_clusterPK15fat16_fs_structt, .-_ZL22fat16_get_next_clusterPK15fat16_fs_s
 1747              		.section	.text._ZL21fat16_append_clustersPK15fat16_fs_structtt,"ax",%progbits
 1748              		.align	2
 1749              		.type	_ZL21fat16_append_clustersPK15fat16_fs_structtt, %function
 1750              	_ZL21fat16_append_clustersPK15fat16_fs_structtt:
 1751              	.LFB119:
 715:fat16.cpp     **** 
 716:fat16.cpp     **** /**
 717:fat16.cpp     ****  * \ingroup fat16_fs
 718:fat16.cpp     ****  * Appends a new cluster chain to an existing one.
 719:fat16.cpp     ****  *
 720:fat16.cpp     ****  * Set cluster_num to zero to create a completely new one.
 721:fat16.cpp     ****  *
 722:fat16.cpp     ****  * \param[in] fs The file system on which to operate.
 723:fat16.cpp     ****  * \param[in] cluster_num The cluster to which to append the new chain.
 724:fat16.cpp     ****  * \param[in] count The number of clusters to allocate.
 725:fat16.cpp     ****  * \returns 0 on failure, the number of the first new cluster on success.
 726:fat16.cpp     ****  */
 727:fat16.cpp     **** uint16_t fat16_append_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num, uint16_t cou
 728:fat16.cpp     **** {
 1752              		.loc 1 728 0
 1753              		.cfi_startproc
 1754              		@ Function supports interworking.
 1755              		@ args = 0, pretend = 0, frame = 32
 1756              		@ frame_needed = 0, uses_anonymous_args = 0
 1757 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 1758              	.LCFI18:
 1759              		.cfi_def_cfa_offset 4
 1760 0004 24D04DE2 		sub	sp, sp, #36	@,,
 1761              	.LCFI19:
 1762              		.cfi_def_cfa_offset 40
 1763 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 1764 000c 0230A0E1 		mov	r3, r2	@ tmp168, count
 1765 0010 B210CDE1 		strh	r1, [sp, #2]	@ movhi	@ tmp167, cluster_num
 1766 0014 B030CDE1 		strh	r3, [sp, #0]	@ movhi	@ tmp168, count
 1767              	.LBB20:
 729:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
 730:fat16.cpp     ****         if(!fs)
 1768              		.loc 1 730 0
 1769 0018 04309DE5 		ldr	r3, [sp, #4]	@ tmp169, fs
 1770 001c 000053E3 		cmp	r3, #0	@ tmp169,
 1771 0020 0100001A 		bne	.L119	@,
 1772              		.cfi_offset 14, -4
 731:fat16.cpp     ****             return 0;
 1773              		.loc 1 731 0
 1774 0024 0030A0E3 		mov	r3, #0	@ D.11382,
 1775 0028 9C0000EA 		b	.L120	@
 1776              	.L119:
 732:fat16.cpp     ****     
 733:fat16.cpp     ****         device_read_t device_read = fs->partition->device_read;
ARM GAS  /tmp/ccwDRvq0.s 			page 46


 1777              		.loc 1 733 0
 1778 002c 04309DE5 		ldr	r3, [sp, #4]	@ tmp170, fs
 1779 0030 003093E5 		ldr	r3, [r3, #0]	@ D.11383, fs_9(D)->partition
 1780 0034 003093E5 		ldr	r3, [r3, #0]	@ tmp171, D.11383_11->device_read
 1781 0038 14308DE5 		str	r3, [sp, #20]	@ tmp171, device_read
 734:fat16.cpp     ****         device_write_t device_write = fs->partition->device_write;
 1782              		.loc 1 734 0
 1783 003c 04309DE5 		ldr	r3, [sp, #4]	@ tmp172, fs
 1784 0040 003093E5 		ldr	r3, [r3, #0]	@ D.11384, fs_9(D)->partition
 1785 0044 083093E5 		ldr	r3, [r3, #8]	@ tmp173, D.11384_13->device_write
 1786 0048 10308DE5 		str	r3, [sp, #16]	@ tmp173, device_write
 735:fat16.cpp     ****         uint32_t fat_offset = fs->header.fat_offset;
 1787              		.loc 1 735 0
 1788 004c 04309DE5 		ldr	r3, [sp, #4]	@ tmp174, fs
 1789 0050 083093E5 		ldr	r3, [r3, #8]	@ tmp175, fs_9(D)->header.fat_offset
 1790 0054 0C308DE5 		str	r3, [sp, #12]	@ tmp175, fat_offset
 736:fat16.cpp     ****         uint16_t cluster_max = fs->header.fat_size / 2;
 1791              		.loc 1 736 0
 1792 0058 04309DE5 		ldr	r3, [sp, #4]	@ tmp176, fs
 1793 005c 0C3093E5 		ldr	r3, [r3, #12]	@ D.11385, fs_9(D)->header.fat_size
 1794 0060 A330A0E1 		mov	r3, r3, lsr #1	@ D.11386, D.11385,
 1795 0064 BA30CDE1 		strh	r3, [sp, #10]	@ movhi	@ D.11386, cluster_max
 737:fat16.cpp     ****         uint16_t cluster_next = 0;
 1796              		.loc 1 737 0
 1797 0068 0030A0E3 		mov	r3, #0	@ tmp178,
 1798 006c BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp177, cluster_next
 738:fat16.cpp     ****         uint16_t count_left = count;
 1799              		.loc 1 738 0
 1800 0070 B030DDE1 		ldrh	r3, [sp, #0]	@ movhi	@ tmp179, count
 1801 0074 BC31CDE1 		strh	r3, [sp, #28]	@ movhi	@ tmp179, count_left
 739:fat16.cpp     ****         uint8_t buffer[2];
 740:fat16.cpp     ****         uint16_t cluster_new;
 741:fat16.cpp     ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 1802              		.loc 1 741 0
 1803 0078 0030A0E3 		mov	r3, #0	@ tmp181,
 1804 007c BA31CDE1 		strh	r3, [sp, #26]	@ movhi	@ tmp180, cluster_new
 1805 0080 4E0000EA 		b	.L121	@
 1806              	.L128:
 742:fat16.cpp     ****         {
 743:fat16.cpp     ****             if(!device_read(fat_offset + 2 * cluster_new, buffer, sizeof(buffer)))
 1807              		.loc 1 743 0
 1808 0084 BA31DDE1 		ldrh	r3, [sp, #26]	@ D.11393, cluster_new
 1809 0088 8330A0E1 		mov	r3, r3, asl #1	@ D.11394, D.11393,
 1810 008c 0320A0E1 		mov	r2, r3	@ D.11395, D.11394
 1811 0090 0C309DE5 		ldr	r3, [sp, #12]	@ tmp182, fat_offset
 1812 0094 031082E0 		add	r1, r2, r3	@ D.11396, D.11395, tmp182
 1813 0098 08208DE2 		add	r2, sp, #8	@ tmp183,,
 1814 009c 14309DE5 		ldr	r3, [sp, #20]	@ tmp184, device_read
 1815 00a0 0100A0E1 		mov	r0, r1	@, D.11396
 1816 00a4 0210A0E1 		mov	r1, r2	@, tmp183
 1817 00a8 0220A0E3 		mov	r2, #2	@,
 1818 00ac 0FE0A0E1 		mov	lr, pc
 1819 00b0 13FF2FE1 		bx	r3	@ tmp184
 1820 00b4 0030A0E1 		mov	r3, r0	@ tmp185,
 1821 00b8 000053E3 		cmp	r3, #0	@ D.11397,
 1822 00bc 0030A013 		movne	r3, #0	@, tmp187
 1823 00c0 0130A003 		moveq	r3, #1	@, tmp187
ARM GAS  /tmp/ccwDRvq0.s 			page 47


 1824 00c4 FF3003E2 		and	r3, r3, #255	@ retval.26, tmp186,
 1825 00c8 000053E3 		cmp	r3, #0	@ retval.26,
 1826 00cc 0100000A 		beq	.L122	@,
 744:fat16.cpp     ****                 return 0;
 1827              		.loc 1 744 0
 1828 00d0 0030A0E3 		mov	r3, #0	@ D.11382,
 1829 00d4 710000EA 		b	.L120	@
 1830              	.L122:
 745:fat16.cpp     ****     
 746:fat16.cpp     ****             /* check if this is a free cluster */
 747:fat16.cpp     ****             if(buffer[0] == (FAT16_CLUSTER_FREE & 0xff) &&
 1831              		.loc 1 747 0
 1832 00d8 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2	@ D.11400, buffer
 1833 00dc 000053E3 		cmp	r3, #0	@ D.11400,
 1834 00e0 3300001A 		bne	.L123	@,
 748:fat16.cpp     ****                 buffer[1] == ((FAT16_CLUSTER_FREE >> 8) & 0xff))
 1835              		.loc 1 748 0 discriminator 1
 1836 00e4 0930DDE5 		ldrb	r3, [sp, #9]	@ zero_extendqisi2	@ D.11403, buffer
 747:fat16.cpp     ****             if(buffer[0] == (FAT16_CLUSTER_FREE & 0xff) &&
 1837              		.loc 1 747 0 discriminator 1
 1838 00e8 000053E3 		cmp	r3, #0	@ D.11403,
 1839 00ec 3000001A 		bne	.L123	@,
 749:fat16.cpp     ****             {
 750:fat16.cpp     ****                 /* allocate cluster */
 751:fat16.cpp     ****                 if(count_left == count)
 1840              		.loc 1 751 0
 1841 00f0 BC21DDE1 		ldrh	r2, [sp, #28]	@ tmp188, count_left
 1842 00f4 B030DDE1 		ldrh	r3, [sp, #0]	@ tmp189, count
 1843 00f8 030052E1 		cmp	r2, r3	@ tmp188, tmp189
 1844 00fc 0400001A 		bne	.L124	@,
 752:fat16.cpp     ****                 {
 753:fat16.cpp     ****                     buffer[0] = FAT16_CLUSTER_LAST_MAX & 0xff;
 1845              		.loc 1 753 0
 1846 0100 0030E0E3 		mvn	r3, #0	@ tmp190,
 1847 0104 0830CDE5 		strb	r3, [sp, #8]	@ tmp191, buffer
 754:fat16.cpp     ****                     buffer[1] = (FAT16_CLUSTER_LAST_MAX >> 8) & 0xff;
 1848              		.loc 1 754 0
 1849 0108 0030E0E3 		mvn	r3, #0	@ tmp192,
 1850 010c 0930CDE5 		strb	r3, [sp, #9]	@ tmp193, buffer
 1851 0110 080000EA 		b	.L125	@
 1852              	.L124:
 755:fat16.cpp     ****                 }
 756:fat16.cpp     ****                 else
 757:fat16.cpp     ****                 {
 758:fat16.cpp     ****                     buffer[0] = cluster_next & 0xff;
 1853              		.loc 1 758 0
 1854 0114 BE31DDE1 		ldrh	r3, [sp, #30]	@ movhi	@ tmp194, cluster_next
 1855 0118 FF3003E2 		and	r3, r3, #255	@ D.11409, tmp194,
 1856 011c 0830CDE5 		strb	r3, [sp, #8]	@ tmp195, buffer
 759:fat16.cpp     ****                     buffer[1] = (cluster_next >> 8) & 0xff;
 1857              		.loc 1 759 0
 1858 0120 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp196, cluster_next
 1859 0124 2334A0E1 		mov	r3, r3, lsr #8	@ tmp197, tmp196,
 1860 0128 0338A0E1 		mov	r3, r3, asl #16	@ tmp198, tmp197,
 1861 012c 2338A0E1 		mov	r3, r3, lsr #16	@ D.11410, tmp198,
 1862 0130 FF3003E2 		and	r3, r3, #255	@ D.11411, D.11410,
 1863 0134 0930CDE5 		strb	r3, [sp, #9]	@ tmp199, buffer
ARM GAS  /tmp/ccwDRvq0.s 			page 48


 1864              	.L125:
 760:fat16.cpp     ****                 }
 761:fat16.cpp     ****     
 762:fat16.cpp     ****                 if(!device_write(fat_offset + 2 * cluster_new, buffer, sizeof(buffer)))
 1865              		.loc 1 762 0
 1866 0138 BA31DDE1 		ldrh	r3, [sp, #26]	@ D.11413, cluster_new
 1867 013c 8330A0E1 		mov	r3, r3, asl #1	@ D.11414, D.11413,
 1868 0140 0320A0E1 		mov	r2, r3	@ D.11415, D.11414
 1869 0144 0C309DE5 		ldr	r3, [sp, #12]	@ tmp200, fat_offset
 1870 0148 031082E0 		add	r1, r2, r3	@ D.11416, D.11415, tmp200
 1871 014c 08208DE2 		add	r2, sp, #8	@ tmp201,,
 1872 0150 10309DE5 		ldr	r3, [sp, #16]	@ tmp202, device_write
 1873 0154 0100A0E1 		mov	r0, r1	@, D.11416
 1874 0158 0210A0E1 		mov	r1, r2	@, tmp201
 1875 015c 0220A0E3 		mov	r2, #2	@,
 1876 0160 0FE0A0E1 		mov	lr, pc
 1877 0164 13FF2FE1 		bx	r3	@ tmp202
 1878 0168 0030A0E1 		mov	r3, r0	@ tmp203,
 1879 016c 000053E3 		cmp	r3, #0	@ D.11417,
 1880 0170 0030A013 		movne	r3, #0	@, tmp205
 1881 0174 0130A003 		moveq	r3, #1	@, tmp205
 1882 0178 FF3003E2 		and	r3, r3, #255	@ retval.27, tmp204,
 1883 017c 000053E3 		cmp	r3, #0	@ retval.27,
 1884 0180 1700001A 		bne	.L132	@,
 1885              	.L126:
 763:fat16.cpp     ****                     break;
 764:fat16.cpp     ****     
 765:fat16.cpp     ****                 cluster_next = cluster_new;
 1886              		.loc 1 765 0
 1887 0184 BA31DDE1 		ldrh	r3, [sp, #26]	@ movhi	@ tmp206, cluster_new
 1888 0188 BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp206, cluster_next
 766:fat16.cpp     ****                 if(--count_left == 0)
 1889              		.loc 1 766 0
 1890 018c BC31DDE1 		ldrh	r3, [sp, #28]	@ movhi	@ tmp207, count_left
 1891 0190 013043E2 		sub	r3, r3, #1	@ tmp208, tmp207,
 1892 0194 BC31CDE1 		strh	r3, [sp, #28]	@ movhi	@ tmp208, count_left
 1893 0198 BC31DDE1 		ldrh	r3, [sp, #28]	@ tmp210, count_left
 1894 019c 000053E3 		cmp	r3, #0	@ tmp210,
 1895 01a0 0030A013 		movne	r3, #0	@, tmp211
 1896 01a4 0130A003 		moveq	r3, #1	@, tmp211
 1897 01a8 FF3003E2 		and	r3, r3, #255	@ retval.28, tmp209,
 1898 01ac 000053E3 		cmp	r3, #0	@ retval.28,
 1899 01b0 0D00001A 		bne	.L133	@,
 1900              	.L123:
 741:fat16.cpp     ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 1901              		.loc 1 741 0
 1902 01b4 BA31DDE1 		ldrh	r3, [sp, #26]	@ movhi	@ tmp212, cluster_new
 1903 01b8 013083E2 		add	r3, r3, #1	@ tmp213, tmp212,
 1904 01bc BA31CDE1 		strh	r3, [sp, #26]	@ movhi	@ tmp213, cluster_new
 1905              	.L121:
 741:fat16.cpp     ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 1906              		.loc 1 741 0 is_stmt 0 discriminator 1
 1907 01c0 BA21DDE1 		ldrh	r2, [sp, #26]	@ tmp215, cluster_new
 1908 01c4 BA30DDE1 		ldrh	r3, [sp, #10]	@ tmp216, cluster_max
 1909 01c8 030052E1 		cmp	r2, r3	@ tmp215, tmp216
 1910 01cc 0030A023 		movcs	r3, #0	@, tmp217
 1911 01d0 0130A033 		movcc	r3, #1	@, tmp217
ARM GAS  /tmp/ccwDRvq0.s 			page 49


 1912 01d4 FF3003E2 		and	r3, r3, #255	@ D.11390, tmp214,
 1913 01d8 000053E3 		cmp	r3, #0	@ D.11390,
 1914 01dc A8FFFF1A 		bne	.L128	@,
 1915 01e0 020000EA 		b	.L127	@
 1916              	.L132:
 763:fat16.cpp     ****                     break;
 1917              		.loc 1 763 0 is_stmt 1
 1918 01e4 0000A0E1 		mov	r0, r0	@ nop
 1919 01e8 000000EA 		b	.L127	@
 1920              	.L133:
 767:fat16.cpp     ****                     break;
 1921              		.loc 1 767 0
 1922 01ec 0000A0E1 		mov	r0, r0	@ nop
 1923              	.L127:
 768:fat16.cpp     ****             }
 769:fat16.cpp     ****         }
 770:fat16.cpp     ****     
 771:fat16.cpp     ****         do
 772:fat16.cpp     ****         {
 773:fat16.cpp     ****             if(count_left > 0)
 1924              		.loc 1 773 0
 1925 01f0 BC31DDE1 		ldrh	r3, [sp, #28]	@ tmp218, count_left
 1926 01f4 000053E3 		cmp	r3, #0	@ tmp218,
 1927 01f8 2000001A 		bne	.L134	@,
 1928              	.L129:
 774:fat16.cpp     ****                 break;
 775:fat16.cpp     ****     
 776:fat16.cpp     ****             /* We allocated a new cluster chain. Now join
 777:fat16.cpp     ****                                              * it with the existing one.
 778:fat16.cpp     ****                                              */
 779:fat16.cpp     ****             if(cluster_num >= 2)
 1929              		.loc 1 779 0
 1930 01fc B230DDE1 		ldrh	r3, [sp, #2]	@ tmp219, cluster_num
 1931 0200 010053E3 		cmp	r3, #1	@ tmp219,
 1932 0204 1B00009A 		bls	.L131	@,
 780:fat16.cpp     ****             {
 781:fat16.cpp     ****                 buffer[0] = cluster_next & 0xff;
 1933              		.loc 1 781 0
 1934 0208 BE31DDE1 		ldrh	r3, [sp, #30]	@ movhi	@ tmp220, cluster_next
 1935 020c FF3003E2 		and	r3, r3, #255	@ D.11430, tmp220,
 1936 0210 0830CDE5 		strb	r3, [sp, #8]	@ tmp221, buffer
 782:fat16.cpp     ****                 buffer[1] = (cluster_next >> 8) & 0xff;
 1937              		.loc 1 782 0
 1938 0214 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp222, cluster_next
 1939 0218 2334A0E1 		mov	r3, r3, lsr #8	@ tmp223, tmp222,
 1940 021c 0338A0E1 		mov	r3, r3, asl #16	@ tmp224, tmp223,
 1941 0220 2338A0E1 		mov	r3, r3, lsr #16	@ D.11431, tmp224,
 1942 0224 FF3003E2 		and	r3, r3, #255	@ D.11432, D.11431,
 1943 0228 0930CDE5 		strb	r3, [sp, #9]	@ tmp225, buffer
 783:fat16.cpp     ****                 if(!device_write(fat_offset + 2 * cluster_num, buffer, sizeof(buffer)))
 1944              		.loc 1 783 0
 1945 022c B230DDE1 		ldrh	r3, [sp, #2]	@ D.11434, cluster_num
 1946 0230 8330A0E1 		mov	r3, r3, asl #1	@ D.11435, D.11434,
 1947 0234 0320A0E1 		mov	r2, r3	@ D.11436, D.11435
 1948 0238 0C309DE5 		ldr	r3, [sp, #12]	@ tmp226, fat_offset
 1949 023c 031082E0 		add	r1, r2, r3	@ D.11437, D.11436, tmp226
 1950 0240 08208DE2 		add	r2, sp, #8	@ tmp227,,
ARM GAS  /tmp/ccwDRvq0.s 			page 50


 1951 0244 10309DE5 		ldr	r3, [sp, #16]	@ tmp228, device_write
 1952 0248 0100A0E1 		mov	r0, r1	@, D.11437
 1953 024c 0210A0E1 		mov	r1, r2	@, tmp227
 1954 0250 0220A0E3 		mov	r2, #2	@,
 1955 0254 0FE0A0E1 		mov	lr, pc
 1956 0258 13FF2FE1 		bx	r3	@ tmp228
 1957 025c 0030A0E1 		mov	r3, r0	@ tmp229,
 1958 0260 000053E3 		cmp	r3, #0	@ D.11438,
 1959 0264 0030A013 		movne	r3, #0	@, tmp231
 1960 0268 0130A003 		moveq	r3, #1	@, tmp231
 1961 026c FF3003E2 		and	r3, r3, #255	@ retval.29, tmp230,
 1962 0270 000053E3 		cmp	r3, #0	@ retval.29,
 1963 0274 0300001A 		bne	.L135	@,
 1964              	.L131:
 784:fat16.cpp     ****                     break;
 785:fat16.cpp     ****             }
 786:fat16.cpp     ****     
 787:fat16.cpp     ****             return cluster_next;
 1965              		.loc 1 787 0
 1966 0278 BE31DDE1 		ldrh	r3, [sp, #30]	@ D.11382, cluster_next
 1967 027c 070000EA 		b	.L120	@
 1968              	.L134:
 774:fat16.cpp     ****                 break;
 1969              		.loc 1 774 0
 1970 0280 0000A0E1 		mov	r0, r0	@ nop
 1971 0284 000000EA 		b	.L130	@
 1972              	.L135:
 784:fat16.cpp     ****                     break;
 1973              		.loc 1 784 0
 1974 0288 0000A0E1 		mov	r0, r0	@ nop
 1975              	.L130:
 788:fat16.cpp     ****     
 789:fat16.cpp     ****         }
 790:fat16.cpp     ****         while(0);
 791:fat16.cpp     ****     
 792:fat16.cpp     ****         /* No space left on device or writing error.
 793:fat16.cpp     ****                              * Free up all clusters already allocated.
 794:fat16.cpp     ****                              */
 795:fat16.cpp     ****         fat16_free_clusters(fs, cluster_next);
 1976              		.loc 1 795 0
 1977 028c BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp232, cluster_next
 1978 0290 04009DE5 		ldr	r0, [sp, #4]	@, fs
 1979 0294 0310A0E1 		mov	r1, r3	@, tmp232
 1980 0298 FEFFFFEB 		bl	_ZL19fat16_free_clustersPK15fat16_fs_structt	@
 796:fat16.cpp     ****     
 797:fat16.cpp     ****         return 0;
 1981              		.loc 1 797 0
 1982 029c 0030A0E3 		mov	r3, #0	@ D.11382,
 1983              	.L120:
 1984              	.LBE20:
 798:fat16.cpp     ****     #else
 799:fat16.cpp     ****         return 0;
 800:fat16.cpp     ****     #endif
 801:fat16.cpp     **** }
 1985              		.loc 1 801 0
 1986 02a0 0300A0E1 		mov	r0, r3	@, <retval>
 1987 02a4 24D08DE2 		add	sp, sp, #36	@,,
ARM GAS  /tmp/ccwDRvq0.s 			page 51


 1988 02a8 04E09DE4 		ldr	lr, [sp], #4
 1989 02ac 1EFF2FE1 		bx	lr
 1990              		.cfi_endproc
 1991              	.LFE119:
 1992              		.size	_ZL21fat16_append_clustersPK15fat16_fs_structtt, .-_ZL21fat16_append_clustersPK15fat16_fs_st
 1993              		.section	.text._ZL19fat16_free_clustersPK15fat16_fs_structt,"ax",%progbits
 1994              		.align	2
 1995              		.type	_ZL19fat16_free_clustersPK15fat16_fs_structt, %function
 1996              	_ZL19fat16_free_clustersPK15fat16_fs_structt:
 1997              	.LFB120:
 802:fat16.cpp     **** 
 803:fat16.cpp     **** /**
 804:fat16.cpp     ****  * \ingroup fat16_fs
 805:fat16.cpp     ****  * Frees a cluster chain, or a part thereof.
 806:fat16.cpp     ****  *
 807:fat16.cpp     ****  * Marks the specified cluster and all clusters which are sequentially
 808:fat16.cpp     ****  * referenced by it as free. They may then be used again for future
 809:fat16.cpp     ****  * file allocations.
 810:fat16.cpp     ****  *
 811:fat16.cpp     ****  * \note If this function is used for freeing just a part of a cluster
 812:fat16.cpp     ****  *       chain, the new end of the chain is not correctly terminated
 813:fat16.cpp     ****  *       within the FAT. Use fat16_terminate_clusters() instead.
 814:fat16.cpp     ****  *
 815:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
 816:fat16.cpp     ****  * \param[in] cluster_num The starting cluster of the chain which to free.
 817:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
 818:fat16.cpp     ****  * \see fat16_terminate_clusters
 819:fat16.cpp     ****  */
 820:fat16.cpp     **** uint8_t fat16_free_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num)
 821:fat16.cpp     **** {
 1998              		.loc 1 821 0
 1999              		.cfi_startproc
 2000              		@ Function supports interworking.
 2001              		@ args = 0, pretend = 0, frame = 24
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
 2003 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2004              	.LCFI20:
 2005              		.cfi_def_cfa_offset 4
 2006 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 2007              	.LCFI21:
 2008              		.cfi_def_cfa_offset 32
 2009 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 2010 000c 0130A0E1 		mov	r3, r1	@ tmp157, cluster_num
 2011 0010 B230CDE1 		strh	r3, [sp, #2]	@ movhi	@ tmp157, cluster_num
 2012              	.LBB21:
 822:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
 823:fat16.cpp     ****         if(!fs || cluster_num < 2)
 2013              		.loc 1 823 0
 2014 0014 04309DE5 		ldr	r3, [sp, #4]	@ tmp158, fs
 2015 0018 000053E3 		cmp	r3, #0	@ tmp158,
 2016 001c 0200000A 		beq	.L137	@,
 2017              		.cfi_offset 14, -4
 2018              		.loc 1 823 0 is_stmt 0 discriminator 1
 2019 0020 B230DDE1 		ldrh	r3, [sp, #2]	@ tmp159, cluster_num
 2020 0024 010053E3 		cmp	r3, #1	@ tmp159,
 2021 0028 0100008A 		bhi	.L138	@,
 2022              	.L137:
ARM GAS  /tmp/ccwDRvq0.s 			page 52


 824:fat16.cpp     ****             return 0;
 2023              		.loc 1 824 0 is_stmt 1
 2024 002c 0030A0E3 		mov	r3, #0	@ D.11342,
 2025 0030 590000EA 		b	.L139	@
 2026              	.L138:
 825:fat16.cpp     ****     
 826:fat16.cpp     ****         uint32_t fat_offset = fs->header.fat_offset;
 2027              		.loc 1 826 0
 2028 0034 04309DE5 		ldr	r3, [sp, #4]	@ tmp160, fs
 2029 0038 083093E5 		ldr	r3, [r3, #8]	@ tmp161, fs_4(D)->header.fat_offset
 2030 003c 10308DE5 		str	r3, [sp, #16]	@ tmp161, fat_offset
 827:fat16.cpp     ****         uint8_t buffer[2];
 828:fat16.cpp     ****         while(cluster_num)
 2031              		.loc 1 828 0
 2032 0040 4D0000EA 		b	.L140	@
 2033              	.L146:
 2034              	.LBB22:
 829:fat16.cpp     ****         {
 830:fat16.cpp     ****             if(!fs->partition->device_read(fat_offset + 2 * cluster_num, buffer, 2))
 2035              		.loc 1 830 0
 2036 0044 04309DE5 		ldr	r3, [sp, #4]	@ tmp162, fs
 2037 0048 003093E5 		ldr	r3, [r3, #0]	@ D.11348, fs_4(D)->partition
 2038 004c 003093E5 		ldr	r3, [r3, #0]	@ D.11349, D.11348_8->device_read
 2039 0050 B220DDE1 		ldrh	r2, [sp, #2]	@ D.11350, cluster_num
 2040 0054 8220A0E1 		mov	r2, r2, asl #1	@ D.11351, D.11350,
 2041 0058 0210A0E1 		mov	r1, r2	@ D.11352, D.11351
 2042 005c 10209DE5 		ldr	r2, [sp, #16]	@ tmp163, fat_offset
 2043 0060 021081E0 		add	r1, r1, r2	@ D.11353, D.11352, tmp163
 2044 0064 0C208DE2 		add	r2, sp, #12	@ tmp164,,
 2045 0068 0100A0E1 		mov	r0, r1	@, D.11353
 2046 006c 0210A0E1 		mov	r1, r2	@, tmp164
 2047 0070 0220A0E3 		mov	r2, #2	@,
 2048 0074 0FE0A0E1 		mov	lr, pc
 2049 0078 13FF2FE1 		bx	r3	@ D.11349
 2050 007c 0030A0E1 		mov	r3, r0	@ tmp165,
 2051 0080 000053E3 		cmp	r3, #0	@ D.11354,
 2052 0084 0030A013 		movne	r3, #0	@, tmp167
 2053 0088 0130A003 		moveq	r3, #1	@, tmp167
 2054 008c FF3003E2 		and	r3, r3, #255	@ retval.25, tmp166,
 2055 0090 000053E3 		cmp	r3, #0	@ retval.25,
 2056 0094 0100000A 		beq	.L141	@,
 831:fat16.cpp     ****                 return 0;
 2057              		.loc 1 831 0
 2058 0098 0030A0E3 		mov	r3, #0	@ D.11342,
 2059 009c 3E0000EA 		b	.L139	@
 2060              	.L141:
 832:fat16.cpp     ****     
 833:fat16.cpp     ****             /* get next cluster of current cluster before freeing current cluster */
 834:fat16.cpp     ****             uint16_t cluster_num_next = ((uint16_t) buffer[0]) |
 2061              		.loc 1 834 0
 2062 00a0 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2	@ D.11357, buffer
 835:fat16.cpp     ****             ((uint16_t) buffer[1] << 8);
 2063              		.loc 1 835 0
 2064 00a4 0320A0E1 		mov	r2, r3	@ D.11358, D.11357
 2065 00a8 0D30DDE5 		ldrb	r3, [sp, #13]	@ zero_extendqisi2	@ D.11359, buffer
 2066 00ac 0334A0E1 		mov	r3, r3, asl #8	@ D.11361, D.11360,
 2067 00b0 0338A0E1 		mov	r3, r3, asl #16	@ tmp168, D.11361,
ARM GAS  /tmp/ccwDRvq0.s 			page 53


 2068 00b4 2338A0E1 		mov	r3, r3, lsr #16	@ D.11362, tmp168,
 2069 00b8 033082E1 		orr	r3, r2, r3	@ tmp171, tmp169, tmp170
 2070 00bc 0338A0E1 		mov	r3, r3, asl #16	@ tmp172, tmp171,
 2071 00c0 2338A0E1 		mov	r3, r3, lsr #16	@ D.11363, tmp172,
 2072 00c4 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ D.11363, cluster_num_next
 836:fat16.cpp     ****     
 837:fat16.cpp     ****             if(cluster_num_next == FAT16_CLUSTER_FREE)
 2073              		.loc 1 837 0
 2074 00c8 B631DDE1 		ldrh	r3, [sp, #22]	@ tmp173, cluster_num_next
 2075 00cc 000053E3 		cmp	r3, #0	@ tmp173,
 2076 00d0 0100001A 		bne	.L142	@,
 838:fat16.cpp     ****                 return 1;
 2077              		.loc 1 838 0
 2078 00d4 0130A0E3 		mov	r3, #1	@ D.11342,
 2079 00d8 2F0000EA 		b	.L139	@
 2080              	.L142:
 839:fat16.cpp     ****             if(cluster_num_next == FAT16_CLUSTER_BAD ||
 2081              		.loc 1 839 0
 2082 00dc B621DDE1 		ldrh	r2, [sp, #22]	@ tmp174, cluster_num_next
 2083 00e0 C4309FE5 		ldr	r3, .L147	@ tmp175,
 2084 00e4 030052E1 		cmp	r2, r3	@ tmp174, tmp175
 2085 00e8 0700000A 		beq	.L143	@,
 2086              		.loc 1 839 0 is_stmt 0 discriminator 1
 2087 00ec B621DDE1 		ldrh	r2, [sp, #22]	@ tmp176, cluster_num_next
 2088 00f0 B8309FE5 		ldr	r3, .L147+4	@ tmp177,
 2089 00f4 030052E1 		cmp	r2, r3	@ tmp176, tmp177
 2090 00f8 0500009A 		bls	.L144	@,
 2091              		.loc 1 839 0 discriminator 2
 2092 00fc B621DDE1 		ldrh	r2, [sp, #22]	@ tmp178, cluster_num_next
 2093 0100 AC309FE5 		ldr	r3, .L147+8	@ tmp179,
 2094 0104 030052E1 		cmp	r2, r3	@ tmp178, tmp179
 2095 0108 0100008A 		bhi	.L144	@,
 2096              	.L143:
 840:fat16.cpp     ****                 (cluster_num_next >= FAT16_CLUSTER_RESERVED_MIN &&
 841:fat16.cpp     ****                cluster_num_next <= FAT16_CLUSTER_RESERVED_MAX
 842:fat16.cpp     ****                )
 843:fat16.cpp     ****                )
 844:fat16.cpp     ****             return 0;
 2097              		.loc 1 844 0 is_stmt 1
 2098 010c 0030A0E3 		mov	r3, #0	@ D.11342,
 2099 0110 210000EA 		b	.L139	@
 2100              	.L144:
 845:fat16.cpp     **** 			///*
 846:fat16.cpp     ****             if((cluster_num_next >= FAT16_CLUSTER_LAST_MIN) &&
 2101              		.loc 1 846 0
 2102 0114 B621DDE1 		ldrh	r2, [sp, #22]	@ tmp180, cluster_num_next
 2103 0118 8C309FE5 		ldr	r3, .L147	@ tmp181,
 2104 011c 030052E1 		cmp	r2, r3	@ tmp180, tmp181
 2105 0120 0100009A 		bls	.L145	@,
 847:fat16.cpp     ****                 (cluster_num_next <= FAT16_CLUSTER_LAST_MAX)
 848:fat16.cpp     ****                )
 849:fat16.cpp     **** 			//*/
 850:fat16.cpp     ****             cluster_num_next = 0;
 2106              		.loc 1 850 0
 2107 0124 0030A0E3 		mov	r3, #0	@ tmp183,
 2108 0128 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp182, cluster_num_next
 2109              	.L145:
ARM GAS  /tmp/ccwDRvq0.s 			page 54


 851:fat16.cpp     ****     
 852:fat16.cpp     ****             /* free cluster */
 853:fat16.cpp     ****             buffer[0] = FAT16_CLUSTER_FREE & 0xff;
 2110              		.loc 1 853 0
 2111 012c 0030A0E3 		mov	r3, #0	@ tmp184,
 2112 0130 0C30CDE5 		strb	r3, [sp, #12]	@ tmp185, buffer
 854:fat16.cpp     ****             buffer[1] = (FAT16_CLUSTER_FREE >> 8) & 0xff;
 2113              		.loc 1 854 0
 2114 0134 0030A0E3 		mov	r3, #0	@ tmp186,
 2115 0138 0D30CDE5 		strb	r3, [sp, #13]	@ tmp187, buffer
 855:fat16.cpp     ****             fs->partition->device_write(fat_offset + 2 * cluster_num, buffer, 2);
 2116              		.loc 1 855 0
 2117 013c 04309DE5 		ldr	r3, [sp, #4]	@ tmp188, fs
 2118 0140 003093E5 		ldr	r3, [r3, #0]	@ D.11373, fs_4(D)->partition
 2119 0144 083093E5 		ldr	r3, [r3, #8]	@ D.11374, D.11373_27->device_write
 2120 0148 B220DDE1 		ldrh	r2, [sp, #2]	@ D.11375, cluster_num
 2121 014c 8220A0E1 		mov	r2, r2, asl #1	@ D.11376, D.11375,
 2122 0150 0210A0E1 		mov	r1, r2	@ D.11377, D.11376
 2123 0154 10209DE5 		ldr	r2, [sp, #16]	@ tmp189, fat_offset
 2124 0158 021081E0 		add	r1, r1, r2	@ D.11378, D.11377, tmp189
 2125 015c 0C208DE2 		add	r2, sp, #12	@ tmp190,,
 2126 0160 0100A0E1 		mov	r0, r1	@, D.11378
 2127 0164 0210A0E1 		mov	r1, r2	@, tmp190
 2128 0168 0220A0E3 		mov	r2, #2	@,
 2129 016c 0FE0A0E1 		mov	lr, pc
 2130 0170 13FF2FE1 		bx	r3	@ D.11374
 856:fat16.cpp     ****     
 857:fat16.cpp     ****             /* We continue in any case here, even if freeing the cluster failed.
 858:fat16.cpp     ****                                              * The cluster is lost, but maybe we can still free up 
 859:fat16.cpp     ****                                              */
 860:fat16.cpp     ****     
 861:fat16.cpp     ****             cluster_num = cluster_num_next;
 2131              		.loc 1 861 0
 2132 0174 B631DDE1 		ldrh	r3, [sp, #22]	@ movhi	@ tmp191, cluster_num_next
 2133 0178 B230CDE1 		strh	r3, [sp, #2]	@ movhi	@ tmp191, cluster_num
 2134              	.L140:
 2135              	.LBE22:
 828:fat16.cpp     ****         while(cluster_num)
 2136              		.loc 1 828 0 discriminator 1
 2137 017c B230DDE1 		ldrh	r3, [sp, #2]	@ tmp193, cluster_num
 2138 0180 000053E3 		cmp	r3, #0	@ tmp193,
 2139 0184 0030A003 		moveq	r3, #0	@, tmp194
 2140 0188 0130A013 		movne	r3, #1	@, tmp194
 2141 018c FF3003E2 		and	r3, r3, #255	@ D.11346, tmp192,
 2142 0190 000053E3 		cmp	r3, #0	@ D.11346,
 2143 0194 AAFFFF1A 		bne	.L146	@,
 862:fat16.cpp     ****         }
 863:fat16.cpp     ****     
 864:fat16.cpp     ****         return 1;
 2144              		.loc 1 864 0
 2145 0198 0130A0E3 		mov	r3, #1	@ D.11342,
 2146              	.L139:
 2147              	.LBE21:
 865:fat16.cpp     ****     #else
 866:fat16.cpp     ****         return 0;
 867:fat16.cpp     ****     #endif
 868:fat16.cpp     **** }
ARM GAS  /tmp/ccwDRvq0.s 			page 55


 2148              		.loc 1 868 0
 2149 019c 0300A0E1 		mov	r0, r3	@, <retval>
 2150 01a0 1CD08DE2 		add	sp, sp, #28	@,,
 2151 01a4 04E09DE4 		ldr	lr, [sp], #4
 2152 01a8 1EFF2FE1 		bx	lr
 2153              	.L148:
 2154              		.align	2
 2155              	.L147:
 2156 01ac F7FF0000 		.word	65527
 2157 01b0 EFFF0000 		.word	65519
 2158 01b4 F6FF0000 		.word	65526
 2159              		.cfi_endproc
 2160              	.LFE120:
 2161              		.size	_ZL19fat16_free_clustersPK15fat16_fs_structt, .-_ZL19fat16_free_clustersPK15fat16_fs_structt
 2162              		.section	.text._ZL24fat16_terminate_clustersPK15fat16_fs_structt,"ax",%progbits
 2163              		.align	2
 2164              		.type	_ZL24fat16_terminate_clustersPK15fat16_fs_structt, %function
 2165              	_ZL24fat16_terminate_clustersPK15fat16_fs_structt:
 2166              	.LFB121:
 869:fat16.cpp     **** 
 870:fat16.cpp     **** /**
 871:fat16.cpp     ****  * \ingroup fat16_fs
 872:fat16.cpp     ****  * Frees a part of a cluster chain and correctly terminates the rest.
 873:fat16.cpp     ****  *
 874:fat16.cpp     ****  * Marks the specified cluster as the new end of a cluster chain and
 875:fat16.cpp     ****  * frees all following clusters.
 876:fat16.cpp     ****  *
 877:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
 878:fat16.cpp     ****  * \param[in] cluster_num The new end of the cluster chain.
 879:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
 880:fat16.cpp     ****  * \see fat16_free_clusters
 881:fat16.cpp     ****  */
 882:fat16.cpp     **** uint8_t fat16_terminate_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num)
 883:fat16.cpp     **** {
 2167              		.loc 1 883 0
 2168              		.cfi_startproc
 2169              		@ Function supports interworking.
 2170              		@ args = 0, pretend = 0, frame = 16
 2171              		@ frame_needed = 0, uses_anonymous_args = 0
 2172 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2173              	.LCFI22:
 2174              		.cfi_def_cfa_offset 4
 2175 0004 14D04DE2 		sub	sp, sp, #20	@,,
 2176              	.LCFI23:
 2177              		.cfi_def_cfa_offset 24
 2178 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 2179 000c 0130A0E1 		mov	r3, r1	@ tmp144, cluster_num
 2180 0010 B230CDE1 		strh	r3, [sp, #2]	@ movhi	@ tmp144, cluster_num
 2181              	.LBB23:
 884:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
 885:fat16.cpp     ****         if(!fs || cluster_num < 2)
 2182              		.loc 1 885 0
 2183 0014 04309DE5 		ldr	r3, [sp, #4]	@ tmp145, fs
 2184 0018 000053E3 		cmp	r3, #0	@ tmp145,
 2185 001c 0200000A 		beq	.L150	@,
 2186              		.cfi_offset 14, -4
 2187              		.loc 1 885 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccwDRvq0.s 			page 56


 2188 0020 B230DDE1 		ldrh	r3, [sp, #2]	@ tmp146, cluster_num
 2189 0024 010053E3 		cmp	r3, #1	@ tmp146,
 2190 0028 0100008A 		bhi	.L151	@,
 2191              	.L150:
 886:fat16.cpp     ****             return 0;
 2192              		.loc 1 886 0 is_stmt 1
 2193 002c 0030A0E3 		mov	r3, #0	@ D.11324,
 2194 0030 2A0000EA 		b	.L152	@
 2195              	.L151:
 887:fat16.cpp     ****     
 888:fat16.cpp     ****         /* fetch next cluster before overwriting the cluster entry */
 889:fat16.cpp     ****         uint16_t cluster_num_next = fat16_get_next_cluster(fs, cluster_num);
 2196              		.loc 1 889 0
 2197 0034 B230DDE1 		ldrh	r3, [sp, #2]	@ tmp147, cluster_num
 2198 0038 04009DE5 		ldr	r0, [sp, #4]	@, fs
 2199 003c 0310A0E1 		mov	r1, r3	@, tmp147
 2200 0040 FEFFFFEB 		bl	_ZL22fat16_get_next_clusterPK15fat16_fs_structt	@
 2201 0044 0030A0E1 		mov	r3, r0	@ tmp148,
 2202 0048 BE30CDE1 		strh	r3, [sp, #14]	@ movhi	@ tmp148, cluster_num_next
 890:fat16.cpp     ****     
 891:fat16.cpp     ****         /* mark cluster as the last one */
 892:fat16.cpp     ****         uint8_t buffer[2];
 893:fat16.cpp     ****         buffer[0] = FAT16_CLUSTER_LAST_MAX & 0xff;
 2203              		.loc 1 893 0
 2204 004c 0030E0E3 		mvn	r3, #0	@ tmp149,
 2205 0050 0C30CDE5 		strb	r3, [sp, #12]	@ tmp150, buffer
 894:fat16.cpp     ****         buffer[1] = (FAT16_CLUSTER_LAST_MAX >> 8) & 0xff;
 2206              		.loc 1 894 0
 2207 0054 0030E0E3 		mvn	r3, #0	@ tmp151,
 2208 0058 0D30CDE5 		strb	r3, [sp, #13]	@ tmp152, buffer
 895:fat16.cpp     ****         if(!fs->partition->device_write(fs->header.fat_offset + 2 * cluster_num, buffer, 2))
 2209              		.loc 1 895 0
 2210 005c 04309DE5 		ldr	r3, [sp, #4]	@ tmp153, fs
 2211 0060 003093E5 		ldr	r3, [r3, #0]	@ D.11326, fs_2(D)->partition
 2212 0064 083093E5 		ldr	r3, [r3, #8]	@ D.11327, D.11326_5->device_write
 2213 0068 04209DE5 		ldr	r2, [sp, #4]	@ tmp154, fs
 2214 006c 081092E5 		ldr	r1, [r2, #8]	@ D.11328, fs_2(D)->header.fat_offset
 2215 0070 B220DDE1 		ldrh	r2, [sp, #2]	@ D.11329, cluster_num
 2216 0074 8220A0E1 		mov	r2, r2, asl #1	@ D.11330, D.11329,
 2217 0078 021081E0 		add	r1, r1, r2	@ D.11332, D.11328, D.11331
 2218 007c 0C208DE2 		add	r2, sp, #12	@ tmp155,,
 2219 0080 0100A0E1 		mov	r0, r1	@, D.11332
 2220 0084 0210A0E1 		mov	r1, r2	@, tmp155
 2221 0088 0220A0E3 		mov	r2, #2	@,
 2222 008c 0FE0A0E1 		mov	lr, pc
 2223 0090 13FF2FE1 		bx	r3	@ D.11327
 2224 0094 0030A0E1 		mov	r3, r0	@ tmp156,
 2225 0098 000053E3 		cmp	r3, #0	@ D.11333,
 2226 009c 0030A013 		movne	r3, #0	@, tmp158
 2227 00a0 0130A003 		moveq	r3, #1	@, tmp158
 2228 00a4 FF3003E2 		and	r3, r3, #255	@ retval.24, tmp157,
 2229 00a8 000053E3 		cmp	r3, #0	@ retval.24,
 2230 00ac 0100000A 		beq	.L153	@,
 896:fat16.cpp     ****             return 0;
 2231              		.loc 1 896 0
 2232 00b0 0030A0E3 		mov	r3, #0	@ D.11324,
 2233 00b4 090000EA 		b	.L152	@
ARM GAS  /tmp/ccwDRvq0.s 			page 57


 2234              	.L153:
 897:fat16.cpp     ****     
 898:fat16.cpp     ****         /* free remaining clusters */
 899:fat16.cpp     ****         if(cluster_num_next)
 2235              		.loc 1 899 0
 2236 00b8 BE30DDE1 		ldrh	r3, [sp, #14]	@ tmp159, cluster_num_next
 2237 00bc 000053E3 		cmp	r3, #0	@ tmp159,
 2238 00c0 0500000A 		beq	.L154	@,
 900:fat16.cpp     ****             return fat16_free_clusters(fs, cluster_num_next);
 2239              		.loc 1 900 0
 2240 00c4 BE30DDE1 		ldrh	r3, [sp, #14]	@ tmp160, cluster_num_next
 2241 00c8 04009DE5 		ldr	r0, [sp, #4]	@, fs
 2242 00cc 0310A0E1 		mov	r1, r3	@, tmp160
 2243 00d0 FEFFFFEB 		bl	_ZL19fat16_free_clustersPK15fat16_fs_structt	@
 2244 00d4 0030A0E1 		mov	r3, r0	@ tmp161,
 2245 00d8 000000EA 		b	.L152	@
 2246              	.L154:
 901:fat16.cpp     ****         else
 902:fat16.cpp     ****             return 1;
 2247              		.loc 1 902 0
 2248 00dc 0130A0E3 		mov	r3, #1	@ D.11324,
 2249              	.L152:
 2250              	.LBE23:
 903:fat16.cpp     ****     #else
 904:fat16.cpp     ****         return 0;
 905:fat16.cpp     ****     #endif
 906:fat16.cpp     **** }
 2251              		.loc 1 906 0
 2252 00e0 0300A0E1 		mov	r0, r3	@, <retval>
 2253 00e4 14D08DE2 		add	sp, sp, #20	@,,
 2254 00e8 04E09DE4 		ldr	lr, [sp], #4
 2255 00ec 1EFF2FE1 		bx	lr
 2256              		.cfi_endproc
 2257              	.LFE121:
 2258              		.size	_ZL24fat16_terminate_clustersPK15fat16_fs_structt, .-_ZL24fat16_terminate_clustersPK15fat16_
 2259              		.section	.text._Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_entry_struct,"ax",%progbits
 2260              		.align	2
 2261              		.global	_Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_entry_struct
 2262              		.type	_Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_entry_struct, %function
 2263              	_Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_entry_struct:
 2264              	.LFB122:
 907:fat16.cpp     **** 
 908:fat16.cpp     **** /**
 909:fat16.cpp     ****  * \ingroup fat16_file
 910:fat16.cpp     ****  * Opens a file on a FAT16 filesystem.
 911:fat16.cpp     ****  *
 912:fat16.cpp     ****  * \param[in] fs The filesystem on which the file to open lies.
 913:fat16.cpp     ****  * \param[in] dir_entry The directory entry of the file to open.
 914:fat16.cpp     ****  * \returns The file handle, or 0 on failure.
 915:fat16.cpp     ****  * \see fat16_close_file
 916:fat16.cpp     ****  */
 917:fat16.cpp     **** struct fat16_file_struct* fat16_open_file(struct fat16_fs_struct* fs, const struct fat16_dir_entry_
 918:fat16.cpp     **** {
 2265              		.loc 1 918 0
 2266              		.cfi_startproc
 2267              		@ Function supports interworking.
 2268              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccwDRvq0.s 			page 58


 2269              		@ frame_needed = 0, uses_anonymous_args = 0
 2270 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2271              	.LCFI24:
 2272              		.cfi_def_cfa_offset 4
 2273 0004 14D04DE2 		sub	sp, sp, #20	@,,
 2274              	.LCFI25:
 2275              		.cfi_def_cfa_offset 24
 2276 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 2277 000c 00108DE5 		str	r1, [sp, #0]	@ dir_entry, dir_entry
 2278              	.LBB24:
 919:fat16.cpp     ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT16_ATTRIB_DIR))
 2279              		.loc 1 919 0
 2280 0010 04309DE5 		ldr	r3, [sp, #4]	@ tmp141, fs
 2281 0014 000053E3 		cmp	r3, #0	@ tmp141,
 2282 0018 0700000A 		beq	.L156	@,
 2283              		.cfi_offset 14, -4
 2284              		.loc 1 919 0 is_stmt 0 discriminator 1
 2285 001c 00309DE5 		ldr	r3, [sp, #0]	@ tmp142, dir_entry
 2286 0020 000053E3 		cmp	r3, #0	@ tmp142,
 2287 0024 0400000A 		beq	.L156	@,
 2288              		.loc 1 919 0 discriminator 2
 2289 0028 00309DE5 		ldr	r3, [sp, #0]	@ tmp143, dir_entry
 2290 002c 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.11311, dir_entry_3(D)->attributes
 2291 0030 103003E2 		and	r3, r3, #16	@ D.11313, D.11312,
 2292 0034 000053E3 		cmp	r3, #0	@ D.11313,
 2293 0038 0100000A 		beq	.L157	@,
 2294              	.L156:
 920:fat16.cpp     ****         return 0;
 2295              		.loc 1 920 0 is_stmt 1
 2296 003c 0030A0E3 		mov	r3, #0	@ D.11314,
 2297 0040 190000EA 		b	.L158	@
 2298              	.L157:
 921:fat16.cpp     **** 
 922:fat16.cpp     ****     struct fat16_file_struct* fd = (fat16_file_struct*)malloc(sizeof(*fd));
 2299              		.loc 1 922 0
 2300 0044 3800A0E3 		mov	r0, #56	@,
 2301 0048 FEFFFFEB 		bl	malloc	@
 2302 004c 0030A0E1 		mov	r3, r0	@ tmp144,
 2303 0050 0C308DE5 		str	r3, [sp, #12]	@ D.11315, fd
 923:fat16.cpp     ****     if(!fd)
 2304              		.loc 1 923 0
 2305 0054 0C309DE5 		ldr	r3, [sp, #12]	@ tmp145, fd
 2306 0058 000053E3 		cmp	r3, #0	@ tmp145,
 2307 005c 0100001A 		bne	.L159	@,
 924:fat16.cpp     ****         return 0;
 2308              		.loc 1 924 0
 2309 0060 0030A0E3 		mov	r3, #0	@ D.11314,
 2310 0064 100000EA 		b	.L158	@
 2311              	.L159:
 925:fat16.cpp     **** 
 926:fat16.cpp     ****     memcpy(&fd->dir_entry, dir_entry, sizeof(*dir_entry));
 2312              		.loc 1 926 0
 2313 0068 0C309DE5 		ldr	r3, [sp, #12]	@ tmp146, fd
 2314 006c 043083E2 		add	r3, r3, #4	@ D.11318, tmp146,
 2315 0070 0300A0E1 		mov	r0, r3	@, D.11318
 2316 0074 00109DE5 		ldr	r1, [sp, #0]	@, dir_entry
 2317 0078 2C20A0E3 		mov	r2, #44	@,
ARM GAS  /tmp/ccwDRvq0.s 			page 59


 2318 007c FEFFFFEB 		bl	memcpy	@
 927:fat16.cpp     ****     fd->fs = fs;
 2319              		.loc 1 927 0
 2320 0080 0C309DE5 		ldr	r3, [sp, #12]	@ tmp147, fd
 2321 0084 04209DE5 		ldr	r2, [sp, #4]	@ tmp148, fs
 2322 0088 002083E5 		str	r2, [r3, #0]	@ tmp148, fd_8->fs
 928:fat16.cpp     ****     fd->pos = 0;
 2323              		.loc 1 928 0
 2324 008c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp149, fd
 2325 0090 0020A0E3 		mov	r2, #0	@ tmp150,
 2326 0094 302083E5 		str	r2, [r3, #48]	@ tmp150, fd_8->pos
 929:fat16.cpp     ****     fd->pos_cluster = dir_entry->cluster;
 2327              		.loc 1 929 0
 2328 0098 00309DE5 		ldr	r3, [sp, #0]	@ tmp151, dir_entry
 2329 009c B222D3E1 		ldrh	r2, [r3, #34]	@ D.11319, dir_entry_3(D)->cluster
 2330 00a0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp152, fd
 2331 00a4 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ D.11319, fd_8->pos_cluster
 930:fat16.cpp     **** 
 931:fat16.cpp     ****     return fd;
 2332              		.loc 1 931 0
 2333 00a8 0C309DE5 		ldr	r3, [sp, #12]	@ D.11314, fd
 2334              	.L158:
 2335              	.LBE24:
 932:fat16.cpp     **** }
 2336              		.loc 1 932 0
 2337 00ac 0300A0E1 		mov	r0, r3	@, <retval>
 2338 00b0 14D08DE2 		add	sp, sp, #20	@,,
 2339 00b4 04E09DE4 		ldr	lr, [sp], #4
 2340 00b8 1EFF2FE1 		bx	lr
 2341              		.cfi_endproc
 2342              	.LFE122:
 2343              		.size	_Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_entry_struct, .-_Z15fat16_open_fileP15fat
 2344              		.section	.text._Z16fat16_close_fileP17fat16_file_struct,"ax",%progbits
 2345              		.align	2
 2346              		.global	_Z16fat16_close_fileP17fat16_file_struct
 2347              		.type	_Z16fat16_close_fileP17fat16_file_struct, %function
 2348              	_Z16fat16_close_fileP17fat16_file_struct:
 2349              	.LFB123:
 933:fat16.cpp     **** 
 934:fat16.cpp     **** /**
 935:fat16.cpp     ****  * \ingroup fat16_file
 936:fat16.cpp     ****  * Closes a file.
 937:fat16.cpp     ****  *
 938:fat16.cpp     ****  * \param[in] fd The file handle of the file to close.
 939:fat16.cpp     ****  * \see fat16_open_file
 940:fat16.cpp     ****  */
 941:fat16.cpp     **** void fat16_close_file(struct fat16_file_struct* fd)
 942:fat16.cpp     **** {
 2350              		.loc 1 942 0
 2351              		.cfi_startproc
 2352              		@ Function supports interworking.
 2353              		@ args = 0, pretend = 0, frame = 8
 2354              		@ frame_needed = 0, uses_anonymous_args = 0
 2355 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2356              	.LCFI26:
 2357              		.cfi_def_cfa_offset 4
 2358 0004 0CD04DE2 		sub	sp, sp, #12	@,,
ARM GAS  /tmp/ccwDRvq0.s 			page 60


 2359              	.LCFI27:
 2360              		.cfi_def_cfa_offset 16
 2361 0008 04008DE5 		str	r0, [sp, #4]	@ fd, fd
 943:fat16.cpp     ****     if(fd)
 2362              		.loc 1 943 0
 2363 000c 04309DE5 		ldr	r3, [sp, #4]	@ tmp133, fd
 2364 0010 000053E3 		cmp	r3, #0	@ tmp133,
 2365 0014 0100000A 		beq	.L160	@,
 2366              		.cfi_offset 14, -4
 944:fat16.cpp     ****         free(fd);
 2367              		.loc 1 944 0
 2368 0018 04009DE5 		ldr	r0, [sp, #4]	@, fd
 2369 001c FEFFFFEB 		bl	free	@
 2370              	.L160:
 945:fat16.cpp     **** }
 2371              		.loc 1 945 0
 2372 0020 0CD08DE2 		add	sp, sp, #12	@,,
 2373 0024 04E09DE4 		ldr	lr, [sp], #4
 2374 0028 1EFF2FE1 		bx	lr
 2375              		.cfi_endproc
 2376              	.LFE123:
 2377              		.size	_Z16fat16_close_fileP17fat16_file_struct, .-_Z16fat16_close_fileP17fat16_file_struct
 2378              		.global	__aeabi_uidivmod
 2379              		.section	.text._Z15fat16_read_fileP17fat16_file_structPht,"ax",%progbits
 2380              		.align	2
 2381              		.global	_Z15fat16_read_fileP17fat16_file_structPht
 2382              		.type	_Z15fat16_read_fileP17fat16_file_structPht, %function
 2383              	_Z15fat16_read_fileP17fat16_file_structPht:
 2384              	.LFB124:
 946:fat16.cpp     **** 
 947:fat16.cpp     **** /**
 948:fat16.cpp     ****  * \ingroup fat16_file
 949:fat16.cpp     ****  * Reads data from a file.
 950:fat16.cpp     ****  *
 951:fat16.cpp     ****  * The data requested is read from the current file location.
 952:fat16.cpp     ****  *
 953:fat16.cpp     ****  * \param[in] fd The file handle of the file from which to read.
 954:fat16.cpp     ****  * \param[out] buffer The buffer into which to write.
 955:fat16.cpp     ****  * \param[in] buffer_len The amount of data to read.
 956:fat16.cpp     ****  * \returns The number of bytes read, 0 on end of file, or -1 on failure.
 957:fat16.cpp     ****  * \see fat16_write_file
 958:fat16.cpp     ****  */
 959:fat16.cpp     **** int16_t fat16_read_file(struct fat16_file_struct* fd, uint8_t* buffer, uint16_t buffer_len)
 960:fat16.cpp     **** {
 2385              		.loc 1 960 0
 2386              		.cfi_startproc
 2387              		@ Function supports interworking.
 2388              		@ args = 0, pretend = 0, frame = 40
 2389              		@ frame_needed = 0, uses_anonymous_args = 0
 2390 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2391              	.LCFI28:
 2392              		.cfi_def_cfa_offset 4
 2393 0004 2CD04DE2 		sub	sp, sp, #44	@,,
 2394              	.LCFI29:
 2395              		.cfi_def_cfa_offset 48
 2396 0008 0C008DE5 		str	r0, [sp, #12]	@ fd, fd
 2397 000c 08108DE5 		str	r1, [sp, #8]	@ buffer, buffer
ARM GAS  /tmp/ccwDRvq0.s 			page 61


 2398 0010 0230A0E1 		mov	r3, r2	@ tmp180, buffer_len
 2399 0014 B630CDE1 		strh	r3, [sp, #6]	@ movhi	@ tmp180, buffer_len
 2400              	.LBB25:
 961:fat16.cpp     ****     /* check arguments */
 962:fat16.cpp     ****     if(!fd || !buffer || buffer_len < 1)
 2401              		.loc 1 962 0
 2402 0018 0C309DE5 		ldr	r3, [sp, #12]	@ tmp181, fd
 2403 001c 000053E3 		cmp	r3, #0	@ tmp181,
 2404 0020 0500000A 		beq	.L163	@,
 2405              		.cfi_offset 14, -4
 2406              		.loc 1 962 0 is_stmt 0 discriminator 1
 2407 0024 08309DE5 		ldr	r3, [sp, #8]	@ tmp182, buffer
 2408 0028 000053E3 		cmp	r3, #0	@ tmp182,
 2409 002c 0200000A 		beq	.L163	@,
 2410              		.loc 1 962 0 discriminator 2
 2411 0030 B630DDE1 		ldrh	r3, [sp, #6]	@ tmp183, buffer_len
 2412 0034 000053E3 		cmp	r3, #0	@ tmp183,
 2413 0038 0100001A 		bne	.L164	@,
 2414              	.L163:
 963:fat16.cpp     ****         return -1;
 2415              		.loc 1 963 0 is_stmt 1
 2416 003c 24339FE5 		ldr	r3, .L177	@ D.11223,
 2417 0040 C20000EA 		b	.L165	@
 2418              	.L164:
 964:fat16.cpp     **** 
 965:fat16.cpp     ****     /* determine number of bytes to read */
 966:fat16.cpp     ****     if(fd->pos + buffer_len > fd->dir_entry.file_size)
 2419              		.loc 1 966 0
 2420 0044 0C309DE5 		ldr	r3, [sp, #12]	@ tmp184, fd
 2421 0048 302093E5 		ldr	r2, [r3, #48]	@ D.11224, fd_12(D)->pos
 2422 004c B630DDE1 		ldrh	r3, [sp, #6]	@ D.11225, buffer_len
 2423 0050 032082E0 		add	r2, r2, r3	@ D.11226, D.11224, D.11225
 2424 0054 0C309DE5 		ldr	r3, [sp, #12]	@ tmp185, fd
 2425 0058 283093E5 		ldr	r3, [r3, #40]	@ D.11227, fd_12(D)->dir_entry.file_size
 2426 005c 030052E1 		cmp	r2, r3	@ D.11226, D.11227
 2427 0060 0900009A 		bls	.L166	@,
 967:fat16.cpp     ****         buffer_len = fd->dir_entry.file_size - fd->pos;
 2428              		.loc 1 967 0
 2429 0064 0C309DE5 		ldr	r3, [sp, #12]	@ tmp186, fd
 2430 0068 283093E5 		ldr	r3, [r3, #40]	@ D.11230, fd_12(D)->dir_entry.file_size
 2431 006c 0338A0E1 		mov	r3, r3, asl #16	@ tmp187, D.11230,
 2432 0070 2328A0E1 		mov	r2, r3, lsr #16	@ D.11231, tmp187,
 2433 0074 0C309DE5 		ldr	r3, [sp, #12]	@ tmp188, fd
 2434 0078 303093E5 		ldr	r3, [r3, #48]	@ D.11232, fd_12(D)->pos
 2435 007c 0338A0E1 		mov	r3, r3, asl #16	@ tmp189, D.11232,
 2436 0080 2338A0E1 		mov	r3, r3, lsr #16	@ D.11233, tmp189,
 2437 0084 023063E0 		rsb	r3, r3, r2	@ tmp190, D.11233, D.11231
 2438 0088 B630CDE1 		strh	r3, [sp, #6]	@ movhi	@ tmp190, buffer_len
 2439              	.L166:
 968:fat16.cpp     ****     if(buffer_len == 0)
 2440              		.loc 1 968 0
 2441 008c B630DDE1 		ldrh	r3, [sp, #6]	@ tmp191, buffer_len
 2442 0090 000053E3 		cmp	r3, #0	@ tmp191,
 2443 0094 0100001A 		bne	.L167	@,
 969:fat16.cpp     ****         return 0;
 2444              		.loc 1 969 0
 2445 0098 0030A0E3 		mov	r3, #0	@ D.11223,
ARM GAS  /tmp/ccwDRvq0.s 			page 62


 2446 009c AB0000EA 		b	.L165	@
 2447              	.L167:
 970:fat16.cpp     **** 
 971:fat16.cpp     ****     uint16_t cluster_size = fd->fs->header.cluster_size;
 2448              		.loc 1 971 0
 2449 00a0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp192, fd
 2450 00a4 003093E5 		ldr	r3, [r3, #0]	@ D.11237, fd_12(D)->fs
 2451 00a8 B231D3E1 		ldrh	r3, [r3, #18]	@ movhi	@ tmp193, D.11237_25->header.cluster_size
 2452 00ac B831CDE1 		strh	r3, [sp, #24]	@ movhi	@ tmp193, cluster_size
 972:fat16.cpp     ****     uint16_t cluster_num = fd->pos_cluster;
 2453              		.loc 1 972 0
 2454 00b0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp194, fd
 2455 00b4 B433D3E1 		ldrh	r3, [r3, #52]	@ movhi	@ tmp195, fd_12(D)->pos_cluster
 2456 00b8 B632CDE1 		strh	r3, [sp, #38]	@ movhi	@ tmp195, cluster_num
 973:fat16.cpp     ****     uint16_t buffer_left = buffer_len;
 2457              		.loc 1 973 0
 2458 00bc B630DDE1 		ldrh	r3, [sp, #6]	@ movhi	@ tmp196, buffer_len
 2459 00c0 B432CDE1 		strh	r3, [sp, #36]	@ movhi	@ tmp196, buffer_left
 974:fat16.cpp     ****     uint16_t first_cluster_offset = fd->pos % cluster_size;
 2460              		.loc 1 974 0
 2461 00c4 0C309DE5 		ldr	r3, [sp, #12]	@ tmp197, fd
 2462 00c8 302093E5 		ldr	r2, [r3, #48]	@ D.11238, fd_12(D)->pos
 2463 00cc B831DDE1 		ldrh	r3, [sp, #24]	@ D.11239, cluster_size
 2464 00d0 0200A0E1 		mov	r0, r2	@, D.11238
 2465 00d4 0310A0E1 		mov	r1, r3	@, D.11239
 2466 00d8 FEFFFFEB 		bl	__aeabi_uidivmod	@
 2467 00dc 0130A0E1 		mov	r3, r1	@ tmp202,
 2468 00e0 B232CDE1 		strh	r3, [sp, #34]	@ movhi	@ D.11240, first_cluster_offset
 2469              	.LBB26:
 975:fat16.cpp     **** 
 976:fat16.cpp     ****     /* find cluster in which to start reading */
 977:fat16.cpp     ****     if(!cluster_num)
 2470              		.loc 1 977 0
 2471 00e4 B632DDE1 		ldrh	r3, [sp, #38]	@ tmp203, cluster_num
 2472 00e8 000053E3 		cmp	r3, #0	@ tmp203,
 2473 00ec 2E00001A 		bne	.L168	@,
 2474              	.LBB27:
 978:fat16.cpp     ****     {
 979:fat16.cpp     ****         cluster_num = fd->dir_entry.cluster;
 2475              		.loc 1 979 0
 2476 00f0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp204, fd
 2477 00f4 B632D3E1 		ldrh	r3, [r3, #38]	@ movhi	@ tmp205, fd_12(D)->dir_entry.cluster
 2478 00f8 B632CDE1 		strh	r3, [sp, #38]	@ movhi	@ tmp205, cluster_num
 980:fat16.cpp     **** 
 981:fat16.cpp     ****         if(!cluster_num)
 2479              		.loc 1 981 0
 2480 00fc B632DDE1 		ldrh	r3, [sp, #38]	@ tmp206, cluster_num
 2481 0100 000053E3 		cmp	r3, #0	@ tmp206,
 2482 0104 0700001A 		bne	.L169	@,
 982:fat16.cpp     ****         {
 983:fat16.cpp     ****             if(!fd->pos)
 2483              		.loc 1 983 0
 2484 0108 0C309DE5 		ldr	r3, [sp, #12]	@ tmp207, fd
 2485 010c 303093E5 		ldr	r3, [r3, #48]	@ D.11245, fd_12(D)->pos
 2486 0110 000053E3 		cmp	r3, #0	@ D.11245,
 2487 0114 0100001A 		bne	.L170	@,
 984:fat16.cpp     ****                 return 0;
ARM GAS  /tmp/ccwDRvq0.s 			page 63


 2488              		.loc 1 984 0
 2489 0118 0030A0E3 		mov	r3, #0	@ D.11223,
 2490 011c 8B0000EA 		b	.L165	@
 2491              	.L170:
 985:fat16.cpp     ****             else
 986:fat16.cpp     ****                 return -1;
 2492              		.loc 1 986 0
 2493 0120 40329FE5 		ldr	r3, .L177	@ D.11223,
 2494 0124 890000EA 		b	.L165	@
 2495              	.L169:
 2496              	.LBB28:
 987:fat16.cpp     ****         }
 988:fat16.cpp     **** 
 989:fat16.cpp     ****         if(fd->pos)
 2497              		.loc 1 989 0
 2498 0128 0C309DE5 		ldr	r3, [sp, #12]	@ tmp208, fd
 2499 012c 303093E5 		ldr	r3, [r3, #48]	@ D.11248, fd_12(D)->pos
 2500 0130 000053E3 		cmp	r3, #0	@ D.11248,
 2501 0134 1C00000A 		beq	.L168	@,
 2502              	.LBB29:
 990:fat16.cpp     ****         {
 991:fat16.cpp     ****             uint32_t pos = fd->pos;
 2503              		.loc 1 991 0
 2504 0138 0C309DE5 		ldr	r3, [sp, #12]	@ tmp209, fd
 2505 013c 303093E5 		ldr	r3, [r3, #48]	@ tmp210, fd_12(D)->pos
 2506 0140 1C308DE5 		str	r3, [sp, #28]	@ tmp210, pos
 992:fat16.cpp     ****             while(pos >= cluster_size)
 2507              		.loc 1 992 0
 2508 0144 100000EA 		b	.L171	@
 2509              	.L172:
 993:fat16.cpp     ****             {
 994:fat16.cpp     ****                 pos -= cluster_size;
 2510              		.loc 1 994 0
 2511 0148 B831DDE1 		ldrh	r3, [sp, #24]	@ D.11256, cluster_size
 2512 014c 1C209DE5 		ldr	r2, [sp, #28]	@ tmp211, pos
 2513 0150 023063E0 		rsb	r3, r3, r2	@ tmp212, D.11256, tmp211
 2514 0154 1C308DE5 		str	r3, [sp, #28]	@ tmp212, pos
 995:fat16.cpp     ****                 cluster_num = fat16_get_next_cluster(fd->fs, cluster_num);
 2515              		.loc 1 995 0
 2516 0158 0C309DE5 		ldr	r3, [sp, #12]	@ tmp213, fd
 2517 015c 002093E5 		ldr	r2, [r3, #0]	@ D.11257, fd_12(D)->fs
 2518 0160 B632DDE1 		ldrh	r3, [sp, #38]	@ tmp214, cluster_num
 2519 0164 0200A0E1 		mov	r0, r2	@, D.11257
 2520 0168 0310A0E1 		mov	r1, r3	@, tmp214
 2521 016c FEFFFFEB 		bl	_ZL22fat16_get_next_clusterPK15fat16_fs_structt	@
 2522 0170 0030A0E1 		mov	r3, r0	@ tmp215,
 2523 0174 B632CDE1 		strh	r3, [sp, #38]	@ movhi	@ tmp215, cluster_num
 996:fat16.cpp     ****                 if(!cluster_num)
 2524              		.loc 1 996 0
 2525 0178 B632DDE1 		ldrh	r3, [sp, #38]	@ tmp216, cluster_num
 2526 017c 000053E3 		cmp	r3, #0	@ tmp216,
 2527 0180 0100001A 		bne	.L171	@,
 997:fat16.cpp     ****                     return -1;
 2528              		.loc 1 997 0
 2529 0184 DC319FE5 		ldr	r3, .L177	@ D.11223,
 2530 0188 700000EA 		b	.L165	@
 2531              	.L171:
ARM GAS  /tmp/ccwDRvq0.s 			page 64


 992:fat16.cpp     ****             while(pos >= cluster_size)
 2532              		.loc 1 992 0 discriminator 1
 2533 018c B821DDE1 		ldrh	r2, [sp, #24]	@ D.11254, cluster_size
 2534 0190 1C309DE5 		ldr	r3, [sp, #28]	@ tmp218, pos
 2535 0194 030052E1 		cmp	r2, r3	@ D.11254, tmp218
 2536 0198 0030A083 		movhi	r3, #0	@, tmp219
 2537 019c 0130A093 		movls	r3, #1	@, tmp219
 2538 01a0 FF3003E2 		and	r3, r3, #255	@ D.11255, tmp217,
 2539 01a4 000053E3 		cmp	r3, #0	@ D.11255,
 2540 01a8 E6FFFF1A 		bne	.L172	@,
 2541              	.L168:
 2542              	.LBE29:
 2543              	.LBE28:
 2544              	.LBE27:
 2545              	.LBE26:
 2546              	.LBB30:
 998:fat16.cpp     ****             }
 999:fat16.cpp     ****         }
1000:fat16.cpp     ****     }
1001:fat16.cpp     **** 
1002:fat16.cpp     ****     /* read data */
1003:fat16.cpp     ****     do
1004:fat16.cpp     ****     {
1005:fat16.cpp     ****         /* calculate data size to copy from cluster */
1006:fat16.cpp     ****         uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
1007:fat16.cpp     ****         (uint32_t) (cluster_num - 2) * cluster_size + first_cluster_offset;
 2547              		.loc 1 1007 0
 2548 01ac 0C309DE5 		ldr	r3, [sp, #12]	@ tmp220, fd
 2549 01b0 003093E5 		ldr	r3, [r3, #0]	@ D.11266, fd_12(D)->fs
 2550 01b4 182093E5 		ldr	r2, [r3, #24]	@ D.11267, D.11266_46->header.cluster_zero_offset
 2551 01b8 B632DDE1 		ldrh	r3, [sp, #38]	@ D.11268, cluster_num
 2552 01bc 023043E2 		sub	r3, r3, #2	@ D.11269, D.11268,
 2553 01c0 B811DDE1 		ldrh	r1, [sp, #24]	@ D.11271, cluster_size
 2554 01c4 910303E0 		mul	r3, r1, r3	@ D.11272, D.11271, D.11270
 2555 01c8 032082E0 		add	r2, r2, r3	@ D.11273, D.11267, D.11272
 2556 01cc B232DDE1 		ldrh	r3, [sp, #34]	@ D.11274, first_cluster_offset
 2557 01d0 033082E0 		add	r3, r2, r3	@ tmp221, D.11273, D.11274
 2558 01d4 14308DE5 		str	r3, [sp, #20]	@ tmp221, cluster_offset
1008:fat16.cpp     ****         uint16_t copy_length = cluster_size - first_cluster_offset;
 2559              		.loc 1 1008 0
 2560 01d8 B821DDE1 		ldrh	r2, [sp, #24]	@ movhi	@ tmp222, cluster_size
 2561 01dc B232DDE1 		ldrh	r3, [sp, #34]	@ movhi	@ tmp223, first_cluster_offset
 2562 01e0 023063E0 		rsb	r3, r3, r2	@ tmp224, tmp223, tmp222
 2563 01e4 BA31CDE1 		strh	r3, [sp, #26]	@ movhi	@ tmp224, copy_length
1009:fat16.cpp     ****         if(copy_length > buffer_left)
 2564              		.loc 1 1009 0
 2565 01e8 BA21DDE1 		ldrh	r2, [sp, #26]	@ tmp225, copy_length
 2566 01ec B432DDE1 		ldrh	r3, [sp, #36]	@ tmp226, buffer_left
 2567 01f0 030052E1 		cmp	r2, r3	@ tmp225, tmp226
 2568 01f4 0100009A 		bls	.L173	@,
1010:fat16.cpp     ****             copy_length = buffer_left;
 2569              		.loc 1 1010 0
 2570 01f8 B432DDE1 		ldrh	r3, [sp, #36]	@ movhi	@ tmp227, buffer_left
 2571 01fc BA31CDE1 		strh	r3, [sp, #26]	@ movhi	@ tmp227, copy_length
 2572              	.L173:
1011:fat16.cpp     **** 
1012:fat16.cpp     ****         /* read data */
ARM GAS  /tmp/ccwDRvq0.s 			page 65


1013:fat16.cpp     ****         if(!fd->fs->partition->device_read(cluster_offset, buffer, copy_length))
 2573              		.loc 1 1013 0
 2574 0200 0C309DE5 		ldr	r3, [sp, #12]	@ tmp228, fd
 2575 0204 003093E5 		ldr	r3, [r3, #0]	@ D.11279, fd_12(D)->fs
 2576 0208 003093E5 		ldr	r3, [r3, #0]	@ D.11280, D.11279_58->partition
 2577 020c 003093E5 		ldr	r3, [r3, #0]	@ D.11281, D.11280_59->device_read
 2578 0210 BA21DDE1 		ldrh	r2, [sp, #26]	@ tmp229, copy_length
 2579 0214 14009DE5 		ldr	r0, [sp, #20]	@, cluster_offset
 2580 0218 08109DE5 		ldr	r1, [sp, #8]	@, buffer
 2581 021c 0FE0A0E1 		mov	lr, pc
 2582 0220 13FF2FE1 		bx	r3	@ D.11281
 2583 0224 0030A0E1 		mov	r3, r0	@ tmp230,
 2584 0228 000053E3 		cmp	r3, #0	@ D.11282,
 2585 022c 0030A013 		movne	r3, #0	@, tmp232
 2586 0230 0130A003 		moveq	r3, #1	@, tmp232
 2587 0234 FF3003E2 		and	r3, r3, #255	@ retval.22, tmp231,
 2588 0238 000053E3 		cmp	r3, #0	@ retval.22,
 2589 023c 0700000A 		beq	.L174	@,
1014:fat16.cpp     ****             return buffer_len - buffer_left;
 2590              		.loc 1 1014 0
 2591 0240 B620DDE1 		ldrh	r2, [sp, #6]	@ movhi	@ tmp233, buffer_len
 2592 0244 B432DDE1 		ldrh	r3, [sp, #36]	@ movhi	@ tmp234, buffer_left
 2593 0248 023063E0 		rsb	r3, r3, r2	@ tmp235, tmp234, tmp233
 2594 024c 0338A0E1 		mov	r3, r3, asl #16	@ tmp236, tmp235,
 2595 0250 2338A0E1 		mov	r3, r3, lsr #16	@ D.11285, tmp236,
 2596 0254 0338A0E1 		mov	r3, r3, asl #16	@ tmp237, D.11285,
 2597 0258 2338A0E1 		mov	r3, r3, lsr #16	@ D.11223, tmp237,
 2598 025c 3B0000EA 		b	.L165	@
 2599              	.L174:
1015:fat16.cpp     **** 
1016:fat16.cpp     ****         /* calculate new file position */
1017:fat16.cpp     ****         buffer += copy_length;
 2600              		.loc 1 1017 0
 2601 0260 BA31DDE1 		ldrh	r3, [sp, #26]	@ D.11286, copy_length
 2602 0264 08209DE5 		ldr	r2, [sp, #8]	@ tmp238, buffer
 2603 0268 033082E0 		add	r3, r2, r3	@ tmp239, tmp238, D.11286
 2604 026c 08308DE5 		str	r3, [sp, #8]	@ tmp239, buffer
1018:fat16.cpp     ****         buffer_left -= copy_length;
 2605              		.loc 1 1018 0
 2606 0270 B422DDE1 		ldrh	r2, [sp, #36]	@ movhi	@ tmp240, buffer_left
 2607 0274 BA31DDE1 		ldrh	r3, [sp, #26]	@ movhi	@ tmp241, copy_length
 2608 0278 023063E0 		rsb	r3, r3, r2	@ tmp242, tmp241, tmp240
 2609 027c B432CDE1 		strh	r3, [sp, #36]	@ movhi	@ tmp242, buffer_left
1019:fat16.cpp     ****         fd->pos += copy_length;
 2610              		.loc 1 1019 0
 2611 0280 0C309DE5 		ldr	r3, [sp, #12]	@ tmp243, fd
 2612 0284 302093E5 		ldr	r2, [r3, #48]	@ D.11287, fd_12(D)->pos
 2613 0288 BA31DDE1 		ldrh	r3, [sp, #26]	@ D.11288, copy_length
 2614 028c 032082E0 		add	r2, r2, r3	@ D.11289, D.11287, D.11288
 2615 0290 0C309DE5 		ldr	r3, [sp, #12]	@ tmp244, fd
 2616 0294 302083E5 		str	r2, [r3, #48]	@ D.11289, fd_12(D)->pos
1020:fat16.cpp     **** 
1021:fat16.cpp     ****         if(first_cluster_offset + copy_length >= cluster_size)
 2617              		.loc 1 1021 0
 2618 0298 B222DDE1 		ldrh	r2, [sp, #34]	@ D.11290, first_cluster_offset
 2619 029c BA31DDE1 		ldrh	r3, [sp, #26]	@ D.11291, copy_length
 2620 02a0 032082E0 		add	r2, r2, r3	@ D.11292, D.11290, D.11291
ARM GAS  /tmp/ccwDRvq0.s 			page 66


 2621 02a4 B831DDE1 		ldrh	r3, [sp, #24]	@ D.11293, cluster_size
 2622 02a8 030052E1 		cmp	r2, r3	@ D.11292, D.11293
 2623 02ac 1C0000BA 		blt	.L175	@,
1022:fat16.cpp     ****         {
1023:fat16.cpp     ****             /* we are on a cluster boundary, so get the next cluster */
1024:fat16.cpp     ****             if((cluster_num = fat16_get_next_cluster(fd->fs, cluster_num)))
 2624              		.loc 1 1024 0
 2625 02b0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp245, fd
 2626 02b4 002093E5 		ldr	r2, [r3, #0]	@ D.11297, fd_12(D)->fs
 2627 02b8 B632DDE1 		ldrh	r3, [sp, #38]	@ tmp246, cluster_num
 2628 02bc 0200A0E1 		mov	r0, r2	@, D.11297
 2629 02c0 0310A0E1 		mov	r1, r3	@, tmp246
 2630 02c4 FEFFFFEB 		bl	_ZL22fat16_get_next_clusterPK15fat16_fs_structt	@
 2631 02c8 0030A0E1 		mov	r3, r0	@ tmp247,
 2632 02cc B632CDE1 		strh	r3, [sp, #38]	@ movhi	@ tmp247, cluster_num
 2633 02d0 B632DDE1 		ldrh	r3, [sp, #38]	@ tmp249, cluster_num
 2634 02d4 000053E3 		cmp	r3, #0	@ tmp249,
 2635 02d8 0030A003 		moveq	r3, #0	@, tmp250
 2636 02dc 0130A013 		movne	r3, #1	@, tmp250
 2637 02e0 FF3003E2 		and	r3, r3, #255	@ retval.23, tmp248,
 2638 02e4 000053E3 		cmp	r3, #0	@ retval.23,
 2639 02e8 0200000A 		beq	.L176	@,
1025:fat16.cpp     ****             {
1026:fat16.cpp     ****                 first_cluster_offset = 0;
 2640              		.loc 1 1026 0
 2641 02ec 0030A0E3 		mov	r3, #0	@ tmp252,
 2642 02f0 B232CDE1 		strh	r3, [sp, #34]	@ movhi	@ tmp251, first_cluster_offset
 2643 02f4 0A0000EA 		b	.L175	@
 2644              	.L176:
1027:fat16.cpp     ****             }
1028:fat16.cpp     ****             else
1029:fat16.cpp     ****             {
1030:fat16.cpp     ****                 fd->pos_cluster = 0;
 2645              		.loc 1 1030 0
 2646 02f8 0C309DE5 		ldr	r3, [sp, #12]	@ tmp253, fd
 2647 02fc 0020A0E3 		mov	r2, #0	@ tmp255,
 2648 0300 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp254, fd_12(D)->pos_cluster
1031:fat16.cpp     ****                 return buffer_len - buffer_left;
 2649              		.loc 1 1031 0
 2650 0304 B620DDE1 		ldrh	r2, [sp, #6]	@ movhi	@ tmp256, buffer_len
 2651 0308 B432DDE1 		ldrh	r3, [sp, #36]	@ movhi	@ tmp257, buffer_left
 2652 030c 023063E0 		rsb	r3, r3, r2	@ tmp258, tmp257, tmp256
 2653 0310 0338A0E1 		mov	r3, r3, asl #16	@ tmp259, tmp258,
 2654 0314 2338A0E1 		mov	r3, r3, lsr #16	@ D.11301, tmp259,
 2655 0318 0338A0E1 		mov	r3, r3, asl #16	@ tmp260, D.11301,
 2656 031c 2338A0E1 		mov	r3, r3, lsr #16	@ D.11223, tmp260,
 2657 0320 0A0000EA 		b	.L165	@
 2658              	.L175:
1032:fat16.cpp     ****             }
1033:fat16.cpp     ****         }
1034:fat16.cpp     **** 
1035:fat16.cpp     ****         fd->pos_cluster = cluster_num;
 2659              		.loc 1 1035 0
 2660 0324 0C309DE5 		ldr	r3, [sp, #12]	@ tmp261, fd
 2661 0328 B622DDE1 		ldrh	r2, [sp, #38]	@ movhi	@ tmp262, cluster_num
 2662 032c B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp262, fd_12(D)->pos_cluster
 2663              	.LBE30:
ARM GAS  /tmp/ccwDRvq0.s 			page 67


1003:fat16.cpp     ****     do
 2664              		.loc 1 1003 0
 2665 0330 B432DDE1 		ldrh	r3, [sp, #36]	@ tmp264, buffer_left
 2666 0334 000053E3 		cmp	r3, #0	@ tmp264,
 2667 0338 0030A003 		moveq	r3, #0	@, tmp265
 2668 033c 0130A013 		movne	r3, #1	@, tmp265
 2669 0340 FF3003E2 		and	r3, r3, #255	@ D.11265, tmp263,
 2670 0344 000053E3 		cmp	r3, #0	@ D.11265,
 2671 0348 97FFFF1A 		bne	.L168	@,
1036:fat16.cpp     **** 
1037:fat16.cpp     ****     }
1038:fat16.cpp     ****     while(buffer_left > 0); /* check if we are done */
1039:fat16.cpp     **** 
1040:fat16.cpp     ****     return buffer_len;
 2672              		.loc 1 1040 0
 2673 034c B630DDE1 		ldrh	r3, [sp, #6]	@ D.11223, buffer_len
 2674              	.L165:
 2675 0350 0338A0E1 		mov	r3, r3, asl #16	@ tmp268, D.11223,
 2676 0354 4338A0E1 		mov	r3, r3, asr #16	@ tmp267, tmp268,
 2677              	.LBE25:
1041:fat16.cpp     **** }
 2678              		.loc 1 1041 0
 2679 0358 0300A0E1 		mov	r0, r3	@, <retval>
 2680 035c 2CD08DE2 		add	sp, sp, #44	@,,
 2681 0360 04E09DE4 		ldr	lr, [sp], #4
 2682 0364 1EFF2FE1 		bx	lr
 2683              	.L178:
 2684              		.align	2
 2685              	.L177:
 2686 0368 FFFF0000 		.word	65535
 2687              		.cfi_endproc
 2688              	.LFE124:
 2689              		.size	_Z15fat16_read_fileP17fat16_file_structPht, .-_Z15fat16_read_fileP17fat16_file_structPht
 2690              		.section	.text._Z16fat16_write_fileP17fat16_file_structPKht,"ax",%progbits
 2691              		.align	2
 2692              		.global	_Z16fat16_write_fileP17fat16_file_structPKht
 2693              		.type	_Z16fat16_write_fileP17fat16_file_structPKht, %function
 2694              	_Z16fat16_write_fileP17fat16_file_structPKht:
 2695              	.LFB125:
1042:fat16.cpp     **** 
1043:fat16.cpp     **** /**
1044:fat16.cpp     ****  * \ingroup fat16_file
1045:fat16.cpp     ****  * Writes data to a file.
1046:fat16.cpp     ****  *
1047:fat16.cpp     ****  * The data is written to the current file location.
1048:fat16.cpp     ****  *
1049:fat16.cpp     ****  * \param[in] fd The file handle of the file to which to write.
1050:fat16.cpp     ****  * \param[in] buffer The buffer from which to read the data to be written.
1051:fat16.cpp     ****  * \param[in] buffer_len The amount of data to write.
1052:fat16.cpp     ****  * \returns The number of bytes written, 0 on disk full, or -1 on failure.
1053:fat16.cpp     ****  * \see fat16_read_file
1054:fat16.cpp     ****  */
1055:fat16.cpp     **** int16_t fat16_write_file(struct fat16_file_struct* fd, const uint8_t* buffer, uint16_t buffer_len)
1056:fat16.cpp     **** {
 2696              		.loc 1 1056 0
 2697              		.cfi_startproc
 2698              		@ Function supports interworking.
ARM GAS  /tmp/ccwDRvq0.s 			page 68


 2699              		@ args = 0, pretend = 0, frame = 48
 2700              		@ frame_needed = 0, uses_anonymous_args = 0
 2701 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 2702              	.LCFI30:
 2703              		.cfi_def_cfa_offset 4
 2704 0004 34D04DE2 		sub	sp, sp, #52	@,,
 2705              	.LCFI31:
 2706              		.cfi_def_cfa_offset 56
 2707 0008 0C008DE5 		str	r0, [sp, #12]	@ fd, fd
 2708 000c 08108DE5 		str	r1, [sp, #8]	@ buffer, buffer
 2709 0010 0230A0E1 		mov	r3, r2	@ tmp185, buffer_len
 2710 0014 B630CDE1 		strh	r3, [sp, #6]	@ movhi	@ tmp185, buffer_len
 2711              	.LBB31:
1057:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
1058:fat16.cpp     ****         /* check arguments */
1059:fat16.cpp     ****         if(!fd || !buffer || buffer_len < 1)
 2712              		.loc 1 1059 0
 2713 0018 0C309DE5 		ldr	r3, [sp, #12]	@ tmp186, fd
 2714 001c 000053E3 		cmp	r3, #0	@ tmp186,
 2715 0020 0500000A 		beq	.L180	@,
 2716              		.cfi_offset 14, -4
 2717              		.loc 1 1059 0 is_stmt 0 discriminator 1
 2718 0024 08309DE5 		ldr	r3, [sp, #8]	@ tmp187, buffer
 2719 0028 000053E3 		cmp	r3, #0	@ tmp187,
 2720 002c 0200000A 		beq	.L180	@,
 2721              		.loc 1 1059 0 discriminator 2
 2722 0030 B630DDE1 		ldrh	r3, [sp, #6]	@ tmp188, buffer_len
 2723 0034 000053E3 		cmp	r3, #0	@ tmp188,
 2724 0038 0100001A 		bne	.L181	@,
 2725              	.L180:
1060:fat16.cpp     ****             return -1;
 2726              		.loc 1 1060 0 is_stmt 1
 2727 003c 14349FE5 		ldr	r3, .L199	@ D.11117,
 2728 0040 FE0000EA 		b	.L182	@
 2729              	.L181:
1061:fat16.cpp     ****         if(fd->pos > fd->dir_entry.file_size)
 2730              		.loc 1 1061 0
 2731 0044 0C309DE5 		ldr	r3, [sp, #12]	@ tmp189, fd
 2732 0048 302093E5 		ldr	r2, [r3, #48]	@ D.11118, fd_16(D)->pos
 2733 004c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp190, fd
 2734 0050 283093E5 		ldr	r3, [r3, #40]	@ D.11119, fd_16(D)->dir_entry.file_size
 2735 0054 030052E1 		cmp	r2, r3	@ D.11118, D.11119
 2736 0058 0100009A 		bls	.L183	@,
1062:fat16.cpp     ****             return -1;
 2737              		.loc 1 1062 0
 2738 005c F4339FE5 		ldr	r3, .L199	@ D.11117,
 2739 0060 F60000EA 		b	.L182	@
 2740              	.L183:
1063:fat16.cpp     ****     
1064:fat16.cpp     ****         uint16_t cluster_size = fd->fs->header.cluster_size;
 2741              		.loc 1 1064 0
 2742 0064 0C309DE5 		ldr	r3, [sp, #12]	@ tmp191, fd
 2743 0068 003093E5 		ldr	r3, [r3, #0]	@ D.11122, fd_16(D)->fs
 2744 006c B231D3E1 		ldrh	r3, [r3, #18]	@ movhi	@ tmp192, D.11122_22->header.cluster_size
 2745 0070 BC31CDE1 		strh	r3, [sp, #28]	@ movhi	@ tmp192, cluster_size
1065:fat16.cpp     ****         uint16_t cluster_num = fd->pos_cluster;
 2746              		.loc 1 1065 0
ARM GAS  /tmp/ccwDRvq0.s 			page 69


 2747 0074 0C309DE5 		ldr	r3, [sp, #12]	@ tmp193, fd
 2748 0078 B433D3E1 		ldrh	r3, [r3, #52]	@ movhi	@ tmp194, fd_16(D)->pos_cluster
 2749 007c BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp194, cluster_num
1066:fat16.cpp     ****         uint16_t buffer_left = buffer_len;
 2750              		.loc 1 1066 0
 2751 0080 B630DDE1 		ldrh	r3, [sp, #6]	@ movhi	@ tmp195, buffer_len
 2752 0084 BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp195, buffer_left
1067:fat16.cpp     ****         uint16_t first_cluster_offset = fd->pos % cluster_size;
 2753              		.loc 1 1067 0
 2754 0088 0C309DE5 		ldr	r3, [sp, #12]	@ tmp196, fd
 2755 008c 302093E5 		ldr	r2, [r3, #48]	@ D.11123, fd_16(D)->pos
 2756 0090 BC31DDE1 		ldrh	r3, [sp, #28]	@ D.11124, cluster_size
 2757 0094 0200A0E1 		mov	r0, r2	@, D.11123
 2758 0098 0310A0E1 		mov	r1, r3	@, D.11124
 2759 009c FEFFFFEB 		bl	__aeabi_uidivmod	@
 2760 00a0 0130A0E1 		mov	r3, r1	@ tmp201,
 2761 00a4 BA32CDE1 		strh	r3, [sp, #42]	@ movhi	@ D.11125, first_cluster_offset
 2762              	.LBB32:
1068:fat16.cpp     ****     
1069:fat16.cpp     ****         /* find cluster in which to start writing */
1070:fat16.cpp     ****         if(!cluster_num)
 2763              		.loc 1 1070 0
 2764 00a8 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp202, cluster_num
 2765 00ac 000053E3 		cmp	r3, #0	@ tmp202,
 2766 00b0 4D00001A 		bne	.L184	@,
 2767              	.LBB33:
1071:fat16.cpp     ****         {
1072:fat16.cpp     ****             cluster_num = fd->dir_entry.cluster;
 2768              		.loc 1 1072 0
 2769 00b4 0C309DE5 		ldr	r3, [sp, #12]	@ tmp203, fd
 2770 00b8 B632D3E1 		ldrh	r3, [r3, #38]	@ movhi	@ tmp204, fd_16(D)->dir_entry.cluster
 2771 00bc BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp204, cluster_num
1073:fat16.cpp     ****     
1074:fat16.cpp     ****             if(!cluster_num)
 2772              		.loc 1 1074 0
 2773 00c0 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp205, cluster_num
 2774 00c4 000053E3 		cmp	r3, #0	@ tmp205,
 2775 00c8 1500001A 		bne	.L185	@,
1075:fat16.cpp     ****             {
1076:fat16.cpp     ****                 if(!fd->pos)
 2776              		.loc 1 1076 0
 2777 00cc 0C309DE5 		ldr	r3, [sp, #12]	@ tmp206, fd
 2778 00d0 303093E5 		ldr	r3, [r3, #48]	@ D.11130, fd_16(D)->pos
 2779 00d4 000053E3 		cmp	r3, #0	@ D.11130,
 2780 00d8 0F00001A 		bne	.L186	@,
1077:fat16.cpp     ****                 {
1078:fat16.cpp     ****                     /* empty file */
1079:fat16.cpp     ****                     fd->dir_entry.cluster = cluster_num = fat16_append_clusters(fd->fs, 0, 1);
 2781              		.loc 1 1079 0
 2782 00dc 0C309DE5 		ldr	r3, [sp, #12]	@ tmp207, fd
 2783 00e0 003093E5 		ldr	r3, [r3, #0]	@ D.11133, fd_16(D)->fs
 2784 00e4 0300A0E1 		mov	r0, r3	@, D.11133
 2785 00e8 0010A0E3 		mov	r1, #0	@,
 2786 00ec 0120A0E3 		mov	r2, #1	@,
 2787 00f0 FEFFFFEB 		bl	_ZL21fat16_append_clustersPK15fat16_fs_structtt	@
 2788 00f4 0030A0E1 		mov	r3, r0	@ tmp208,
 2789 00f8 BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp208, cluster_num
ARM GAS  /tmp/ccwDRvq0.s 			page 70


 2790 00fc 0C309DE5 		ldr	r3, [sp, #12]	@ tmp209, fd
 2791 0100 BE22DDE1 		ldrh	r2, [sp, #46]	@ movhi	@ tmp210, cluster_num
 2792 0104 B622C3E1 		strh	r2, [r3, #38]	@ movhi	@ tmp210, fd_16(D)->dir_entry.cluster
1080:fat16.cpp     ****                     if(!cluster_num)
 2793              		.loc 1 1080 0
 2794 0108 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp211, cluster_num
 2795 010c 000053E3 		cmp	r3, #0	@ tmp211,
 2796 0110 0300001A 		bne	.L185	@,
1081:fat16.cpp     ****                         return -1;
 2797              		.loc 1 1081 0
 2798 0114 3C339FE5 		ldr	r3, .L199	@ D.11117,
 2799 0118 C80000EA 		b	.L182	@
 2800              	.L186:
1082:fat16.cpp     ****                 }
1083:fat16.cpp     ****                 else
1084:fat16.cpp     ****                 {
1085:fat16.cpp     ****                     return -1;
 2801              		.loc 1 1085 0
 2802 011c 34339FE5 		ldr	r3, .L199	@ D.11117,
 2803 0120 C60000EA 		b	.L182	@
 2804              	.L185:
 2805              	.LBB34:
1086:fat16.cpp     ****                 }
1087:fat16.cpp     ****             }
1088:fat16.cpp     ****     
1089:fat16.cpp     ****             if(fd->pos)
 2806              		.loc 1 1089 0
 2807 0124 0C309DE5 		ldr	r3, [sp, #12]	@ tmp212, fd
 2808 0128 303093E5 		ldr	r3, [r3, #48]	@ D.11138, fd_16(D)->pos
 2809 012c 000053E3 		cmp	r3, #0	@ D.11138,
 2810 0130 2D00000A 		beq	.L184	@,
 2811              	.LBB35:
1090:fat16.cpp     ****             {
1091:fat16.cpp     ****                 uint32_t pos = fd->pos;
 2812              		.loc 1 1091 0
 2813 0134 0C309DE5 		ldr	r3, [sp, #12]	@ tmp213, fd
 2814 0138 303093E5 		ldr	r3, [r3, #48]	@ tmp214, fd_16(D)->pos
 2815 013c 24308DE5 		str	r3, [sp, #36]	@ tmp214, pos
1092:fat16.cpp     ****                 uint16_t cluster_num_next;
1093:fat16.cpp     ****                 while(pos >= cluster_size)
 2816              		.loc 1 1093 0
 2817 0140 210000EA 		b	.L187	@
 2818              	.L190:
1094:fat16.cpp     ****                 {
1095:fat16.cpp     ****                     pos -= cluster_size;
 2819              		.loc 1 1095 0
 2820 0144 BC31DDE1 		ldrh	r3, [sp, #28]	@ D.11146, cluster_size
 2821 0148 24209DE5 		ldr	r2, [sp, #36]	@ tmp215, pos
 2822 014c 023063E0 		rsb	r3, r3, r2	@ tmp216, D.11146, tmp215
 2823 0150 24308DE5 		str	r3, [sp, #36]	@ tmp216, pos
1096:fat16.cpp     ****                     cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
 2824              		.loc 1 1096 0
 2825 0154 0C309DE5 		ldr	r3, [sp, #12]	@ tmp217, fd
 2826 0158 002093E5 		ldr	r2, [r3, #0]	@ D.11147, fd_16(D)->fs
 2827 015c BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp218, cluster_num
 2828 0160 0200A0E1 		mov	r0, r2	@, D.11147
 2829 0164 0310A0E1 		mov	r1, r3	@, tmp218
ARM GAS  /tmp/ccwDRvq0.s 			page 71


 2830 0168 FEFFFFEB 		bl	_ZL22fat16_get_next_clusterPK15fat16_fs_structt	@
 2831 016c 0030A0E1 		mov	r3, r0	@ tmp219,
 2832 0170 B232CDE1 		strh	r3, [sp, #34]	@ movhi	@ tmp219, cluster_num_next
1097:fat16.cpp     ****                     if(!cluster_num_next && pos == 0)
 2833              		.loc 1 1097 0
 2834 0174 B232DDE1 		ldrh	r3, [sp, #34]	@ tmp220, cluster_num_next
 2835 0178 000053E3 		cmp	r3, #0	@ tmp220,
 2836 017c 0B00001A 		bne	.L188	@,
 2837              		.loc 1 1097 0 is_stmt 0 discriminator 1
 2838 0180 24309DE5 		ldr	r3, [sp, #36]	@ tmp221, pos
 2839 0184 000053E3 		cmp	r3, #0	@ tmp221,
 2840 0188 0800001A 		bne	.L188	@,
1098:fat16.cpp     ****         /* the file exactly ends on a cluster boundary, and we append to it */
1099:fat16.cpp     ****                         cluster_num_next = fat16_append_clusters(fd->fs, cluster_num, 1);
 2841              		.loc 1 1099 0 is_stmt 1
 2842 018c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp222, fd
 2843 0190 002093E5 		ldr	r2, [r3, #0]	@ D.11152, fd_16(D)->fs
 2844 0194 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp223, cluster_num
 2845 0198 0200A0E1 		mov	r0, r2	@, D.11152
 2846 019c 0310A0E1 		mov	r1, r3	@, tmp223
 2847 01a0 0120A0E3 		mov	r2, #1	@,
 2848 01a4 FEFFFFEB 		bl	_ZL21fat16_append_clustersPK15fat16_fs_structtt	@
 2849 01a8 0030A0E1 		mov	r3, r0	@ tmp224,
 2850 01ac B232CDE1 		strh	r3, [sp, #34]	@ movhi	@ tmp224, cluster_num_next
 2851              	.L188:
1100:fat16.cpp     ****                     if(!cluster_num_next)
 2852              		.loc 1 1100 0
 2853 01b0 B232DDE1 		ldrh	r3, [sp, #34]	@ tmp225, cluster_num_next
 2854 01b4 000053E3 		cmp	r3, #0	@ tmp225,
 2855 01b8 0100001A 		bne	.L189	@,
1101:fat16.cpp     ****                         return -1;
 2856              		.loc 1 1101 0
 2857 01bc 94329FE5 		ldr	r3, .L199	@ D.11117,
 2858 01c0 9E0000EA 		b	.L182	@
 2859              	.L189:
1102:fat16.cpp     ****     
1103:fat16.cpp     ****                     cluster_num = cluster_num_next;
 2860              		.loc 1 1103 0
 2861 01c4 B232DDE1 		ldrh	r3, [sp, #34]	@ movhi	@ tmp226, cluster_num_next
 2862 01c8 BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp226, cluster_num
 2863              	.L187:
1093:fat16.cpp     ****                 while(pos >= cluster_size)
 2864              		.loc 1 1093 0 discriminator 1
 2865 01cc BC21DDE1 		ldrh	r2, [sp, #28]	@ D.11144, cluster_size
 2866 01d0 24309DE5 		ldr	r3, [sp, #36]	@ tmp228, pos
 2867 01d4 030052E1 		cmp	r2, r3	@ D.11144, tmp228
 2868 01d8 0030A083 		movhi	r3, #0	@, tmp229
 2869 01dc 0130A093 		movls	r3, #1	@, tmp229
 2870 01e0 FF3003E2 		and	r3, r3, #255	@ D.11145, tmp227,
 2871 01e4 000053E3 		cmp	r3, #0	@ D.11145,
 2872 01e8 D5FFFF1A 		bne	.L190	@,
 2873              	.L184:
 2874              	.LBE35:
 2875              	.LBE34:
 2876              	.LBE33:
 2877              	.LBE32:
 2878              	.LBB36:
ARM GAS  /tmp/ccwDRvq0.s 			page 72


1104:fat16.cpp     ****                 }
1105:fat16.cpp     ****             }
1106:fat16.cpp     ****         }
1107:fat16.cpp     ****     
1108:fat16.cpp     ****         /* write data */
1109:fat16.cpp     ****         do
1110:fat16.cpp     ****         {
1111:fat16.cpp     ****             /* calculate data size to write to cluster */
1112:fat16.cpp     ****             uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
1113:fat16.cpp     ****             (uint32_t) (cluster_num - 2) * cluster_size + first_cluster_offset;
 2879              		.loc 1 1113 0
 2880 01ec 0C309DE5 		ldr	r3, [sp, #12]	@ tmp230, fd
 2881 01f0 003093E5 		ldr	r3, [r3, #0]	@ D.11162, fd_16(D)->fs
 2882 01f4 182093E5 		ldr	r2, [r3, #24]	@ D.11163, D.11162_48->header.cluster_zero_offset
 2883 01f8 BE32DDE1 		ldrh	r3, [sp, #46]	@ D.11164, cluster_num
 2884 01fc 023043E2 		sub	r3, r3, #2	@ D.11165, D.11164,
 2885 0200 BC11DDE1 		ldrh	r1, [sp, #28]	@ D.11167, cluster_size
 2886 0204 910303E0 		mul	r3, r1, r3	@ D.11168, D.11167, D.11166
 2887 0208 032082E0 		add	r2, r2, r3	@ D.11169, D.11163, D.11168
 2888 020c BA32DDE1 		ldrh	r3, [sp, #42]	@ D.11170, first_cluster_offset
 2889 0210 033082E0 		add	r3, r2, r3	@ tmp231, D.11169, D.11170
 2890 0214 18308DE5 		str	r3, [sp, #24]	@ tmp231, cluster_offset
1114:fat16.cpp     ****             uint16_t write_length = cluster_size - first_cluster_offset;
 2891              		.loc 1 1114 0
 2892 0218 BC21DDE1 		ldrh	r2, [sp, #28]	@ movhi	@ tmp232, cluster_size
 2893 021c BA32DDE1 		ldrh	r3, [sp, #42]	@ movhi	@ tmp233, first_cluster_offset
 2894 0220 023063E0 		rsb	r3, r3, r2	@ tmp234, tmp233, tmp232
 2895 0224 B032CDE1 		strh	r3, [sp, #32]	@ movhi	@ tmp234, write_length
1115:fat16.cpp     ****             if(write_length > buffer_left)
 2896              		.loc 1 1115 0
 2897 0228 B022DDE1 		ldrh	r2, [sp, #32]	@ tmp235, write_length
 2898 022c BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp236, buffer_left
 2899 0230 030052E1 		cmp	r2, r3	@ tmp235, tmp236
 2900 0234 0100009A 		bls	.L191	@,
1116:fat16.cpp     ****                 write_length = buffer_left;
 2901              		.loc 1 1116 0
 2902 0238 BC32DDE1 		ldrh	r3, [sp, #44]	@ movhi	@ tmp237, buffer_left
 2903 023c B032CDE1 		strh	r3, [sp, #32]	@ movhi	@ tmp237, write_length
 2904              	.L191:
1117:fat16.cpp     ****     
1118:fat16.cpp     ****             /* write data which fits into the current cluster */
1119:fat16.cpp     ****             if(!fd->fs->partition->device_write(cluster_offset, buffer, write_length))
 2905              		.loc 1 1119 0
 2906 0240 0C309DE5 		ldr	r3, [sp, #12]	@ tmp238, fd
 2907 0244 003093E5 		ldr	r3, [r3, #0]	@ D.11175, fd_16(D)->fs
 2908 0248 003093E5 		ldr	r3, [r3, #0]	@ D.11176, D.11175_60->partition
 2909 024c 083093E5 		ldr	r3, [r3, #8]	@ D.11177, D.11176_61->device_write
 2910 0250 B022DDE1 		ldrh	r2, [sp, #32]	@ tmp239, write_length
 2911 0254 18009DE5 		ldr	r0, [sp, #24]	@, cluster_offset
 2912 0258 08109DE5 		ldr	r1, [sp, #8]	@, buffer
 2913 025c 0FE0A0E1 		mov	lr, pc
 2914 0260 13FF2FE1 		bx	r3	@ D.11177
 2915 0264 0030A0E1 		mov	r3, r0	@ tmp240,
 2916 0268 000053E3 		cmp	r3, #0	@ D.11178,
 2917 026c 0030A013 		movne	r3, #0	@, tmp242
 2918 0270 0130A003 		moveq	r3, #1	@, tmp242
 2919 0274 FF3003E2 		and	r3, r3, #255	@ retval.20, tmp241,
ARM GAS  /tmp/ccwDRvq0.s 			page 73


 2920 0278 000053E3 		cmp	r3, #0	@ retval.20,
 2921 027c 4000001A 		bne	.L198	@,
 2922              	.L192:
1120:fat16.cpp     ****                 break;
1121:fat16.cpp     ****     
1122:fat16.cpp     ****             /* calculate new file position */
1123:fat16.cpp     ****             buffer += write_length;
 2923              		.loc 1 1123 0
 2924 0280 B032DDE1 		ldrh	r3, [sp, #32]	@ D.11181, write_length
 2925 0284 08209DE5 		ldr	r2, [sp, #8]	@ tmp243, buffer
 2926 0288 033082E0 		add	r3, r2, r3	@ tmp244, tmp243, D.11181
 2927 028c 08308DE5 		str	r3, [sp, #8]	@ tmp244, buffer
1124:fat16.cpp     ****             buffer_left -= write_length;
 2928              		.loc 1 1124 0
 2929 0290 BC22DDE1 		ldrh	r2, [sp, #44]	@ movhi	@ tmp245, buffer_left
 2930 0294 B032DDE1 		ldrh	r3, [sp, #32]	@ movhi	@ tmp246, write_length
 2931 0298 023063E0 		rsb	r3, r3, r2	@ tmp247, tmp246, tmp245
 2932 029c BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp247, buffer_left
1125:fat16.cpp     ****             fd->pos += write_length;
 2933              		.loc 1 1125 0
 2934 02a0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp248, fd
 2935 02a4 302093E5 		ldr	r2, [r3, #48]	@ D.11182, fd_16(D)->pos
 2936 02a8 B032DDE1 		ldrh	r3, [sp, #32]	@ D.11183, write_length
 2937 02ac 032082E0 		add	r2, r2, r3	@ D.11184, D.11182, D.11183
 2938 02b0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp249, fd
 2939 02b4 302083E5 		str	r2, [r3, #48]	@ D.11184, fd_16(D)->pos
 2940              	.LBB37:
1126:fat16.cpp     ****     
1127:fat16.cpp     ****             if(first_cluster_offset + write_length >= cluster_size)
 2941              		.loc 1 1127 0
 2942 02b8 BA22DDE1 		ldrh	r2, [sp, #42]	@ D.11185, first_cluster_offset
 2943 02bc B032DDE1 		ldrh	r3, [sp, #32]	@ D.11186, write_length
 2944 02c0 032082E0 		add	r2, r2, r3	@ D.11187, D.11185, D.11186
 2945 02c4 BC31DDE1 		ldrh	r3, [sp, #28]	@ D.11188, cluster_size
 2946 02c8 030052E1 		cmp	r2, r3	@ D.11187, D.11188
 2947 02cc 210000BA 		blt	.L194	@,
 2948              	.LBB38:
1128:fat16.cpp     ****             {
1129:fat16.cpp     ****                 /* we are on a cluster boundary, so get the next cluster */
1130:fat16.cpp     ****                 uint16_t cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
 2949              		.loc 1 1130 0
 2950 02d0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp250, fd
 2951 02d4 002093E5 		ldr	r2, [r3, #0]	@ D.11191, fd_16(D)->fs
 2952 02d8 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp251, cluster_num
 2953 02dc 0200A0E1 		mov	r0, r2	@, D.11191
 2954 02e0 0310A0E1 		mov	r1, r3	@, tmp251
 2955 02e4 FEFFFFEB 		bl	_ZL22fat16_get_next_clusterPK15fat16_fs_structt	@
 2956 02e8 0030A0E1 		mov	r3, r0	@ tmp252,
 2957 02ec BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp252, cluster_num_next
1131:fat16.cpp     ****                 if(!cluster_num_next && buffer_left > 0)
 2958              		.loc 1 1131 0
 2959 02f0 BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp253, cluster_num_next
 2960 02f4 000053E3 		cmp	r3, #0	@ tmp253,
 2961 02f8 0B00001A 		bne	.L195	@,
 2962              		.loc 1 1131 0 is_stmt 0 discriminator 1
 2963 02fc BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp254, buffer_left
 2964 0300 000053E3 		cmp	r3, #0	@ tmp254,
ARM GAS  /tmp/ccwDRvq0.s 			page 74


 2965 0304 0800000A 		beq	.L195	@,
1132:fat16.cpp     ****         /* we reached the last cluster, append a new one */
1133:fat16.cpp     ****                     cluster_num_next = fat16_append_clusters(fd->fs, cluster_num, 1);
 2966              		.loc 1 1133 0 is_stmt 1
 2967 0308 0C309DE5 		ldr	r3, [sp, #12]	@ tmp255, fd
 2968 030c 002093E5 		ldr	r2, [r3, #0]	@ D.11196, fd_16(D)->fs
 2969 0310 BE32DDE1 		ldrh	r3, [sp, #46]	@ tmp256, cluster_num
 2970 0314 0200A0E1 		mov	r0, r2	@, D.11196
 2971 0318 0310A0E1 		mov	r1, r3	@, tmp256
 2972 031c 0120A0E3 		mov	r2, #1	@,
 2973 0320 FEFFFFEB 		bl	_ZL21fat16_append_clustersPK15fat16_fs_structtt	@
 2974 0324 0030A0E1 		mov	r3, r0	@ tmp257,
 2975 0328 BE31CDE1 		strh	r3, [sp, #30]	@ movhi	@ tmp257, cluster_num_next
 2976              	.L195:
1134:fat16.cpp     ****                 if(!cluster_num_next)
 2977              		.loc 1 1134 0
 2978 032c BE31DDE1 		ldrh	r3, [sp, #30]	@ tmp258, cluster_num_next
 2979 0330 000053E3 		cmp	r3, #0	@ tmp258,
 2980 0334 0300001A 		bne	.L196	@,
1135:fat16.cpp     ****                 {
1136:fat16.cpp     ****                     fd->pos_cluster = 0;
 2981              		.loc 1 1136 0
 2982 0338 0C309DE5 		ldr	r3, [sp, #12]	@ tmp259, fd
 2983 033c 0020A0E3 		mov	r2, #0	@ tmp261,
 2984 0340 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp260, fd_16(D)->pos_cluster
1137:fat16.cpp     ****                     break;
 2985              		.loc 1 1137 0
 2986 0344 0F0000EA 		b	.L193	@
 2987              	.L196:
1138:fat16.cpp     ****                 }
1139:fat16.cpp     ****     
1140:fat16.cpp     ****                 cluster_num = cluster_num_next;
 2988              		.loc 1 1140 0
 2989 0348 BE31DDE1 		ldrh	r3, [sp, #30]	@ movhi	@ tmp262, cluster_num_next
 2990 034c BE32CDE1 		strh	r3, [sp, #46]	@ movhi	@ tmp262, cluster_num
1141:fat16.cpp     ****                 first_cluster_offset = 0;
 2991              		.loc 1 1141 0
 2992 0350 0030A0E3 		mov	r3, #0	@ tmp264,
 2993 0354 BA32CDE1 		strh	r3, [sp, #42]	@ movhi	@ tmp263, first_cluster_offset
 2994              	.L194:
 2995              	.LBE38:
 2996              	.LBE37:
1142:fat16.cpp     ****             }
1143:fat16.cpp     ****     
1144:fat16.cpp     ****             fd->pos_cluster = cluster_num;
 2997              		.loc 1 1144 0
 2998 0358 0C309DE5 		ldr	r3, [sp, #12]	@ tmp265, fd
 2999 035c BE22DDE1 		ldrh	r2, [sp, #46]	@ movhi	@ tmp266, cluster_num
 3000 0360 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp266, fd_16(D)->pos_cluster
 3001              	.LBE36:
1109:fat16.cpp     ****         do
 3002              		.loc 1 1109 0
 3003 0364 BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp268, buffer_left
 3004 0368 000053E3 		cmp	r3, #0	@ tmp268,
 3005 036c 0030A003 		moveq	r3, #0	@, tmp269
 3006 0370 0130A013 		movne	r3, #1	@, tmp269
 3007 0374 FF3003E2 		and	r3, r3, #255	@ D.11161, tmp267,
ARM GAS  /tmp/ccwDRvq0.s 			page 75


 3008 0378 000053E3 		cmp	r3, #0	@ D.11161,
 3009 037c 9AFFFF1A 		bne	.L184	@,
 3010 0380 000000EA 		b	.L193	@
 3011              	.L198:
 3012              	.LBB39:
1120:fat16.cpp     ****                 break;
 3013              		.loc 1 1120 0
 3014 0384 0000A0E1 		mov	r0, r0	@ nop
 3015              	.L193:
 3016              	.LBE39:
 3017              	.LBB40:
1145:fat16.cpp     ****     
1146:fat16.cpp     ****         }
1147:fat16.cpp     ****         while(buffer_left > 0); /* check if we are done */
1148:fat16.cpp     ****     
1149:fat16.cpp     ****         /* update directory entry */
1150:fat16.cpp     ****         if(fd->pos > fd->dir_entry.file_size)
 3018              		.loc 1 1150 0
 3019 0388 0C309DE5 		ldr	r3, [sp, #12]	@ tmp270, fd
 3020 038c 302093E5 		ldr	r2, [r3, #48]	@ D.11201, fd_16(D)->pos
 3021 0390 0C309DE5 		ldr	r3, [sp, #12]	@ tmp271, fd
 3022 0394 283093E5 		ldr	r3, [r3, #40]	@ D.11202, fd_16(D)->dir_entry.file_size
 3023 0398 030052E1 		cmp	r2, r3	@ D.11201, D.11202
 3024 039c 2000009A 		bls	.L197	@,
 3025              	.LBB41:
1151:fat16.cpp     ****         {
1152:fat16.cpp     ****             uint32_t size_old = fd->dir_entry.file_size;
 3026              		.loc 1 1152 0
 3027 03a0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp272, fd
 3028 03a4 283093E5 		ldr	r3, [r3, #40]	@ tmp273, fd_16(D)->dir_entry.file_size
 3029 03a8 14308DE5 		str	r3, [sp, #20]	@ tmp273, size_old
1153:fat16.cpp     ****     
1154:fat16.cpp     ****             /* update file size */
1155:fat16.cpp     ****             fd->dir_entry.file_size = fd->pos;
 3030              		.loc 1 1155 0
 3031 03ac 0C309DE5 		ldr	r3, [sp, #12]	@ tmp274, fd
 3032 03b0 302093E5 		ldr	r2, [r3, #48]	@ D.11205, fd_16(D)->pos
 3033 03b4 0C309DE5 		ldr	r3, [sp, #12]	@ tmp275, fd
 3034 03b8 282083E5 		str	r2, [r3, #40]	@ D.11205, fd_16(D)->dir_entry.file_size
1156:fat16.cpp     ****             /* write directory entry */
1157:fat16.cpp     ****             if(!fat16_write_dir_entry(fd->fs, &fd->dir_entry))
 3035              		.loc 1 1157 0
 3036 03bc 0C309DE5 		ldr	r3, [sp, #12]	@ tmp276, fd
 3037 03c0 002093E5 		ldr	r2, [r3, #0]	@ D.11207, fd_16(D)->fs
 3038 03c4 0C309DE5 		ldr	r3, [sp, #12]	@ tmp277, fd
 3039 03c8 043083E2 		add	r3, r3, #4	@ D.11208, tmp277,
 3040 03cc 0200A0E1 		mov	r0, r2	@, D.11207
 3041 03d0 0310A0E1 		mov	r1, r3	@, D.11208
 3042 03d4 FEFFFFEB 		bl	_ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct	@
 3043 03d8 0030A0E1 		mov	r3, r0	@ tmp278,
 3044 03dc 000053E3 		cmp	r3, #0	@ D.11209,
 3045 03e0 0030A013 		movne	r3, #0	@, tmp280
 3046 03e4 0130A003 		moveq	r3, #1	@, tmp280
 3047 03e8 FF3003E2 		and	r3, r3, #255	@ retval.21, tmp279,
 3048 03ec 000053E3 		cmp	r3, #0	@ retval.21,
 3049 03f0 0B00000A 		beq	.L197	@,
1158:fat16.cpp     ****             {
ARM GAS  /tmp/ccwDRvq0.s 			page 76


1159:fat16.cpp     ****                 /* We do not return an error here since we actually wrote
1160:fat16.cpp     ****                                                              * some data to disk. So we calculate t
1161:fat16.cpp     ****                                                              * we wrote to disk and which lies with
1162:fat16.cpp     ****                                                              */
1163:fat16.cpp     ****                 buffer_left = fd->pos - size_old;
 3050              		.loc 1 1163 0
 3051 03f4 0C309DE5 		ldr	r3, [sp, #12]	@ tmp281, fd
 3052 03f8 303093E5 		ldr	r3, [r3, #48]	@ D.11212, fd_16(D)->pos
 3053 03fc 0338A0E1 		mov	r3, r3, asl #16	@ tmp282, D.11212,
 3054 0400 2328A0E1 		mov	r2, r3, lsr #16	@ D.11213, tmp282,
 3055 0404 14309DE5 		ldr	r3, [sp, #20]	@ tmp283, size_old
 3056 0408 0338A0E1 		mov	r3, r3, asl #16	@ tmp284, tmp283,
 3057 040c 2338A0E1 		mov	r3, r3, lsr #16	@ D.11214, tmp284,
 3058 0410 023063E0 		rsb	r3, r3, r2	@ tmp285, D.11214, D.11213
 3059 0414 BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp285, buffer_left
1164:fat16.cpp     ****                 fd->pos = size_old;
 3060              		.loc 1 1164 0
 3061 0418 0C309DE5 		ldr	r3, [sp, #12]	@ tmp286, fd
 3062 041c 14209DE5 		ldr	r2, [sp, #20]	@ tmp287, size_old
 3063 0420 302083E5 		str	r2, [r3, #48]	@ tmp287, fd_16(D)->pos
 3064              	.L197:
 3065              	.LBE41:
 3066              	.LBE40:
1165:fat16.cpp     ****             }
1166:fat16.cpp     ****         }
1167:fat16.cpp     ****     
1168:fat16.cpp     ****         return buffer_len - buffer_left;
 3067              		.loc 1 1168 0
 3068 0424 B620DDE1 		ldrh	r2, [sp, #6]	@ movhi	@ tmp288, buffer_len
 3069 0428 BC32DDE1 		ldrh	r3, [sp, #44]	@ movhi	@ tmp289, buffer_left
 3070 042c 023063E0 		rsb	r3, r3, r2	@ tmp290, tmp289, tmp288
 3071 0430 0338A0E1 		mov	r3, r3, asl #16	@ tmp291, tmp290,
 3072 0434 2338A0E1 		mov	r3, r3, lsr #16	@ D.11217, tmp291,
 3073 0438 0338A0E1 		mov	r3, r3, asl #16	@ tmp292, D.11217,
 3074 043c 2338A0E1 		mov	r3, r3, lsr #16	@ D.11117, tmp292,
 3075              	.L182:
 3076 0440 0338A0E1 		mov	r3, r3, asl #16	@ tmp295, D.11117,
 3077 0444 4338A0E1 		mov	r3, r3, asr #16	@ tmp294, tmp295,
 3078              	.LBE31:
1169:fat16.cpp     ****     
1170:fat16.cpp     ****     #else
1171:fat16.cpp     ****         return -1;
1172:fat16.cpp     ****     #endif
1173:fat16.cpp     **** }
 3079              		.loc 1 1173 0
 3080 0448 0300A0E1 		mov	r0, r3	@, <retval>
 3081 044c 34D08DE2 		add	sp, sp, #52	@,,
 3082 0450 04E09DE4 		ldr	lr, [sp], #4
 3083 0454 1EFF2FE1 		bx	lr
 3084              	.L200:
 3085              		.align	2
 3086              	.L199:
 3087 0458 FFFF0000 		.word	65535
 3088              		.cfi_endproc
 3089              	.LFE125:
 3090              		.size	_Z16fat16_write_fileP17fat16_file_structPKht, .-_Z16fat16_write_fileP17fat16_file_structPKht
 3091              		.section	.text._Z15fat16_seek_fileP17fat16_file_structPlh,"ax",%progbits
ARM GAS  /tmp/ccwDRvq0.s 			page 77


 3092              		.align	2
 3093              		.global	_Z15fat16_seek_fileP17fat16_file_structPlh
 3094              		.type	_Z15fat16_seek_fileP17fat16_file_structPlh, %function
 3095              	_Z15fat16_seek_fileP17fat16_file_structPlh:
 3096              	.LFB126:
1174:fat16.cpp     **** 
1175:fat16.cpp     **** /**
1176:fat16.cpp     ****  * \ingroup fat16_file
1177:fat16.cpp     ****  * Repositions the read/write file offset.
1178:fat16.cpp     ****  *
1179:fat16.cpp     ****  * Changes the file offset where the next call to fat16_read_file()
1180:fat16.cpp     ****  * or fat16_write_file() starts reading/writing.
1181:fat16.cpp     ****  *
1182:fat16.cpp     ****  * If the new offset is beyond the end of the file, fat16_resize_file()
1183:fat16.cpp     ****  * is implicitly called, i.e. the file is expanded.
1184:fat16.cpp     ****  *
1185:fat16.cpp     ****  * The new offset can be given in different ways determined by
1186:fat16.cpp     ****  * the \c whence parameter:
1187:fat16.cpp     ****  * - \b FAT16_SEEK_SET: \c *offset is relative to the beginning of the file.
1188:fat16.cpp     ****  * - \b FAT16_SEEK_CUR: \c *offset is relative to the current file position.
1189:fat16.cpp     ****  * - \b FAT16_SEEK_END: \c *offset is relative to the end of the file.
1190:fat16.cpp     ****  *
1191:fat16.cpp     ****  * The resulting absolute offset is written to the location the \c offset
1192:fat16.cpp     ****  * parameter points to.
1193:fat16.cpp     ****  *
1194:fat16.cpp     ****  * \param[in] fd The file decriptor of the file on which to seek.
1195:fat16.cpp     ****  * \param[in,out] offset A pointer to the new offset, as affected by the \c whence
1196:fat16.cpp     ****  *                   parameter. The function writes the new absolute offset
1197:fat16.cpp     ****  *                   to this location before it returns.
1198:fat16.cpp     ****  * \param[in] whence Affects the way \c offset is interpreted, see above.
1199:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1200:fat16.cpp     ****  */
1201:fat16.cpp     **** uint8_t fat16_seek_file(struct fat16_file_struct* fd, int32_t* offset, uint8_t whence)
1202:fat16.cpp     **** {
 3097              		.loc 1 1202 0
 3098              		.cfi_startproc
 3099              		@ Function supports interworking.
 3100              		@ args = 0, pretend = 0, frame = 24
 3101              		@ frame_needed = 0, uses_anonymous_args = 0
 3102 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 3103              	.LCFI32:
 3104              		.cfi_def_cfa_offset 4
 3105 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 3106              	.LCFI33:
 3107              		.cfi_def_cfa_offset 32
 3108 0008 0C008DE5 		str	r0, [sp, #12]	@ fd, fd
 3109 000c 08108DE5 		str	r1, [sp, #8]	@ offset, offset
 3110 0010 0230A0E1 		mov	r3, r2	@ tmp147, whence
 3111 0014 0730CDE5 		strb	r3, [sp, #7]	@ tmp148, whence
 3112              	.LBB42:
1203:fat16.cpp     ****     if(!fd || !offset)
 3113              		.loc 1 1203 0
 3114 0018 0C309DE5 		ldr	r3, [sp, #12]	@ tmp149, fd
 3115 001c 000053E3 		cmp	r3, #0	@ tmp149,
 3116 0020 0200000A 		beq	.L202	@,
 3117              		.cfi_offset 14, -4
 3118              		.loc 1 1203 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccwDRvq0.s 			page 78


 3119 0024 08309DE5 		ldr	r3, [sp, #8]	@ tmp150, offset
 3120 0028 000053E3 		cmp	r3, #0	@ tmp150,
 3121 002c 0100001A 		bne	.L203	@,
 3122              	.L202:
1204:fat16.cpp     ****         return 0;
 3123              		.loc 1 1204 0 is_stmt 1
 3124 0030 0030A0E3 		mov	r3, #0	@ D.11092,
 3125 0034 380000EA 		b	.L204	@
 3126              	.L203:
1205:fat16.cpp     **** 
1206:fat16.cpp     ****     uint32_t new_pos = fd->pos;
 3127              		.loc 1 1206 0
 3128 0038 0C309DE5 		ldr	r3, [sp, #12]	@ tmp151, fd
 3129 003c 303093E5 		ldr	r3, [r3, #48]	@ tmp152, fd_4(D)->pos
 3130 0040 14308DE5 		str	r3, [sp, #20]	@ tmp152, new_pos
1207:fat16.cpp     ****     switch(whence)
 3131              		.loc 1 1207 0
 3132 0044 0730DDE5 		ldrb	r3, [sp, #7]	@ zero_extendqisi2	@ D.11094, whence
 3133 0048 010053E3 		cmp	r3, #1	@ D.11094,
 3134 004c 0700000A 		beq	.L207	@,
 3135 0050 020053E3 		cmp	r3, #2	@ D.11094,
 3136 0054 0B00000A 		beq	.L208	@,
 3137 0058 000053E3 		cmp	r3, #0	@ D.11094,
 3138 005c 1000001A 		bne	.L213	@,
 3139              	.L206:
1208:fat16.cpp     ****     {
1209:fat16.cpp     ****         case FAT16_SEEK_SET:
1210:fat16.cpp     ****             new_pos = *offset;
 3140              		.loc 1 1210 0
 3141 0060 08309DE5 		ldr	r3, [sp, #8]	@ tmp153, offset
 3142 0064 003093E5 		ldr	r3, [r3, #0]	@ D.11095,
 3143 0068 14308DE5 		str	r3, [sp, #20]	@ D.11095, new_pos
1211:fat16.cpp     ****             break;
 3144              		.loc 1 1211 0
 3145 006c 0E0000EA 		b	.L209	@
 3146              	.L207:
1212:fat16.cpp     ****         case FAT16_SEEK_CUR:
1213:fat16.cpp     ****             new_pos += *offset;
 3147              		.loc 1 1213 0
 3148 0070 08309DE5 		ldr	r3, [sp, #8]	@ tmp154, offset
 3149 0074 003093E5 		ldr	r3, [r3, #0]	@ D.11096,
 3150 0078 14209DE5 		ldr	r2, [sp, #20]	@ tmp155, new_pos
 3151 007c 033082E0 		add	r3, r2, r3	@ tmp156, tmp155, D.11097
 3152 0080 14308DE5 		str	r3, [sp, #20]	@ tmp156, new_pos
1214:fat16.cpp     ****             break;
 3153              		.loc 1 1214 0
 3154 0084 080000EA 		b	.L209	@
 3155              	.L208:
1215:fat16.cpp     ****         case FAT16_SEEK_END:
1216:fat16.cpp     ****             new_pos = fd->dir_entry.file_size + *offset;
 3156              		.loc 1 1216 0
 3157 0088 0C309DE5 		ldr	r3, [sp, #12]	@ tmp157, fd
 3158 008c 282093E5 		ldr	r2, [r3, #40]	@ D.11098, fd_4(D)->dir_entry.file_size
 3159 0090 08309DE5 		ldr	r3, [sp, #8]	@ tmp158, offset
 3160 0094 003093E5 		ldr	r3, [r3, #0]	@ D.11099,
 3161 0098 033082E0 		add	r3, r2, r3	@ tmp159, D.11098, D.11100
 3162 009c 14308DE5 		str	r3, [sp, #20]	@ tmp159, new_pos
ARM GAS  /tmp/ccwDRvq0.s 			page 79


1217:fat16.cpp     ****             break;
 3163              		.loc 1 1217 0
 3164 00a0 010000EA 		b	.L209	@
 3165              	.L213:
1218:fat16.cpp     ****         default:
1219:fat16.cpp     ****             return 0;
 3166              		.loc 1 1219 0
 3167 00a4 0030A0E3 		mov	r3, #0	@ D.11092,
 3168 00a8 1B0000EA 		b	.L204	@
 3169              	.L209:
1220:fat16.cpp     ****     }
1221:fat16.cpp     **** 
1222:fat16.cpp     ****     if(new_pos > fd->dir_entry.file_size && !fat16_resize_file(fd, new_pos))
 3170              		.loc 1 1222 0
 3171 00ac 0C309DE5 		ldr	r3, [sp, #12]	@ tmp160, fd
 3172 00b0 282093E5 		ldr	r2, [r3, #40]	@ D.11105, fd_4(D)->dir_entry.file_size
 3173 00b4 14309DE5 		ldr	r3, [sp, #20]	@ tmp161, new_pos
 3174 00b8 030052E1 		cmp	r2, r3	@ D.11105, tmp161
 3175 00bc 0700002A 		bcs	.L210	@,
 3176              		.loc 1 1222 0 is_stmt 0 discriminator 1
 3177 00c0 0C009DE5 		ldr	r0, [sp, #12]	@, fd
 3178 00c4 14109DE5 		ldr	r1, [sp, #20]	@, new_pos
 3179 00c8 FEFFFFEB 		bl	_Z17fat16_resize_fileP17fat16_file_structm	@
 3180 00cc 0030A0E1 		mov	r3, r0	@ tmp162,
 3181 00d0 000053E3 		cmp	r3, #0	@ D.11107,
 3182 00d4 0100001A 		bne	.L210	@,
 3183              		.loc 1 1222 0 discriminator 3
 3184 00d8 0130A0E3 		mov	r3, #1	@ iftmp.18,
 3185 00dc 000000EA 		b	.L211	@
 3186              	.L210:
 3187              		.loc 1 1222 0 discriminator 2
 3188 00e0 0030A0E3 		mov	r3, #0	@ iftmp.18,
 3189              	.L211:
 3190              		.loc 1 1222 0 discriminator 4
 3191 00e4 000053E3 		cmp	r3, #0	@ retval.17,
 3192 00e8 0100000A 		beq	.L212	@,
1223:fat16.cpp     ****         return 0;
 3193              		.loc 1 1223 0 is_stmt 1
 3194 00ec 0030A0E3 		mov	r3, #0	@ D.11092,
 3195 00f0 090000EA 		b	.L204	@
 3196              	.L212:
1224:fat16.cpp     **** 
1225:fat16.cpp     ****     fd->pos = new_pos;
 3197              		.loc 1 1225 0
 3198 00f4 0C309DE5 		ldr	r3, [sp, #12]	@ tmp163, fd
 3199 00f8 14209DE5 		ldr	r2, [sp, #20]	@ tmp164, new_pos
 3200 00fc 302083E5 		str	r2, [r3, #48]	@ tmp164, fd_4(D)->pos
1226:fat16.cpp     ****     fd->pos_cluster = 0;
 3201              		.loc 1 1226 0
 3202 0100 0C309DE5 		ldr	r3, [sp, #12]	@ tmp165, fd
 3203 0104 0020A0E3 		mov	r2, #0	@ tmp167,
 3204 0108 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp166, fd_4(D)->pos_cluster
1227:fat16.cpp     **** 
1228:fat16.cpp     ****     *offset = new_pos;
 3205              		.loc 1 1228 0
 3206 010c 14209DE5 		ldr	r2, [sp, #20]	@ new_pos.19, new_pos
 3207 0110 08309DE5 		ldr	r3, [sp, #8]	@ tmp168, offset
ARM GAS  /tmp/ccwDRvq0.s 			page 80


 3208 0114 002083E5 		str	r2, [r3, #0]	@ new_pos.19,
1229:fat16.cpp     ****     return 1;
 3209              		.loc 1 1229 0
 3210 0118 0130A0E3 		mov	r3, #1	@ D.11092,
 3211              	.L204:
 3212              	.LBE42:
1230:fat16.cpp     **** }
 3213              		.loc 1 1230 0
 3214 011c 0300A0E1 		mov	r0, r3	@, <retval>
 3215 0120 1CD08DE2 		add	sp, sp, #28	@,,
 3216 0124 04E09DE4 		ldr	lr, [sp], #4
 3217 0128 1EFF2FE1 		bx	lr
 3218              		.cfi_endproc
 3219              	.LFE126:
 3220              		.size	_Z15fat16_seek_fileP17fat16_file_structPlh, .-_Z15fat16_seek_fileP17fat16_file_structPlh
 3221              		.section	.text._Z17fat16_resize_fileP17fat16_file_structm,"ax",%progbits
 3222              		.align	2
 3223              		.global	_Z17fat16_resize_fileP17fat16_file_structm
 3224              		.type	_Z17fat16_resize_fileP17fat16_file_structm, %function
 3225              	_Z17fat16_resize_fileP17fat16_file_structm:
 3226              	.LFB127:
1231:fat16.cpp     **** 
1232:fat16.cpp     **** /**
1233:fat16.cpp     ****  * \ingroup fat16_file
1234:fat16.cpp     ****  * Resizes a file to have a specific size.
1235:fat16.cpp     ****  *
1236:fat16.cpp     ****  * Enlarges or shrinks the file pointed to by the file descriptor to have
1237:fat16.cpp     ****  * exactly the specified size.
1238:fat16.cpp     ****  *
1239:fat16.cpp     ****  * If the file is truncated, all bytes having an equal or larger offset
1240:fat16.cpp     ****  * than the given size are lost. If the file is expanded, the additional
1241:fat16.cpp     ****  * bytes are allocated.
1242:fat16.cpp     ****  *
1243:fat16.cpp     ****  * \note Please be aware that this function just allocates or deallocates disk
1244:fat16.cpp     ****  * space, it does not explicitely clear it. To avoid data leakage, this
1245:fat16.cpp     ****  * must be done manually.
1246:fat16.cpp     ****  *
1247:fat16.cpp     ****  * \param[in] fd The file decriptor of the file which to resize.
1248:fat16.cpp     ****  * \param[in] size The new size of the file.
1249:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1250:fat16.cpp     ****  */
1251:fat16.cpp     **** uint8_t fat16_resize_file(struct fat16_file_struct* fd, uint32_t size)
1252:fat16.cpp     **** {
 3227              		.loc 1 1252 0
 3228              		.cfi_startproc
 3229              		@ Function supports interworking.
 3230              		@ args = 0, pretend = 0, frame = 24
 3231              		@ frame_needed = 0, uses_anonymous_args = 0
 3232 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 3233              	.LCFI34:
 3234              		.cfi_def_cfa_offset 4
 3235 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 3236              	.LCFI35:
 3237              		.cfi_def_cfa_offset 32
 3238 0008 04008DE5 		str	r0, [sp, #4]	@ fd, fd
 3239 000c 00108DE5 		str	r1, [sp, #0]	@ size, size
 3240              	.LBB43:
ARM GAS  /tmp/ccwDRvq0.s 			page 81


1253:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
1254:fat16.cpp     ****         if(!fd)
 3241              		.loc 1 1254 0
 3242 0010 04309DE5 		ldr	r3, [sp, #4]	@ tmp155, fd
 3243 0014 000053E3 		cmp	r3, #0	@ tmp155,
 3244 0018 0100001A 		bne	.L215	@,
 3245              		.cfi_offset 14, -4
1255:fat16.cpp     ****             return 0;
 3246              		.loc 1 1255 0
 3247 001c 0030A0E3 		mov	r3, #0	@ D.11030,
 3248 0020 900000EA 		b	.L216	@
 3249              	.L215:
1256:fat16.cpp     ****     
1257:fat16.cpp     ****         uint16_t cluster_num = fd->dir_entry.cluster;
 3250              		.loc 1 1257 0
 3251 0024 04309DE5 		ldr	r3, [sp, #4]	@ tmp156, fd
 3252 0028 B632D3E1 		ldrh	r3, [r3, #38]	@ movhi	@ tmp157, fd_6(D)->dir_entry.cluster
 3253 002c B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp157, cluster_num
1258:fat16.cpp     ****         uint16_t cluster_size = fd->fs->header.cluster_size;
 3254              		.loc 1 1258 0
 3255 0030 04309DE5 		ldr	r3, [sp, #4]	@ tmp158, fd
 3256 0034 003093E5 		ldr	r3, [r3, #0]	@ D.11031, fd_6(D)->fs
 3257 0038 B231D3E1 		ldrh	r3, [r3, #18]	@ movhi	@ tmp159, D.11031_9->header.cluster_size
 3258 003c BC30CDE1 		strh	r3, [sp, #12]	@ movhi	@ tmp159, cluster_size
1259:fat16.cpp     ****         uint32_t size_new = size;
 3259              		.loc 1 1259 0
 3260 0040 00309DE5 		ldr	r3, [sp, #0]	@ tmp160, size
 3261 0044 10308DE5 		str	r3, [sp, #16]	@ tmp160, size_new
 3262              	.LBB44:
1260:fat16.cpp     ****     
1261:fat16.cpp     ****         do
1262:fat16.cpp     ****         {
1263:fat16.cpp     ****             if(cluster_num == 0 && size_new == 0)
 3263              		.loc 1 1263 0
 3264 0048 B631DDE1 		ldrh	r3, [sp, #22]	@ tmp161, cluster_num
 3265 004c 000053E3 		cmp	r3, #0	@ tmp161,
 3266 0050 1400001A 		bne	.L219	@,
 3267              		.loc 1 1263 0 is_stmt 0 discriminator 1
 3268 0054 10309DE5 		ldr	r3, [sp, #16]	@ tmp162, size_new
 3269 0058 000053E3 		cmp	r3, #0	@ tmp162,
 3270 005c 1100001A 		bne	.L219	@,
1264:fat16.cpp     ****         /* the file stays empty */
1265:fat16.cpp     ****                 break;
 3271              		.loc 1 1265 0 is_stmt 1
 3272 0060 740000EA 		b	.L218	@
 3273              	.L222:
 3274              	.LBB45:
1266:fat16.cpp     ****     
1267:fat16.cpp     ****             /* seek to the next cluster as long as we need the space */
1268:fat16.cpp     ****             while(size_new > cluster_size)
1269:fat16.cpp     ****             {
1270:fat16.cpp     ****                 /* get next cluster of file */
1271:fat16.cpp     ****                 uint16_t cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
 3275              		.loc 1 1271 0
 3276 0064 04309DE5 		ldr	r3, [sp, #4]	@ tmp163, fd
 3277 0068 002093E5 		ldr	r2, [r3, #0]	@ D.11043, fd_6(D)->fs
 3278 006c B631DDE1 		ldrh	r3, [sp, #22]	@ tmp164, cluster_num
ARM GAS  /tmp/ccwDRvq0.s 			page 82


 3279 0070 0200A0E1 		mov	r0, r2	@, D.11043
 3280 0074 0310A0E1 		mov	r1, r3	@, tmp164
 3281 0078 FEFFFFEB 		bl	_ZL22fat16_get_next_clusterPK15fat16_fs_structt	@
 3282 007c 0030A0E1 		mov	r3, r0	@ tmp165,
 3283 0080 BA30CDE1 		strh	r3, [sp, #10]	@ movhi	@ tmp165, cluster_num_next
1272:fat16.cpp     ****                 if(cluster_num_next)
 3284              		.loc 1 1272 0
 3285 0084 BA30DDE1 		ldrh	r3, [sp, #10]	@ tmp166, cluster_num_next
 3286 0088 000053E3 		cmp	r3, #0	@ tmp166,
 3287 008c 0E00000A 		beq	.L231	@,
1273:fat16.cpp     ****                 {
1274:fat16.cpp     ****                     cluster_num = cluster_num_next;
 3288              		.loc 1 1274 0
 3289 0090 BA30DDE1 		ldrh	r3, [sp, #10]	@ movhi	@ tmp167, cluster_num_next
 3290 0094 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp167, cluster_num
1275:fat16.cpp     ****                     size_new -= cluster_size;
 3291              		.loc 1 1275 0
 3292 0098 BC30DDE1 		ldrh	r3, [sp, #12]	@ D.11046, cluster_size
 3293 009c 10209DE5 		ldr	r2, [sp, #16]	@ tmp168, size_new
 3294 00a0 023063E0 		rsb	r3, r3, r2	@ tmp169, D.11046, tmp168
 3295 00a4 10308DE5 		str	r3, [sp, #16]	@ tmp169, size_new
 3296              	.L219:
 3297              	.LBE45:
1268:fat16.cpp     ****             while(size_new > cluster_size)
 3298              		.loc 1 1268 0 discriminator 1
 3299 00a8 BC20DDE1 		ldrh	r2, [sp, #12]	@ D.11041, cluster_size
 3300 00ac 10309DE5 		ldr	r3, [sp, #16]	@ tmp171, size_new
 3301 00b0 030052E1 		cmp	r2, r3	@ D.11041, tmp171
 3302 00b4 0030A023 		movcs	r3, #0	@, tmp172
 3303 00b8 0130A033 		movcc	r3, #1	@, tmp172
 3304 00bc FF3003E2 		and	r3, r3, #255	@ D.11042, tmp170,
 3305 00c0 000053E3 		cmp	r3, #0	@ D.11042,
 3306 00c4 E6FFFF1A 		bne	.L222	@,
 3307 00c8 000000EA 		b	.L221	@
 3308              	.L231:
 3309              	.LBB46:
1276:fat16.cpp     ****                 }
1277:fat16.cpp     ****                 else
1278:fat16.cpp     ****                 {
1279:fat16.cpp     ****                     break;
 3310              		.loc 1 1279 0
 3311 00cc 0000A0E1 		mov	r0, r0	@ nop
 3312              	.L221:
 3313              	.LBE46:
 3314              	.LBB47:
1280:fat16.cpp     ****                 }
1281:fat16.cpp     ****             }
1282:fat16.cpp     ****     
1283:fat16.cpp     ****             if(size_new > cluster_size || cluster_num == 0)
 3315              		.loc 1 1283 0
 3316 00d0 BC20DDE1 		ldrh	r2, [sp, #12]	@ D.11050, cluster_size
 3317 00d4 10309DE5 		ldr	r3, [sp, #16]	@ tmp173, size_new
 3318 00d8 030052E1 		cmp	r2, r3	@ D.11050, tmp173
 3319 00dc 0200003A 		bcc	.L223	@,
 3320              		.loc 1 1283 0 is_stmt 0 discriminator 1
 3321 00e0 B631DDE1 		ldrh	r3, [sp, #22]	@ tmp174, cluster_num
 3322 00e4 000053E3 		cmp	r3, #0	@ tmp174,
ARM GAS  /tmp/ccwDRvq0.s 			page 83


 3323 00e8 2500001A 		bne	.L224	@,
 3324              	.L223:
 3325              	.LBB48:
1284:fat16.cpp     ****             {
1285:fat16.cpp     ****                 /* Allocate new cluster chain and append
1286:fat16.cpp     ****                                                              * it to the existing one, if available
1287:fat16.cpp     ****                                                              */
1288:fat16.cpp     ****                 uint16_t cluster_count = size_new / cluster_size;
 3326              		.loc 1 1288 0 is_stmt 1
 3327 00ec BC30DDE1 		ldrh	r3, [sp, #12]	@ D.11052, cluster_size
 3328 00f0 10009DE5 		ldr	r0, [sp, #16]	@, size_new
 3329 00f4 0310A0E1 		mov	r1, r3	@, D.11052
 3330 00f8 FEFFFFEB 		bl	__aeabi_uidiv	@
 3331 00fc 0030A0E1 		mov	r3, r0	@ tmp177,
 3332 0100 BE30CDE1 		strh	r3, [sp, #14]	@ movhi	@ D.11053, cluster_count
1289:fat16.cpp     ****                 if((uint32_t) cluster_count * cluster_size < size_new)
 3333              		.loc 1 1289 0
 3334 0104 BE30DDE1 		ldrh	r3, [sp, #14]	@ D.11054, cluster_count
 3335 0108 BC20DDE1 		ldrh	r2, [sp, #12]	@ D.11055, cluster_size
 3336 010c 930202E0 		mul	r2, r3, r2	@ D.11056, D.11054, D.11055
 3337 0110 10309DE5 		ldr	r3, [sp, #16]	@ tmp178, size_new
 3338 0114 030052E1 		cmp	r2, r3	@ D.11056, tmp178
 3339 0118 0200002A 		bcs	.L225	@,
1290:fat16.cpp     ****                     ++cluster_count;
 3340              		.loc 1 1290 0
 3341 011c BE30DDE1 		ldrh	r3, [sp, #14]	@ movhi	@ tmp179, cluster_count
 3342 0120 013083E2 		add	r3, r3, #1	@ tmp180, tmp179,
 3343 0124 BE30CDE1 		strh	r3, [sp, #14]	@ movhi	@ tmp180, cluster_count
 3344              	.L225:
1291:fat16.cpp     ****                 uint16_t cluster_new_chain = fat16_append_clusters(fd->fs, cluster_num, cluster_cou
 3345              		.loc 1 1291 0
 3346 0128 04309DE5 		ldr	r3, [sp, #4]	@ tmp181, fd
 3347 012c 001093E5 		ldr	r1, [r3, #0]	@ D.11060, fd_6(D)->fs
 3348 0130 B621DDE1 		ldrh	r2, [sp, #22]	@ tmp182, cluster_num
 3349 0134 BE30DDE1 		ldrh	r3, [sp, #14]	@ tmp183, cluster_count
 3350 0138 0100A0E1 		mov	r0, r1	@, D.11060
 3351 013c 0210A0E1 		mov	r1, r2	@, tmp182
 3352 0140 0320A0E1 		mov	r2, r3	@, tmp183
 3353 0144 FEFFFFEB 		bl	_ZL21fat16_append_clustersPK15fat16_fs_structtt	@
 3354 0148 0030A0E1 		mov	r3, r0	@ tmp184,
 3355 014c B830CDE1 		strh	r3, [sp, #8]	@ movhi	@ tmp184, cluster_new_chain
1292:fat16.cpp     ****                 if(!cluster_new_chain)
 3356              		.loc 1 1292 0
 3357 0150 B830DDE1 		ldrh	r3, [sp, #8]	@ tmp185, cluster_new_chain
 3358 0154 000053E3 		cmp	r3, #0	@ tmp185,
 3359 0158 0100001A 		bne	.L226	@,
1293:fat16.cpp     ****                     return 0;
 3360              		.loc 1 1293 0
 3361 015c 0030A0E3 		mov	r3, #0	@ D.11030,
 3362 0160 400000EA 		b	.L216	@
 3363              	.L226:
1294:fat16.cpp     ****     
1295:fat16.cpp     ****                 if(!cluster_num)
 3364              		.loc 1 1295 0
 3365 0164 B631DDE1 		ldrh	r3, [sp, #22]	@ tmp186, cluster_num
 3366 0168 000053E3 		cmp	r3, #0	@ tmp186,
 3367 016c 0400001A 		bne	.L224	@,
ARM GAS  /tmp/ccwDRvq0.s 			page 84


1296:fat16.cpp     ****                 {
1297:fat16.cpp     ****                     cluster_num = cluster_new_chain;
 3368              		.loc 1 1297 0
 3369 0170 B830DDE1 		ldrh	r3, [sp, #8]	@ movhi	@ tmp187, cluster_new_chain
 3370 0174 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp187, cluster_num
1298:fat16.cpp     ****                     fd->dir_entry.cluster = cluster_num;
 3371              		.loc 1 1298 0
 3372 0178 04309DE5 		ldr	r3, [sp, #4]	@ tmp188, fd
 3373 017c B621DDE1 		ldrh	r2, [sp, #22]	@ movhi	@ tmp189, cluster_num
 3374 0180 B622C3E1 		strh	r2, [r3, #38]	@ movhi	@ tmp189, fd_6(D)->dir_entry.cluster
 3375              	.L224:
 3376              	.LBE48:
 3377              	.LBE47:
1299:fat16.cpp     ****                 }
1300:fat16.cpp     ****             }
1301:fat16.cpp     ****     
1302:fat16.cpp     ****             /* write new directory entry */
1303:fat16.cpp     ****             fd->dir_entry.file_size = size;
 3378              		.loc 1 1303 0
 3379 0184 04309DE5 		ldr	r3, [sp, #4]	@ tmp190, fd
 3380 0188 00209DE5 		ldr	r2, [sp, #0]	@ tmp191, size
 3381 018c 282083E5 		str	r2, [r3, #40]	@ tmp191, fd_6(D)->dir_entry.file_size
1304:fat16.cpp     ****             if(size == 0)
 3382              		.loc 1 1304 0
 3383 0190 00309DE5 		ldr	r3, [sp, #0]	@ tmp192, size
 3384 0194 000053E3 		cmp	r3, #0	@ tmp192,
 3385 0198 0200001A 		bne	.L227	@,
1305:fat16.cpp     ****                 fd->dir_entry.cluster = 0;
 3386              		.loc 1 1305 0
 3387 019c 04309DE5 		ldr	r3, [sp, #4]	@ tmp193, fd
 3388 01a0 0020A0E3 		mov	r2, #0	@ tmp195,
 3389 01a4 B622C3E1 		strh	r2, [r3, #38]	@ movhi	@ tmp194, fd_6(D)->dir_entry.cluster
 3390              	.L227:
1306:fat16.cpp     ****             if(!fat16_write_dir_entry(fd->fs, &fd->dir_entry))
 3391              		.loc 1 1306 0
 3392 01a8 04309DE5 		ldr	r3, [sp, #4]	@ tmp196, fd
 3393 01ac 002093E5 		ldr	r2, [r3, #0]	@ D.11070, fd_6(D)->fs
 3394 01b0 04309DE5 		ldr	r3, [sp, #4]	@ tmp197, fd
 3395 01b4 043083E2 		add	r3, r3, #4	@ D.11071, tmp197,
 3396 01b8 0200A0E1 		mov	r0, r2	@, D.11070
 3397 01bc 0310A0E1 		mov	r1, r3	@, D.11071
 3398 01c0 FEFFFFEB 		bl	_ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct	@
 3399 01c4 0030A0E1 		mov	r3, r0	@ tmp198,
 3400 01c8 000053E3 		cmp	r3, #0	@ D.11072,
 3401 01cc 0030A013 		movne	r3, #0	@, tmp200
 3402 01d0 0130A003 		moveq	r3, #1	@, tmp200
 3403 01d4 FF3003E2 		and	r3, r3, #255	@ retval.16, tmp199,
 3404 01d8 000053E3 		cmp	r3, #0	@ retval.16,
 3405 01dc 0100000A 		beq	.L228	@,
1307:fat16.cpp     ****                 return 0;
 3406              		.loc 1 1307 0
 3407 01e0 0030A0E3 		mov	r3, #0	@ D.11030,
 3408 01e4 1F0000EA 		b	.L216	@
 3409              	.L228:
1308:fat16.cpp     ****     
1309:fat16.cpp     ****             if(size == 0)
 3410              		.loc 1 1309 0
ARM GAS  /tmp/ccwDRvq0.s 			page 85


 3411 01e8 00309DE5 		ldr	r3, [sp, #0]	@ tmp201, size
 3412 01ec 000053E3 		cmp	r3, #0	@ tmp201,
 3413 01f0 0600001A 		bne	.L229	@,
1310:fat16.cpp     ****             {
1311:fat16.cpp     ****                 /* free all clusters of file */
1312:fat16.cpp     ****                 fat16_free_clusters(fd->fs, cluster_num);
 3414              		.loc 1 1312 0
 3415 01f4 04309DE5 		ldr	r3, [sp, #4]	@ tmp202, fd
 3416 01f8 002093E5 		ldr	r2, [r3, #0]	@ D.11077, fd_6(D)->fs
 3417 01fc B631DDE1 		ldrh	r3, [sp, #22]	@ tmp203, cluster_num
 3418 0200 0200A0E1 		mov	r0, r2	@, D.11077
 3419 0204 0310A0E1 		mov	r1, r3	@, tmp203
 3420 0208 FEFFFFEB 		bl	_ZL19fat16_free_clustersPK15fat16_fs_structt	@
 3421 020c 090000EA 		b	.L218	@
 3422              	.L229:
1313:fat16.cpp     ****             }
1314:fat16.cpp     ****             else if(size_new <= cluster_size)
 3423              		.loc 1 1314 0
 3424 0210 BC20DDE1 		ldrh	r2, [sp, #12]	@ D.11079, cluster_size
 3425 0214 10309DE5 		ldr	r3, [sp, #16]	@ tmp204, size_new
 3426 0218 030052E1 		cmp	r2, r3	@ D.11079, tmp204
 3427 021c 0500003A 		bcc	.L218	@,
1315:fat16.cpp     ****             {
1316:fat16.cpp     ****                 /* free all clusters no longer needed */
1317:fat16.cpp     ****                 fat16_terminate_clusters(fd->fs, cluster_num);
 3428              		.loc 1 1317 0
 3429 0220 04309DE5 		ldr	r3, [sp, #4]	@ tmp205, fd
 3430 0224 002093E5 		ldr	r2, [r3, #0]	@ D.11082, fd_6(D)->fs
 3431 0228 B631DDE1 		ldrh	r3, [sp, #22]	@ tmp206, cluster_num
 3432 022c 0200A0E1 		mov	r0, r2	@, D.11082
 3433 0230 0310A0E1 		mov	r1, r3	@, tmp206
 3434 0234 FEFFFFEB 		bl	_ZL24fat16_terminate_clustersPK15fat16_fs_structt	@
 3435              	.L218:
 3436              	.LBE44:
1318:fat16.cpp     ****             }
1319:fat16.cpp     ****     
1320:fat16.cpp     ****         }
1321:fat16.cpp     ****         while(0);
1322:fat16.cpp     ****     
1323:fat16.cpp     ****         /* correct file position */
1324:fat16.cpp     ****         if(size < fd->pos)
 3437              		.loc 1 1324 0
 3438 0238 04309DE5 		ldr	r3, [sp, #4]	@ tmp207, fd
 3439 023c 302093E5 		ldr	r2, [r3, #48]	@ D.11084, fd_6(D)->pos
 3440 0240 00309DE5 		ldr	r3, [sp, #0]	@ tmp208, size
 3441 0244 030052E1 		cmp	r2, r3	@ D.11084, tmp208
 3442 0248 0500009A 		bls	.L230	@,
1325:fat16.cpp     ****         {
1326:fat16.cpp     ****             fd->pos = size;
 3443              		.loc 1 1326 0
 3444 024c 04309DE5 		ldr	r3, [sp, #4]	@ tmp209, fd
 3445 0250 00209DE5 		ldr	r2, [sp, #0]	@ tmp210, size
 3446 0254 302083E5 		str	r2, [r3, #48]	@ tmp210, fd_6(D)->pos
1327:fat16.cpp     ****             fd->pos_cluster = 0;
 3447              		.loc 1 1327 0
 3448 0258 04309DE5 		ldr	r3, [sp, #4]	@ tmp211, fd
 3449 025c 0020A0E3 		mov	r2, #0	@ tmp213,
ARM GAS  /tmp/ccwDRvq0.s 			page 86


 3450 0260 B423C3E1 		strh	r2, [r3, #52]	@ movhi	@ tmp212, fd_6(D)->pos_cluster
 3451              	.L230:
1328:fat16.cpp     ****         }
1329:fat16.cpp     ****     
1330:fat16.cpp     ****         return 1;
 3452              		.loc 1 1330 0
 3453 0264 0130A0E3 		mov	r3, #1	@ D.11030,
 3454              	.L216:
 3455              	.LBE43:
1331:fat16.cpp     ****     #else
1332:fat16.cpp     ****         return 0;
1333:fat16.cpp     ****     #endif
1334:fat16.cpp     **** }
 3456              		.loc 1 1334 0
 3457 0268 0300A0E1 		mov	r0, r3	@, <retval>
 3458 026c 1CD08DE2 		add	sp, sp, #28	@,,
 3459 0270 04E09DE4 		ldr	lr, [sp], #4
 3460 0274 1EFF2FE1 		bx	lr
 3461              		.cfi_endproc
 3462              	.LFE127:
 3463              		.size	_Z17fat16_resize_fileP17fat16_file_structm, .-_Z17fat16_resize_fileP17fat16_file_structm
 3464              		.section	.text._Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_entry_struct,"ax",%progbits
 3465              		.align	2
 3466              		.global	_Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_entry_struct
 3467              		.type	_Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_entry_struct, %function
 3468              	_Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_entry_struct:
 3469              	.LFB128:
1335:fat16.cpp     **** 
1336:fat16.cpp     **** /**
1337:fat16.cpp     ****  * \ingroup fat16_dir
1338:fat16.cpp     ****  * Opens a directory.
1339:fat16.cpp     ****  *
1340:fat16.cpp     ****  * \param[in] fs The filesystem on which the directory to open resides.
1341:fat16.cpp     ****  * \param[in] dir_entry The directory entry which stands for the directory to open.
1342:fat16.cpp     ****  * \returns An opaque directory descriptor on success, 0 on failure.
1343:fat16.cpp     ****  * \see fat16_close_dir
1344:fat16.cpp     ****  */
1345:fat16.cpp     **** struct fat16_dir_struct* fat16_open_dir(struct fat16_fs_struct* fs, const struct fat16_dir_entry_st
1346:fat16.cpp     **** {
 3470              		.loc 1 1346 0
 3471              		.cfi_startproc
 3472              		@ Function supports interworking.
 3473              		@ args = 0, pretend = 0, frame = 16
 3474              		@ frame_needed = 0, uses_anonymous_args = 0
 3475 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 3476              	.LCFI36:
 3477              		.cfi_def_cfa_offset 4
 3478 0004 14D04DE2 		sub	sp, sp, #20	@,,
 3479              	.LCFI37:
 3480              		.cfi_def_cfa_offset 24
 3481 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 3482 000c 00108DE5 		str	r1, [sp, #0]	@ dir_entry, dir_entry
 3483              	.LBB49:
1347:fat16.cpp     ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT16_ATTRIB_DIR))
 3484              		.loc 1 1347 0
 3485 0010 04309DE5 		ldr	r3, [sp, #4]	@ tmp140, fs
 3486 0014 000053E3 		cmp	r3, #0	@ tmp140,
ARM GAS  /tmp/ccwDRvq0.s 			page 87


 3487 0018 0700000A 		beq	.L233	@,
 3488              		.cfi_offset 14, -4
 3489              		.loc 1 1347 0 is_stmt 0 discriminator 1
 3490 001c 00309DE5 		ldr	r3, [sp, #0]	@ tmp141, dir_entry
 3491 0020 000053E3 		cmp	r3, #0	@ tmp141,
 3492 0024 0400000A 		beq	.L233	@,
 3493              		.loc 1 1347 0 discriminator 2
 3494 0028 00309DE5 		ldr	r3, [sp, #0]	@ tmp142, dir_entry
 3495 002c 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.11019, dir_entry_3(D)->attributes
 3496 0030 103003E2 		and	r3, r3, #16	@ D.11021, D.11020,
 3497 0034 000053E3 		cmp	r3, #0	@ D.11021,
 3498 0038 0100001A 		bne	.L234	@,
 3499              	.L233:
1348:fat16.cpp     ****         return 0;
 3500              		.loc 1 1348 0 is_stmt 1
 3501 003c 0030A0E3 		mov	r3, #0	@ D.11022,
 3502 0040 150000EA 		b	.L235	@
 3503              	.L234:
1349:fat16.cpp     **** 
1350:fat16.cpp     ****     struct fat16_dir_struct* dd = (fat16_dir_struct*)malloc(sizeof(*dd));
 3504              		.loc 1 1350 0
 3505 0044 3400A0E3 		mov	r0, #52	@,
 3506 0048 FEFFFFEB 		bl	malloc	@
 3507 004c 0030A0E1 		mov	r3, r0	@ tmp143,
 3508 0050 0C308DE5 		str	r3, [sp, #12]	@ D.11023, dd
1351:fat16.cpp     ****     if(!dd)
 3509              		.loc 1 1351 0
 3510 0054 0C309DE5 		ldr	r3, [sp, #12]	@ tmp144, dd
 3511 0058 000053E3 		cmp	r3, #0	@ tmp144,
 3512 005c 0100001A 		bne	.L236	@,
1352:fat16.cpp     ****         return 0;
 3513              		.loc 1 1352 0
 3514 0060 0030A0E3 		mov	r3, #0	@ D.11022,
 3515 0064 0C0000EA 		b	.L235	@
 3516              	.L236:
1353:fat16.cpp     **** 
1354:fat16.cpp     ****     memcpy(&dd->dir_entry, dir_entry, sizeof(*dir_entry));
 3517              		.loc 1 1354 0
 3518 0068 0C309DE5 		ldr	r3, [sp, #12]	@ tmp145, dd
 3519 006c 043083E2 		add	r3, r3, #4	@ D.11026, tmp145,
 3520 0070 0300A0E1 		mov	r0, r3	@, D.11026
 3521 0074 00109DE5 		ldr	r1, [sp, #0]	@, dir_entry
 3522 0078 2C20A0E3 		mov	r2, #44	@,
 3523 007c FEFFFFEB 		bl	memcpy	@
1355:fat16.cpp     ****     dd->fs = fs;
 3524              		.loc 1 1355 0
 3525 0080 0C309DE5 		ldr	r3, [sp, #12]	@ tmp146, dd
 3526 0084 04209DE5 		ldr	r2, [sp, #4]	@ tmp147, fs
 3527 0088 002083E5 		str	r2, [r3, #0]	@ tmp147, dd_8->fs
1356:fat16.cpp     ****     dd->entry_next = 0;
 3528              		.loc 1 1356 0
 3529 008c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp148, dd
 3530 0090 0020A0E3 		mov	r2, #0	@ tmp150,
 3531 0094 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ tmp149, dd_8->entry_next
1357:fat16.cpp     **** 
1358:fat16.cpp     ****     return dd;
 3532              		.loc 1 1358 0
ARM GAS  /tmp/ccwDRvq0.s 			page 88


 3533 0098 0C309DE5 		ldr	r3, [sp, #12]	@ D.11022, dd
 3534              	.L235:
 3535              	.LBE49:
1359:fat16.cpp     **** }
 3536              		.loc 1 1359 0
 3537 009c 0300A0E1 		mov	r0, r3	@, <retval>
 3538 00a0 14D08DE2 		add	sp, sp, #20	@,,
 3539 00a4 04E09DE4 		ldr	lr, [sp], #4
 3540 00a8 1EFF2FE1 		bx	lr
 3541              		.cfi_endproc
 3542              	.LFE128:
 3543              		.size	_Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_entry_struct, .-_Z14fat16_open_dirP15fat16
 3544              		.section	.text._Z15fat16_close_dirP16fat16_dir_struct,"ax",%progbits
 3545              		.align	2
 3546              		.global	_Z15fat16_close_dirP16fat16_dir_struct
 3547              		.type	_Z15fat16_close_dirP16fat16_dir_struct, %function
 3548              	_Z15fat16_close_dirP16fat16_dir_struct:
 3549              	.LFB129:
1360:fat16.cpp     **** 
1361:fat16.cpp     **** /**
1362:fat16.cpp     ****  * \ingroup fat16_dir
1363:fat16.cpp     ****  * Closes a directory descriptor.
1364:fat16.cpp     ****  *
1365:fat16.cpp     ****  * This function destroys a directory descriptor which was
1366:fat16.cpp     ****  * previously obtained by calling fat16_open_dir(). When this
1367:fat16.cpp     ****  * function returns, the given descriptor will be invalid.
1368:fat16.cpp     ****  *
1369:fat16.cpp     ****  * \param[in] dd The directory descriptor to close.
1370:fat16.cpp     ****  * \see fat16_open_dir
1371:fat16.cpp     ****  */
1372:fat16.cpp     **** void fat16_close_dir(struct fat16_dir_struct* dd)
1373:fat16.cpp     **** {
 3550              		.loc 1 1373 0
 3551              		.cfi_startproc
 3552              		@ Function supports interworking.
 3553              		@ args = 0, pretend = 0, frame = 8
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
 3555 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 3556              	.LCFI38:
 3557              		.cfi_def_cfa_offset 4
 3558 0004 0CD04DE2 		sub	sp, sp, #12	@,,
 3559              	.LCFI39:
 3560              		.cfi_def_cfa_offset 16
 3561 0008 04008DE5 		str	r0, [sp, #4]	@ dd, dd
1374:fat16.cpp     ****     if(dd)
 3562              		.loc 1 1374 0
 3563 000c 04309DE5 		ldr	r3, [sp, #4]	@ tmp133, dd
 3564 0010 000053E3 		cmp	r3, #0	@ tmp133,
 3565 0014 0100000A 		beq	.L237	@,
 3566              		.cfi_offset 14, -4
1375:fat16.cpp     ****         free(dd);
 3567              		.loc 1 1375 0
 3568 0018 04009DE5 		ldr	r0, [sp, #4]	@, dd
 3569 001c FEFFFFEB 		bl	free	@
 3570              	.L237:
1376:fat16.cpp     **** }
 3571              		.loc 1 1376 0
ARM GAS  /tmp/ccwDRvq0.s 			page 89


 3572 0020 0CD08DE2 		add	sp, sp, #12	@,,
 3573 0024 04E09DE4 		ldr	lr, [sp], #4
 3574 0028 1EFF2FE1 		bx	lr
 3575              		.cfi_endproc
 3576              	.LFE129:
 3577              		.size	_Z15fat16_close_dirP16fat16_dir_struct, .-_Z15fat16_close_dirP16fat16_dir_struct
 3578              		.section	.text._Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct,"ax",%progbits
 3579              		.align	2
 3580              		.global	_Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct
 3581              		.type	_Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct, %function
 3582              	_Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct:
 3583              	.LFB130:
1377:fat16.cpp     **** 
1378:fat16.cpp     **** /**
1379:fat16.cpp     ****  * \ingroup fat16_dir
1380:fat16.cpp     ****  * Reads the next directory entry contained within a parent directory.
1381:fat16.cpp     ****  *
1382:fat16.cpp     ****  * \param[in] dd The descriptor of the parent directory from which to read the entry.
1383:fat16.cpp     ****  * \param[out] dir_entry Pointer to a buffer into which to write the directory entry information.
1384:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1385:fat16.cpp     ****  * \see fat16_reset_dir
1386:fat16.cpp     ****  */
1387:fat16.cpp     **** uint8_t fat16_read_dir(struct fat16_dir_struct* dd, struct fat16_dir_entry_struct* dir_entry)
1388:fat16.cpp     **** {
 3584              		.loc 1 1388 0
 3585              		.cfi_startproc
 3586              		@ Function supports interworking.
 3587              		@ args = 0, pretend = 0, frame = 8
 3588              		@ frame_needed = 0, uses_anonymous_args = 0
 3589 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 3590              	.LCFI40:
 3591              		.cfi_def_cfa_offset 4
 3592 0004 0CD04DE2 		sub	sp, sp, #12	@,,
 3593              	.LCFI41:
 3594              		.cfi_def_cfa_offset 16
 3595 0008 04008DE5 		str	r0, [sp, #4]	@ dd, dd
 3596 000c 00108DE5 		str	r1, [sp, #0]	@ dir_entry, dir_entry
1389:fat16.cpp     ****     if(!dd || !dir_entry)
 3597              		.loc 1 1389 0
 3598 0010 04309DE5 		ldr	r3, [sp, #4]	@ tmp149, dd
 3599 0014 000053E3 		cmp	r3, #0	@ tmp149,
 3600 0018 0200000A 		beq	.L240	@,
 3601              		.cfi_offset 14, -4
 3602              		.loc 1 1389 0 is_stmt 0 discriminator 1
 3603 001c 00309DE5 		ldr	r3, [sp, #0]	@ tmp150, dir_entry
 3604 0020 000053E3 		cmp	r3, #0	@ tmp150,
 3605 0024 0100001A 		bne	.L241	@,
 3606              	.L240:
1390:fat16.cpp     ****         return 0;
 3607              		.loc 1 1390 0 is_stmt 1
 3608 0028 0030A0E3 		mov	r3, #0	@ D.10989,
 3609 002c 3A0000EA 		b	.L242	@
 3610              	.L241:
1391:fat16.cpp     **** 
1392:fat16.cpp     ****     if(dd->dir_entry.cluster == 0)
 3611              		.loc 1 1392 0
 3612 0030 04309DE5 		ldr	r3, [sp, #4]	@ tmp151, dd
ARM GAS  /tmp/ccwDRvq0.s 			page 90


 3613 0034 B632D3E1 		ldrh	r3, [r3, #38]	@ D.10990, dd_2(D)->dir_entry.cluster
 3614 0038 000053E3 		cmp	r3, #0	@ D.10990,
 3615 003c 1700001A 		bne	.L243	@,
1393:fat16.cpp     ****     {
1394:fat16.cpp     ****         /* read entry from root directory */
1395:fat16.cpp     ****         if(fat16_read_root_dir_entry(dd->fs, dd->entry_next, dir_entry))
 3616              		.loc 1 1395 0
 3617 0040 04309DE5 		ldr	r3, [sp, #4]	@ tmp152, dd
 3618 0044 002093E5 		ldr	r2, [r3, #0]	@ D.10994, dd_2(D)->fs
 3619 0048 04309DE5 		ldr	r3, [sp, #4]	@ tmp153, dd
 3620 004c B033D3E1 		ldrh	r3, [r3, #48]	@ D.10995, dd_2(D)->entry_next
 3621 0050 0200A0E1 		mov	r0, r2	@, D.10994
 3622 0054 0310A0E1 		mov	r1, r3	@, D.10995
 3623 0058 00209DE5 		ldr	r2, [sp, #0]	@, dir_entry
 3624 005c FEFFFFEB 		bl	_ZL25fat16_read_root_dir_entryPK15fat16_fs_structtP22fat16_dir_entry_struct	@
 3625 0060 0030A0E1 		mov	r3, r0	@ tmp154,
 3626 0064 000053E3 		cmp	r3, #0	@ D.10996,
 3627 0068 0030A003 		moveq	r3, #0	@, tmp156
 3628 006c 0130A013 		movne	r3, #1	@, tmp156
 3629 0070 FF3003E2 		and	r3, r3, #255	@ retval.14, tmp155,
 3630 0074 000053E3 		cmp	r3, #0	@ retval.14,
 3631 0078 2300000A 		beq	.L244	@,
1396:fat16.cpp     ****         {
1397:fat16.cpp     ****             ++dd->entry_next;
 3632              		.loc 1 1397 0
 3633 007c 04309DE5 		ldr	r3, [sp, #4]	@ tmp157, dd
 3634 0080 B033D3E1 		ldrh	r3, [r3, #48]	@ D.10999, dd_2(D)->entry_next
 3635 0084 013083E2 		add	r3, r3, #1	@ tmp158, D.10999,
 3636 0088 0338A0E1 		mov	r3, r3, asl #16	@ tmp159, tmp158,
 3637 008c 2328A0E1 		mov	r2, r3, lsr #16	@ D.11000, tmp159,
 3638 0090 04309DE5 		ldr	r3, [sp, #4]	@ tmp160, dd
 3639 0094 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ D.11000, dd_2(D)->entry_next
1398:fat16.cpp     ****             return 1;
 3640              		.loc 1 1398 0
 3641 0098 0130A0E3 		mov	r3, #1	@ D.10989,
 3642 009c 1E0000EA 		b	.L242	@
 3643              	.L243:
1399:fat16.cpp     ****         }
1400:fat16.cpp     ****     }
1401:fat16.cpp     ****     else
1402:fat16.cpp     ****     {
1403:fat16.cpp     ****         /* read entry from a subdirectory */
1404:fat16.cpp     ****         if(fat16_read_sub_dir_entry(dd->fs, dd->entry_next, &dd->dir_entry, dir_entry))
 3644              		.loc 1 1404 0
 3645 00a0 04309DE5 		ldr	r3, [sp, #4]	@ tmp161, dd
 3646 00a4 001093E5 		ldr	r1, [r3, #0]	@ D.11003, dd_2(D)->fs
 3647 00a8 04309DE5 		ldr	r3, [sp, #4]	@ tmp162, dd
 3648 00ac B023D3E1 		ldrh	r2, [r3, #48]	@ D.11004, dd_2(D)->entry_next
 3649 00b0 04309DE5 		ldr	r3, [sp, #4]	@ tmp163, dd
 3650 00b4 043083E2 		add	r3, r3, #4	@ D.11005, tmp163,
 3651 00b8 0100A0E1 		mov	r0, r1	@, D.11003
 3652 00bc 0210A0E1 		mov	r1, r2	@, D.11004
 3653 00c0 0320A0E1 		mov	r2, r3	@, D.11005
 3654 00c4 00309DE5 		ldr	r3, [sp, #0]	@, dir_entry
 3655 00c8 FEFFFFEB 		bl	_ZL24fat16_read_sub_dir_entryPK15fat16_fs_structtPK22fat16_dir_entry_structPS2_	@
 3656 00cc 0030A0E1 		mov	r3, r0	@ tmp164,
 3657 00d0 000053E3 		cmp	r3, #0	@ D.11006,
ARM GAS  /tmp/ccwDRvq0.s 			page 91


 3658 00d4 0030A003 		moveq	r3, #0	@, tmp166
 3659 00d8 0130A013 		movne	r3, #1	@, tmp166
 3660 00dc FF3003E2 		and	r3, r3, #255	@ retval.15, tmp165,
 3661 00e0 000053E3 		cmp	r3, #0	@ retval.15,
 3662 00e4 0800000A 		beq	.L244	@,
1405:fat16.cpp     ****         {
1406:fat16.cpp     ****             ++dd->entry_next;
 3663              		.loc 1 1406 0
 3664 00e8 04309DE5 		ldr	r3, [sp, #4]	@ tmp167, dd
 3665 00ec B033D3E1 		ldrh	r3, [r3, #48]	@ D.11009, dd_2(D)->entry_next
 3666 00f0 013083E2 		add	r3, r3, #1	@ tmp168, D.11009,
 3667 00f4 0338A0E1 		mov	r3, r3, asl #16	@ tmp169, tmp168,
 3668 00f8 2328A0E1 		mov	r2, r3, lsr #16	@ D.11010, tmp169,
 3669 00fc 04309DE5 		ldr	r3, [sp, #4]	@ tmp170, dd
 3670 0100 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ D.11010, dd_2(D)->entry_next
1407:fat16.cpp     ****             return 1;
 3671              		.loc 1 1407 0
 3672 0104 0130A0E3 		mov	r3, #1	@ D.10989,
 3673 0108 030000EA 		b	.L242	@
 3674              	.L244:
1408:fat16.cpp     ****         }
1409:fat16.cpp     ****     }
1410:fat16.cpp     **** 
1411:fat16.cpp     ****     /* restart reading */
1412:fat16.cpp     ****     dd->entry_next = 0;
 3675              		.loc 1 1412 0
 3676 010c 04309DE5 		ldr	r3, [sp, #4]	@ tmp171, dd
 3677 0110 0020A0E3 		mov	r2, #0	@ tmp173,
 3678 0114 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ tmp172, dd_2(D)->entry_next
1413:fat16.cpp     **** 
1414:fat16.cpp     ****     return 0;
 3679              		.loc 1 1414 0
 3680 0118 0030A0E3 		mov	r3, #0	@ D.10989,
 3681              	.L242:
1415:fat16.cpp     **** }
 3682              		.loc 1 1415 0
 3683 011c 0300A0E1 		mov	r0, r3	@, <retval>
 3684 0120 0CD08DE2 		add	sp, sp, #12	@,,
 3685 0124 04E09DE4 		ldr	lr, [sp], #4
 3686 0128 1EFF2FE1 		bx	lr
 3687              		.cfi_endproc
 3688              	.LFE130:
 3689              		.size	_Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct, .-_Z14fat16_read_dirP16fat16
 3690              		.section	.text._Z15fat16_reset_dirP16fat16_dir_struct,"ax",%progbits
 3691              		.align	2
 3692              		.global	_Z15fat16_reset_dirP16fat16_dir_struct
 3693              		.type	_Z15fat16_reset_dirP16fat16_dir_struct, %function
 3694              	_Z15fat16_reset_dirP16fat16_dir_struct:
 3695              	.LFB131:
1416:fat16.cpp     **** 
1417:fat16.cpp     **** /**
1418:fat16.cpp     ****  * \ingroup fat16_dir
1419:fat16.cpp     ****  * Resets a directory handle.
1420:fat16.cpp     ****  *
1421:fat16.cpp     ****  * Resets the directory handle such that reading restarts
1422:fat16.cpp     ****  * with the first directory entry.
1423:fat16.cpp     ****  *
ARM GAS  /tmp/ccwDRvq0.s 			page 92


1424:fat16.cpp     ****  * \param[in] dd The directory handle to reset.
1425:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1426:fat16.cpp     ****  * \see fat16_read_dir
1427:fat16.cpp     ****  */
1428:fat16.cpp     **** uint8_t fat16_reset_dir(struct fat16_dir_struct* dd)
1429:fat16.cpp     **** {
 3696              		.loc 1 1429 0
 3697              		.cfi_startproc
 3698              		@ Function supports interworking.
 3699              		@ args = 0, pretend = 0, frame = 8
 3700              		@ frame_needed = 0, uses_anonymous_args = 0
 3701              		@ link register save eliminated.
 3702 0000 08D04DE2 		sub	sp, sp, #8	@,,
 3703              	.LCFI42:
 3704              		.cfi_def_cfa_offset 8
 3705 0004 04008DE5 		str	r0, [sp, #4]	@ dd, dd
1430:fat16.cpp     ****     if(!dd)
 3706              		.loc 1 1430 0
 3707 0008 04309DE5 		ldr	r3, [sp, #4]	@ tmp135, dd
 3708 000c 000053E3 		cmp	r3, #0	@ tmp135,
 3709 0010 0100001A 		bne	.L246	@,
1431:fat16.cpp     ****         return 0;
 3710              		.loc 1 1431 0
 3711 0014 0030A0E3 		mov	r3, #0	@ D.10984,
 3712 0018 030000EA 		b	.L247	@
 3713              	.L246:
1432:fat16.cpp     **** 
1433:fat16.cpp     ****     dd->entry_next = 0;
 3714              		.loc 1 1433 0
 3715 001c 04309DE5 		ldr	r3, [sp, #4]	@ tmp136, dd
 3716 0020 0020A0E3 		mov	r2, #0	@ tmp138,
 3717 0024 B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ tmp137, dd_2(D)->entry_next
1434:fat16.cpp     ****     return 1;
 3718              		.loc 1 1434 0
 3719 0028 0130A0E3 		mov	r3, #1	@ D.10984,
 3720              	.L247:
1435:fat16.cpp     **** }
 3721              		.loc 1 1435 0
 3722 002c 0300A0E1 		mov	r0, r3	@, <retval>
 3723 0030 08D08DE2 		add	sp, sp, #8	@,,
 3724 0034 1EFF2FE1 		bx	lr
 3725              		.cfi_endproc
 3726              	.LFE131:
 3727              		.size	_Z15fat16_reset_dirP16fat16_dir_struct, .-_Z15fat16_reset_dirP16fat16_dir_struct
 3728              		.section	.text._Z13fat16_set_dirP16fat16_dir_structt,"ax",%progbits
 3729              		.align	2
 3730              		.global	_Z13fat16_set_dirP16fat16_dir_structt
 3731              		.type	_Z13fat16_set_dirP16fat16_dir_structt, %function
 3732              	_Z13fat16_set_dirP16fat16_dir_structt:
 3733              	.LFB132:
1436:fat16.cpp     **** 
1437:fat16.cpp     **** uint8_t fat16_set_dir(struct fat16_dir_struct* dd, uint16_t offset)
1438:fat16.cpp     **** {
 3734              		.loc 1 1438 0
 3735              		.cfi_startproc
 3736              		@ Function supports interworking.
 3737              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccwDRvq0.s 			page 93


 3738              		@ frame_needed = 0, uses_anonymous_args = 0
 3739              		@ link register save eliminated.
 3740 0000 08D04DE2 		sub	sp, sp, #8	@,,
 3741              	.LCFI43:
 3742              		.cfi_def_cfa_offset 8
 3743 0004 04008DE5 		str	r0, [sp, #4]	@ dd, dd
 3744 0008 0130A0E1 		mov	r3, r1	@ tmp135, offset
 3745 000c B230CDE1 		strh	r3, [sp, #2]	@ movhi	@ tmp135, offset
1439:fat16.cpp     ****     if(!dd)
 3746              		.loc 1 1439 0
 3747 0010 04309DE5 		ldr	r3, [sp, #4]	@ tmp136, dd
 3748 0014 000053E3 		cmp	r3, #0	@ tmp136,
 3749 0018 0100001A 		bne	.L249	@,
1440:fat16.cpp     ****         return 0;
 3750              		.loc 1 1440 0
 3751 001c 0030A0E3 		mov	r3, #0	@ D.10980,
 3752 0020 030000EA 		b	.L250	@
 3753              	.L249:
1441:fat16.cpp     **** 
1442:fat16.cpp     ****     dd->entry_next = offset;
 3754              		.loc 1 1442 0
 3755 0024 04309DE5 		ldr	r3, [sp, #4]	@ tmp137, dd
 3756 0028 B220DDE1 		ldrh	r2, [sp, #2]	@ movhi	@ tmp138, offset
 3757 002c B023C3E1 		strh	r2, [r3, #48]	@ movhi	@ tmp138, dd_2(D)->entry_next
1443:fat16.cpp     ****     return 1;
 3758              		.loc 1 1443 0
 3759 0030 0130A0E3 		mov	r3, #1	@ D.10980,
 3760              	.L250:
1444:fat16.cpp     **** }
 3761              		.loc 1 1444 0
 3762 0034 0300A0E1 		mov	r0, r3	@, <retval>
 3763 0038 08D08DE2 		add	sp, sp, #8	@,,
 3764 003c 1EFF2FE1 		bx	lr
 3765              		.cfi_endproc
 3766              	.LFE132:
 3767              		.size	_Z13fat16_set_dirP16fat16_dir_structt, .-_Z13fat16_set_dirP16fat16_dir_structt
 3768              		.section	.text._ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct,"ax",%progb
 3769              		.align	2
 3770              		.type	_ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct, %function
 3771              	_ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct:
 3772              	.LFB133:
1445:fat16.cpp     **** 
1446:fat16.cpp     **** /**
1447:fat16.cpp     ****  * \ingroup fat16_fs
1448:fat16.cpp     ****  * Writes a directory entry to disk.
1449:fat16.cpp     ****  *
1450:fat16.cpp     ****  * \note The file name is not checked for invalid characters.
1451:fat16.cpp     ****  *
1452:fat16.cpp     ****  * \note The generation of the short 8.3 file name is quite
1453:fat16.cpp     ****  * simple. The first eight characters are used for the filename.
1454:fat16.cpp     ****  * The extension, if any, is made up of the first three characters
1455:fat16.cpp     ****  * following the last dot within the long filename. If the
1456:fat16.cpp     ****  * filename (without the extension) is longer than eight characters,
1457:fat16.cpp     ****  * the lower byte of the cluster number replaces the last two
1458:fat16.cpp     ****  * characters to avoid name clashes. In any other case, it is your
1459:fat16.cpp     ****  * responsibility to avoid name clashes.
1460:fat16.cpp     ****  *
ARM GAS  /tmp/ccwDRvq0.s 			page 94


1461:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
1462:fat16.cpp     ****  * \param[in] dir_entry The directory entry to write.
1463:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1464:fat16.cpp     ****  */
1465:fat16.cpp     **** uint8_t fat16_write_dir_entry(const struct fat16_fs_struct* fs, const struct fat16_dir_entry_struct
1466:fat16.cpp     **** {
 3773              		.loc 1 1466 0
 3774              		.cfi_startproc
 3775              		@ Function supports interworking.
 3776              		@ args = 0, pretend = 0, frame = 72
 3777              		@ frame_needed = 0, uses_anonymous_args = 0
 3778 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 3779              	.LCFI44:
 3780              		.cfi_def_cfa_offset 4
 3781 0004 4CD04DE2 		sub	sp, sp, #76	@,,
 3782              	.LCFI45:
 3783              		.cfi_def_cfa_offset 80
 3784 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 3785 000c 00108DE5 		str	r1, [sp, #0]	@ dir_entry, dir_entry
 3786              	.LBB50:
1467:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
1468:fat16.cpp     ****         if(!fs || !dir_entry)
 3787              		.loc 1 1468 0
 3788 0010 04309DE5 		ldr	r3, [sp, #4]	@ tmp205, fs
 3789 0014 000053E3 		cmp	r3, #0	@ tmp205,
 3790 0018 0200000A 		beq	.L252	@,
 3791              		.cfi_offset 14, -4
 3792              		.loc 1 1468 0 is_stmt 0 discriminator 1
 3793 001c 00309DE5 		ldr	r3, [sp, #0]	@ tmp206, dir_entry
 3794 0020 000053E3 		cmp	r3, #0	@ tmp206,
 3795 0024 0100001A 		bne	.L253	@,
 3796              	.L252:
1469:fat16.cpp     ****             return 0;
 3797              		.loc 1 1469 0 is_stmt 1
 3798 0028 0030A0E3 		mov	r3, #0	@ D.10871,
 3799 002c 440100EA 		b	.L254	@
 3800              	.L253:
1470:fat16.cpp     ****     
1471:fat16.cpp     ****         device_write_t device_write = fs->partition->device_write;
 3801              		.loc 1 1471 0
 3802 0030 04309DE5 		ldr	r3, [sp, #4]	@ tmp207, fs
 3803 0034 003093E5 		ldr	r3, [r3, #0]	@ D.10872, fs_13(D)->partition
 3804 0038 083093E5 		ldr	r3, [r3, #8]	@ tmp208, D.10872_15->device_write
 3805 003c 34308DE5 		str	r3, [sp, #52]	@ tmp208, device_write
1472:fat16.cpp     ****         uint32_t offset = dir_entry->entry_offset;
 3806              		.loc 1 1472 0
 3807 0040 00309DE5 		ldr	r3, [sp, #0]	@ tmp209, dir_entry
 3808 0044 283093E5 		ldr	r3, [r3, #40]	@ tmp210, dir_entry_14(D)->entry_offset
 3809 0048 44308DE5 		str	r3, [sp, #68]	@ tmp210, offset
1473:fat16.cpp     ****         uint8_t name_len = strlen(dir_entry->long_name);
 3810              		.loc 1 1473 0
 3811 004c 00309DE5 		ldr	r3, [sp, #0]	@ D.10873, dir_entry
 3812 0050 0300A0E1 		mov	r0, r3	@, D.10873
 3813 0054 FEFFFFEB 		bl	strlen	@
 3814 0058 0030A0E1 		mov	r3, r0	@ D.10874,
 3815 005c 4330CDE5 		strb	r3, [sp, #67]	@ tmp211, name_len
1474:fat16.cpp     ****         uint8_t lfn_entry_count = (name_len + 12) / 13;
ARM GAS  /tmp/ccwDRvq0.s 			page 95


 3816              		.loc 1 1474 0
 3817 0060 4330DDE5 		ldrb	r3, [sp, #67]	@ zero_extendqisi2	@ D.10875, name_len
 3818 0064 0C3083E2 		add	r3, r3, #12	@ D.10876, D.10875,
 3819 0068 E4249FE5 		ldr	r2, .L276	@ tmp213,
 3820 006c 9302C2E0 		smull	r0, r2, r3, r2	@, tmp212, D.10876, tmp213
 3821 0070 4221A0E1 		mov	r2, r2, asr #2	@ tmp214, tmp212,
 3822 0074 C33FA0E1 		mov	r3, r3, asr #31	@ tmp215, D.10876,
 3823 0078 023063E0 		rsb	r3, r3, r2	@ D.10877, tmp215, tmp214
 3824 007c 3330CDE5 		strb	r3, [sp, #51]	@ tmp216, lfn_entry_count
1475:fat16.cpp     ****         uint8_t buffer[32];
1476:fat16.cpp     ****     
1477:fat16.cpp     ****         /* write 8.3 entry */
1478:fat16.cpp     ****     
1479:fat16.cpp     ****         /* generate 8.3 file name */
1480:fat16.cpp     ****         memset(&buffer[0], ' ', 11);
 3825              		.loc 1 1480 0
 3826 0080 08308DE2 		add	r3, sp, #8	@ tmp217,,
 3827 0084 0300A0E1 		mov	r0, r3	@, tmp217
 3828 0088 2010A0E3 		mov	r1, #32	@,
 3829 008c 0B20A0E3 		mov	r2, #11	@,
 3830 0090 FEFFFFEB 		bl	memset	@
1481:fat16.cpp     ****         char* name_ext = strrchr(dir_entry->long_name, '.');
 3831              		.loc 1 1481 0
 3832 0094 00309DE5 		ldr	r3, [sp, #0]	@ D.10878, dir_entry
 3833 0098 0300A0E1 		mov	r0, r3	@, D.10878
 3834 009c 2E10A0E3 		mov	r1, #46	@,
 3835 00a0 FEFFFFEB 		bl	strrchr	@
 3836 00a4 2C008DE5 		str	r0, [sp, #44]	@, name_ext
 3837              	.LBB51:
1482:fat16.cpp     ****         if(name_ext)
 3838              		.loc 1 1482 0
 3839 00a8 2C309DE5 		ldr	r3, [sp, #44]	@ tmp218, name_ext
 3840 00ac 000053E3 		cmp	r3, #0	@ tmp218,
 3841 00b0 1800000A 		beq	.L255	@,
 3842              	.LBB52:
1483:fat16.cpp     ****         {
1484:fat16.cpp     ****             ++name_ext;
 3843              		.loc 1 1484 0
 3844 00b4 2C309DE5 		ldr	r3, [sp, #44]	@ tmp219, name_ext
 3845 00b8 013083E2 		add	r3, r3, #1	@ tmp220, tmp219,
 3846 00bc 2C308DE5 		str	r3, [sp, #44]	@ tmp220, name_ext
1485:fat16.cpp     ****     
1486:fat16.cpp     ****             uint8_t name_ext_len = strlen(name_ext);
 3847              		.loc 1 1486 0
 3848 00c0 2C009DE5 		ldr	r0, [sp, #44]	@, name_ext
 3849 00c4 FEFFFFEB 		bl	strlen	@
 3850 00c8 0030A0E1 		mov	r3, r0	@ D.10881,
 3851 00cc 4230CDE5 		strb	r3, [sp, #66]	@ tmp221, name_ext_len
1487:fat16.cpp     ****             name_len -= name_ext_len + 1;
 3852              		.loc 1 1487 0
 3853 00d0 4230DDE5 		ldrb	r3, [sp, #66]	@ tmp222, name_ext_len
 3854 00d4 0330E0E1 		mvn	r3, r3	@ tmp223, tmp222
 3855 00d8 FF2003E2 		and	r2, r3, #255	@ D.10882, tmp223,
 3856 00dc 4330DDE5 		ldrb	r3, [sp, #67]	@ tmp224, name_len
 3857 00e0 033082E0 		add	r3, r2, r3	@ tmp225, D.10882, tmp224
 3858 00e4 4330CDE5 		strb	r3, [sp, #67]	@ tmp226, name_len
1488:fat16.cpp     ****     
ARM GAS  /tmp/ccwDRvq0.s 			page 96


1489:fat16.cpp     ****             if(name_ext_len > 3)
 3859              		.loc 1 1489 0
 3860 00e8 4230DDE5 		ldrb	r3, [sp, #66]	@ zero_extendqisi2	@ tmp227, name_ext_len
 3861 00ec 030053E3 		cmp	r3, #3	@ tmp227,
 3862 00f0 0100009A 		bls	.L256	@,
1490:fat16.cpp     ****                 name_ext_len = 3;
 3863              		.loc 1 1490 0
 3864 00f4 0330A0E3 		mov	r3, #3	@ tmp228,
 3865 00f8 4230CDE5 		strb	r3, [sp, #66]	@ tmp229, name_ext_len
 3866              	.L256:
1491:fat16.cpp     ****     
1492:fat16.cpp     ****             memcpy(&buffer[8], name_ext, name_ext_len);
 3867              		.loc 1 1492 0
 3868 00fc 4230DDE5 		ldrb	r3, [sp, #66]	@ zero_extendqisi2	@ D.10886, name_ext_len
 3869 0100 08208DE2 		add	r2, sp, #8	@ tmp230,,
 3870 0104 082082E2 		add	r2, r2, #8	@ tmp231, tmp230,
 3871 0108 0200A0E1 		mov	r0, r2	@, tmp231
 3872 010c 2C109DE5 		ldr	r1, [sp, #44]	@, name_ext
 3873 0110 0320A0E1 		mov	r2, r3	@, D.10886
 3874 0114 FEFFFFEB 		bl	memcpy	@
 3875              	.L255:
 3876              	.LBE52:
 3877              	.LBE51:
 3878              	.LBB53:
1493:fat16.cpp     ****         }
1494:fat16.cpp     ****     
1495:fat16.cpp     ****         if(name_len <= 8)
 3879              		.loc 1 1495 0
 3880 0118 4330DDE5 		ldrb	r3, [sp, #67]	@ zero_extendqisi2	@ tmp232, name_len
 3881 011c 080053E3 		cmp	r3, #8	@ tmp232,
 3882 0120 0700008A 		bhi	.L257	@,
1496:fat16.cpp     ****         {
1497:fat16.cpp     ****             memcpy(buffer, dir_entry->long_name, name_len);
 3883              		.loc 1 1497 0
 3884 0124 00209DE5 		ldr	r2, [sp, #0]	@ D.10890, dir_entry
 3885 0128 4330DDE5 		ldrb	r3, [sp, #67]	@ zero_extendqisi2	@ D.10891, name_len
 3886 012c 08108DE2 		add	r1, sp, #8	@ tmp233,,
 3887 0130 0100A0E1 		mov	r0, r1	@, tmp233
 3888 0134 0210A0E1 		mov	r1, r2	@, D.10890
 3889 0138 0320A0E1 		mov	r2, r3	@, D.10891
 3890 013c FEFFFFEB 		bl	memcpy	@
 3891 0140 250000EA 		b	.L258	@
 3892              	.L257:
 3893              	.LBB54:
1498:fat16.cpp     ****         }
1499:fat16.cpp     ****         else
1500:fat16.cpp     ****         {
1501:fat16.cpp     ****             memcpy(buffer, dir_entry->long_name, 8);
 3894              		.loc 1 1501 0
 3895 0144 00309DE5 		ldr	r3, [sp, #0]	@ D.10893, dir_entry
 3896 0148 08208DE2 		add	r2, sp, #8	@ tmp234,,
 3897 014c 0200A0E1 		mov	r0, r2	@, tmp234
 3898 0150 0310A0E1 		mov	r1, r3	@, D.10893
 3899 0154 0820A0E3 		mov	r2, #8	@,
 3900 0158 FEFFFFEB 		bl	memcpy	@
1502:fat16.cpp     ****     
1503:fat16.cpp     ****             /* Minimize 8.3 name clashes by appending
ARM GAS  /tmp/ccwDRvq0.s 			page 97


1504:fat16.cpp     ****                                              * the lower byte of the cluster number.
1505:fat16.cpp     ****                                              */
1506:fat16.cpp     ****             uint8_t num = dir_entry->cluster & 0xff;
 3901              		.loc 1 1506 0
 3902 015c 00309DE5 		ldr	r3, [sp, #0]	@ tmp235, dir_entry
 3903 0160 B232D3E1 		ldrh	r3, [r3, #34]	@ D.10894, dir_entry_14(D)->cluster
 3904 0164 2B30CDE5 		strb	r3, [sp, #43]	@ tmp236, num
1507:fat16.cpp     ****     
1508:fat16.cpp     ****             buffer[6] = (num < 0xa0) ? ('0' + (num >> 4)) : ('a' + (num >> 4));
 3905              		.loc 1 1508 0
 3906 0168 2B30DDE5 		ldrb	r3, [sp, #43]	@ zero_extendqisi2	@ tmp237, num
 3907 016c 9F0053E3 		cmp	r3, #159	@ tmp237,
 3908 0170 0500008A 		bhi	.L259	@,
 3909              		.loc 1 1508 0 is_stmt 0 discriminator 1
 3910 0174 2B30DDE5 		ldrb	r3, [sp, #43]	@ zero_extendqisi2	@ D.10898, num
 3911 0178 4332A0E1 		mov	r3, r3, asr #4	@ D.10899, D.10898,
 3912 017c FF3003E2 		and	r3, r3, #255	@ D.10900, D.10899,
 3913 0180 303083E2 		add	r3, r3, #48	@ tmp238, D.10900,
 3914 0184 FF3003E2 		and	r3, r3, #255	@ iftmp.10, tmp238,
 3915 0188 040000EA 		b	.L260	@
 3916              	.L259:
 3917              		.loc 1 1508 0 discriminator 2
 3918 018c 2B30DDE5 		ldrb	r3, [sp, #43]	@ zero_extendqisi2	@ D.10902, num
 3919 0190 4332A0E1 		mov	r3, r3, asr #4	@ D.10903, D.10902,
 3920 0194 FF3003E2 		and	r3, r3, #255	@ D.10904, D.10903,
 3921 0198 613083E2 		add	r3, r3, #97	@ tmp239, D.10904,
 3922 019c FF3003E2 		and	r3, r3, #255	@ iftmp.10, tmp239,
 3923              	.L260:
 3924              		.loc 1 1508 0 discriminator 3
 3925 01a0 0E30CDE5 		strb	r3, [sp, #14]	@ tmp240, buffer
1509:fat16.cpp     ****             num &= 0x0f;
 3926              		.loc 1 1509 0 is_stmt 1 discriminator 3
 3927 01a4 2B30DDE5 		ldrb	r3, [sp, #43]	@ tmp241, num
 3928 01a8 0F3003E2 		and	r3, r3, #15	@ tmp242, tmp241,
 3929 01ac 2B30CDE5 		strb	r3, [sp, #43]	@ tmp243, num
1510:fat16.cpp     ****             buffer[7] = (num < 0x0a) ? ('0' + num) : ('a' + num);
 3930              		.loc 1 1510 0 discriminator 3
 3931 01b0 2B30DDE5 		ldrb	r3, [sp, #43]	@ zero_extendqisi2	@ tmp244, num
 3932 01b4 090053E3 		cmp	r3, #9	@ tmp244,
 3933 01b8 0300008A 		bhi	.L261	@,
 3934              		.loc 1 1510 0 is_stmt 0 discriminator 1
 3935 01bc 2B30DDE5 		ldrb	r3, [sp, #43]	@ tmp245, num
 3936 01c0 303083E2 		add	r3, r3, #48	@ tmp246, tmp245,
 3937 01c4 FF3003E2 		and	r3, r3, #255	@ iftmp.11, tmp246,
 3938 01c8 020000EA 		b	.L262	@
 3939              	.L261:
 3940              		.loc 1 1510 0 discriminator 2
 3941 01cc 2B30DDE5 		ldrb	r3, [sp, #43]	@ tmp247, num
 3942 01d0 613083E2 		add	r3, r3, #97	@ tmp248, tmp247,
 3943 01d4 FF3003E2 		and	r3, r3, #255	@ iftmp.11, tmp248,
 3944              	.L262:
 3945              		.loc 1 1510 0 discriminator 3
 3946 01d8 0F30CDE5 		strb	r3, [sp, #15]	@ tmp249, buffer
 3947              	.L258:
 3948              	.LBE54:
 3949              	.LBE53:
1511:fat16.cpp     ****         }
ARM GAS  /tmp/ccwDRvq0.s 			page 98


1512:fat16.cpp     ****     
1513:fat16.cpp     ****         /* fill directory entry buffer */
1514:fat16.cpp     ****         memset(&buffer[11], 0, sizeof(buffer) - 11);
 3950              		.loc 1 1514 0 is_stmt 1
 3951 01dc 08308DE2 		add	r3, sp, #8	@ tmp250,,
 3952 01e0 0B3083E2 		add	r3, r3, #11	@ tmp251, tmp250,
 3953 01e4 0300A0E1 		mov	r0, r3	@, tmp251
 3954 01e8 0010A0E3 		mov	r1, #0	@,
 3955 01ec 1520A0E3 		mov	r2, #21	@,
 3956 01f0 FEFFFFEB 		bl	memset	@
1515:fat16.cpp     ****         buffer[0x0b] = dir_entry->attributes;
 3957              		.loc 1 1515 0
 3958 01f4 00309DE5 		ldr	r3, [sp, #0]	@ tmp252, dir_entry
 3959 01f8 2030D3E5 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ D.10909, dir_entry_14(D)->attributes
 3960 01fc 1330CDE5 		strb	r3, [sp, #19]	@ tmp253, buffer
1516:fat16.cpp     **** 
1517:fat16.cpp     ****         //Not used in bootloader
1518:fat16.cpp     **** 		#ifdef MAIN_FIRMWARE
1519:fat16.cpp     **** 			//Added modified date/time 12-26-07
1520:fat16.cpp     **** 			//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
1521:fat16.cpp     **** 			char * current_time;
1522:fat16.cpp     **** /*			current_time = GPS_get_time();
1523:fat16.cpp     **** 			char * current_date;
1524:fat16.cpp     **** 			current_date = GPS_get_date();
1525:fat16.cpp     **** 			
1526:fat16.cpp     **** 			uint16_t modified_time, modified_date;
1527:fat16.cpp     **** 			uint8_t c_hour, c_minute, c_second;
1528:fat16.cpp     **** 			uint8_t c_year, c_month, c_day;
1529:fat16.cpp     **** 			
1530:fat16.cpp     **** 			c_hour = (current_time[0] - '0') * 10;
1531:fat16.cpp     **** 			c_hour += (current_time[1] - '0');
1532:fat16.cpp     **** 			c_minute = (current_time[3] - '0') * 10;
1533:fat16.cpp     **** 			c_minute += (current_time[4] - '0');
1534:fat16.cpp     **** 			c_second = (current_time[6] - '0') * 10;
1535:fat16.cpp     **** 			c_second += (current_time[7] - '0');
1536:fat16.cpp     **** 			
1537:fat16.cpp     **** 			c_day = (current_date[0] - '0') * 10;
1538:fat16.cpp     **** 			c_day += (current_date[1] - '0');
1539:fat16.cpp     **** 			c_month = (current_date[3] - '0') * 10;
1540:fat16.cpp     **** 			c_month += (current_date[4] - '0');
1541:fat16.cpp     **** 			c_year = (current_date[6] - '0') * 10;
1542:fat16.cpp     **** 			c_year += (current_date[7] - '0');
1543:fat16.cpp     **** 			
1544:fat16.cpp     **** 			//Correct for 1980 = 0, 2000 = 20, year code
1545:fat16.cpp     **** 			c_year += 20;
1546:fat16.cpp     **** 			
1547:fat16.cpp     **** 			modified_time = (c_hour << (16-5)) | (c_minute << (16-11)) | (c_second);
1548:fat16.cpp     **** 			modified_date = (c_year << (16-7)) | (c_month << (16-11)) | (c_day);
1549:fat16.cpp     **** 
1550:fat16.cpp     **** 			//Do a little error correction
1551:fat16.cpp     **** 			if (c_year < 26) //26 = 2006
1552:fat16.cpp     **** 			{
1553:fat16.cpp     **** 				modified_time = 0;
1554:fat16.cpp     **** 				modified_date = 0;
1555:fat16.cpp     **** 			}
1556:fat16.cpp     **** 
1557:fat16.cpp     **** 			uart->WriteLine("c_time=%d, %d, %d\n", c_hour, c_minute, c_second);
ARM GAS  /tmp/ccwDRvq0.s 			page 99


1558:fat16.cpp     **** 			uart->WriteLine("c_date=%d, %d, %d\n", c_month, c_day, c_year);
1559:fat16.cpp     **** 			uart->WriteLine("mod_time=%x\n", modified_time);
1560:fat16.cpp     **** 			uart->WriteLine("mod_date=%x\n", modified_date);
1561:fat16.cpp     **** 			
1562:fat16.cpp     **** 			buffer[0x16] = (modified_time >> 0) & 0xFF;
1563:fat16.cpp     **** 			buffer[0x17] = (modified_time >> 8) & 0xFF;
1564:fat16.cpp     **** 			buffer[0x18] = (modified_date >> 0) & 0xFF;
1565:fat16.cpp     **** 			buffer[0x19] = (modified_date >> 8) & 0xFF;
1566:fat16.cpp     **** 			*/
1567:fat16.cpp     **** 			//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
1568:fat16.cpp     **** 		#endif
1569:fat16.cpp     **** 
1570:fat16.cpp     ****         buffer[0x1a] = (dir_entry->cluster >> 0) & 0xff;
 3961              		.loc 1 1570 0
 3962 0200 00309DE5 		ldr	r3, [sp, #0]	@ tmp254, dir_entry
 3963 0204 B232D3E1 		ldrh	r3, [r3, #34]	@ D.10910, dir_entry_14(D)->cluster
 3964 0208 FF3003E2 		and	r3, r3, #255	@ D.10911, D.10910,
 3965 020c 2230CDE5 		strb	r3, [sp, #34]	@ tmp255, buffer
1571:fat16.cpp     ****         buffer[0x1b] = (dir_entry->cluster >> 8) & 0xff;
 3966              		.loc 1 1571 0
 3967 0210 00309DE5 		ldr	r3, [sp, #0]	@ tmp256, dir_entry
 3968 0214 B232D3E1 		ldrh	r3, [r3, #34]	@ D.10912, dir_entry_14(D)->cluster
 3969 0218 2334A0E1 		mov	r3, r3, lsr #8	@ tmp257, D.10912,
 3970 021c 0338A0E1 		mov	r3, r3, asl #16	@ tmp258, tmp257,
 3971 0220 2338A0E1 		mov	r3, r3, lsr #16	@ D.10913, tmp258,
 3972 0224 FF3003E2 		and	r3, r3, #255	@ D.10914, D.10913,
 3973 0228 2330CDE5 		strb	r3, [sp, #35]	@ tmp259, buffer
1572:fat16.cpp     ****         buffer[0x1c] = (dir_entry->file_size >> 0) & 0xff;
 3974              		.loc 1 1572 0
 3975 022c 00309DE5 		ldr	r3, [sp, #0]	@ tmp260, dir_entry
 3976 0230 243093E5 		ldr	r3, [r3, #36]	@ D.10915, dir_entry_14(D)->file_size
 3977 0234 FF3003E2 		and	r3, r3, #255	@ D.10916, D.10915,
 3978 0238 2430CDE5 		strb	r3, [sp, #36]	@ tmp261, buffer
1573:fat16.cpp     ****         buffer[0x1d] = (dir_entry->file_size >> 8) & 0xff;
 3979              		.loc 1 1573 0
 3980 023c 00309DE5 		ldr	r3, [sp, #0]	@ tmp262, dir_entry
 3981 0240 243093E5 		ldr	r3, [r3, #36]	@ D.10917, dir_entry_14(D)->file_size
 3982 0244 2334A0E1 		mov	r3, r3, lsr #8	@ D.10918, D.10917,
 3983 0248 FF3003E2 		and	r3, r3, #255	@ D.10919, D.10918,
 3984 024c 2530CDE5 		strb	r3, [sp, #37]	@ tmp263, buffer
1574:fat16.cpp     ****         buffer[0x1e] = (dir_entry->file_size >> 16) & 0xff;
 3985              		.loc 1 1574 0
 3986 0250 00309DE5 		ldr	r3, [sp, #0]	@ tmp264, dir_entry
 3987 0254 243093E5 		ldr	r3, [r3, #36]	@ D.10920, dir_entry_14(D)->file_size
 3988 0258 2338A0E1 		mov	r3, r3, lsr #16	@ D.10921, D.10920,
 3989 025c FF3003E2 		and	r3, r3, #255	@ D.10922, D.10921,
 3990 0260 2630CDE5 		strb	r3, [sp, #38]	@ tmp265, buffer
1575:fat16.cpp     ****         buffer[0x1f] = (dir_entry->file_size >> 24) & 0xff;
 3991              		.loc 1 1575 0
 3992 0264 00309DE5 		ldr	r3, [sp, #0]	@ tmp266, dir_entry
 3993 0268 243093E5 		ldr	r3, [r3, #36]	@ D.10923, dir_entry_14(D)->file_size
 3994 026c 233CA0E1 		mov	r3, r3, lsr #24	@ D.10924, D.10923,
 3995 0270 FF3003E2 		and	r3, r3, #255	@ D.10925, D.10924,
 3996 0274 2730CDE5 		strb	r3, [sp, #39]	@ tmp267, buffer
1576:fat16.cpp     ****     
1577:fat16.cpp     ****         /* write to disk */
1578:fat16.cpp     ****         if(!device_write(offset + (uint32_t) lfn_entry_count * 32, buffer, sizeof(buffer)))
ARM GAS  /tmp/ccwDRvq0.s 			page 100


 3997              		.loc 1 1578 0
 3998 0278 3330DDE5 		ldrb	r3, [sp, #51]	@ zero_extendqisi2	@ D.10927, lfn_entry_count
 3999 027c 8322A0E1 		mov	r2, r3, asl #5	@ D.10928, D.10927,
 4000 0280 44309DE5 		ldr	r3, [sp, #68]	@ tmp268, offset
 4001 0284 031082E0 		add	r1, r2, r3	@ D.10929, D.10928, tmp268
 4002 0288 08208DE2 		add	r2, sp, #8	@ tmp269,,
 4003 028c 34309DE5 		ldr	r3, [sp, #52]	@ tmp270, device_write
 4004 0290 0100A0E1 		mov	r0, r1	@, D.10929
 4005 0294 0210A0E1 		mov	r1, r2	@, tmp269
 4006 0298 2020A0E3 		mov	r2, #32	@,
 4007 029c 0FE0A0E1 		mov	lr, pc
 4008 02a0 13FF2FE1 		bx	r3	@ tmp270
 4009 02a4 0030A0E1 		mov	r3, r0	@ tmp271,
 4010 02a8 000053E3 		cmp	r3, #0	@ D.10930,
 4011 02ac 0030A013 		movne	r3, #0	@, tmp273
 4012 02b0 0130A003 		moveq	r3, #1	@, tmp273
 4013 02b4 FF3003E2 		and	r3, r3, #255	@ retval.12, tmp272,
 4014 02b8 000053E3 		cmp	r3, #0	@ retval.12,
 4015 02bc 0100000A 		beq	.L263	@,
1579:fat16.cpp     ****             return 0;
 4016              		.loc 1 1579 0
 4017 02c0 0030A0E3 		mov	r3, #0	@ D.10871,
 4018 02c4 9E0000EA 		b	.L254	@
 4019              	.L263:
1580:fat16.cpp     ****     
1581:fat16.cpp     ****         /* calculate checksum of 8.3 name */
1582:fat16.cpp     ****         uint8_t checksum = buffer[0];
 4020              		.loc 1 1582 0
 4021 02c8 0830DDE5 		ldrb	r3, [sp, #8]	@ tmp274, buffer
 4022 02cc 4130CDE5 		strb	r3, [sp, #65]	@ tmp274, checksum
1583:fat16.cpp     ****         uint8_t i;
1584:fat16.cpp     ****         for(i = 1; i < 11; ++i)
 4023              		.loc 1 1584 0
 4024 02d0 0130A0E3 		mov	r3, #1	@ tmp275,
 4025 02d4 4030CDE5 		strb	r3, [sp, #64]	@ tmp276, i
 4026 02d8 130000EA 		b	.L264	@
 4027              	.L265:
1585:fat16.cpp     ****             checksum = ((checksum >> 1) | (checksum << 7)) + buffer[i];
 4028              		.loc 1 1585 0 discriminator 2
 4029 02dc 4130DDE5 		ldrb	r3, [sp, #65]	@ zero_extendqisi2	@ D.10938, checksum
 4030 02e0 C330A0E1 		mov	r3, r3, asr #1	@ D.10939, D.10938,
 4031 02e4 FF2003E2 		and	r2, r3, #255	@ D.10940, D.10939,
 4032 02e8 4130DDE5 		ldrb	r3, [sp, #65]	@ zero_extendqisi2	@ D.10941, checksum
 4033 02ec 8333A0E1 		mov	r3, r3, asl #7	@ D.10942, D.10941,
 4034 02f0 FF3003E2 		and	r3, r3, #255	@ D.10943, D.10942,
 4035 02f4 033082E1 		orr	r3, r2, r3	@ tmp279, tmp277, tmp278
 4036 02f8 FF3003E2 		and	r3, r3, #255	@ D.10944, tmp279,
 4037 02fc FF2003E2 		and	r2, r3, #255	@ D.10945, D.10944,
 4038 0300 4010DDE5 		ldrb	r1, [sp, #64]	@ zero_extendqisi2	@ D.10946, i
 4039 0304 3F30E0E3 		mvn	r3, #63	@ tmp280,
 4040 0308 48008DE2 		add	r0, sp, #72	@,,
 4041 030c 011080E0 		add	r1, r0, r1	@ tmp281,, D.10946
 4042 0310 033081E0 		add	r3, r1, r3	@ tmp282, tmp281, tmp280
 4043 0314 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.10947, buffer
 4044 0318 033082E0 		add	r3, r2, r3	@ tmp283, D.10945, D.10947
 4045 031c 4130CDE5 		strb	r3, [sp, #65]	@ tmp284, checksum
1584:fat16.cpp     ****         for(i = 1; i < 11; ++i)
ARM GAS  /tmp/ccwDRvq0.s 			page 101


 4046              		.loc 1 1584 0 discriminator 2
 4047 0320 4030DDE5 		ldrb	r3, [sp, #64]	@ tmp285, i
 4048 0324 013083E2 		add	r3, r3, #1	@ tmp286, tmp285,
 4049 0328 4030CDE5 		strb	r3, [sp, #64]	@ tmp287, i
 4050              	.L264:
1584:fat16.cpp     ****         for(i = 1; i < 11; ++i)
 4051              		.loc 1 1584 0 is_stmt 0 discriminator 1
 4052 032c 4030DDE5 		ldrb	r3, [sp, #64]	@ zero_extendqisi2	@ tmp289, i
 4053 0330 0A0053E3 		cmp	r3, #10	@ tmp289,
 4054 0334 0030A083 		movhi	r3, #0	@, tmp290
 4055 0338 0130A093 		movls	r3, #1	@, tmp290
 4056 033c FF3003E2 		and	r3, r3, #255	@ D.10936, tmp288,
 4057 0340 000053E3 		cmp	r3, #0	@ D.10936,
 4058 0344 E4FFFF1A 		bne	.L265	@,
 4059              	.LBB55:
1586:fat16.cpp     ****     
1587:fat16.cpp     ****         /* write lfn entries */
1588:fat16.cpp     ****         uint8_t lfn_entry;
1589:fat16.cpp     ****         for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 4060              		.loc 1 1589 0 is_stmt 1
 4061 0348 3330DDE5 		ldrb	r3, [sp, #51]	@ tmp291, lfn_entry_count
 4062 034c 3F30CDE5 		strb	r3, [sp, #63]	@ tmp291, lfn_entry
 4063 0350 730000EA 		b	.L266	@
 4064              	.L274:
 4065              	.LBB56:
1590:fat16.cpp     ****         {
1591:fat16.cpp     ****             memset(buffer, 0, sizeof(buffer));
 4066              		.loc 1 1591 0
 4067 0354 08308DE2 		add	r3, sp, #8	@ tmp292,,
 4068 0358 0300A0E1 		mov	r0, r3	@, tmp292
 4069 035c 0010A0E3 		mov	r1, #0	@,
 4070 0360 2020A0E3 		mov	r2, #32	@,
 4071 0364 FEFFFFEB 		bl	memset	@
1592:fat16.cpp     ****             memset(&buffer[0x01], 0xff, 10);
 4072              		.loc 1 1592 0
 4073 0368 08308DE2 		add	r3, sp, #8	@ tmp293,,
 4074 036c 013083E2 		add	r3, r3, #1	@ tmp294, tmp293,
 4075 0370 0300A0E1 		mov	r0, r3	@, tmp294
 4076 0374 FF10A0E3 		mov	r1, #255	@,
 4077 0378 0A20A0E3 		mov	r2, #10	@,
 4078 037c FEFFFFEB 		bl	memset	@
1593:fat16.cpp     ****             memset(&buffer[0x0e], 0xff, 12);
 4079              		.loc 1 1593 0
 4080 0380 08308DE2 		add	r3, sp, #8	@ tmp295,,
 4081 0384 0E3083E2 		add	r3, r3, #14	@ tmp296, tmp295,
 4082 0388 0300A0E1 		mov	r0, r3	@, tmp296
 4083 038c FF10A0E3 		mov	r1, #255	@,
 4084 0390 0C20A0E3 		mov	r2, #12	@,
 4085 0394 FEFFFFEB 		bl	memset	@
1594:fat16.cpp     ****             memset(&buffer[0x1c], 0xff, 4);
 4086              		.loc 1 1594 0
 4087 0398 08308DE2 		add	r3, sp, #8	@ tmp297,,
 4088 039c 1C3083E2 		add	r3, r3, #28	@ tmp298, tmp297,
 4089 03a0 0300A0E1 		mov	r0, r3	@, tmp298
 4090 03a4 FF10A0E3 		mov	r1, #255	@,
 4091 03a8 0420A0E3 		mov	r2, #4	@,
 4092 03ac FEFFFFEB 		bl	memset	@
ARM GAS  /tmp/ccwDRvq0.s 			page 102


1595:fat16.cpp     ****     
1596:fat16.cpp     ****             buffer[0x00] = lfn_entry;
 4093              		.loc 1 1596 0
 4094 03b0 3F30DDE5 		ldrb	r3, [sp, #63]	@ tmp299, lfn_entry
 4095 03b4 0830CDE5 		strb	r3, [sp, #8]	@ tmp299, buffer
1597:fat16.cpp     ****             if(lfn_entry == lfn_entry_count)
 4096              		.loc 1 1597 0
 4097 03b8 3F20DDE5 		ldrb	r2, [sp, #63]	@ zero_extendqisi2	@ tmp300, lfn_entry
 4098 03bc 3330DDE5 		ldrb	r3, [sp, #51]	@ zero_extendqisi2	@ tmp301, lfn_entry_count
 4099 03c0 030052E1 		cmp	r2, r3	@ tmp300, tmp301
 4100 03c4 0300001A 		bne	.L267	@,
1598:fat16.cpp     ****                 buffer[0x00] |= FAT16_DIRENTRY_LFNLAST;
 4101              		.loc 1 1598 0
 4102 03c8 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2	@ D.10955, buffer
 4103 03cc 403083E3 		orr	r3, r3, #64	@ tmp302, D.10955,
 4104 03d0 FF3003E2 		and	r3, r3, #255	@ D.10956, tmp302,
 4105 03d4 0830CDE5 		strb	r3, [sp, #8]	@ tmp303, buffer
 4106              	.L267:
1599:fat16.cpp     ****     
1600:fat16.cpp     ****             /* set file name */
1601:fat16.cpp     ****             const char* long_name_curr = dir_entry->long_name + (lfn_entry - 1) * 13;
 4107              		.loc 1 1601 0
 4108 03d8 00109DE5 		ldr	r1, [sp, #0]	@ D.10958, dir_entry
 4109 03dc 3F30DDE5 		ldrb	r3, [sp, #63]	@ zero_extendqisi2	@ D.10959, lfn_entry
 4110 03e0 012043E2 		sub	r2, r3, #1	@ D.10960, D.10959,
 4111 03e4 0230A0E1 		mov	r3, r2	@ tmp304, D.10960
 4112 03e8 8330A0E1 		mov	r3, r3, asl #1	@ tmp304, tmp304,
 4113 03ec 023083E0 		add	r3, r3, r2	@ tmp304, tmp304, D.10960
 4114 03f0 0331A0E1 		mov	r3, r3, asl #2	@ tmp304, tmp304,
 4115 03f4 023083E0 		add	r3, r3, r2	@ D.10961, tmp304, D.10960
 4116 03f8 033081E0 		add	r3, r1, r3	@ tmp305, D.10958, D.10962
 4117 03fc 38308DE5 		str	r3, [sp, #56]	@ tmp305, long_name_curr
1602:fat16.cpp     ****             i = 1;
 4118              		.loc 1 1602 0
 4119 0400 0130A0E3 		mov	r3, #1	@ tmp306,
 4120 0404 4030CDE5 		strb	r3, [sp, #64]	@ tmp307, i
1603:fat16.cpp     ****             while(i < 0x1f)
 4121              		.loc 1 1603 0
 4122 0408 2B0000EA 		b	.L268	@
 4123              	.L273:
1604:fat16.cpp     ****             {
1605:fat16.cpp     ****                 buffer[i++] = *long_name_curr;
 4124              		.loc 1 1605 0
 4125 040c 4010DDE5 		ldrb	r1, [sp, #64]	@ zero_extendqisi2	@ D.10967, i
 4126 0410 38309DE5 		ldr	r3, [sp, #56]	@ tmp308, long_name_curr
 4127 0414 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2	@ D.10968,
 4128 0418 3F30E0E3 		mvn	r3, #63	@ tmp309,
 4129 041c 48008DE2 		add	r0, sp, #72	@,,
 4130 0420 011080E0 		add	r1, r0, r1	@ tmp310,, D.10967
 4131 0424 033081E0 		add	r3, r1, r3	@ tmp311, tmp310, tmp309
 4132 0428 0020C3E5 		strb	r2, [r3, #0]	@ tmp312, buffer
 4133 042c 4030DDE5 		ldrb	r3, [sp, #64]	@ tmp313, i
 4134 0430 013083E2 		add	r3, r3, #1	@ tmp314, tmp313,
 4135 0434 4030CDE5 		strb	r3, [sp, #64]	@ tmp315, i
1606:fat16.cpp     ****                 buffer[i++] = 0;
 4136              		.loc 1 1606 0
 4137 0438 4020DDE5 		ldrb	r2, [sp, #64]	@ zero_extendqisi2	@ D.10969, i
ARM GAS  /tmp/ccwDRvq0.s 			page 103


 4138 043c 3F30E0E3 		mvn	r3, #63	@ tmp316,
 4139 0440 48108DE2 		add	r1, sp, #72	@,,
 4140 0444 022081E0 		add	r2, r1, r2	@ tmp317,, D.10969
 4141 0448 033082E0 		add	r3, r2, r3	@ tmp318, tmp317, tmp316
 4142 044c 0020A0E3 		mov	r2, #0	@ tmp319,
 4143 0450 0020C3E5 		strb	r2, [r3, #0]	@ tmp320, buffer
 4144 0454 4030DDE5 		ldrb	r3, [sp, #64]	@ tmp321, i
 4145 0458 013083E2 		add	r3, r3, #1	@ tmp322, tmp321,
 4146 045c 4030CDE5 		strb	r3, [sp, #64]	@ tmp323, i
1607:fat16.cpp     ****     
1608:fat16.cpp     ****                 switch(i)
 4147              		.loc 1 1608 0
 4148 0460 4030DDE5 		ldrb	r3, [sp, #64]	@ zero_extendqisi2	@ D.10971, i
 4149 0464 0B0053E3 		cmp	r3, #11	@ D.10971,
 4150 0468 0200000A 		beq	.L270	@,
 4151 046c 1A0053E3 		cmp	r3, #26	@ D.10971,
 4152 0470 0300000A 		beq	.L271	@,
 4153 0474 050000EA 		b	.L269	@
 4154              	.L270:
1609:fat16.cpp     ****                 {
1610:fat16.cpp     ****                     case 0x0b:
1611:fat16.cpp     ****                         i = 0x0e;
 4155              		.loc 1 1611 0
 4156 0478 0E30A0E3 		mov	r3, #14	@ tmp324,
 4157 047c 4030CDE5 		strb	r3, [sp, #64]	@ tmp325, i
1612:fat16.cpp     ****                         break;
 4158              		.loc 1 1612 0
 4159 0480 020000EA 		b	.L269	@
 4160              	.L271:
1613:fat16.cpp     ****                     case 0x1a:
1614:fat16.cpp     ****                         i = 0x1c;
 4161              		.loc 1 1614 0
 4162 0484 1C30A0E3 		mov	r3, #28	@ tmp326,
 4163 0488 4030CDE5 		strb	r3, [sp, #64]	@ tmp327, i
1615:fat16.cpp     ****                         break;
 4164              		.loc 1 1615 0
 4165 048c 0000A0E1 		mov	r0, r0	@ nop
 4166              	.L269:
1616:fat16.cpp     ****                 }
1617:fat16.cpp     ****     
1618:fat16.cpp     ****                 if(!*long_name_curr++)
 4167              		.loc 1 1618 0
 4168 0490 38309DE5 		ldr	r3, [sp, #56]	@ tmp328, long_name_curr
 4169 0494 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.10974,
 4170 0498 000053E3 		cmp	r3, #0	@ D.10974,
 4171 049c 0030A013 		movne	r3, #0	@, tmp330
 4172 04a0 0130A003 		moveq	r3, #1	@, tmp330
 4173 04a4 FF3003E2 		and	r3, r3, #255	@ retval.13, tmp329,
 4174 04a8 38209DE5 		ldr	r2, [sp, #56]	@ tmp331, long_name_curr
 4175 04ac 012082E2 		add	r2, r2, #1	@ tmp332, tmp331,
 4176 04b0 38208DE5 		str	r2, [sp, #56]	@ tmp332, long_name_curr
 4177 04b4 000053E3 		cmp	r3, #0	@ retval.13,
 4178 04b8 0700001A 		bne	.L275	@,
 4179              	.L268:
1603:fat16.cpp     ****             while(i < 0x1f)
 4180              		.loc 1 1603 0 discriminator 1
 4181 04bc 4030DDE5 		ldrb	r3, [sp, #64]	@ zero_extendqisi2	@ tmp334, i
ARM GAS  /tmp/ccwDRvq0.s 			page 104


 4182 04c0 1E0053E3 		cmp	r3, #30	@ tmp334,
 4183 04c4 0030A083 		movhi	r3, #0	@, tmp335
 4184 04c8 0130A093 		movls	r3, #1	@, tmp335
 4185 04cc FF3003E2 		and	r3, r3, #255	@ D.10966, tmp333,
 4186 04d0 000053E3 		cmp	r3, #0	@ D.10966,
 4187 04d4 CCFFFF1A 		bne	.L273	@,
 4188 04d8 000000EA 		b	.L272	@
 4189              	.L275:
1619:fat16.cpp     ****                     break;
 4190              		.loc 1 1619 0
 4191 04dc 0000A0E1 		mov	r0, r0	@ nop
 4192              	.L272:
1620:fat16.cpp     ****             }
1621:fat16.cpp     ****     
1622:fat16.cpp     ****             /* mark as lfn entry */
1623:fat16.cpp     ****             buffer[0x0b] = 0x0f;
 4193              		.loc 1 1623 0
 4194 04e0 0F30A0E3 		mov	r3, #15	@ tmp336,
 4195 04e4 1330CDE5 		strb	r3, [sp, #19]	@ tmp337, buffer
1624:fat16.cpp     ****     
1625:fat16.cpp     ****             /* set checksum */
1626:fat16.cpp     ****             buffer[0x0d] = checksum;
 4196              		.loc 1 1626 0
 4197 04e8 4130DDE5 		ldrb	r3, [sp, #65]	@ tmp338, checksum
 4198 04ec 1530CDE5 		strb	r3, [sp, #21]	@ tmp338, buffer
1627:fat16.cpp     ****     
1628:fat16.cpp     ****             /* write entry */
1629:fat16.cpp     ****             device_write(offset, buffer, sizeof(buffer));
 4199              		.loc 1 1629 0
 4200 04f0 08208DE2 		add	r2, sp, #8	@ tmp339,,
 4201 04f4 34309DE5 		ldr	r3, [sp, #52]	@ tmp340, device_write
 4202 04f8 44009DE5 		ldr	r0, [sp, #68]	@, offset
 4203 04fc 0210A0E1 		mov	r1, r2	@, tmp339
 4204 0500 2020A0E3 		mov	r2, #32	@,
 4205 0504 0FE0A0E1 		mov	lr, pc
 4206 0508 13FF2FE1 		bx	r3	@ tmp340
1630:fat16.cpp     ****     
1631:fat16.cpp     ****             offset += sizeof(buffer);
 4207              		.loc 1 1631 0
 4208 050c 44309DE5 		ldr	r3, [sp, #68]	@ tmp341, offset
 4209 0510 203083E2 		add	r3, r3, #32	@ tmp342, tmp341,
 4210 0514 44308DE5 		str	r3, [sp, #68]	@ tmp342, offset
 4211              	.LBE56:
1589:fat16.cpp     ****         for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 4212              		.loc 1 1589 0
 4213 0518 3F30DDE5 		ldrb	r3, [sp, #63]	@ tmp343, lfn_entry
 4214 051c 013043E2 		sub	r3, r3, #1	@ tmp344, tmp343,
 4215 0520 3F30CDE5 		strb	r3, [sp, #63]	@ tmp345, lfn_entry
 4216              	.L266:
1589:fat16.cpp     ****         for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 4217              		.loc 1 1589 0 is_stmt 0 discriminator 1
 4218 0524 3F30DDE5 		ldrb	r3, [sp, #63]	@ zero_extendqisi2	@ tmp347, lfn_entry
 4219 0528 000053E3 		cmp	r3, #0	@ tmp347,
 4220 052c 0030A003 		moveq	r3, #0	@, tmp348
 4221 0530 0130A013 		movne	r3, #1	@, tmp348
 4222 0534 FF3003E2 		and	r3, r3, #255	@ D.10951, tmp346,
 4223 0538 000053E3 		cmp	r3, #0	@ D.10951,
ARM GAS  /tmp/ccwDRvq0.s 			page 105


 4224 053c 84FFFF1A 		bne	.L274	@,
 4225              	.LBE55:
1632:fat16.cpp     ****         }
1633:fat16.cpp     ****     
1634:fat16.cpp     ****         return 1;
 4226              		.loc 1 1634 0 is_stmt 1
 4227 0540 0130A0E3 		mov	r3, #1	@ D.10871,
 4228              	.L254:
 4229              	.LBE50:
1635:fat16.cpp     ****     
1636:fat16.cpp     ****     #else
1637:fat16.cpp     ****         return 0;
1638:fat16.cpp     ****     #endif
1639:fat16.cpp     **** }
 4230              		.loc 1 1639 0
 4231 0544 0300A0E1 		mov	r0, r3	@, <retval>
 4232 0548 4CD08DE2 		add	sp, sp, #76	@,,
 4233 054c 04E09DE4 		ldr	lr, [sp], #4
 4234 0550 1EFF2FE1 		bx	lr
 4235              	.L277:
 4236              		.align	2
 4237              	.L276:
 4238 0554 4FECC44E 		.word	1321528399
 4239              		.cfi_endproc
 4240              	.LFE133:
 4241              		.size	_ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct, .-_ZL21fat16_write_
 4242              		.section	.text._Z17fat16_create_fileP16fat16_dir_structPKcP22fat16_dir_entry_struct,"ax",%progbits
 4243              		.align	2
 4244              		.global	_Z17fat16_create_fileP16fat16_dir_structPKcP22fat16_dir_entry_struct
 4245              		.type	_Z17fat16_create_fileP16fat16_dir_structPKcP22fat16_dir_entry_struct, %function
 4246              	_Z17fat16_create_fileP16fat16_dir_structPKcP22fat16_dir_entry_struct:
 4247              	.LFB134:
1640:fat16.cpp     **** 
1641:fat16.cpp     **** /**
1642:fat16.cpp     ****  * \ingroup fat16_file
1643:fat16.cpp     ****  * Creates a file.
1644:fat16.cpp     ****  *
1645:fat16.cpp     ****  * Creates a file and obtains the directory entry of the
1646:fat16.cpp     ****  * new file. If the file to create already exists, the
1647:fat16.cpp     ****  * directory entry of the existing file will be returned
1648:fat16.cpp     ****  * within the dir_entry parameter.
1649:fat16.cpp     ****  *
1650:fat16.cpp     ****  * \note The file name is not checked for invalid characters.
1651:fat16.cpp     ****  *
1652:fat16.cpp     ****  * \note The generation of the short 8.3 file name is quite
1653:fat16.cpp     ****  * simple. The first eight characters are used for the filename.
1654:fat16.cpp     ****  * The extension, if any, is made up of the first three characters
1655:fat16.cpp     ****  * following the last dot within the long filename. If the
1656:fat16.cpp     ****  * filename (without the extension) is longer than eight characters,
1657:fat16.cpp     ****  * the lower byte of the cluster number replaces the last two
1658:fat16.cpp     ****  * characters to avoid name clashes. In any other case, it is your
1659:fat16.cpp     ****  * responsibility to avoid name clashes.
1660:fat16.cpp     ****  *
1661:fat16.cpp     ****  * \param[in] parent The handle of the directory in which to create the file.
1662:fat16.cpp     ****  * \param[in] file The name of the file to create.
1663:fat16.cpp     ****  * \param[out] dir_entry The directory entry to fill for the new file.
1664:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
ARM GAS  /tmp/ccwDRvq0.s 			page 106


1665:fat16.cpp     ****  * \see fat16_delete_file
1666:fat16.cpp     ****  */
1667:fat16.cpp     **** uint8_t fat16_create_file(struct fat16_dir_struct* parent, const char* file, struct fat16_dir_entry
1668:fat16.cpp     **** {
 4248              		.loc 1 1668 0
 4249              		.cfi_startproc
 4250              		@ Function supports interworking.
 4251              		@ args = 0, pretend = 0, frame = 48
 4252              		@ frame_needed = 0, uses_anonymous_args = 0
 4253 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 4254              	.LCFI46:
 4255              		.cfi_def_cfa_offset 4
 4256 0004 34D04DE2 		sub	sp, sp, #52	@,,
 4257              	.LCFI47:
 4258              		.cfi_def_cfa_offset 56
 4259 0008 0C008DE5 		str	r0, [sp, #12]	@ parent, parent
 4260 000c 08108DE5 		str	r1, [sp, #8]	@ file, file
 4261 0010 04208DE5 		str	r2, [sp, #4]	@ dir_entry, dir_entry
 4262              	.LBB57:
1669:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
1670:fat16.cpp     ****         if(!parent || !file || !file[0])
 4263              		.loc 1 1670 0
 4264 0014 0C309DE5 		ldr	r3, [sp, #12]	@ tmp168, parent
 4265 0018 000053E3 		cmp	r3, #0	@ tmp168,
 4266 001c 0600000A 		beq	.L279	@,
 4267              		.cfi_offset 14, -4
 4268              		.loc 1 1670 0 is_stmt 0 discriminator 1
 4269 0020 08309DE5 		ldr	r3, [sp, #8]	@ tmp169, file
 4270 0024 000053E3 		cmp	r3, #0	@ tmp169,
 4271 0028 0300000A 		beq	.L279	@,
 4272              		.loc 1 1670 0 discriminator 2
 4273 002c 08309DE5 		ldr	r3, [sp, #8]	@ tmp170, file
 4274 0030 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.10798,
 4275 0034 000053E3 		cmp	r3, #0	@ D.10798,
 4276 0038 0200001A 		bne	.L280	@,
 4277              	.L279:
1671:fat16.cpp     ****             return 0;
 4278              		.loc 1 1671 0 is_stmt 1
 4279 003c 0030A0E3 		mov	r3, #0	@ D.10799,
 4280 0040 BD0000EA 		b	.L281	@
 4281              	.L298:
1672:fat16.cpp     ****     
1673:fat16.cpp     ****         /* check if the file already exists */
1674:fat16.cpp     ****         while(1)
 4282              		.loc 1 1674 0
 4283 0044 0000A0E1 		mov	r0, r0	@ nop
 4284              	.L280:
1675:fat16.cpp     ****         {
1676:fat16.cpp     ****             if(!fat16_read_dir(parent, dir_entry))
 4285              		.loc 1 1676 0
 4286 0048 0C009DE5 		ldr	r0, [sp, #12]	@, parent
 4287 004c 04109DE5 		ldr	r1, [sp, #4]	@, dir_entry
 4288 0050 FEFFFFEB 		bl	_Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct	@
 4289 0054 0030A0E1 		mov	r3, r0	@ tmp171,
 4290 0058 000053E3 		cmp	r3, #0	@ D.10804,
 4291 005c 0030A013 		movne	r3, #0	@, tmp173
 4292 0060 0130A003 		moveq	r3, #1	@, tmp173
ARM GAS  /tmp/ccwDRvq0.s 			page 107


 4293 0064 FF3003E2 		and	r3, r3, #255	@ retval.5, tmp172,
 4294 0068 000053E3 		cmp	r3, #0	@ retval.5,
 4295 006c 2300000A 		beq	.L282	@,
1677:fat16.cpp     ****                 break;
1678:fat16.cpp     ****     
1679:fat16.cpp     ****             if(strcmp(file, dir_entry->long_name) == 0)
1680:fat16.cpp     ****             {
1681:fat16.cpp     ****                 fat16_reset_dir(parent);
1682:fat16.cpp     ****                 return 1;
1683:fat16.cpp     ****             }
1684:fat16.cpp     ****         }
1685:fat16.cpp     ****     
1686:fat16.cpp     ****         memset(dir_entry, 0, sizeof(*dir_entry));
 4296              		.loc 1 1686 0
 4297 0070 04009DE5 		ldr	r0, [sp, #4]	@, dir_entry
 4298 0074 0010A0E3 		mov	r1, #0	@,
 4299 0078 2C20A0E3 		mov	r2, #44	@,
 4300 007c FEFFFFEB 		bl	memset	@
1687:fat16.cpp     ****         strncpy(dir_entry->long_name, file, sizeof(dir_entry->long_name) - 1);
 4301              		.loc 1 1687 0
 4302 0080 04309DE5 		ldr	r3, [sp, #4]	@ D.10811, dir_entry
 4303 0084 0300A0E1 		mov	r0, r3	@, D.10811
 4304 0088 08109DE5 		ldr	r1, [sp, #8]	@, file
 4305 008c 1F20A0E3 		mov	r2, #31	@,
 4306 0090 FEFFFFEB 		bl	strncpy	@
1688:fat16.cpp     ****     
1689:fat16.cpp     ****         /* search for a place where to write the directory entry to disk */
1690:fat16.cpp     ****         uint8_t free_dir_entries_needed = strlen(file) / 13 + 1 + 1;
 4307              		.loc 1 1690 0
 4308 0094 08009DE5 		ldr	r0, [sp, #8]	@, file
 4309 0098 FEFFFFEB 		bl	strlen	@
 4310 009c 0020A0E1 		mov	r2, r0	@ D.10812,
 4311 00a0 A4329FE5 		ldr	r3, .L300	@ tmp175,
 4312 00a4 921383E0 		umull	r1, r3, r2, r3	@, tmp174, D.10812, tmp175
 4313 00a8 2331A0E1 		mov	r3, r3, lsr #2	@ D.10813, tmp174,
 4314 00ac FF3003E2 		and	r3, r3, #255	@ D.10814, D.10813,
 4315 00b0 023083E2 		add	r3, r3, #2	@ tmp176, D.10814,
 4316 00b4 1F30CDE5 		strb	r3, [sp, #31]	@ tmp177, free_dir_entries_needed
1691:fat16.cpp     ****         uint8_t free_dir_entries_found = 0;
 4317              		.loc 1 1691 0
 4318 00b8 0030A0E3 		mov	r3, #0	@ tmp178,
 4319 00bc 2F30CDE5 		strb	r3, [sp, #47]	@ tmp179, free_dir_entries_found
1692:fat16.cpp     ****         struct fat16_fs_struct* fs = parent->fs;
 4320              		.loc 1 1692 0
 4321 00c0 0C309DE5 		ldr	r3, [sp, #12]	@ tmp180, parent
 4322 00c4 003093E5 		ldr	r3, [r3, #0]	@ tmp181, parent_17(D)->fs
 4323 00c8 18308DE5 		str	r3, [sp, #24]	@ tmp181, fs
1693:fat16.cpp     ****         uint16_t cluster_num = parent->dir_entry.cluster;
 4324              		.loc 1 1693 0
 4325 00cc 0C309DE5 		ldr	r3, [sp, #12]	@ tmp182, parent
 4326 00d0 B632D3E1 		ldrh	r3, [r3, #38]	@ movhi	@ tmp183, parent_17(D)->dir_entry.cluster
 4327 00d4 BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp183, cluster_num
1694:fat16.cpp     ****         uint32_t dir_entry_offset = 0;
 4328              		.loc 1 1694 0
 4329 00d8 0030A0E3 		mov	r3, #0	@ tmp184,
 4330 00dc 28308DE5 		str	r3, [sp, #40]	@ tmp184, dir_entry_offset
1695:fat16.cpp     ****         uint32_t offset = 0;
ARM GAS  /tmp/ccwDRvq0.s 			page 108


 4331              		.loc 1 1695 0
 4332 00e0 0030A0E3 		mov	r3, #0	@ tmp185,
 4333 00e4 24308DE5 		str	r3, [sp, #36]	@ tmp185, offset
1696:fat16.cpp     ****         uint32_t offset_to = 0;
 4334              		.loc 1 1696 0
 4335 00e8 0030A0E3 		mov	r3, #0	@ tmp186,
 4336 00ec 20308DE5 		str	r3, [sp, #32]	@ tmp186, offset_to
1697:fat16.cpp     ****     
1698:fat16.cpp     ****         if(cluster_num == 0)
 4337              		.loc 1 1698 0
 4338 00f0 BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp187, cluster_num
 4339 00f4 000053E3 		cmp	r3, #0	@ tmp187,
 4340 00f8 0B00000A 		beq	.L283	@,
 4341 00fc 120000EA 		b	.L284	@
 4342              	.L282:
1679:fat16.cpp     ****             if(strcmp(file, dir_entry->long_name) == 0)
 4343              		.loc 1 1679 0
 4344 0100 04309DE5 		ldr	r3, [sp, #4]	@ D.10807, dir_entry
 4345 0104 08009DE5 		ldr	r0, [sp, #8]	@, file
 4346 0108 0310A0E1 		mov	r1, r3	@, D.10807
 4347 010c FEFFFFEB 		bl	strcmp	@
 4348 0110 0030A0E1 		mov	r3, r0	@ tmp188,
 4349 0114 000053E3 		cmp	r3, #0	@ D.10808,
 4350 0118 C9FFFF1A 		bne	.L298	@,
1681:fat16.cpp     ****                 fat16_reset_dir(parent);
 4351              		.loc 1 1681 0
 4352 011c 0C009DE5 		ldr	r0, [sp, #12]	@, parent
 4353 0120 FEFFFFEB 		bl	_Z15fat16_reset_dirP16fat16_dir_struct	@
1682:fat16.cpp     ****                 return 1;
 4354              		.loc 1 1682 0
 4355 0124 0130A0E3 		mov	r3, #1	@ D.10799,
 4356 0128 830000EA 		b	.L281	@
 4357              	.L283:
1699:fat16.cpp     ****         {
1700:fat16.cpp     ****             /* we read/write from the root directory entry */
1701:fat16.cpp     ****             offset = fs->header.root_dir_offset;
 4358              		.loc 1 1701 0
 4359 012c 18309DE5 		ldr	r3, [sp, #24]	@ tmp189, fs
 4360 0130 143093E5 		ldr	r3, [r3, #20]	@ tmp190, fs_29->header.root_dir_offset
 4361 0134 24308DE5 		str	r3, [sp, #36]	@ tmp190, offset
1702:fat16.cpp     ****             offset_to = fs->header.cluster_zero_offset;
 4362              		.loc 1 1702 0
 4363 0138 18309DE5 		ldr	r3, [sp, #24]	@ tmp191, fs
 4364 013c 183093E5 		ldr	r3, [r3, #24]	@ tmp192, fs_29->header.cluster_zero_offset
 4365 0140 20308DE5 		str	r3, [sp, #32]	@ tmp192, offset_to
1703:fat16.cpp     ****             dir_entry_offset = offset;
 4366              		.loc 1 1703 0
 4367 0144 24309DE5 		ldr	r3, [sp, #36]	@ tmp193, offset
 4368 0148 28308DE5 		str	r3, [sp, #40]	@ tmp193, dir_entry_offset
 4369              	.L284:
 4370              	.LBB58:
 4371              	.LBB59:
1704:fat16.cpp     ****         }
1705:fat16.cpp     ****     
1706:fat16.cpp     ****         while(1)
1707:fat16.cpp     ****         {
1708:fat16.cpp     ****             if(offset == offset_to)
ARM GAS  /tmp/ccwDRvq0.s 			page 109


 4372              		.loc 1 1708 0
 4373 014c 24209DE5 		ldr	r2, [sp, #36]	@ tmp194, offset
 4374 0150 20309DE5 		ldr	r3, [sp, #32]	@ tmp195, offset_to
 4375 0154 030052E1 		cmp	r2, r3	@ tmp194, tmp195
 4376 0158 3B00001A 		bne	.L286	@,
 4377              	.LBB60:
1709:fat16.cpp     ****             {
1710:fat16.cpp     ****                 if(cluster_num == 0)
 4378              		.loc 1 1710 0
 4379 015c BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp196, cluster_num
 4380 0160 000053E3 		cmp	r3, #0	@ tmp196,
 4381 0164 0100001A 		bne	.L287	@,
1711:fat16.cpp     **** 				/* We iterated through the whole root directory entry
1712:fat16.cpp     ****                 * and could not find enough space for the directory entry.
1713:fat16.cpp     ****                 */
1714:fat16.cpp     ****                 return 0;
 4382              		.loc 1 1714 0
 4383 0168 0030A0E3 		mov	r3, #0	@ D.10799,
 4384 016c 720000EA 		b	.L281	@
 4385              	.L287:
 4386              	.LBB61:
1715:fat16.cpp     ****     
1716:fat16.cpp     ****                 if(offset)
 4387              		.loc 1 1716 0
 4388 0170 24309DE5 		ldr	r3, [sp, #36]	@ tmp197, offset
 4389 0174 000053E3 		cmp	r3, #0	@ tmp197,
 4390 0178 2000000A 		beq	.L288	@,
 4391              	.LBB62:
1717:fat16.cpp     ****                 {
1718:fat16.cpp     ****                     /* We reached a cluster boundary and have to
1719:fat16.cpp     ****                     * switch to the next cluster.
1720:fat16.cpp     ****                     */
1721:fat16.cpp     ****     
1722:fat16.cpp     ****                     uint16_t cluster_next = fat16_get_next_cluster(fs, cluster_num);
 4392              		.loc 1 1722 0
 4393 017c BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp198, cluster_num
 4394 0180 18009DE5 		ldr	r0, [sp, #24]	@, fs
 4395 0184 0310A0E1 		mov	r1, r3	@, tmp198
 4396 0188 FEFFFFEB 		bl	_ZL22fat16_get_next_clusterPK15fat16_fs_structt	@
 4397 018c 0030A0E1 		mov	r3, r0	@ tmp199,
 4398 0190 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp199, cluster_next
1723:fat16.cpp     ****                     if(!cluster_next)
 4399              		.loc 1 1723 0
 4400 0194 B631DDE1 		ldrh	r3, [sp, #22]	@ tmp200, cluster_next
 4401 0198 000053E3 		cmp	r3, #0	@ tmp200,
 4402 019c 1500001A 		bne	.L289	@,
1724:fat16.cpp     ****                     {
1725:fat16.cpp     ****                         cluster_next = fat16_append_clusters(fs, cluster_num, 1);
 4403              		.loc 1 1725 0
 4404 01a0 BC32DDE1 		ldrh	r3, [sp, #44]	@ tmp201, cluster_num
 4405 01a4 18009DE5 		ldr	r0, [sp, #24]	@, fs
 4406 01a8 0310A0E1 		mov	r1, r3	@, tmp201
 4407 01ac 0120A0E3 		mov	r2, #1	@,
 4408 01b0 FEFFFFEB 		bl	_ZL21fat16_append_clustersPK15fat16_fs_structtt	@
 4409 01b4 0030A0E1 		mov	r3, r0	@ tmp202,
 4410 01b8 B631CDE1 		strh	r3, [sp, #22]	@ movhi	@ tmp202, cluster_next
1726:fat16.cpp     ****                         if(!cluster_next)
ARM GAS  /tmp/ccwDRvq0.s 			page 110


 4411              		.loc 1 1726 0
 4412 01bc B631DDE1 		ldrh	r3, [sp, #22]	@ tmp203, cluster_next
 4413 01c0 000053E3 		cmp	r3, #0	@ tmp203,
 4414 01c4 0100001A 		bne	.L290	@,
1727:fat16.cpp     ****                             return 0;
 4415              		.loc 1 1727 0
 4416 01c8 0030A0E3 		mov	r3, #0	@ D.10799,
 4417 01cc 5A0000EA 		b	.L281	@
 4418              	.L290:
1728:fat16.cpp     ****     
1729:fat16.cpp     ****                         /* we appended a new cluster and know it is free */
1730:fat16.cpp     ****                         dir_entry_offset = fs->header.cluster_zero_offset +
1731:fat16.cpp     ****                         (uint32_t) (cluster_next - 2) * fs->header.cluster_size;
 4419              		.loc 1 1731 0
 4420 01d0 18309DE5 		ldr	r3, [sp, #24]	@ tmp204, fs
 4421 01d4 182093E5 		ldr	r2, [r3, #24]	@ D.10831, fs_29->header.cluster_zero_offset
 4422 01d8 B631DDE1 		ldrh	r3, [sp, #22]	@ D.10832, cluster_next
 4423 01dc 023043E2 		sub	r3, r3, #2	@ D.10833, D.10832,
 4424 01e0 18109DE5 		ldr	r1, [sp, #24]	@ tmp205, fs
 4425 01e4 B211D1E1 		ldrh	r1, [r1, #18]	@ D.10835, fs_29->header.cluster_size
 4426 01e8 910303E0 		mul	r3, r1, r3	@ D.10837, D.10836, D.10834
 4427 01ec 033082E0 		add	r3, r2, r3	@ tmp206, D.10831, D.10837
 4428 01f0 28308DE5 		str	r3, [sp, #40]	@ tmp206, dir_entry_offset
1732:fat16.cpp     ****     
1733:fat16.cpp     ****                         /* TODO: This cluster has to be zeroed in an efficient way, or at least
1734:fat16.cpp     ****                         *       every 32th byte should be set to FAT16_DIRENTRY_DELETED.
1735:fat16.cpp     ****                         */
1736:fat16.cpp     ****                         break;
 4429              		.loc 1 1736 0
 4430 01f4 400000EA 		b	.L291	@
 4431              	.L289:
1737:fat16.cpp     ****                     }
1738:fat16.cpp     ****                     cluster_num = cluster_next;
 4432              		.loc 1 1738 0
 4433 01f8 B631DDE1 		ldrh	r3, [sp, #22]	@ movhi	@ tmp207, cluster_next
 4434 01fc BC32CDE1 		strh	r3, [sp, #44]	@ movhi	@ tmp207, cluster_num
 4435              	.L288:
 4436              	.LBE62:
 4437              	.LBE61:
1739:fat16.cpp     ****                 }
1740:fat16.cpp     ****     
1741:fat16.cpp     ****                 offset = fs->header.cluster_zero_offset +
1742:fat16.cpp     ****                 (uint32_t) (cluster_num - 2) * fs->header.cluster_size;
 4438              		.loc 1 1742 0
 4439 0200 18309DE5 		ldr	r3, [sp, #24]	@ tmp208, fs
 4440 0204 182093E5 		ldr	r2, [r3, #24]	@ D.10839, fs_29->header.cluster_zero_offset
 4441 0208 BC32DDE1 		ldrh	r3, [sp, #44]	@ D.10840, cluster_num
 4442 020c 023043E2 		sub	r3, r3, #2	@ D.10841, D.10840,
 4443 0210 18109DE5 		ldr	r1, [sp, #24]	@ tmp209, fs
 4444 0214 B211D1E1 		ldrh	r1, [r1, #18]	@ D.10843, fs_29->header.cluster_size
 4445 0218 910303E0 		mul	r3, r1, r3	@ D.10845, D.10844, D.10842
 4446 021c 033082E0 		add	r3, r2, r3	@ tmp210, D.10839, D.10845
 4447 0220 24308DE5 		str	r3, [sp, #36]	@ tmp210, offset
1743:fat16.cpp     ****                 offset_to = offset + fs->header.cluster_size;
 4448              		.loc 1 1743 0
 4449 0224 18309DE5 		ldr	r3, [sp, #24]	@ tmp211, fs
 4450 0228 B231D3E1 		ldrh	r3, [r3, #18]	@ D.10846, fs_29->header.cluster_size
ARM GAS  /tmp/ccwDRvq0.s 			page 111


 4451 022c 0320A0E1 		mov	r2, r3	@ D.10847, D.10846
 4452 0230 24309DE5 		ldr	r3, [sp, #36]	@ tmp212, offset
 4453 0234 033082E0 		add	r3, r2, r3	@ tmp213, D.10847, tmp212
 4454 0238 20308DE5 		str	r3, [sp, #32]	@ tmp213, offset_to
1744:fat16.cpp     ****                 dir_entry_offset = offset;
 4455              		.loc 1 1744 0
 4456 023c 24309DE5 		ldr	r3, [sp, #36]	@ tmp214, offset
 4457 0240 28308DE5 		str	r3, [sp, #40]	@ tmp214, dir_entry_offset
1745:fat16.cpp     ****                 free_dir_entries_found = 0;
 4458              		.loc 1 1745 0
 4459 0244 0030A0E3 		mov	r3, #0	@ tmp215,
 4460 0248 2F30CDE5 		strb	r3, [sp, #47]	@ tmp216, free_dir_entries_found
 4461              	.L286:
 4462              	.LBE60:
 4463              	.LBE59:
1746:fat16.cpp     ****             }
1747:fat16.cpp     ****     
1748:fat16.cpp     ****             /* read next lfn or 8.3 entry */
1749:fat16.cpp     ****             uint8_t first_char;
1750:fat16.cpp     ****             if(!fs->partition->device_read(offset, &first_char, sizeof(first_char)))
 4464              		.loc 1 1750 0
 4465 024c 18309DE5 		ldr	r3, [sp, #24]	@ tmp217, fs
 4466 0250 003093E5 		ldr	r3, [r3, #0]	@ D.10850, fs_29->partition
 4467 0254 003093E5 		ldr	r3, [r3, #0]	@ D.10851, D.10850_63->device_read
 4468 0258 15208DE2 		add	r2, sp, #21	@ tmp218,,
 4469 025c 24009DE5 		ldr	r0, [sp, #36]	@, offset
 4470 0260 0210A0E1 		mov	r1, r2	@, tmp218
 4471 0264 0120A0E3 		mov	r2, #1	@,
 4472 0268 0FE0A0E1 		mov	lr, pc
 4473 026c 13FF2FE1 		bx	r3	@ D.10851
 4474 0270 0030A0E1 		mov	r3, r0	@ tmp219,
 4475 0274 000053E3 		cmp	r3, #0	@ D.10852,
 4476 0278 0030A013 		movne	r3, #0	@, tmp221
 4477 027c 0130A003 		moveq	r3, #1	@, tmp221
 4478 0280 FF3003E2 		and	r3, r3, #255	@ retval.6, tmp220,
 4479 0284 000053E3 		cmp	r3, #0	@ retval.6,
 4480 0288 0100000A 		beq	.L292	@,
1751:fat16.cpp     ****                 return 0;
 4481              		.loc 1 1751 0
 4482 028c 0030A0E3 		mov	r3, #0	@ D.10799,
 4483 0290 290000EA 		b	.L281	@
 4484              	.L292:
1752:fat16.cpp     ****     
1753:fat16.cpp     ****             /* check if we found a free directory entry */
1754:fat16.cpp     ****             if(first_char == FAT16_DIRENTRY_DELETED || !first_char)
 4485              		.loc 1 1754 0
 4486 0294 1530DDE5 		ldrb	r3, [sp, #21]	@ zero_extendqisi2	@ first_char.7, first_char
 4487 0298 E50053E3 		cmp	r3, #229	@ first_char.7,
 4488 029c 0200000A 		beq	.L293	@,
 4489              		.loc 1 1754 0 is_stmt 0 discriminator 1
 4490 02a0 1530DDE5 		ldrb	r3, [sp, #21]	@ zero_extendqisi2	@ first_char.8, first_char
 4491 02a4 000053E3 		cmp	r3, #0	@ first_char.8,
 4492 02a8 0A00001A 		bne	.L294	@,
 4493              	.L293:
1755:fat16.cpp     ****             {
1756:fat16.cpp     ****                 /* check if we have the needed number of available entries */
1757:fat16.cpp     ****                 ++free_dir_entries_found;
ARM GAS  /tmp/ccwDRvq0.s 			page 112


 4494              		.loc 1 1757 0 is_stmt 1
 4495 02ac 2F30DDE5 		ldrb	r3, [sp, #47]	@ tmp222, free_dir_entries_found
 4496 02b0 013083E2 		add	r3, r3, #1	@ tmp223, tmp222,
 4497 02b4 2F30CDE5 		strb	r3, [sp, #47]	@ tmp224, free_dir_entries_found
1758:fat16.cpp     ****                 if(free_dir_entries_found >= free_dir_entries_needed)
 4498              		.loc 1 1758 0
 4499 02b8 2F20DDE5 		ldrb	r2, [sp, #47]	@ zero_extendqisi2	@ tmp225, free_dir_entries_found
 4500 02bc 1F30DDE5 		ldrb	r3, [sp, #31]	@ zero_extendqisi2	@ tmp226, free_dir_entries_needed
 4501 02c0 030052E1 		cmp	r2, r3	@ tmp225, tmp226
 4502 02c4 0B00002A 		bcs	.L299	@,
 4503              	.L295:
1759:fat16.cpp     ****                     break;
1760:fat16.cpp     ****     
1761:fat16.cpp     ****                 offset += 32;
 4504              		.loc 1 1761 0
 4505 02c8 24309DE5 		ldr	r3, [sp, #36]	@ tmp227, offset
 4506 02cc 203083E2 		add	r3, r3, #32	@ tmp228, tmp227,
 4507 02d0 24308DE5 		str	r3, [sp, #36]	@ tmp228, offset
 4508              	.LBE58:
1706:fat16.cpp     ****         while(1)
 4509              		.loc 1 1706 0
 4510 02d4 9CFFFFEA 		b	.L284	@
 4511              	.L294:
 4512              	.LBB63:
1762:fat16.cpp     ****             }
1763:fat16.cpp     ****             else
1764:fat16.cpp     ****             {
1765:fat16.cpp     ****                 offset += 32;
 4513              		.loc 1 1765 0
 4514 02d8 24309DE5 		ldr	r3, [sp, #36]	@ tmp229, offset
 4515 02dc 203083E2 		add	r3, r3, #32	@ tmp230, tmp229,
 4516 02e0 24308DE5 		str	r3, [sp, #36]	@ tmp230, offset
1766:fat16.cpp     ****                 dir_entry_offset = offset;
 4517              		.loc 1 1766 0
 4518 02e4 24309DE5 		ldr	r3, [sp, #36]	@ tmp231, offset
 4519 02e8 28308DE5 		str	r3, [sp, #40]	@ tmp231, dir_entry_offset
1767:fat16.cpp     ****                 free_dir_entries_found = 0;
 4520              		.loc 1 1767 0
 4521 02ec 0030A0E3 		mov	r3, #0	@ tmp232,
 4522 02f0 2F30CDE5 		strb	r3, [sp, #47]	@ tmp233, free_dir_entries_found
 4523              	.LBE63:
1706:fat16.cpp     ****         while(1)
 4524              		.loc 1 1706 0
 4525 02f4 94FFFFEA 		b	.L284	@
 4526              	.L299:
 4527              	.LBB64:
1759:fat16.cpp     ****                     break;
 4528              		.loc 1 1759 0
 4529 02f8 0000A0E1 		mov	r0, r0	@ nop
 4530              	.L291:
 4531              	.LBE64:
1768:fat16.cpp     ****             }
1769:fat16.cpp     ****         }
1770:fat16.cpp     **** 
1771:fat16.cpp     ****         /* write directory entry to disk */
1772:fat16.cpp     ****         dir_entry->entry_offset = dir_entry_offset;
 4532              		.loc 1 1772 0
ARM GAS  /tmp/ccwDRvq0.s 			page 113


 4533 02fc 04309DE5 		ldr	r3, [sp, #4]	@ tmp234, dir_entry
 4534 0300 28209DE5 		ldr	r2, [sp, #40]	@ tmp235, dir_entry_offset
 4535 0304 282083E5 		str	r2, [r3, #40]	@ tmp235, dir_entry_20(D)->entry_offset
1773:fat16.cpp     ****         if(!fat16_write_dir_entry(fs, dir_entry))
 4536              		.loc 1 1773 0
 4537 0308 18009DE5 		ldr	r0, [sp, #24]	@, fs
 4538 030c 04109DE5 		ldr	r1, [sp, #4]	@, dir_entry
 4539 0310 FEFFFFEB 		bl	_ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct	@
 4540 0314 0030A0E1 		mov	r3, r0	@ tmp236,
 4541 0318 000053E3 		cmp	r3, #0	@ D.10864,
 4542 031c 0030A013 		movne	r3, #0	@, tmp238
 4543 0320 0130A003 		moveq	r3, #1	@, tmp238
 4544 0324 FF3003E2 		and	r3, r3, #255	@ retval.9, tmp237,
 4545 0328 000053E3 		cmp	r3, #0	@ retval.9,
 4546 032c 0100000A 		beq	.L297	@,
1774:fat16.cpp     ****             return 0;
 4547              		.loc 1 1774 0
 4548 0330 0030A0E3 		mov	r3, #0	@ D.10799,
 4549 0334 000000EA 		b	.L281	@
 4550              	.L297:
1775:fat16.cpp     ****     
1776:fat16.cpp     ****         return 1;
 4551              		.loc 1 1776 0
 4552 0338 0130A0E3 		mov	r3, #1	@ D.10799,
 4553              	.L281:
 4554              	.LBE57:
1777:fat16.cpp     ****     
1778:fat16.cpp     ****     #else
1779:fat16.cpp     ****         return 0;
1780:fat16.cpp     ****     #endif
1781:fat16.cpp     **** }
 4555              		.loc 1 1781 0
 4556 033c 0300A0E1 		mov	r0, r3	@, <retval>
 4557 0340 34D08DE2 		add	sp, sp, #52	@,,
 4558 0344 04E09DE4 		ldr	lr, [sp], #4
 4559 0348 1EFF2FE1 		bx	lr
 4560              	.L301:
 4561              		.align	2
 4562              	.L300:
 4563 034c 4FECC44E 		.word	1321528399
 4564              		.cfi_endproc
 4565              	.LFE134:
 4566              		.size	_Z17fat16_create_fileP16fat16_dir_structPKcP22fat16_dir_entry_struct, .-_Z17fat16_create_fil
 4567              		.section	.text._Z17fat16_delete_fileP15fat16_fs_structP22fat16_dir_entry_struct,"ax",%progbits
 4568              		.align	2
 4569              		.global	_Z17fat16_delete_fileP15fat16_fs_structP22fat16_dir_entry_struct
 4570              		.type	_Z17fat16_delete_fileP15fat16_fs_structP22fat16_dir_entry_struct, %function
 4571              	_Z17fat16_delete_fileP15fat16_fs_structP22fat16_dir_entry_struct:
 4572              	.LFB135:
1782:fat16.cpp     **** 
1783:fat16.cpp     **** /**
1784:fat16.cpp     ****  * \ingroup fat16_file
1785:fat16.cpp     ****  * Deletes a file or directory.
1786:fat16.cpp     ****  *
1787:fat16.cpp     ****  * It is not checked if the file to delete is a directory.
1788:fat16.cpp     ****  * If a directory is deleted without first deleting its
1789:fat16.cpp     ****  * subdirectories and files, disk space occupied by these
ARM GAS  /tmp/ccwDRvq0.s 			page 114


1790:fat16.cpp     ****  * files will get wasted as there is no chance to release
1791:fat16.cpp     ****  * it and mark it as free.
1792:fat16.cpp     ****  *
1793:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
1794:fat16.cpp     ****  * \param[in] dir_entry The directory entry of the file to delete.
1795:fat16.cpp     ****  * \returns 0 on failure, 1 on success.
1796:fat16.cpp     ****  * \see fat16_create_file
1797:fat16.cpp     ****  */
1798:fat16.cpp     **** uint8_t fat16_delete_file(struct fat16_fs_struct* fs, struct fat16_dir_entry_struct* dir_entry)
1799:fat16.cpp     **** {
 4573              		.loc 1 1799 0
 4574              		.cfi_startproc
 4575              		@ Function supports interworking.
 4576              		@ args = 0, pretend = 0, frame = 24
 4577              		@ frame_needed = 0, uses_anonymous_args = 0
 4578 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 4579              	.LCFI48:
 4580              		.cfi_def_cfa_offset 4
 4581 0004 1CD04DE2 		sub	sp, sp, #28	@,,
 4582              	.LCFI49:
 4583              		.cfi_def_cfa_offset 32
 4584 0008 04008DE5 		str	r0, [sp, #4]	@ fs, fs
 4585 000c 00108DE5 		str	r1, [sp, #0]	@ dir_entry, dir_entry
 4586              	.LBB65:
1800:fat16.cpp     ****     #if FAT16_WRITE_SUPPORT
1801:fat16.cpp     ****         if(!fs || !dir_entry)
 4587              		.loc 1 1801 0
 4588 0010 04309DE5 		ldr	r3, [sp, #4]	@ tmp145, fs
 4589 0014 000053E3 		cmp	r3, #0	@ tmp145,
 4590 0018 0200000A 		beq	.L303	@,
 4591              		.cfi_offset 14, -4
 4592              		.loc 1 1801 0 is_stmt 0 discriminator 1
 4593 001c 00309DE5 		ldr	r3, [sp, #0]	@ tmp146, dir_entry
 4594 0020 000053E3 		cmp	r3, #0	@ tmp146,
 4595 0024 0100001A 		bne	.L304	@,
 4596              	.L303:
1802:fat16.cpp     ****             return 0;
 4597              		.loc 1 1802 0 is_stmt 1
 4598 0028 0030A0E3 		mov	r3, #0	@ D.10771,
 4599 002c 3B0000EA 		b	.L305	@
 4600              	.L304:
1803:fat16.cpp     ****     
1804:fat16.cpp     ****         /* get offset of the file's directory entry */
1805:fat16.cpp     ****         uint32_t dir_entry_offset = dir_entry->entry_offset;
 4601              		.loc 1 1805 0
 4602 0030 00309DE5 		ldr	r3, [sp, #0]	@ tmp147, dir_entry
 4603 0034 283093E5 		ldr	r3, [r3, #40]	@ tmp148, dir_entry_4(D)->entry_offset
 4604 0038 14308DE5 		str	r3, [sp, #20]	@ tmp148, dir_entry_offset
1806:fat16.cpp     ****         if(!dir_entry_offset)
 4605              		.loc 1 1806 0
 4606 003c 14309DE5 		ldr	r3, [sp, #20]	@ tmp149, dir_entry_offset
 4607 0040 000053E3 		cmp	r3, #0	@ tmp149,
 4608 0044 0100001A 		bne	.L306	@,
1807:fat16.cpp     ****             return 0;
 4609              		.loc 1 1807 0
 4610 0048 0030A0E3 		mov	r3, #0	@ D.10771,
 4611 004c 330000EA 		b	.L305	@
ARM GAS  /tmp/ccwDRvq0.s 			page 115


 4612              	.L306:
1808:fat16.cpp     ****     
1809:fat16.cpp     ****         uint8_t buffer[12];
1810:fat16.cpp     ****         while(1)
1811:fat16.cpp     ****         {
1812:fat16.cpp     ****             /* read directory entry */
1813:fat16.cpp     ****             if(!fs->partition->device_read(dir_entry_offset, buffer, sizeof(buffer)))
 4613              		.loc 1 1813 0
 4614 0050 04309DE5 		ldr	r3, [sp, #4]	@ tmp150, fs
 4615 0054 003093E5 		ldr	r3, [r3, #0]	@ D.10778, fs_3(D)->partition
 4616 0058 003093E5 		ldr	r3, [r3, #0]	@ D.10779, D.10778_7->device_read
 4617 005c 08208DE2 		add	r2, sp, #8	@ tmp151,,
 4618 0060 14009DE5 		ldr	r0, [sp, #20]	@, dir_entry_offset
 4619 0064 0210A0E1 		mov	r1, r2	@, tmp151
 4620 0068 0C20A0E3 		mov	r2, #12	@,
 4621 006c 0FE0A0E1 		mov	lr, pc
 4622 0070 13FF2FE1 		bx	r3	@ D.10779
 4623 0074 0030A0E1 		mov	r3, r0	@ tmp152,
 4624 0078 000053E3 		cmp	r3, #0	@ D.10780,
 4625 007c 0030A013 		movne	r3, #0	@, tmp154
 4626 0080 0130A003 		moveq	r3, #1	@, tmp154
 4627 0084 FF3003E2 		and	r3, r3, #255	@ retval.3, tmp153,
 4628 0088 000053E3 		cmp	r3, #0	@ retval.3,
 4629 008c 0100000A 		beq	.L307	@,
1814:fat16.cpp     ****                 return 0;
 4630              		.loc 1 1814 0
 4631 0090 0030A0E3 		mov	r3, #0	@ D.10771,
 4632 0094 210000EA 		b	.L305	@
 4633              	.L307:
1815:fat16.cpp     ****     
1816:fat16.cpp     ****             /* mark the directory entry as deleted */
1817:fat16.cpp     ****             buffer[0] = FAT16_DIRENTRY_DELETED;
 4634              		.loc 1 1817 0
 4635 0098 1A30E0E3 		mvn	r3, #26	@ tmp155,
 4636 009c 0830CDE5 		strb	r3, [sp, #8]	@ tmp156, buffer
1818:fat16.cpp     ****     
1819:fat16.cpp     ****             /* write back entry */
1820:fat16.cpp     ****             if(!fs->partition->device_write(dir_entry_offset, buffer, sizeof(buffer)))
 4637              		.loc 1 1820 0
 4638 00a0 04309DE5 		ldr	r3, [sp, #4]	@ tmp157, fs
 4639 00a4 003093E5 		ldr	r3, [r3, #0]	@ D.10784, fs_3(D)->partition
 4640 00a8 083093E5 		ldr	r3, [r3, #8]	@ D.10785, D.10784_12->device_write
 4641 00ac 08208DE2 		add	r2, sp, #8	@ tmp158,,
 4642 00b0 14009DE5 		ldr	r0, [sp, #20]	@, dir_entry_offset
 4643 00b4 0210A0E1 		mov	r1, r2	@, tmp158
 4644 00b8 0C20A0E3 		mov	r2, #12	@,
 4645 00bc 0FE0A0E1 		mov	lr, pc
 4646 00c0 13FF2FE1 		bx	r3	@ D.10785
 4647 00c4 0030A0E1 		mov	r3, r0	@ tmp159,
 4648 00c8 000053E3 		cmp	r3, #0	@ D.10786,
 4649 00cc 0030A013 		movne	r3, #0	@, tmp161
 4650 00d0 0130A003 		moveq	r3, #1	@, tmp161
 4651 00d4 FF3003E2 		and	r3, r3, #255	@ retval.4, tmp160,
 4652 00d8 000053E3 		cmp	r3, #0	@ retval.4,
 4653 00dc 0100000A 		beq	.L308	@,
1821:fat16.cpp     ****                 return 0;
 4654              		.loc 1 1821 0
ARM GAS  /tmp/ccwDRvq0.s 			page 116


 4655 00e0 0030A0E3 		mov	r3, #0	@ D.10771,
 4656 00e4 0D0000EA 		b	.L305	@
 4657              	.L308:
1822:fat16.cpp     ****     
1823:fat16.cpp     ****             /* check if we deleted the whole entry */
1824:fat16.cpp     ****             if(buffer[11] != 0x0f)
 4658              		.loc 1 1824 0
 4659 00e8 1330DDE5 		ldrb	r3, [sp, #19]	@ zero_extendqisi2	@ D.10789, buffer
 4660 00ec 0F0053E3 		cmp	r3, #15	@ D.10789,
 4661 00f0 0600000A 		beq	.L309	@,
1825:fat16.cpp     ****                 break;
1826:fat16.cpp     ****     
1827:fat16.cpp     ****             dir_entry_offset += 32;
1828:fat16.cpp     ****         }
1829:fat16.cpp     ****     
1830:fat16.cpp     ****         /* We deleted the directory entry. The next thing to do is
1831:fat16.cpp     ****                              * marking all occupied clusters as free.
1832:fat16.cpp     ****                              */
1833:fat16.cpp     ****         return fat16_free_clusters(fs, dir_entry->cluster);
 4662              		.loc 1 1833 0
 4663 00f4 00309DE5 		ldr	r3, [sp, #0]	@ tmp162, dir_entry
 4664 00f8 B232D3E1 		ldrh	r3, [r3, #34]	@ D.10792, dir_entry_4(D)->cluster
 4665 00fc 04009DE5 		ldr	r0, [sp, #4]	@, fs
 4666 0100 0310A0E1 		mov	r1, r3	@, D.10792
 4667 0104 FEFFFFEB 		bl	_ZL19fat16_free_clustersPK15fat16_fs_structt	@
 4668 0108 0030A0E1 		mov	r3, r0	@ tmp163,
 4669 010c 030000EA 		b	.L305	@
 4670              	.L309:
1827:fat16.cpp     ****             dir_entry_offset += 32;
 4671              		.loc 1 1827 0
 4672 0110 14309DE5 		ldr	r3, [sp, #20]	@ tmp164, dir_entry_offset
 4673 0114 203083E2 		add	r3, r3, #32	@ tmp165, tmp164,
 4674 0118 14308DE5 		str	r3, [sp, #20]	@ tmp165, dir_entry_offset
1810:fat16.cpp     ****         while(1)
 4675              		.loc 1 1810 0
 4676 011c CBFFFFEA 		b	.L306	@
 4677              	.L305:
 4678              	.LBE65:
1834:fat16.cpp     ****     #else
1835:fat16.cpp     ****         return 0;
1836:fat16.cpp     ****     #endif
1837:fat16.cpp     **** }
 4679              		.loc 1 1837 0
 4680 0120 0300A0E1 		mov	r0, r3	@, <retval>
 4681 0124 1CD08DE2 		add	sp, sp, #28	@,,
 4682 0128 04E09DE4 		ldr	lr, [sp], #4
 4683 012c 1EFF2FE1 		bx	lr
 4684              		.cfi_endproc
 4685              	.LFE135:
 4686              		.size	_Z17fat16_delete_fileP15fat16_fs_structP22fat16_dir_entry_struct, .-_Z17fat16_delete_fileP15
 4687              		.section	.text._Z17fat16_get_fs_sizePK15fat16_fs_struct,"ax",%progbits
 4688              		.align	2
 4689              		.global	_Z17fat16_get_fs_sizePK15fat16_fs_struct
 4690              		.type	_Z17fat16_get_fs_sizePK15fat16_fs_struct, %function
 4691              	_Z17fat16_get_fs_sizePK15fat16_fs_struct:
 4692              	.LFB136:
1838:fat16.cpp     **** 
ARM GAS  /tmp/ccwDRvq0.s 			page 117


1839:fat16.cpp     **** /**
1840:fat16.cpp     ****  * \ingroup fat16_fs
1841:fat16.cpp     ****  * Returns the amount of total storage capacity of the filesystem in bytes.
1842:fat16.cpp     ****  *
1843:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
1844:fat16.cpp     ****  * \returns 0 on failure, the filesystem size in bytes otherwise.
1845:fat16.cpp     ****  */
1846:fat16.cpp     **** uint32_t fat16_get_fs_size(const struct fat16_fs_struct* fs)
1847:fat16.cpp     **** {
 4693              		.loc 1 1847 0
 4694              		.cfi_startproc
 4695              		@ Function supports interworking.
 4696              		@ args = 0, pretend = 0, frame = 8
 4697              		@ frame_needed = 0, uses_anonymous_args = 0
 4698              		@ link register save eliminated.
 4699 0000 08D04DE2 		sub	sp, sp, #8	@,,
 4700              	.LCFI50:
 4701              		.cfi_def_cfa_offset 8
 4702 0004 04008DE5 		str	r0, [sp, #4]	@ fs, fs
1848:fat16.cpp     ****     if(!fs)
 4703              		.loc 1 1848 0
 4704 0008 04309DE5 		ldr	r3, [sp, #4]	@ tmp140, fs
 4705 000c 000053E3 		cmp	r3, #0	@ tmp140,
 4706 0010 0100001A 		bne	.L311	@,
1849:fat16.cpp     ****         return 0;
 4707              		.loc 1 1849 0
 4708 0014 0030A0E3 		mov	r3, #0	@ D.10761,
 4709 0018 060000EA 		b	.L312	@
 4710              	.L311:
1850:fat16.cpp     **** 
1851:fat16.cpp     ****     return (fs->header.fat_size / 2 - 2) * fs->header.cluster_size;
 4711              		.loc 1 1851 0
 4712 001c 04309DE5 		ldr	r3, [sp, #4]	@ tmp141, fs
 4713 0020 0C3093E5 		ldr	r3, [r3, #12]	@ D.10762, fs_2(D)->header.fat_size
 4714 0024 A330A0E1 		mov	r3, r3, lsr #1	@ D.10763, D.10762,
 4715 0028 023043E2 		sub	r3, r3, #2	@ D.10764, D.10763,
 4716 002c 04209DE5 		ldr	r2, [sp, #4]	@ tmp142, fs
 4717 0030 B221D2E1 		ldrh	r2, [r2, #18]	@ D.10765, fs_2(D)->header.cluster_size
 4718 0034 920303E0 		mul	r3, r2, r3	@ D.10761, D.10766, D.10764
 4719              	.L312:
1852:fat16.cpp     **** }
 4720              		.loc 1 1852 0
 4721 0038 0300A0E1 		mov	r0, r3	@, <retval>
 4722 003c 08D08DE2 		add	sp, sp, #8	@,,
 4723 0040 1EFF2FE1 		bx	lr
 4724              		.cfi_endproc
 4725              	.LFE136:
 4726              		.size	_Z17fat16_get_fs_sizePK15fat16_fs_struct, .-_Z17fat16_get_fs_sizePK15fat16_fs_struct
 4727              		.section	.text._Z17fat16_get_fs_freePK15fat16_fs_struct,"ax",%progbits
 4728              		.align	2
 4729              		.global	_Z17fat16_get_fs_freePK15fat16_fs_struct
 4730              		.type	_Z17fat16_get_fs_freePK15fat16_fs_struct, %function
 4731              	_Z17fat16_get_fs_freePK15fat16_fs_struct:
 4732              	.LFB137:
1853:fat16.cpp     **** 
1854:fat16.cpp     **** /**
1855:fat16.cpp     ****  * \ingroup fat16_fs
ARM GAS  /tmp/ccwDRvq0.s 			page 118


1856:fat16.cpp     ****  * Returns the amount of free storage capacity on the filesystem in bytes.
1857:fat16.cpp     ****  *
1858:fat16.cpp     ****  * \note As the FAT16 filesystem is cluster based, this function does not
1859:fat16.cpp     ****  *       return continuous values but multiples of the cluster size.
1860:fat16.cpp     ****  *
1861:fat16.cpp     ****  * \param[in] fs The filesystem on which to operate.
1862:fat16.cpp     ****  * \returns 0 on failure, the free filesystem space in bytes otherwise.
1863:fat16.cpp     ****  */
1864:fat16.cpp     **** uint32_t fat16_get_fs_free(const struct fat16_fs_struct* fs)
1865:fat16.cpp     **** {
 4733              		.loc 1 1865 0
 4734              		.cfi_startproc
 4735              		@ Function supports interworking.
 4736              		@ args = 0, pretend = 0, frame = 56
 4737              		@ frame_needed = 0, uses_anonymous_args = 0
 4738 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 4739              	.LCFI51:
 4740              		.cfi_def_cfa_offset 4
 4741 0004 44D04DE2 		sub	sp, sp, #68	@,,
 4742              	.LCFI52:
 4743              		.cfi_def_cfa_offset 72
 4744 0008 0C008DE5 		str	r0, [sp, #12]	@ fs, fs
 4745              	.LBB66:
1866:fat16.cpp     ****     if(!fs)
 4746              		.loc 1 1866 0
 4747 000c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp147, fs
 4748 0010 000053E3 		cmp	r3, #0	@ tmp147,
 4749 0014 0100001A 		bne	.L314	@,
 4750              		.cfi_offset 14, -4
1867:fat16.cpp     ****         return 0;
 4751              		.loc 1 1867 0
 4752 0018 0030A0E3 		mov	r3, #0	@ D.10737,
 4753 001c 3C0000EA 		b	.L315	@
 4754              	.L314:
1868:fat16.cpp     **** 
1869:fat16.cpp     ****     uint8_t fat[32];
1870:fat16.cpp     ****     struct fat16_usage_count_callback_arg count_arg;
1871:fat16.cpp     ****     count_arg.cluster_count = 0;
 4755              		.loc 1 1871 0
 4756 0020 0030A0E3 		mov	r3, #0	@ tmp149,
 4757 0024 B033CDE1 		strh	r3, [sp, #48]	@ movhi	@ tmp148, count_arg.cluster_count
1872:fat16.cpp     ****     count_arg.buffer_size = sizeof(fat);
 4758              		.loc 1 1872 0
 4759 0028 2030A0E3 		mov	r3, #32	@ tmp150,
 4760 002c 3230CDE5 		strb	r3, [sp, #50]	@ tmp151, count_arg.buffer_size
1873:fat16.cpp     **** 
1874:fat16.cpp     ****     uint32_t fat_offset = fs->header.fat_offset;
 4761              		.loc 1 1874 0
 4762 0030 0C309DE5 		ldr	r3, [sp, #12]	@ tmp152, fs
 4763 0034 083093E5 		ldr	r3, [r3, #8]	@ tmp153, fs_5(D)->header.fat_offset
 4764 0038 3C308DE5 		str	r3, [sp, #60]	@ tmp153, fat_offset
1875:fat16.cpp     ****     uint32_t fat_size = fs->header.fat_size;
 4765              		.loc 1 1875 0
 4766 003c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp154, fs
 4767 0040 0C3093E5 		ldr	r3, [r3, #12]	@ tmp155, fs_5(D)->header.fat_size
 4768 0044 38308DE5 		str	r3, [sp, #56]	@ tmp155, fat_size
1876:fat16.cpp     ****     while(fat_size > 0)
ARM GAS  /tmp/ccwDRvq0.s 			page 119


 4769              		.loc 1 1876 0
 4770 0048 260000EA 		b	.L316	@
 4771              	.L319:
 4772              	.LBB67:
1877:fat16.cpp     ****     {
1878:fat16.cpp     ****         uint16_t length = UINT16_MAX - 1;
 4773              		.loc 1 1878 0
 4774 004c 0130E0E3 		mvn	r3, #1	@ tmp157,
 4775 0050 B633CDE1 		strh	r3, [sp, #54]	@ movhi	@ tmp156, length
1879:fat16.cpp     ****         if(fat_size < length)
 4776              		.loc 1 1879 0
 4777 0054 B623DDE1 		ldrh	r2, [sp, #54]	@ D.10742, length
 4778 0058 38309DE5 		ldr	r3, [sp, #56]	@ tmp158, fat_size
 4779 005c 030052E1 		cmp	r2, r3	@ D.10742, tmp158
 4780 0060 0100009A 		bls	.L317	@,
1880:fat16.cpp     ****             length = fat_size;
 4781              		.loc 1 1880 0
 4782 0064 38309DE5 		ldr	r3, [sp, #56]	@ tmp159, fat_size
 4783 0068 B633CDE1 		strh	r3, [sp, #54]	@ movhi	@ tmp159, length
 4784              	.L317:
1881:fat16.cpp     **** 
1882:fat16.cpp     ****         if(!fs->partition->device_read_interval(fat_offset,
1883:fat16.cpp     ****             fat,
1884:fat16.cpp     ****            sizeof(fat),
1885:fat16.cpp     ****            length,
1886:fat16.cpp     ****            fat16_get_fs_free_callback,
1887:fat16.cpp     ****            &count_arg
1888:fat16.cpp     ****            )
 4785              		.loc 1 1888 0
 4786 006c 0C309DE5 		ldr	r3, [sp, #12]	@ tmp160, fs
 4787 0070 003093E5 		ldr	r3, [r3, #0]	@ D.10747, fs_5(D)->partition
 4788 0074 04C093E5 		ldr	ip, [r3, #4]	@ D.10748, D.10747_13->device_read_interval
 4789 0078 10208DE2 		add	r2, sp, #16	@ tmp161,,
 4790 007c B633DDE1 		ldrh	r3, [sp, #54]	@ tmp162, length
 4791 0080 9C109FE5 		ldr	r1, .L320	@ tmp163,
 4792 0084 00108DE5 		str	r1, [sp, #0]	@ tmp163,
 4793 0088 30108DE2 		add	r1, sp, #48	@ tmp164,,
 4794 008c 04108DE5 		str	r1, [sp, #4]	@ tmp164,
 4795 0090 3C009DE5 		ldr	r0, [sp, #60]	@, fat_offset
 4796 0094 0210A0E1 		mov	r1, r2	@, tmp161
 4797 0098 2020A0E3 		mov	r2, #32	@,
 4798 009c 0FE0A0E1 		mov	lr, pc
 4799 00a0 1CFF2FE1 		bx	ip	@ D.10748
 4800 00a4 0030A0E1 		mov	r3, r0	@ tmp165,
1882:fat16.cpp     ****         if(!fs->partition->device_read_interval(fat_offset,
 4801              		.loc 1 1882 0
 4802 00a8 000053E3 		cmp	r3, #0	@ D.10749,
 4803 00ac 0030A013 		movne	r3, #0	@, tmp167
 4804 00b0 0130A003 		moveq	r3, #1	@, tmp167
 4805 00b4 FF3003E2 		and	r3, r3, #255	@ retval.2, tmp166,
 4806 00b8 000053E3 		cmp	r3, #0	@ retval.2,
 4807 00bc 0100000A 		beq	.L318	@,
1889:fat16.cpp     ****            )
1890:fat16.cpp     ****         return 0;
 4808              		.loc 1 1890 0
 4809 00c0 0030A0E3 		mov	r3, #0	@ D.10737,
 4810 00c4 120000EA 		b	.L315	@
ARM GAS  /tmp/ccwDRvq0.s 			page 120


 4811              	.L318:
1891:fat16.cpp     **** 
1892:fat16.cpp     ****         fat_offset += length;
 4812              		.loc 1 1892 0
 4813 00c8 B633DDE1 		ldrh	r3, [sp, #54]	@ D.10752, length
 4814 00cc 3C209DE5 		ldr	r2, [sp, #60]	@ tmp168, fat_offset
 4815 00d0 033082E0 		add	r3, r2, r3	@ tmp169, tmp168, D.10752
 4816 00d4 3C308DE5 		str	r3, [sp, #60]	@ tmp169, fat_offset
1893:fat16.cpp     ****         fat_size -= length;
 4817              		.loc 1 1893 0
 4818 00d8 B633DDE1 		ldrh	r3, [sp, #54]	@ D.10753, length
 4819 00dc 38209DE5 		ldr	r2, [sp, #56]	@ tmp170, fat_size
 4820 00e0 023063E0 		rsb	r3, r3, r2	@ tmp171, D.10753, tmp170
 4821 00e4 38308DE5 		str	r3, [sp, #56]	@ tmp171, fat_size
 4822              	.L316:
 4823              	.LBE67:
1876:fat16.cpp     ****     while(fat_size > 0)
 4824              		.loc 1 1876 0 discriminator 1
 4825 00e8 38309DE5 		ldr	r3, [sp, #56]	@ tmp173, fat_size
 4826 00ec 000053E3 		cmp	r3, #0	@ tmp173,
 4827 00f0 0030A003 		moveq	r3, #0	@, tmp174
 4828 00f4 0130A013 		movne	r3, #1	@, tmp174
 4829 00f8 FF3003E2 		and	r3, r3, #255	@ D.10741, tmp172,
 4830 00fc 000053E3 		cmp	r3, #0	@ D.10741,
 4831 0100 D1FFFF1A 		bne	.L319	@,
1894:fat16.cpp     ****     }
1895:fat16.cpp     **** 
1896:fat16.cpp     ****     return (uint32_t) count_arg.cluster_count * fs->header.cluster_size;
 4832              		.loc 1 1896 0
 4833 0104 B033DDE1 		ldrh	r3, [sp, #48]	@ D.10754, count_arg.cluster_count
 4834 0108 0C209DE5 		ldr	r2, [sp, #12]	@ tmp175, fs
 4835 010c B221D2E1 		ldrh	r2, [r2, #18]	@ D.10756, fs_5(D)->header.cluster_size
 4836 0110 920303E0 		mul	r3, r2, r3	@ D.10737, D.10757, D.10755
 4837              	.L315:
 4838              	.LBE66:
1897:fat16.cpp     **** }
 4839              		.loc 1 1897 0
 4840 0114 0300A0E1 		mov	r0, r3	@, <retval>
 4841 0118 44D08DE2 		add	sp, sp, #68	@,,
 4842 011c 04E09DE4 		ldr	lr, [sp], #4
 4843 0120 1EFF2FE1 		bx	lr
 4844              	.L321:
 4845              		.align	2
 4846              	.L320:
 4847 0124 00000000 		.word	_ZL26fat16_get_fs_free_callbackPhmPv
 4848              		.cfi_endproc
 4849              	.LFE137:
 4850              		.size	_Z17fat16_get_fs_freePK15fat16_fs_struct, .-_Z17fat16_get_fs_freePK15fat16_fs_struct
 4851              		.section	.text._ZL26fat16_get_fs_free_callbackPhmPv,"ax",%progbits
 4852              		.align	2
 4853              		.type	_ZL26fat16_get_fs_free_callbackPhmPv, %function
 4854              	_ZL26fat16_get_fs_free_callbackPhmPv:
 4855              	.LFB138:
1898:fat16.cpp     **** 
1899:fat16.cpp     **** /**
1900:fat16.cpp     ****  * \ingroup fat16_fs
1901:fat16.cpp     ****  * Callback function used for counting free clusters.
ARM GAS  /tmp/ccwDRvq0.s 			page 121


1902:fat16.cpp     ****  */
1903:fat16.cpp     **** uint8_t fat16_get_fs_free_callback(uint8_t* buffer, uint32_t offset, void* p)
1904:fat16.cpp     **** {
 4856              		.loc 1 1904 0
 4857              		.cfi_startproc
 4858              		@ Function supports interworking.
 4859              		@ args = 0, pretend = 0, frame = 32
 4860              		@ frame_needed = 0, uses_anonymous_args = 0
 4861              		@ link register save eliminated.
 4862 0000 20D04DE2 		sub	sp, sp, #32	@,,
 4863              	.LCFI53:
 4864              		.cfi_def_cfa_offset 32
 4865 0004 0C008DE5 		str	r0, [sp, #12]	@ buffer, buffer
 4866 0008 08108DE5 		str	r1, [sp, #8]	@ offset, offset
 4867 000c 04208DE5 		str	r2, [sp, #4]	@ p, p
 4868              	.LBB68:
1905:fat16.cpp     ****     struct fat16_usage_count_callback_arg* count_arg = (struct fat16_usage_count_callback_arg*) p;
 4869              		.loc 1 1905 0
 4870 0010 04309DE5 		ldr	r3, [sp, #4]	@ tmp145, p
 4871 0014 18308DE5 		str	r3, [sp, #24]	@ tmp145, count_arg
1906:fat16.cpp     ****     uint8_t buffer_size = count_arg->buffer_size;
 4872              		.loc 1 1906 0
 4873 0018 18309DE5 		ldr	r3, [sp, #24]	@ tmp146, count_arg
 4874 001c 0230D3E5 		ldrb	r3, [r3, #2]	@ tmp147, count_arg_4->buffer_size
 4875 0020 1730CDE5 		strb	r3, [sp, #23]	@ tmp147, buffer_size
1907:fat16.cpp     ****     uint8_t i;
1908:fat16.cpp     ****     for(i = 0; i < buffer_size; i += 2)
 4876              		.loc 1 1908 0
 4877 0024 0030A0E3 		mov	r3, #0	@ tmp148,
 4878 0028 1F30CDE5 		strb	r3, [sp, #31]	@ tmp149, i
 4879 002c 150000EA 		b	.L323	@
 4880              	.L325:
1909:fat16.cpp     ****     {
1910:fat16.cpp     ****         if((((uint16_t) buffer[1] << 8) | ((uint16_t) buffer[0] << 0)) == FAT16_CLUSTER_FREE)
 4881              		.loc 1 1910 0
 4882 0030 0C309DE5 		ldr	r3, [sp, #12]	@ tmp150, buffer
 4883 0034 013083E2 		add	r3, r3, #1	@ D.10721, tmp150,
 4884 0038 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.10722,* D.10721
 4885 003c 0324A0E1 		mov	r2, r3, asl #8	@ D.10724, D.10723,
 4886 0040 0C309DE5 		ldr	r3, [sp, #12]	@ tmp151, buffer
 4887 0044 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2	@ D.10725,
 4888 0048 033082E1 		orr	r3, r2, r3	@ D.10727, D.10724, D.10726
 4889 004c 000053E3 		cmp	r3, #0	@ D.10727,
 4890 0050 0600001A 		bne	.L324	@,
1911:fat16.cpp     ****             ++(count_arg->cluster_count);
 4891              		.loc 1 1911 0
 4892 0054 18309DE5 		ldr	r3, [sp, #24]	@ tmp152, count_arg
 4893 0058 B030D3E1 		ldrh	r3, [r3, #0]	@ D.10730, count_arg_4->cluster_count
 4894 005c 013083E2 		add	r3, r3, #1	@ tmp153, D.10730,
 4895 0060 0338A0E1 		mov	r3, r3, asl #16	@ tmp154, tmp153,
 4896 0064 2328A0E1 		mov	r2, r3, lsr #16	@ D.10731, tmp154,
 4897 0068 18309DE5 		ldr	r3, [sp, #24]	@ tmp155, count_arg
 4898 006c B020C3E1 		strh	r2, [r3, #0]	@ movhi	@ D.10731, count_arg_4->cluster_count
 4899              	.L324:
1912:fat16.cpp     **** 
1913:fat16.cpp     ****         buffer += 2;
 4900              		.loc 1 1913 0
ARM GAS  /tmp/ccwDRvq0.s 			page 122


 4901 0070 0C309DE5 		ldr	r3, [sp, #12]	@ tmp156, buffer
 4902 0074 023083E2 		add	r3, r3, #2	@ tmp157, tmp156,
 4903 0078 0C308DE5 		str	r3, [sp, #12]	@ tmp157, buffer
1908:fat16.cpp     ****     for(i = 0; i < buffer_size; i += 2)
 4904              		.loc 1 1908 0
 4905 007c 1F30DDE5 		ldrb	r3, [sp, #31]	@ tmp158, i
 4906 0080 023083E2 		add	r3, r3, #2	@ tmp159, tmp158,
 4907 0084 1F30CDE5 		strb	r3, [sp, #31]	@ tmp160, i
 4908              	.L323:
1908:fat16.cpp     ****     for(i = 0; i < buffer_size; i += 2)
 4909              		.loc 1 1908 0 is_stmt 0 discriminator 1
 4910 0088 1F20DDE5 		ldrb	r2, [sp, #31]	@ zero_extendqisi2	@ tmp162, i
 4911 008c 1730DDE5 		ldrb	r3, [sp, #23]	@ zero_extendqisi2	@ tmp163, buffer_size
 4912 0090 030052E1 		cmp	r2, r3	@ tmp162, tmp163
 4913 0094 0030A023 		movcs	r3, #0	@, tmp164
 4914 0098 0130A033 		movcc	r3, #1	@, tmp164
 4915 009c FF3003E2 		and	r3, r3, #255	@ D.10719, tmp161,
 4916 00a0 000053E3 		cmp	r3, #0	@ D.10719,
 4917 00a4 E1FFFF1A 		bne	.L325	@,
1914:fat16.cpp     ****     }
1915:fat16.cpp     **** 
1916:fat16.cpp     ****     return 1;
 4918              		.loc 1 1916 0 is_stmt 1
 4919 00a8 0130A0E3 		mov	r3, #1	@ D.10733,
 4920              	.LBE68:
1917:fat16.cpp     **** }
 4921              		.loc 1 1917 0
 4922 00ac 0300A0E1 		mov	r0, r3	@, <retval>
 4923 00b0 20D08DE2 		add	sp, sp, #32	@,,
 4924 00b4 1EFF2FE1 		bx	lr
 4925              		.cfi_endproc
 4926              	.LFE138:
 4927              		.size	_ZL26fat16_get_fs_free_callbackPhmPv, .-_ZL26fat16_get_fs_free_callbackPhmPv
 4928              		.section	.text._Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_structPKcP22fat16_dir_entry_stru
 4929              		.align	2
 4930              		.global	_Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_structPKcP22fat16_dir_entry_struct
 4931              		.type	_Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_structPKcP22fat16_dir_entry_struct, %func
 4932              	_Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_structPKcP22fat16_dir_entry_struct:
 4933              	.LFB139:
1918:fat16.cpp     **** 
1919:fat16.cpp     **** uint8_t find_file_in_dir(struct fat16_fs_struct* fs, struct fat16_dir_struct* dd, const char* name,
1920:fat16.cpp     **** {
 4934              		.loc 1 1920 0
 4935              		.cfi_startproc
 4936              		@ Function supports interworking.
 4937              		@ args = 0, pretend = 0, frame = 16
 4938              		@ frame_needed = 0, uses_anonymous_args = 0
 4939 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 4940              	.LCFI54:
 4941              		.cfi_def_cfa_offset 4
 4942 0004 14D04DE2 		sub	sp, sp, #20	@,,
 4943              	.LCFI55:
 4944              		.cfi_def_cfa_offset 24
 4945 0008 0C008DE5 		str	r0, [sp, #12]	@ fs, fs
 4946 000c 08108DE5 		str	r1, [sp, #8]	@ dd, dd
 4947 0010 04208DE5 		str	r2, [sp, #4]	@ name, name
 4948 0014 00308DE5 		str	r3, [sp, #0]	@ dir_entry, dir_entry
ARM GAS  /tmp/ccwDRvq0.s 			page 123


1921:fat16.cpp     ****     while(fat16_read_dir(dd, dir_entry))
 4949              		.loc 1 1921 0
 4950 0018 0A0000EA 		b	.L327	@
 4951              		.cfi_offset 14, -4
 4952              	.L329:
1922:fat16.cpp     ****     {
1923:fat16.cpp     ****         if(strcmp(dir_entry->long_name, name) == 0)
 4953              		.loc 1 1923 0
 4954 001c 00309DE5 		ldr	r3, [sp, #0]	@ D.10710, dir_entry
 4955 0020 0300A0E1 		mov	r0, r3	@, D.10710
 4956 0024 04109DE5 		ldr	r1, [sp, #4]	@, name
 4957 0028 FEFFFFEB 		bl	strcmp	@
 4958 002c 0030A0E1 		mov	r3, r0	@ D.10711,
 4959 0030 000053E3 		cmp	r3, #0	@ D.10711,
 4960 0034 0300001A 		bne	.L327	@,
1924:fat16.cpp     ****         {
1925:fat16.cpp     ****             fat16_reset_dir(dd);
 4961              		.loc 1 1925 0
 4962 0038 08009DE5 		ldr	r0, [sp, #8]	@, dd
 4963 003c FEFFFFEB 		bl	_Z15fat16_reset_dirP16fat16_dir_struct	@
1926:fat16.cpp     ****             return 1;
 4964              		.loc 1 1926 0
 4965 0040 0130A0E3 		mov	r3, #1	@ D.10714,
 4966 0044 0A0000EA 		b	.L328	@
 4967              	.L327:
1921:fat16.cpp     ****     while(fat16_read_dir(dd, dir_entry))
 4968              		.loc 1 1921 0 discriminator 1
 4969 0048 08009DE5 		ldr	r0, [sp, #8]	@, dd
 4970 004c 00109DE5 		ldr	r1, [sp, #0]	@, dir_entry
 4971 0050 FEFFFFEB 		bl	_Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct	@
 4972 0054 0030A0E1 		mov	r3, r0	@ tmp139,
 4973 0058 000053E3 		cmp	r3, #0	@ D.10709,
 4974 005c 0030A003 		moveq	r3, #0	@, tmp141
 4975 0060 0130A013 		movne	r3, #1	@, tmp141
 4976 0064 FF3003E2 		and	r3, r3, #255	@ retval.1, tmp140,
 4977 0068 000053E3 		cmp	r3, #0	@ retval.1,
 4978 006c EAFFFF1A 		bne	.L329	@,
1927:fat16.cpp     ****         }
1928:fat16.cpp     ****     }
1929:fat16.cpp     **** 
1930:fat16.cpp     ****     return 0;
 4979              		.loc 1 1930 0
 4980 0070 0030A0E3 		mov	r3, #0	@ D.10714,
 4981              	.L328:
1931:fat16.cpp     **** }
 4982              		.loc 1 1931 0
 4983 0074 0300A0E1 		mov	r0, r3	@, <retval>
 4984 0078 14D08DE2 		add	sp, sp, #20	@,,
 4985 007c 04E09DE4 		ldr	lr, [sp], #4
 4986 0080 1EFF2FE1 		bx	lr
 4987              		.cfi_endproc
 4988              	.LFE139:
 4989              		.size	_Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_structPKcP22fat16_dir_entry_struct, .-_Z1
 4990              		.section	.text._Z16open_file_in_dirP15fat16_fs_structP16fat16_dir_structPKc,"ax",%progbits
 4991              		.align	2
 4992              		.global	_Z16open_file_in_dirP15fat16_fs_structP16fat16_dir_structPKc
 4993              		.type	_Z16open_file_in_dirP15fat16_fs_structP16fat16_dir_structPKc, %function
ARM GAS  /tmp/ccwDRvq0.s 			page 124


 4994              	_Z16open_file_in_dirP15fat16_fs_structP16fat16_dir_structPKc:
 4995              	.LFB140:
1932:fat16.cpp     **** 
1933:fat16.cpp     **** struct fat16_file_struct* open_file_in_dir(struct fat16_fs_struct* fs, struct fat16_dir_struct* dd,
1934:fat16.cpp     **** {
 4996              		.loc 1 1934 0
 4997              		.cfi_startproc
 4998              		@ Function supports interworking.
 4999              		@ args = 0, pretend = 0, frame = 64
 5000              		@ frame_needed = 0, uses_anonymous_args = 0
 5001 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
 5002              	.LCFI56:
 5003              		.cfi_def_cfa_offset 4
 5004 0004 44D04DE2 		sub	sp, sp, #68	@,,
 5005              	.LCFI57:
 5006              		.cfi_def_cfa_offset 72
 5007 0008 0C008DE5 		str	r0, [sp, #12]	@ fs, fs
 5008 000c 08108DE5 		str	r1, [sp, #8]	@ dd, dd
 5009 0010 04208DE5 		str	r2, [sp, #4]	@ name, name
 5010              	.LBB69:
1935:fat16.cpp     ****     struct fat16_dir_entry_struct file_entry;
1936:fat16.cpp     ****     if(!find_file_in_dir(fs, dd, name, &file_entry))
 5011              		.loc 1 1936 0
 5012 0014 14308DE2 		add	r3, sp, #20	@ tmp137,,
 5013 0018 0C009DE5 		ldr	r0, [sp, #12]	@, fs
 5014 001c 08109DE5 		ldr	r1, [sp, #8]	@, dd
 5015 0020 04209DE5 		ldr	r2, [sp, #4]	@, name
 5016              		.cfi_offset 14, -4
 5017 0024 FEFFFFEB 		bl	_Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_structPKcP22fat16_dir_entry_struct	@
 5018 0028 0030A0E1 		mov	r3, r0	@ tmp138,
 5019 002c 000053E3 		cmp	r3, #0	@ D.10700,
 5020 0030 0030A013 		movne	r3, #0	@, tmp140
 5021 0034 0130A003 		moveq	r3, #1	@, tmp140
 5022 0038 FF3003E2 		and	r3, r3, #255	@ retval.0, tmp139,
 5023 003c 000053E3 		cmp	r3, #0	@ retval.0,
 5024 0040 0100000A 		beq	.L331	@,
1937:fat16.cpp     ****         return 0;
 5025              		.loc 1 1937 0
 5026 0044 0030A0E3 		mov	r3, #0	@ D.10703,
 5027 0048 040000EA 		b	.L332	@
 5028              	.L331:
1938:fat16.cpp     **** 
1939:fat16.cpp     ****     return fat16_open_file(fs, &file_entry);
 5029              		.loc 1 1939 0
 5030 004c 14308DE2 		add	r3, sp, #20	@ tmp141,,
 5031 0050 0C009DE5 		ldr	r0, [sp, #12]	@, fs
 5032 0054 0310A0E1 		mov	r1, r3	@, tmp141
 5033 0058 FEFFFFEB 		bl	_Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_entry_struct	@
 5034 005c 0030A0E1 		mov	r3, r0	@ D.10703,
 5035              	.L332:
 5036              	.LBE69:
1940:fat16.cpp     **** }
 5037              		.loc 1 1940 0
 5038 0060 0300A0E1 		mov	r0, r3	@, <retval>
 5039 0064 44D08DE2 		add	sp, sp, #68	@,,
 5040 0068 04E09DE4 		ldr	lr, [sp], #4
 5041 006c 1EFF2FE1 		bx	lr
ARM GAS  /tmp/ccwDRvq0.s 			page 125


 5042              		.cfi_endproc
 5043              	.LFE140:
 5044              		.size	_Z16open_file_in_dirP15fat16_fs_structP16fat16_dir_structPKc, .-_Z16open_file_in_dirP15fat16
 5045              		.section	.text._Z15fat16_file_sizeP17fat16_file_struct,"ax",%progbits
 5046              		.align	2
 5047              		.global	_Z15fat16_file_sizeP17fat16_file_struct
 5048              		.type	_Z15fat16_file_sizeP17fat16_file_struct, %function
 5049              	_Z15fat16_file_sizeP17fat16_file_struct:
 5050              	.LFB141:
1941:fat16.cpp     **** 
1942:fat16.cpp     **** int fat16_file_size(struct fat16_file_struct * file)
1943:fat16.cpp     **** {
 5051              		.loc 1 1943 0
 5052              		.cfi_startproc
 5053              		@ Function supports interworking.
 5054              		@ args = 0, pretend = 0, frame = 8
 5055              		@ frame_needed = 0, uses_anonymous_args = 0
 5056              		@ link register save eliminated.
 5057 0000 08D04DE2 		sub	sp, sp, #8	@,,
 5058              	.LCFI58:
 5059              		.cfi_def_cfa_offset 8
 5060 0004 04008DE5 		str	r0, [sp, #4]	@ file, file
1944:fat16.cpp     ****     return(file->dir_entry.file_size);
 5061              		.loc 1 1944 0
 5062 0008 04309DE5 		ldr	r3, [sp, #4]	@ tmp136, file
 5063 000c 283093E5 		ldr	r3, [r3, #40]	@ D.10697, file_1(D)->dir_entry.file_size
1945:fat16.cpp     **** }
 5064              		.loc 1 1945 0
 5065 0010 0300A0E1 		mov	r0, r3	@, <retval>
 5066 0014 08D08DE2 		add	sp, sp, #8	@,,
 5067 0018 1EFF2FE1 		bx	lr
 5068              		.cfi_endproc
 5069              	.LFE141:
 5070              		.size	_Z15fat16_file_sizeP17fat16_file_struct, .-_Z15fat16_file_sizeP17fat16_file_struct
 5071              		.section	.rodata
 5072              		.align	2
 5073              		.type	_ZL12VIC_USB_Intr, %object
 5074              		.size	_ZL12VIC_USB_Intr, 4
 5075              	_ZL12VIC_USB_Intr:
 5076 0038 00004000 		.word	4194304
 5077              		.align	2
 5078              		.type	_ZL9CCR_CLKEN, %object
 5079              		.size	_ZL9CCR_CLKEN, 4
 5080              	_ZL9CCR_CLKEN:
 5081 003c 01000000 		.word	1
 5082              		.align	2
 5083              		.type	_ZL10CCR_CTCRST, %object
 5084              		.size	_ZL10CCR_CTCRST, 4
 5085              	_ZL10CCR_CTCRST:
 5086 0040 02000000 		.word	2
 5087              		.align	2
 5088              		.type	_ZL16CCR_CLKSRC_32KHZ, %object
 5089              		.size	_ZL16CCR_CLKSRC_32KHZ, 4
 5090              	_ZL16CCR_CLKSRC_32KHZ:
 5091 0044 10000000 		.word	16
 5092              		.align	2
 5093              		.type	_ZL18VIC_Channel_Timer0, %object
ARM GAS  /tmp/ccwDRvq0.s 			page 126


 5094              		.size	_ZL18VIC_Channel_Timer0, 4
 5095              	_ZL18VIC_Channel_Timer0:
 5096 0048 04000000 		.word	4
 5097              		.align	2
 5098              		.type	_ZL18VIC_Channel_Timer1, %object
 5099              		.size	_ZL18VIC_Channel_Timer1, 4
 5100              	_ZL18VIC_Channel_Timer1:
 5101 004c 05000000 		.word	5
 5102              		.align	2
 5103              		.type	_ZL17VIC_Channel_UART0, %object
 5104              		.size	_ZL17VIC_Channel_UART0, 4
 5105              	_ZL17VIC_Channel_UART0:
 5106 0050 06000000 		.word	6
 5107              		.align	2
 5108              		.type	_ZL17VIC_Channel_UART1, %object
 5109              		.size	_ZL17VIC_Channel_UART1, 4
 5110              	_ZL17VIC_Channel_UART1:
 5111 0054 07000000 		.word	7
 5112              		.align	2
 5113              		.type	_ZL15VIC_Channel_USB, %object
 5114              		.size	_ZL15VIC_Channel_USB, 4
 5115              	_ZL15VIC_Channel_USB:
 5116 0058 16000000 		.word	22
 5117              		.align	2
 5118              		.type	_ZL18VICVectCntl_ENABLE, %object
 5119              		.size	_ZL18VICVectCntl_ENABLE, 4
 5120              	_ZL18VICVectCntl_ENABLE:
 5121 005c 20000000 		.word	32
 5122              		.align	2
 5123              		.type	_ZL10UIER_ERBFI, %object
 5124              		.size	_ZL10UIER_ERBFI, 4
 5125              	_ZL10UIER_ERBFI:
 5126 0060 01000000 		.word	1
 5127              		.align	2
 5128              		.type	_ZL12UIIR_ID_MASK, %object
 5129              		.size	_ZL12UIIR_ID_MASK, 4
 5130              	_ZL12UIIR_ID_MASK:
 5131 0064 0E000000 		.word	14
 5132              		.align	2
 5133              		.type	_ZL12UIIR_RDA_INT, %object
 5134              		.size	_ZL12UIIR_RDA_INT, 4
 5135              	_ZL12UIIR_RDA_INT:
 5136 0068 04000000 		.word	4
 5137              		.align	2
 5138              		.type	_ZL8ULSR_RDR, %object
 5139              		.size	_ZL8ULSR_RDR, 4
 5140              	_ZL8ULSR_RDR:
 5141 006c 01000000 		.word	1
 5142              		.align	2
 5143              		.type	_ZL5SSEL1, %object
 5144              		.size	_ZL5SSEL1, 4
 5145              	_ZL5SSEL1:
 5146 0070 00001000 		.word	1048576
 5147              		.align	2
 5148              		.type	_ZL9SSPSR_TFE, %object
 5149              		.size	_ZL9SSPSR_TFE, 4
 5150              	_ZL9SSPSR_TFE:
ARM GAS  /tmp/ccwDRvq0.s 			page 127


 5151 0074 01000000 		.word	1
 5152              		.align	2
 5153              		.type	_ZL9SSPSR_TNF, %object
 5154              		.size	_ZL9SSPSR_TNF, 4
 5155              	_ZL9SSPSR_TNF:
 5156 0078 02000000 		.word	2
 5157              		.align	2
 5158              		.type	_ZL9SSPSR_RNE, %object
 5159              		.size	_ZL9SSPSR_RNE, 4
 5160              	_ZL9SSPSR_RNE:
 5161 007c 04000000 		.word	4
 5162              		.align	2
 5163              		.type	_ZL9SSPSR_BSY, %object
 5164              		.size	_ZL9SSPSR_BSY, 4
 5165              	_ZL9SSPSR_BSY:
 5166 0080 10000000 		.word	16
 5167              		.align	2
 5168              		.type	_ZL11SSPCR0_CPOL, %object
 5169              		.size	_ZL11SSPCR0_CPOL, 4
 5170              	_ZL11SSPCR0_CPOL:
 5171 0084 40000000 		.word	64
 5172              		.align	2
 5173              		.type	_ZL11SSPCR0_CPHA, %object
 5174              		.size	_ZL11SSPCR0_CPHA, 4
 5175              	_ZL11SSPCR0_CPHA:
 5176 0088 80000000 		.word	128
 5177              		.align	2
 5178              		.type	_ZL13I2CxCONCLR_AA, %object
 5179              		.size	_ZL13I2CxCONCLR_AA, 4
 5180              	_ZL13I2CxCONCLR_AA:
 5181 008c 04000000 		.word	4
 5182              		.align	2
 5183              		.type	_ZL13I2CxCONCLR_SI, %object
 5184              		.size	_ZL13I2CxCONCLR_SI, 4
 5185              	_ZL13I2CxCONCLR_SI:
 5186 0090 08000000 		.word	8
 5187              		.align	2
 5188              		.type	_ZL15I2CxCONCLR_STAC, %object
 5189              		.size	_ZL15I2CxCONCLR_STAC, 4
 5190              	_ZL15I2CxCONCLR_STAC:
 5191 0094 20000000 		.word	32
 5192              		.align	2
 5193              		.type	_ZL16I2CxCONCLR_I2ENC, %object
 5194              		.size	_ZL16I2CxCONCLR_I2ENC, 4
 5195              	_ZL16I2CxCONCLR_I2ENC:
 5196 0098 40000000 		.word	64
 5197              		.align	2
 5198              		.type	_ZL13I2CxCONSET_AA, %object
 5199              		.size	_ZL13I2CxCONSET_AA, 4
 5200              	_ZL13I2CxCONSET_AA:
 5201 009c 04000000 		.word	4
 5202              		.align	2
 5203              		.type	_ZL13I2CxCONSET_SI, %object
 5204              		.size	_ZL13I2CxCONSET_SI, 4
 5205              	_ZL13I2CxCONSET_SI:
 5206 00a0 08000000 		.word	8
 5207              		.align	2
ARM GAS  /tmp/ccwDRvq0.s 			page 128


 5208              		.type	_ZL14I2CxCONSET_STO, %object
 5209              		.size	_ZL14I2CxCONSET_STO, 4
 5210              	_ZL14I2CxCONSET_STO:
 5211 00a4 10000000 		.word	16
 5212              		.align	2
 5213              		.type	_ZL14I2CxCONSET_STA, %object
 5214              		.size	_ZL14I2CxCONSET_STA, 4
 5215              	_ZL14I2CxCONSET_STA:
 5216 00a8 20000000 		.word	32
 5217              		.align	2
 5218              		.type	_ZL15I2CxCONSET_I2EN, %object
 5219              		.size	_ZL15I2CxCONSET_I2EN, 4
 5220              	_ZL15I2CxCONSET_I2EN:
 5221 00ac 40000000 		.word	64
 5222              		.align	2
 5223              		.type	_ZL20TxTCR_COUNTER_ENABLE, %object
 5224              		.size	_ZL20TxTCR_COUNTER_ENABLE, 4
 5225              	_ZL20TxTCR_COUNTER_ENABLE:
 5226 00b0 01000000 		.word	1
 5227              		.align	2
 5228              		.type	_ZL19TxTCR_COUNTER_RESET, %object
 5229              		.size	_ZL19TxTCR_COUNTER_RESET, 4
 5230              	_ZL19TxTCR_COUNTER_RESET:
 5231 00b4 02000000 		.word	2
 5232              		.align	2
 5233              		.type	_ZL16TxMCR_INT_ON_MR0, %object
 5234              		.size	_ZL16TxMCR_INT_ON_MR0, 4
 5235              	_ZL16TxMCR_INT_ON_MR0:
 5236 00b8 01000000 		.word	1
 5237              		.align	2
 5238              		.type	_ZL18TxMCR_RESET_ON_MR0, %object
 5239              		.size	_ZL18TxMCR_RESET_ON_MR0, 4
 5240              	_ZL18TxMCR_RESET_ON_MR0:
 5241 00bc 02000000 		.word	2
 5242              		.align	2
 5243              		.type	_ZL13TxIR_MR0_FLAG, %object
 5244              		.size	_ZL13TxIR_MR0_FLAG, 4
 5245              	_ZL13TxIR_MR0_FLAG:
 5246 00c0 01000000 		.word	1
 5247              		.align	2
 5248              		.type	_ZL13TxIR_MR1_FLAG, %object
 5249              		.size	_ZL13TxIR_MR1_FLAG, 4
 5250              	_ZL13TxIR_MR1_FLAG:
 5251 00c4 02000000 		.word	2
 5252              		.align	2
 5253              		.type	_ZL13TxIR_MR2_FLAG, %object
 5254              		.size	_ZL13TxIR_MR2_FLAG, 4
 5255              	_ZL13TxIR_MR2_FLAG:
 5256 00c8 04000000 		.word	4
 5257              		.align	2
 5258              		.type	_ZL13TxIR_MR3_FLAG, %object
 5259              		.size	_ZL13TxIR_MR3_FLAG, 4
 5260              	_ZL13TxIR_MR3_FLAG:
 5261 00cc 08000000 		.word	8
 5262              		.align	2
 5263              		.type	_ZL13TxIR_CR0_FLAG, %object
 5264              		.size	_ZL13TxIR_CR0_FLAG, 4
ARM GAS  /tmp/ccwDRvq0.s 			page 129


 5265              	_ZL13TxIR_CR0_FLAG:
 5266 00d0 10000000 		.word	16
 5267              		.align	2
 5268              		.type	_ZL13TxIR_CR1_FLAG, %object
 5269              		.size	_ZL13TxIR_CR1_FLAG, 4
 5270              	_ZL13TxIR_CR1_FLAG:
 5271 00d4 20000000 		.word	32
 5272              		.align	2
 5273              		.type	_ZL13TxIR_CR2_FLAG, %object
 5274              		.size	_ZL13TxIR_CR2_FLAG, 4
 5275              	_ZL13TxIR_CR2_FLAG:
 5276 00d8 40000000 		.word	64
 5277              		.align	2
 5278              		.type	_ZL13TxIR_CR3_FLAG, %object
 5279              		.size	_ZL13TxIR_CR3_FLAG, 4
 5280              	_ZL13TxIR_CR3_FLAG:
 5281 00dc 80000000 		.word	128
 5282              		.align	2
 5283              		.type	_ZL12TxCCR_CAP0RE, %object
 5284              		.size	_ZL12TxCCR_CAP0RE, 4
 5285              	_ZL12TxCCR_CAP0RE:
 5286 00e0 01000000 		.word	1
 5287              		.align	2
 5288              		.type	_ZL12TxCCR_CAP0FE, %object
 5289              		.size	_ZL12TxCCR_CAP0FE, 4
 5290              	_ZL12TxCCR_CAP0FE:
 5291 00e4 02000000 		.word	2
 5292              		.align	2
 5293              		.type	_ZL11TxCCR_CAP0I, %object
 5294              		.size	_ZL11TxCCR_CAP0I, 4
 5295              	_ZL11TxCCR_CAP0I:
 5296 00e8 04000000 		.word	4
 5297              		.align	2
 5298              		.type	_ZL12TxCCR_CAP1RE, %object
 5299              		.size	_ZL12TxCCR_CAP1RE, 4
 5300              	_ZL12TxCCR_CAP1RE:
 5301 00ec 08000000 		.word	8
 5302              		.align	2
 5303              		.type	_ZL12TxCCR_CAP1FE, %object
 5304              		.size	_ZL12TxCCR_CAP1FE, 4
 5305              	_ZL12TxCCR_CAP1FE:
 5306 00f0 10000000 		.word	16
 5307              		.align	2
 5308              		.type	_ZL11TxCCR_CAP1I, %object
 5309              		.size	_ZL11TxCCR_CAP1I, 4
 5310              	_ZL11TxCCR_CAP1I:
 5311 00f4 20000000 		.word	32
 5312              		.align	2
 5313              		.type	_ZL12TxCCR_CAP2RE, %object
 5314              		.size	_ZL12TxCCR_CAP2RE, 4
 5315              	_ZL12TxCCR_CAP2RE:
 5316 00f8 40000000 		.word	64
 5317              		.align	2
 5318              		.type	_ZL12TxCCR_CAP2FE, %object
 5319              		.size	_ZL12TxCCR_CAP2FE, 4
 5320              	_ZL12TxCCR_CAP2FE:
 5321 00fc 80000000 		.word	128
ARM GAS  /tmp/ccwDRvq0.s 			page 130


 5322              		.align	2
 5323              		.type	_ZL11TxCCR_CAP2I, %object
 5324              		.size	_ZL11TxCCR_CAP2I, 4
 5325              	_ZL11TxCCR_CAP2I:
 5326 0100 00010000 		.word	256
 5327              		.align	2
 5328              		.type	_ZL12TxCCR_CAP3RE, %object
 5329              		.size	_ZL12TxCCR_CAP3RE, 4
 5330              	_ZL12TxCCR_CAP3RE:
 5331 0104 00020000 		.word	512
 5332              		.align	2
 5333              		.type	_ZL12TxCCR_CAP3FE, %object
 5334              		.size	_ZL12TxCCR_CAP3FE, 4
 5335              	_ZL12TxCCR_CAP3FE:
 5336 0108 00040000 		.word	1024
 5337              		.align	2
 5338              		.type	_ZL11TxCCR_CAP3I, %object
 5339              		.size	_ZL11TxCCR_CAP3I, 4
 5340              	_ZL11TxCCR_CAP3I:
 5341 010c 00080000 		.word	2048
 5342              		.align	2
 5343              		.type	_ZL9ADxCR_PDN, %object
 5344              		.size	_ZL9ADxCR_PDN, 4
 5345              	_ZL9ADxCR_PDN:
 5346 0110 00002000 		.word	2097152
 5347              		.align	2
 5348              		.type	_ZL15ADxCR_START_NOW, %object
 5349              		.size	_ZL15ADxCR_START_NOW, 4
 5350              	_ZL15ADxCR_START_NOW:
 5351 0114 00000001 		.word	16777216
 5352              		.align	2
 5353              		.type	_ZL11ADxGDR_DONE, %object
 5354              		.size	_ZL11ADxGDR_DONE, 4
 5355              	_ZL11ADxGDR_DONE:
 5356 0118 00000080 		.word	-2147483648
 5357              		.align	2
 5358              		.type	_ZL7PWMMR0R, %object
 5359              		.size	_ZL7PWMMR0R, 4
 5360              	_ZL7PWMMR0R:
 5361 011c 02000000 		.word	2
 5362              		.align	2
 5363              		.type	_ZL7LER0_EN, %object
 5364              		.size	_ZL7LER0_EN, 4
 5365              	_ZL7LER0_EN:
 5366 0120 01000000 		.word	1
 5367              		.align	2
 5368              		.type	_ZL7LER1_EN, %object
 5369              		.size	_ZL7LER1_EN, 4
 5370              	_ZL7LER1_EN:
 5371 0124 02000000 		.word	2
 5372              		.align	2
 5373              		.type	_ZL7LER2_EN, %object
 5374              		.size	_ZL7LER2_EN, 4
 5375              	_ZL7LER2_EN:
 5376 0128 04000000 		.word	4
 5377              		.align	2
 5378              		.type	_ZL7LER3_EN, %object
ARM GAS  /tmp/ccwDRvq0.s 			page 131


 5379              		.size	_ZL7LER3_EN, 4
 5380              	_ZL7LER3_EN:
 5381 012c 08000000 		.word	8
 5382              		.align	2
 5383              		.type	_ZL7LER4_EN, %object
 5384              		.size	_ZL7LER4_EN, 4
 5385              	_ZL7LER4_EN:
 5386 0130 10000000 		.word	16
 5387              		.align	2
 5388              		.type	_ZL7LER5_EN, %object
 5389              		.size	_ZL7LER5_EN, 4
 5390              	_ZL7LER5_EN:
 5391 0134 20000000 		.word	32
 5392              		.align	2
 5393              		.type	_ZL7LER6_EN, %object
 5394              		.size	_ZL7LER6_EN, 4
 5395              	_ZL7LER6_EN:
 5396 0138 40000000 		.word	64
 5397              		.align	2
 5398              		.type	_ZL7PWMENA1, %object
 5399              		.size	_ZL7PWMENA1, 4
 5400              	_ZL7PWMENA1:
 5401 013c 00020000 		.word	512
 5402              		.align	2
 5403              		.type	_ZL7PWMENA2, %object
 5404              		.size	_ZL7PWMENA2, 4
 5405              	_ZL7PWMENA2:
 5406 0140 00040000 		.word	1024
 5407              		.align	2
 5408              		.type	_ZL7PWMENA3, %object
 5409              		.size	_ZL7PWMENA3, 4
 5410              	_ZL7PWMENA3:
 5411 0144 00080000 		.word	2048
 5412              		.align	2
 5413              		.type	_ZL7PWMENA4, %object
 5414              		.size	_ZL7PWMENA4, 4
 5415              	_ZL7PWMENA4:
 5416 0148 00100000 		.word	4096
 5417              		.align	2
 5418              		.type	_ZL7PWMENA5, %object
 5419              		.size	_ZL7PWMENA5, 4
 5420              	_ZL7PWMENA5:
 5421 014c 00200000 		.word	8192
 5422              		.align	2
 5423              		.type	_ZL7PWMENA6, %object
 5424              		.size	_ZL7PWMENA6, 4
 5425              	_ZL7PWMENA6:
 5426 0150 00400000 		.word	16384
 5427              		.align	2
 5428              		.type	_ZL21PWMTCR_COUNTER_ENABLE, %object
 5429              		.size	_ZL21PWMTCR_COUNTER_ENABLE, 4
 5430              	_ZL21PWMTCR_COUNTER_ENABLE:
 5431 0154 01000000 		.word	1
 5432              		.align	2
 5433              		.type	_ZL12PWMTCR_RESET, %object
 5434              		.size	_ZL12PWMTCR_RESET, 4
 5435              	_ZL12PWMTCR_RESET:
ARM GAS  /tmp/ccwDRvq0.s 			page 132


 5436 0158 02000000 		.word	2
 5437              		.align	2
 5438              		.type	_ZL17PWMTCR_PWM_ENABLE, %object
 5439              		.size	_ZL17PWMTCR_PWM_ENABLE, 4
 5440              	_ZL17PWMTCR_PWM_ENABLE:
 5441 015c 08000000 		.word	8
 5442              		.align	2
 5443              		.type	_ZL10WDMOD_WDEN, %object
 5444              		.size	_ZL10WDMOD_WDEN, 4
 5445              	_ZL10WDMOD_WDEN:
 5446 0160 01000000 		.word	1
 5447              		.align	2
 5448              		.type	_ZL13WDMOD_WDRESET, %object
 5449              		.size	_ZL13WDMOD_WDRESET, 4
 5450              	_ZL13WDMOD_WDRESET:
 5451 0164 02000000 		.word	2
 5452              		.align	2
 5453              		.type	_ZL27HID_MESSAGE_ID_SYSTEM_DEBUG, %object
 5454              		.size	_ZL27HID_MESSAGE_ID_SYSTEM_DEBUG, 4
 5455              	_ZL27HID_MESSAGE_ID_SYSTEM_DEBUG:
 5456 0168 C0000000 		.word	192
 5457              		.text
 5458              	.Letext0:
 5459              		.section	.debug_loc,"",%progbits
 5460              	.Ldebug_loc0:
 5461              	.LLST0:
 5462 0000 00000000 		.4byte	.LFB109
 5463 0004 04000000 		.4byte	.LCFI0
 5464 0008 0200     		.2byte	0x2
 5465 000a 7D       		.byte	0x7d
 5466 000b 00       		.sleb128 0
 5467 000c 04000000 		.4byte	.LCFI0
 5468 0010 08000000 		.4byte	.LCFI1
 5469 0014 0200     		.2byte	0x2
 5470 0016 7D       		.byte	0x7d
 5471 0017 04       		.sleb128 4
 5472 0018 08000000 		.4byte	.LCFI1
 5473 001c E0000000 		.4byte	.LFE109
 5474 0020 0200     		.2byte	0x2
 5475 0022 7D       		.byte	0x7d
 5476 0023 18       		.sleb128 24
 5477 0024 00000000 		.4byte	0x0
 5478 0028 00000000 		.4byte	0x0
 5479              	.LLST1:
 5480 002c 00000000 		.4byte	.LFB110
 5481 0030 04000000 		.4byte	.LCFI2
 5482 0034 0200     		.2byte	0x2
 5483 0036 7D       		.byte	0x7d
 5484 0037 00       		.sleb128 0
 5485 0038 04000000 		.4byte	.LCFI2
 5486 003c 08000000 		.4byte	.LCFI3
 5487 0040 0200     		.2byte	0x2
 5488 0042 7D       		.byte	0x7d
 5489 0043 04       		.sleb128 4
 5490 0044 08000000 		.4byte	.LCFI3
 5491 0048 34000000 		.4byte	.LFE110
 5492 004c 0200     		.2byte	0x2
ARM GAS  /tmp/ccwDRvq0.s 			page 133


 5493 004e 7D       		.byte	0x7d
 5494 004f 10       		.sleb128 16
 5495 0050 00000000 		.4byte	0x0
 5496 0054 00000000 		.4byte	0x0
 5497              	.LLST2:
 5498 0058 00000000 		.4byte	.LFB111
 5499 005c 04000000 		.4byte	.LCFI4
 5500 0060 0200     		.2byte	0x2
 5501 0062 7D       		.byte	0x7d
 5502 0063 00       		.sleb128 0
 5503 0064 04000000 		.4byte	.LCFI4
 5504 0068 08000000 		.4byte	.LCFI5
 5505 006c 0200     		.2byte	0x2
 5506 006e 7D       		.byte	0x7d
 5507 006f 08       		.sleb128 8
 5508 0070 08000000 		.4byte	.LCFI5
 5509 0074 80030000 		.4byte	.LFE111
 5510 0078 0300     		.2byte	0x3
 5511 007a 7D       		.byte	0x7d
 5512 007b D800     		.sleb128 88
 5513 007d 00000000 		.4byte	0x0
 5514 0081 00000000 		.4byte	0x0
 5515              	.LLST3:
 5516 0085 00000000 		.4byte	.LFB112
 5517 0089 04000000 		.4byte	.LCFI6
 5518 008d 0200     		.2byte	0x2
 5519 008f 7D       		.byte	0x7d
 5520 0090 00       		.sleb128 0
 5521 0091 04000000 		.4byte	.LCFI6
 5522 0095 08000000 		.4byte	.LCFI7
 5523 0099 0200     		.2byte	0x2
 5524 009b 7D       		.byte	0x7d
 5525 009c 04       		.sleb128 4
 5526 009d 08000000 		.4byte	.LCFI7
 5527 00a1 A0010000 		.4byte	.LFE112
 5528 00a5 0300     		.2byte	0x3
 5529 00a7 7D       		.byte	0x7d
 5530 00a8 D800     		.sleb128 88
 5531 00aa 00000000 		.4byte	0x0
 5532 00ae 00000000 		.4byte	0x0
 5533              	.LLST4:
 5534 00b2 00000000 		.4byte	.LFB113
 5535 00b6 04000000 		.4byte	.LCFI8
 5536 00ba 0200     		.2byte	0x2
 5537 00bc 7D       		.byte	0x7d
 5538 00bd 00       		.sleb128 0
 5539 00be 04000000 		.4byte	.LCFI8
 5540 00c2 08000000 		.4byte	.LCFI9
 5541 00c6 0200     		.2byte	0x2
 5542 00c8 7D       		.byte	0x7d
 5543 00c9 04       		.sleb128 4
 5544 00ca 08000000 		.4byte	.LCFI9
 5545 00ce 08020000 		.4byte	.LFE113
 5546 00d2 0300     		.2byte	0x3
 5547 00d4 7D       		.byte	0x7d
 5548 00d5 D800     		.sleb128 88
 5549 00d7 00000000 		.4byte	0x0
ARM GAS  /tmp/ccwDRvq0.s 			page 134


 5550 00db 00000000 		.4byte	0x0
 5551              	.LLST5:
 5552 00df 00000000 		.4byte	.LFB114
 5553 00e3 04000000 		.4byte	.LCFI10
 5554 00e7 0200     		.2byte	0x2
 5555 00e9 7D       		.byte	0x7d
 5556 00ea 00       		.sleb128 0
 5557 00eb 04000000 		.4byte	.LCFI10
 5558 00ef EC000000 		.4byte	.LFE114
 5559 00f3 0200     		.2byte	0x2
 5560 00f5 7D       		.byte	0x7d
 5561 00f6 18       		.sleb128 24
 5562 00f7 00000000 		.4byte	0x0
 5563 00fb 00000000 		.4byte	0x0
 5564              	.LLST6:
 5565 00ff 00000000 		.4byte	.LFB115
 5566 0103 04000000 		.4byte	.LCFI11
 5567 0107 0200     		.2byte	0x2
 5568 0109 7D       		.byte	0x7d
 5569 010a 00       		.sleb128 0
 5570 010b 04000000 		.4byte	.LCFI11
 5571 010f 08000000 		.4byte	.LCFI12
 5572 0113 0200     		.2byte	0x2
 5573 0115 7D       		.byte	0x7d
 5574 0116 04       		.sleb128 4
 5575 0117 08000000 		.4byte	.LCFI12
 5576 011b B4000000 		.4byte	.LFE115
 5577 011f 0200     		.2byte	0x2
 5578 0121 7D       		.byte	0x7d
 5579 0122 20       		.sleb128 32
 5580 0123 00000000 		.4byte	0x0
 5581 0127 00000000 		.4byte	0x0
 5582              	.LLST7:
 5583 012b 00000000 		.4byte	.LFB116
 5584 012f 04000000 		.4byte	.LCFI13
 5585 0133 0200     		.2byte	0x2
 5586 0135 7D       		.byte	0x7d
 5587 0136 00       		.sleb128 0
 5588 0137 04000000 		.4byte	.LCFI13
 5589 013b 44040000 		.4byte	.LFE116
 5590 013f 0200     		.2byte	0x2
 5591 0141 7D       		.byte	0x7d
 5592 0142 18       		.sleb128 24
 5593 0143 00000000 		.4byte	0x0
 5594 0147 00000000 		.4byte	0x0
 5595              	.LLST8:
 5596 014b 00000000 		.4byte	.LFB117
 5597 014f 04000000 		.4byte	.LCFI14
 5598 0153 0200     		.2byte	0x2
 5599 0155 7D       		.byte	0x7d
 5600 0156 00       		.sleb128 0
 5601 0157 04000000 		.4byte	.LCFI14
 5602 015b 08000000 		.4byte	.LCFI15
 5603 015f 0200     		.2byte	0x2
 5604 0161 7D       		.byte	0x7d
 5605 0162 04       		.sleb128 4
 5606 0163 08000000 		.4byte	.LCFI15
ARM GAS  /tmp/ccwDRvq0.s 			page 135


 5607 0167 00020000 		.4byte	.LFE117
 5608 016b 0200     		.2byte	0x2
 5609 016d 7D       		.byte	0x7d
 5610 016e 28       		.sleb128 40
 5611 016f 00000000 		.4byte	0x0
 5612 0173 00000000 		.4byte	0x0
 5613              	.LLST9:
 5614 0177 00000000 		.4byte	.LFB118
 5615 017b 04000000 		.4byte	.LCFI16
 5616 017f 0200     		.2byte	0x2
 5617 0181 7D       		.byte	0x7d
 5618 0182 00       		.sleb128 0
 5619 0183 04000000 		.4byte	.LCFI16
 5620 0187 08000000 		.4byte	.LCFI17
 5621 018b 0200     		.2byte	0x2
 5622 018d 7D       		.byte	0x7d
 5623 018e 04       		.sleb128 4
 5624 018f 08000000 		.4byte	.LCFI17
 5625 0193 2C010000 		.4byte	.LFE118
 5626 0197 0200     		.2byte	0x2
 5627 0199 7D       		.byte	0x7d
 5628 019a 18       		.sleb128 24
 5629 019b 00000000 		.4byte	0x0
 5630 019f 00000000 		.4byte	0x0
 5631              	.LLST10:
 5632 01a3 00000000 		.4byte	.LFB119
 5633 01a7 04000000 		.4byte	.LCFI18
 5634 01ab 0200     		.2byte	0x2
 5635 01ad 7D       		.byte	0x7d
 5636 01ae 00       		.sleb128 0
 5637 01af 04000000 		.4byte	.LCFI18
 5638 01b3 08000000 		.4byte	.LCFI19
 5639 01b7 0200     		.2byte	0x2
 5640 01b9 7D       		.byte	0x7d
 5641 01ba 04       		.sleb128 4
 5642 01bb 08000000 		.4byte	.LCFI19
 5643 01bf B0020000 		.4byte	.LFE119
 5644 01c3 0200     		.2byte	0x2
 5645 01c5 7D       		.byte	0x7d
 5646 01c6 28       		.sleb128 40
 5647 01c7 00000000 		.4byte	0x0
 5648 01cb 00000000 		.4byte	0x0
 5649              	.LLST11:
 5650 01cf 00000000 		.4byte	.LFB120
 5651 01d3 04000000 		.4byte	.LCFI20
 5652 01d7 0200     		.2byte	0x2
 5653 01d9 7D       		.byte	0x7d
 5654 01da 00       		.sleb128 0
 5655 01db 04000000 		.4byte	.LCFI20
 5656 01df 08000000 		.4byte	.LCFI21
 5657 01e3 0200     		.2byte	0x2
 5658 01e5 7D       		.byte	0x7d
 5659 01e6 04       		.sleb128 4
 5660 01e7 08000000 		.4byte	.LCFI21
 5661 01eb B8010000 		.4byte	.LFE120
 5662 01ef 0200     		.2byte	0x2
 5663 01f1 7D       		.byte	0x7d
ARM GAS  /tmp/ccwDRvq0.s 			page 136


 5664 01f2 20       		.sleb128 32
 5665 01f3 00000000 		.4byte	0x0
 5666 01f7 00000000 		.4byte	0x0
 5667              	.LLST12:
 5668 01fb 00000000 		.4byte	.LFB121
 5669 01ff 04000000 		.4byte	.LCFI22
 5670 0203 0200     		.2byte	0x2
 5671 0205 7D       		.byte	0x7d
 5672 0206 00       		.sleb128 0
 5673 0207 04000000 		.4byte	.LCFI22
 5674 020b 08000000 		.4byte	.LCFI23
 5675 020f 0200     		.2byte	0x2
 5676 0211 7D       		.byte	0x7d
 5677 0212 04       		.sleb128 4
 5678 0213 08000000 		.4byte	.LCFI23
 5679 0217 F0000000 		.4byte	.LFE121
 5680 021b 0200     		.2byte	0x2
 5681 021d 7D       		.byte	0x7d
 5682 021e 18       		.sleb128 24
 5683 021f 00000000 		.4byte	0x0
 5684 0223 00000000 		.4byte	0x0
 5685              	.LLST13:
 5686 0227 00000000 		.4byte	.LFB122
 5687 022b 04000000 		.4byte	.LCFI24
 5688 022f 0200     		.2byte	0x2
 5689 0231 7D       		.byte	0x7d
 5690 0232 00       		.sleb128 0
 5691 0233 04000000 		.4byte	.LCFI24
 5692 0237 08000000 		.4byte	.LCFI25
 5693 023b 0200     		.2byte	0x2
 5694 023d 7D       		.byte	0x7d
 5695 023e 04       		.sleb128 4
 5696 023f 08000000 		.4byte	.LCFI25
 5697 0243 BC000000 		.4byte	.LFE122
 5698 0247 0200     		.2byte	0x2
 5699 0249 7D       		.byte	0x7d
 5700 024a 18       		.sleb128 24
 5701 024b 00000000 		.4byte	0x0
 5702 024f 00000000 		.4byte	0x0
 5703              	.LLST14:
 5704 0253 00000000 		.4byte	.LFB123
 5705 0257 04000000 		.4byte	.LCFI26
 5706 025b 0200     		.2byte	0x2
 5707 025d 7D       		.byte	0x7d
 5708 025e 00       		.sleb128 0
 5709 025f 04000000 		.4byte	.LCFI26
 5710 0263 08000000 		.4byte	.LCFI27
 5711 0267 0200     		.2byte	0x2
 5712 0269 7D       		.byte	0x7d
 5713 026a 04       		.sleb128 4
 5714 026b 08000000 		.4byte	.LCFI27
 5715 026f 2C000000 		.4byte	.LFE123
 5716 0273 0200     		.2byte	0x2
 5717 0275 7D       		.byte	0x7d
 5718 0276 10       		.sleb128 16
 5719 0277 00000000 		.4byte	0x0
 5720 027b 00000000 		.4byte	0x0
ARM GAS  /tmp/ccwDRvq0.s 			page 137


 5721              	.LLST15:
 5722 027f 00000000 		.4byte	.LFB124
 5723 0283 04000000 		.4byte	.LCFI28
 5724 0287 0200     		.2byte	0x2
 5725 0289 7D       		.byte	0x7d
 5726 028a 00       		.sleb128 0
 5727 028b 04000000 		.4byte	.LCFI28
 5728 028f 08000000 		.4byte	.LCFI29
 5729 0293 0200     		.2byte	0x2
 5730 0295 7D       		.byte	0x7d
 5731 0296 04       		.sleb128 4
 5732 0297 08000000 		.4byte	.LCFI29
 5733 029b 6C030000 		.4byte	.LFE124
 5734 029f 0200     		.2byte	0x2
 5735 02a1 7D       		.byte	0x7d
 5736 02a2 30       		.sleb128 48
 5737 02a3 00000000 		.4byte	0x0
 5738 02a7 00000000 		.4byte	0x0
 5739              	.LLST16:
 5740 02ab 00000000 		.4byte	.LFB125
 5741 02af 04000000 		.4byte	.LCFI30
 5742 02b3 0200     		.2byte	0x2
 5743 02b5 7D       		.byte	0x7d
 5744 02b6 00       		.sleb128 0
 5745 02b7 04000000 		.4byte	.LCFI30
 5746 02bb 08000000 		.4byte	.LCFI31
 5747 02bf 0200     		.2byte	0x2
 5748 02c1 7D       		.byte	0x7d
 5749 02c2 04       		.sleb128 4
 5750 02c3 08000000 		.4byte	.LCFI31
 5751 02c7 5C040000 		.4byte	.LFE125
 5752 02cb 0200     		.2byte	0x2
 5753 02cd 7D       		.byte	0x7d
 5754 02ce 38       		.sleb128 56
 5755 02cf 00000000 		.4byte	0x0
 5756 02d3 00000000 		.4byte	0x0
 5757              	.LLST17:
 5758 02d7 00000000 		.4byte	.LFB126
 5759 02db 04000000 		.4byte	.LCFI32
 5760 02df 0200     		.2byte	0x2
 5761 02e1 7D       		.byte	0x7d
 5762 02e2 00       		.sleb128 0
 5763 02e3 04000000 		.4byte	.LCFI32
 5764 02e7 08000000 		.4byte	.LCFI33
 5765 02eb 0200     		.2byte	0x2
 5766 02ed 7D       		.byte	0x7d
 5767 02ee 04       		.sleb128 4
 5768 02ef 08000000 		.4byte	.LCFI33
 5769 02f3 2C010000 		.4byte	.LFE126
 5770 02f7 0200     		.2byte	0x2
 5771 02f9 7D       		.byte	0x7d
 5772 02fa 20       		.sleb128 32
 5773 02fb 00000000 		.4byte	0x0
 5774 02ff 00000000 		.4byte	0x0
 5775              	.LLST18:
 5776 0303 00000000 		.4byte	.LFB127
 5777 0307 04000000 		.4byte	.LCFI34
ARM GAS  /tmp/ccwDRvq0.s 			page 138


 5778 030b 0200     		.2byte	0x2
 5779 030d 7D       		.byte	0x7d
 5780 030e 00       		.sleb128 0
 5781 030f 04000000 		.4byte	.LCFI34
 5782 0313 08000000 		.4byte	.LCFI35
 5783 0317 0200     		.2byte	0x2
 5784 0319 7D       		.byte	0x7d
 5785 031a 04       		.sleb128 4
 5786 031b 08000000 		.4byte	.LCFI35
 5787 031f 78020000 		.4byte	.LFE127
 5788 0323 0200     		.2byte	0x2
 5789 0325 7D       		.byte	0x7d
 5790 0326 20       		.sleb128 32
 5791 0327 00000000 		.4byte	0x0
 5792 032b 00000000 		.4byte	0x0
 5793              	.LLST19:
 5794 032f 00000000 		.4byte	.LFB128
 5795 0333 04000000 		.4byte	.LCFI36
 5796 0337 0200     		.2byte	0x2
 5797 0339 7D       		.byte	0x7d
 5798 033a 00       		.sleb128 0
 5799 033b 04000000 		.4byte	.LCFI36
 5800 033f 08000000 		.4byte	.LCFI37
 5801 0343 0200     		.2byte	0x2
 5802 0345 7D       		.byte	0x7d
 5803 0346 04       		.sleb128 4
 5804 0347 08000000 		.4byte	.LCFI37
 5805 034b AC000000 		.4byte	.LFE128
 5806 034f 0200     		.2byte	0x2
 5807 0351 7D       		.byte	0x7d
 5808 0352 18       		.sleb128 24
 5809 0353 00000000 		.4byte	0x0
 5810 0357 00000000 		.4byte	0x0
 5811              	.LLST20:
 5812 035b 00000000 		.4byte	.LFB129
 5813 035f 04000000 		.4byte	.LCFI38
 5814 0363 0200     		.2byte	0x2
 5815 0365 7D       		.byte	0x7d
 5816 0366 00       		.sleb128 0
 5817 0367 04000000 		.4byte	.LCFI38
 5818 036b 08000000 		.4byte	.LCFI39
 5819 036f 0200     		.2byte	0x2
 5820 0371 7D       		.byte	0x7d
 5821 0372 04       		.sleb128 4
 5822 0373 08000000 		.4byte	.LCFI39
 5823 0377 2C000000 		.4byte	.LFE129
 5824 037b 0200     		.2byte	0x2
 5825 037d 7D       		.byte	0x7d
 5826 037e 10       		.sleb128 16
 5827 037f 00000000 		.4byte	0x0
 5828 0383 00000000 		.4byte	0x0
 5829              	.LLST21:
 5830 0387 00000000 		.4byte	.LFB130
 5831 038b 04000000 		.4byte	.LCFI40
 5832 038f 0200     		.2byte	0x2
 5833 0391 7D       		.byte	0x7d
 5834 0392 00       		.sleb128 0
ARM GAS  /tmp/ccwDRvq0.s 			page 139


 5835 0393 04000000 		.4byte	.LCFI40
 5836 0397 08000000 		.4byte	.LCFI41
 5837 039b 0200     		.2byte	0x2
 5838 039d 7D       		.byte	0x7d
 5839 039e 04       		.sleb128 4
 5840 039f 08000000 		.4byte	.LCFI41
 5841 03a3 2C010000 		.4byte	.LFE130
 5842 03a7 0200     		.2byte	0x2
 5843 03a9 7D       		.byte	0x7d
 5844 03aa 10       		.sleb128 16
 5845 03ab 00000000 		.4byte	0x0
 5846 03af 00000000 		.4byte	0x0
 5847              	.LLST22:
 5848 03b3 00000000 		.4byte	.LFB131
 5849 03b7 04000000 		.4byte	.LCFI42
 5850 03bb 0200     		.2byte	0x2
 5851 03bd 7D       		.byte	0x7d
 5852 03be 00       		.sleb128 0
 5853 03bf 04000000 		.4byte	.LCFI42
 5854 03c3 38000000 		.4byte	.LFE131
 5855 03c7 0200     		.2byte	0x2
 5856 03c9 7D       		.byte	0x7d
 5857 03ca 08       		.sleb128 8
 5858 03cb 00000000 		.4byte	0x0
 5859 03cf 00000000 		.4byte	0x0
 5860              	.LLST23:
 5861 03d3 00000000 		.4byte	.LFB132
 5862 03d7 04000000 		.4byte	.LCFI43
 5863 03db 0200     		.2byte	0x2
 5864 03dd 7D       		.byte	0x7d
 5865 03de 00       		.sleb128 0
 5866 03df 04000000 		.4byte	.LCFI43
 5867 03e3 40000000 		.4byte	.LFE132
 5868 03e7 0200     		.2byte	0x2
 5869 03e9 7D       		.byte	0x7d
 5870 03ea 08       		.sleb128 8
 5871 03eb 00000000 		.4byte	0x0
 5872 03ef 00000000 		.4byte	0x0
 5873              	.LLST24:
 5874 03f3 00000000 		.4byte	.LFB133
 5875 03f7 04000000 		.4byte	.LCFI44
 5876 03fb 0200     		.2byte	0x2
 5877 03fd 7D       		.byte	0x7d
 5878 03fe 00       		.sleb128 0
 5879 03ff 04000000 		.4byte	.LCFI44
 5880 0403 08000000 		.4byte	.LCFI45
 5881 0407 0200     		.2byte	0x2
 5882 0409 7D       		.byte	0x7d
 5883 040a 04       		.sleb128 4
 5884 040b 08000000 		.4byte	.LCFI45
 5885 040f 58050000 		.4byte	.LFE133
 5886 0413 0300     		.2byte	0x3
 5887 0415 7D       		.byte	0x7d
 5888 0416 D000     		.sleb128 80
 5889 0418 00000000 		.4byte	0x0
 5890 041c 00000000 		.4byte	0x0
 5891              	.LLST25:
ARM GAS  /tmp/ccwDRvq0.s 			page 140


 5892 0420 00000000 		.4byte	.LFB134
 5893 0424 04000000 		.4byte	.LCFI46
 5894 0428 0200     		.2byte	0x2
 5895 042a 7D       		.byte	0x7d
 5896 042b 00       		.sleb128 0
 5897 042c 04000000 		.4byte	.LCFI46
 5898 0430 08000000 		.4byte	.LCFI47
 5899 0434 0200     		.2byte	0x2
 5900 0436 7D       		.byte	0x7d
 5901 0437 04       		.sleb128 4
 5902 0438 08000000 		.4byte	.LCFI47
 5903 043c 50030000 		.4byte	.LFE134
 5904 0440 0200     		.2byte	0x2
 5905 0442 7D       		.byte	0x7d
 5906 0443 38       		.sleb128 56
 5907 0444 00000000 		.4byte	0x0
 5908 0448 00000000 		.4byte	0x0
 5909              	.LLST26:
 5910 044c 00000000 		.4byte	.LFB135
 5911 0450 04000000 		.4byte	.LCFI48
 5912 0454 0200     		.2byte	0x2
 5913 0456 7D       		.byte	0x7d
 5914 0457 00       		.sleb128 0
 5915 0458 04000000 		.4byte	.LCFI48
 5916 045c 08000000 		.4byte	.LCFI49
 5917 0460 0200     		.2byte	0x2
 5918 0462 7D       		.byte	0x7d
 5919 0463 04       		.sleb128 4
 5920 0464 08000000 		.4byte	.LCFI49
 5921 0468 30010000 		.4byte	.LFE135
 5922 046c 0200     		.2byte	0x2
 5923 046e 7D       		.byte	0x7d
 5924 046f 20       		.sleb128 32
 5925 0470 00000000 		.4byte	0x0
 5926 0474 00000000 		.4byte	0x0
 5927              	.LLST27:
 5928 0478 00000000 		.4byte	.LFB136
 5929 047c 04000000 		.4byte	.LCFI50
 5930 0480 0200     		.2byte	0x2
 5931 0482 7D       		.byte	0x7d
 5932 0483 00       		.sleb128 0
 5933 0484 04000000 		.4byte	.LCFI50
 5934 0488 44000000 		.4byte	.LFE136
 5935 048c 0200     		.2byte	0x2
 5936 048e 7D       		.byte	0x7d
 5937 048f 08       		.sleb128 8
 5938 0490 00000000 		.4byte	0x0
 5939 0494 00000000 		.4byte	0x0
 5940              	.LLST28:
 5941 0498 00000000 		.4byte	.LFB137
 5942 049c 04000000 		.4byte	.LCFI51
 5943 04a0 0200     		.2byte	0x2
 5944 04a2 7D       		.byte	0x7d
 5945 04a3 00       		.sleb128 0
 5946 04a4 04000000 		.4byte	.LCFI51
 5947 04a8 08000000 		.4byte	.LCFI52
 5948 04ac 0200     		.2byte	0x2
ARM GAS  /tmp/ccwDRvq0.s 			page 141


 5949 04ae 7D       		.byte	0x7d
 5950 04af 04       		.sleb128 4
 5951 04b0 08000000 		.4byte	.LCFI52
 5952 04b4 28010000 		.4byte	.LFE137
 5953 04b8 0300     		.2byte	0x3
 5954 04ba 7D       		.byte	0x7d
 5955 04bb C800     		.sleb128 72
 5956 04bd 00000000 		.4byte	0x0
 5957 04c1 00000000 		.4byte	0x0
 5958              	.LLST29:
 5959 04c5 00000000 		.4byte	.LFB138
 5960 04c9 04000000 		.4byte	.LCFI53
 5961 04cd 0200     		.2byte	0x2
 5962 04cf 7D       		.byte	0x7d
 5963 04d0 00       		.sleb128 0
 5964 04d1 04000000 		.4byte	.LCFI53
 5965 04d5 B8000000 		.4byte	.LFE138
 5966 04d9 0200     		.2byte	0x2
 5967 04db 7D       		.byte	0x7d
 5968 04dc 20       		.sleb128 32
 5969 04dd 00000000 		.4byte	0x0
 5970 04e1 00000000 		.4byte	0x0
 5971              	.LLST30:
 5972 04e5 00000000 		.4byte	.LFB139
 5973 04e9 04000000 		.4byte	.LCFI54
 5974 04ed 0200     		.2byte	0x2
 5975 04ef 7D       		.byte	0x7d
 5976 04f0 00       		.sleb128 0
 5977 04f1 04000000 		.4byte	.LCFI54
 5978 04f5 08000000 		.4byte	.LCFI55
 5979 04f9 0200     		.2byte	0x2
 5980 04fb 7D       		.byte	0x7d
 5981 04fc 04       		.sleb128 4
 5982 04fd 08000000 		.4byte	.LCFI55
 5983 0501 84000000 		.4byte	.LFE139
 5984 0505 0200     		.2byte	0x2
 5985 0507 7D       		.byte	0x7d
 5986 0508 18       		.sleb128 24
 5987 0509 00000000 		.4byte	0x0
 5988 050d 00000000 		.4byte	0x0
 5989              	.LLST31:
 5990 0511 00000000 		.4byte	.LFB140
 5991 0515 04000000 		.4byte	.LCFI56
 5992 0519 0200     		.2byte	0x2
 5993 051b 7D       		.byte	0x7d
 5994 051c 00       		.sleb128 0
 5995 051d 04000000 		.4byte	.LCFI56
 5996 0521 08000000 		.4byte	.LCFI57
 5997 0525 0200     		.2byte	0x2
 5998 0527 7D       		.byte	0x7d
 5999 0528 04       		.sleb128 4
 6000 0529 08000000 		.4byte	.LCFI57
 6001 052d 70000000 		.4byte	.LFE140
 6002 0531 0300     		.2byte	0x3
 6003 0533 7D       		.byte	0x7d
 6004 0534 C800     		.sleb128 72
 6005 0536 00000000 		.4byte	0x0
ARM GAS  /tmp/ccwDRvq0.s 			page 142


 6006 053a 00000000 		.4byte	0x0
 6007              	.LLST32:
 6008 053e 00000000 		.4byte	.LFB141
 6009 0542 04000000 		.4byte	.LCFI58
 6010 0546 0200     		.2byte	0x2
 6011 0548 7D       		.byte	0x7d
 6012 0549 00       		.sleb128 0
 6013 054a 04000000 		.4byte	.LCFI58
 6014 054e 1C000000 		.4byte	.LFE141
 6015 0552 0200     		.2byte	0x2
 6016 0554 7D       		.byte	0x7d
 6017 0555 08       		.sleb128 8
 6018 0556 00000000 		.4byte	0x0
 6019 055a 00000000 		.4byte	0x0
 6020              		.file 2 "../arm/arm7lib/armlib.h"
 6021              		.file 3 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6022              		.file 4 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6023              		.file 5 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6024              		.file 6 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6025              		.file 7 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6026              		.file 8 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6027              		.file 9 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../.
 6028              		.file 10 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6029              		.file 11 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/include/s
 6030              		.file 12 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6031              		.file 13 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/include/s
 6032              		.file 14 "<built-in>"
 6033              		.file 15 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6034              		.file 16 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6035              		.file 17 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6036              		.file 18 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6037              		.file 19 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6038              		.file 20 "../arm/arm7lib/FIFO.h"
 6039              		.file 21 "../arm/arm7lib/UARTBase.h"
 6040              		.file 22 "../arm/arm7lib/UART0.h"
 6041              		.file 23 "partition.h"
 6042              		.file 24 "fat16.h"
 6043              		.file 25 "../arm/arm7lib/lpc214x.h"
 6044              		.file 26 "../arm/arm7lib/HIDReport.h"
 6045              		.file 27 "/home/elijah/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../
 6046              		.section	.debug_info
 6047 0000 202F0000 		.4byte	0x2f20
 6048 0004 0200     		.2byte	0x2
 6049 0006 00000000 		.4byte	.Ldebug_abbrev0
 6050 000a 04       		.byte	0x4
 6051 000b 01       		.uleb128 0x1
 6052 000c 8E0D0000 		.4byte	.LASF471
 6053 0010 04       		.byte	0x4
 6054 0011 62080000 		.4byte	.LASF472
 6055 0015 30050000 		.4byte	.LASF473
 6056 0019 00000000 		.4byte	0x0
 6057 001d 00000000 		.4byte	0x0
 6058 0021 68000000 		.4byte	.Ldebug_ranges0+0x68
 6059 0025 00000000 		.4byte	.Ldebug_line0
 6060 0029 02       		.uleb128 0x2
 6061 002a C1070000 		.4byte	.LASF2
 6062 002e 02       		.byte	0x2
ARM GAS  /tmp/ccwDRvq0.s 			page 143


 6063 002f 42       		.byte	0x42
 6064 0030 34000000 		.4byte	0x34
 6065 0034 03       		.uleb128 0x3
 6066 0035 01       		.byte	0x1
 6067 0036 02       		.byte	0x2
 6068 0037 7B0D0000 		.4byte	.LASF0
 6069 003b 03       		.uleb128 0x3
 6070 003c 01       		.byte	0x1
 6071 003d 06       		.byte	0x6
 6072 003e 99160000 		.4byte	.LASF1
 6073 0042 02       		.uleb128 0x2
 6074 0043 D30B0000 		.4byte	.LASF3
 6075 0047 02       		.byte	0x2
 6076 0048 48       		.byte	0x48
 6077 0049 4D000000 		.4byte	0x4d
 6078 004d 03       		.uleb128 0x3
 6079 004e 01       		.byte	0x1
 6080 004f 08       		.byte	0x8
 6081 0050 B4140000 		.4byte	.LASF4
 6082 0054 02       		.uleb128 0x2
 6083 0055 17050000 		.4byte	.LASF5
 6084 0059 02       		.byte	0x2
 6085 005a 4B       		.byte	0x4b
 6086 005b 5F000000 		.4byte	0x5f
 6087 005f 03       		.uleb128 0x3
 6088 0060 02       		.byte	0x2
 6089 0061 05       		.byte	0x5
 6090 0062 01110000 		.4byte	.LASF6
 6091 0066 02       		.uleb128 0x2
 6092 0067 F20F0000 		.4byte	.LASF7
 6093 006b 02       		.byte	0x2
 6094 006c 4E       		.byte	0x4e
 6095 006d 71000000 		.4byte	0x71
 6096 0071 03       		.uleb128 0x3
 6097 0072 02       		.byte	0x2
 6098 0073 07       		.byte	0x7
 6099 0074 BB160000 		.4byte	.LASF8
 6100 0078 02       		.uleb128 0x2
 6101 0079 0C140000 		.4byte	.LASF9
 6102 007d 02       		.byte	0x2
 6103 007e 51       		.byte	0x51
 6104 007f 83000000 		.4byte	0x83
 6105 0083 03       		.uleb128 0x3
 6106 0084 04       		.byte	0x4
 6107 0085 05       		.byte	0x5
 6108 0086 07000000 		.4byte	.LASF10
 6109 008a 02       		.uleb128 0x2
 6110 008b D8010000 		.4byte	.LASF11
 6111 008f 02       		.byte	0x2
 6112 0090 54       		.byte	0x54
 6113 0091 95000000 		.4byte	0x95
 6114 0095 03       		.uleb128 0x3
 6115 0096 04       		.byte	0x4
 6116 0097 07       		.byte	0x7
 6117 0098 BD130000 		.4byte	.LASF12
 6118 009c 03       		.uleb128 0x3
 6119 009d 08       		.byte	0x8
ARM GAS  /tmp/ccwDRvq0.s 			page 144


 6120 009e 05       		.byte	0x5
 6121 009f 730B0000 		.4byte	.LASF13
 6122 00a3 03       		.uleb128 0x3
 6123 00a4 08       		.byte	0x8
 6124 00a5 07       		.byte	0x7
 6125 00a6 8D050000 		.4byte	.LASF14
 6126 00aa 03       		.uleb128 0x3
 6127 00ab 04       		.byte	0x4
 6128 00ac 04       		.byte	0x4
 6129 00ad D6040000 		.4byte	.LASF15
 6130 00b1 03       		.uleb128 0x3
 6131 00b2 08       		.byte	0x8
 6132 00b3 04       		.byte	0x4
 6133 00b4 52170000 		.4byte	.LASF16
 6134 00b8 04       		.uleb128 0x4
 6135 00b9 73746400 		.ascii	"std\000"
 6136 00bd 0E       		.byte	0xe
 6137 00be 00       		.byte	0x0
 6138 00bf A7020000 		.4byte	0x2a7
 6139 00c3 05       		.uleb128 0x5
 6140 00c4 03       		.byte	0x3
 6141 00c5 33       		.byte	0x33
 6142 00c6 850B0000 		.4byte	0xb85
 6143 00ca 05       		.uleb128 0x5
 6144 00cb 03       		.byte	0x3
 6145 00cc 34       		.byte	0x34
 6146 00cd 900B0000 		.4byte	0xb90
 6147 00d1 05       		.uleb128 0x5
 6148 00d2 04       		.byte	0x4
 6149 00d3 5F       		.byte	0x5f
 6150 00d4 D60B0000 		.4byte	0xbd6
 6151 00d8 05       		.uleb128 0x5
 6152 00d9 04       		.byte	0x4
 6153 00da 60       		.byte	0x60
 6154 00db E10B0000 		.4byte	0xbe1
 6155 00df 05       		.uleb128 0x5
 6156 00e0 04       		.byte	0x4
 6157 00e1 62       		.byte	0x62
 6158 00e2 EC0B0000 		.4byte	0xbec
 6159 00e6 05       		.uleb128 0x5
 6160 00e7 04       		.byte	0x4
 6161 00e8 63       		.byte	0x63
 6162 00e9 060C0000 		.4byte	0xc06
 6163 00ed 05       		.uleb128 0x5
 6164 00ee 04       		.byte	0x4
 6165 00ef 64       		.byte	0x64
 6166 00f0 1D0C0000 		.4byte	0xc1d
 6167 00f4 05       		.uleb128 0x5
 6168 00f5 04       		.byte	0x4
 6169 00f6 65       		.byte	0x65
 6170 00f7 350C0000 		.4byte	0xc35
 6171 00fb 05       		.uleb128 0x5
 6172 00fc 04       		.byte	0x4
 6173 00fd 66       		.byte	0x66
 6174 00fe 4D0C0000 		.4byte	0xc4d
 6175 0102 05       		.uleb128 0x5
 6176 0103 04       		.byte	0x4
ARM GAS  /tmp/ccwDRvq0.s 			page 145


 6177 0104 67       		.byte	0x67
 6178 0105 640C0000 		.4byte	0xc64
 6179 0109 05       		.uleb128 0x5
 6180 010a 04       		.byte	0x4
 6181 010b 68       		.byte	0x68
 6182 010c 7B0C0000 		.4byte	0xc7b
 6183 0110 05       		.uleb128 0x5
 6184 0111 04       		.byte	0x4
 6185 0112 69       		.byte	0x69
 6186 0113 9D0C0000 		.4byte	0xc9d
 6187 0117 05       		.uleb128 0x5
 6188 0118 04       		.byte	0x4
 6189 0119 6A       		.byte	0x6a
 6190 011a BE0C0000 		.4byte	0xcbe
 6191 011e 05       		.uleb128 0x5
 6192 011f 04       		.byte	0x4
 6193 0120 6E       		.byte	0x6e
 6194 0121 DB0C0000 		.4byte	0xcdb
 6195 0125 05       		.uleb128 0x5
 6196 0126 04       		.byte	0x4
 6197 0127 6F       		.byte	0x6f
 6198 0128 010D0000 		.4byte	0xd01
 6199 012c 05       		.uleb128 0x5
 6200 012d 04       		.byte	0x4
 6201 012e 71       		.byte	0x71
 6202 012f 220D0000 		.4byte	0xd22
 6203 0133 05       		.uleb128 0x5
 6204 0134 04       		.byte	0x4
 6205 0135 72       		.byte	0x72
 6206 0136 430D0000 		.4byte	0xd43
 6207 013a 05       		.uleb128 0x5
 6208 013b 04       		.byte	0x4
 6209 013c 73       		.byte	0x73
 6210 013d 6A0D0000 		.4byte	0xd6a
 6211 0141 05       		.uleb128 0x5
 6212 0142 04       		.byte	0x4
 6213 0143 75       		.byte	0x75
 6214 0144 810D0000 		.4byte	0xd81
 6215 0148 05       		.uleb128 0x5
 6216 0149 04       		.byte	0x4
 6217 014a 76       		.byte	0x76
 6218 014b 980D0000 		.4byte	0xd98
 6219 014f 05       		.uleb128 0x5
 6220 0150 04       		.byte	0x4
 6221 0151 77       		.byte	0x77
 6222 0152 A50D0000 		.4byte	0xda5
 6223 0156 05       		.uleb128 0x5
 6224 0157 04       		.byte	0x4
 6225 0158 78       		.byte	0x78
 6226 0159 BC0D0000 		.4byte	0xdbc
 6227 015d 05       		.uleb128 0x5
 6228 015e 04       		.byte	0x4
 6229 015f 7D       		.byte	0x7d
 6230 0160 D00D0000 		.4byte	0xdd0
 6231 0164 05       		.uleb128 0x5
 6232 0165 04       		.byte	0x4
 6233 0166 7E       		.byte	0x7e
ARM GAS  /tmp/ccwDRvq0.s 			page 146


 6234 0167 E80D0000 		.4byte	0xde8
 6235 016b 05       		.uleb128 0x5
 6236 016c 04       		.byte	0x4
 6237 016d 7F       		.byte	0x7f
 6238 016e 050E0000 		.4byte	0xe05
 6239 0172 05       		.uleb128 0x5
 6240 0173 04       		.byte	0x4
 6241 0174 81       		.byte	0x81
 6242 0175 180E0000 		.4byte	0xe18
 6243 0179 05       		.uleb128 0x5
 6244 017a 04       		.byte	0x4
 6245 017b 82       		.byte	0x82
 6246 017c 300E0000 		.4byte	0xe30
 6247 0180 05       		.uleb128 0x5
 6248 0181 04       		.byte	0x4
 6249 0182 85       		.byte	0x85
 6250 0183 560E0000 		.4byte	0xe56
 6251 0187 05       		.uleb128 0x5
 6252 0188 04       		.byte	0x4
 6253 0189 86       		.byte	0x86
 6254 018a 630E0000 		.4byte	0xe63
 6255 018e 05       		.uleb128 0x5
 6256 018f 04       		.byte	0x4
 6257 0190 87       		.byte	0x87
 6258 0191 7A0E0000 		.4byte	0xe7a
 6259 0195 05       		.uleb128 0x5
 6260 0196 05       		.byte	0x5
 6261 0197 53       		.byte	0x53
 6262 0198 960E0000 		.4byte	0xe96
 6263 019c 05       		.uleb128 0x5
 6264 019d 05       		.byte	0x5
 6265 019e 56       		.byte	0x56
 6266 019f B20E0000 		.4byte	0xeb2
 6267 01a3 05       		.uleb128 0x5
 6268 01a4 05       		.byte	0x5
 6269 01a5 5C       		.byte	0x5c
 6270 01a6 C90E0000 		.4byte	0xec9
 6271 01aa 05       		.uleb128 0x5
 6272 01ab 05       		.byte	0x5
 6273 01ac 5D       		.byte	0x5d
 6274 01ad E50E0000 		.4byte	0xee5
 6275 01b1 05       		.uleb128 0x5
 6276 01b2 06       		.byte	0x6
 6277 01b3 66       		.byte	0x66
 6278 01b4 060F0000 		.4byte	0xf06
 6279 01b8 05       		.uleb128 0x5
 6280 01b9 06       		.byte	0x6
 6281 01ba 67       		.byte	0x67
 6282 01bb 2F0F0000 		.4byte	0xf2f
 6283 01bf 05       		.uleb128 0x5
 6284 01c0 06       		.byte	0x6
 6285 01c1 6B       		.byte	0x6b
 6286 01c2 580F0000 		.4byte	0xf58
 6287 01c6 05       		.uleb128 0x5
 6288 01c7 06       		.byte	0x6
 6289 01c8 6C       		.byte	0x6c
 6290 01c9 6F0F0000 		.4byte	0xf6f
ARM GAS  /tmp/ccwDRvq0.s 			page 147


 6291 01cd 05       		.uleb128 0x5
 6292 01ce 06       		.byte	0x6
 6293 01cf 6D       		.byte	0x6d
 6294 01d0 860F0000 		.4byte	0xf86
 6295 01d4 05       		.uleb128 0x5
 6296 01d5 06       		.byte	0x6
 6297 01d6 6E       		.byte	0x6e
 6298 01d7 9D0F0000 		.4byte	0xf9d
 6299 01db 05       		.uleb128 0x5
 6300 01dc 06       		.byte	0x6
 6301 01dd 6F       		.byte	0x6f
 6302 01de B40F0000 		.4byte	0xfb4
 6303 01e2 05       		.uleb128 0x5
 6304 01e3 06       		.byte	0x6
 6305 01e4 71       		.byte	0x71
 6306 01e5 00100000 		.4byte	0x1000
 6307 01e9 05       		.uleb128 0x5
 6308 01ea 06       		.byte	0x6
 6309 01eb 74       		.byte	0x74
 6310 01ec 1C100000 		.4byte	0x101c
 6311 01f0 05       		.uleb128 0x5
 6312 01f1 06       		.byte	0x6
 6313 01f2 76       		.byte	0x76
 6314 01f3 33100000 		.4byte	0x1033
 6315 01f7 05       		.uleb128 0x5
 6316 01f8 06       		.byte	0x6
 6317 01f9 79       		.byte	0x79
 6318 01fa 4F100000 		.4byte	0x104f
 6319 01fe 05       		.uleb128 0x5
 6320 01ff 06       		.byte	0x6
 6321 0200 7A       		.byte	0x7a
 6322 0201 6B100000 		.4byte	0x106b
 6323 0205 05       		.uleb128 0x5
 6324 0206 06       		.byte	0x6
 6325 0207 7B       		.byte	0x7b
 6326 0208 99100000 		.4byte	0x1099
 6327 020c 05       		.uleb128 0x5
 6328 020d 06       		.byte	0x6
 6329 020e 7D       		.byte	0x7d
 6330 020f BA100000 		.4byte	0x10ba
 6331 0213 05       		.uleb128 0x5
 6332 0214 06       		.byte	0x6
 6333 0215 7E       		.byte	0x7e
 6334 0216 DC100000 		.4byte	0x10dc
 6335 021a 05       		.uleb128 0x5
 6336 021b 06       		.byte	0x6
 6337 021c 80       		.byte	0x80
 6338 021d E9100000 		.4byte	0x10e9
 6339 0221 05       		.uleb128 0x5
 6340 0222 06       		.byte	0x6
 6341 0223 81       		.byte	0x81
 6342 0224 FC100000 		.4byte	0x10fc
 6343 0228 05       		.uleb128 0x5
 6344 0229 06       		.byte	0x6
 6345 022a 82       		.byte	0x82
 6346 022b 1E110000 		.4byte	0x111e
 6347 022f 05       		.uleb128 0x5
ARM GAS  /tmp/ccwDRvq0.s 			page 148


 6348 0230 06       		.byte	0x6
 6349 0231 83       		.byte	0x83
 6350 0232 3F110000 		.4byte	0x113f
 6351 0236 05       		.uleb128 0x5
 6352 0237 06       		.byte	0x6
 6353 0238 84       		.byte	0x84
 6354 0239 60110000 		.4byte	0x1160
 6355 023d 05       		.uleb128 0x5
 6356 023e 06       		.byte	0x6
 6357 023f 86       		.byte	0x86
 6358 0240 77110000 		.4byte	0x1177
 6359 0244 05       		.uleb128 0x5
 6360 0245 06       		.byte	0x6
 6361 0246 87       		.byte	0x87
 6362 0247 A3110000 		.4byte	0x11a3
 6363 024b 05       		.uleb128 0x5
 6364 024c 07       		.byte	0x7
 6365 024d 3E       		.byte	0x3e
 6366 024e C00B0000 		.4byte	0xbc0
 6367 0252 05       		.uleb128 0x5
 6368 0253 07       		.byte	0x7
 6369 0254 3F       		.byte	0x3f
 6370 0255 CB0B0000 		.4byte	0xbcb
 6371 0259 05       		.uleb128 0x5
 6372 025a 07       		.byte	0x7
 6373 025b 40       		.byte	0x40
 6374 025c BF110000 		.4byte	0x11bf
 6375 0260 05       		.uleb128 0x5
 6376 0261 07       		.byte	0x7
 6377 0262 42       		.byte	0x42
 6378 0263 65120000 		.4byte	0x1265
 6379 0267 05       		.uleb128 0x5
 6380 0268 07       		.byte	0x7
 6381 0269 43       		.byte	0x43
 6382 026a 72120000 		.4byte	0x1272
 6383 026e 05       		.uleb128 0x5
 6384 026f 07       		.byte	0x7
 6385 0270 44       		.byte	0x44
 6386 0271 8E120000 		.4byte	0x128e
 6387 0275 05       		.uleb128 0x5
 6388 0276 07       		.byte	0x7
 6389 0277 45       		.byte	0x45
 6390 0278 AB120000 		.4byte	0x12ab
 6391 027c 05       		.uleb128 0x5
 6392 027d 07       		.byte	0x7
 6393 027e 46       		.byte	0x46
 6394 027f C8120000 		.4byte	0x12c8
 6395 0283 05       		.uleb128 0x5
 6396 0284 07       		.byte	0x7
 6397 0285 47       		.byte	0x47
 6398 0286 EA120000 		.4byte	0x12ea
 6399 028a 05       		.uleb128 0x5
 6400 028b 07       		.byte	0x7
 6401 028c 48       		.byte	0x48
 6402 028d 0C130000 		.4byte	0x130c
 6403 0291 05       		.uleb128 0x5
 6404 0292 07       		.byte	0x7
ARM GAS  /tmp/ccwDRvq0.s 			page 149


 6405 0293 49       		.byte	0x49
 6406 0294 23130000 		.4byte	0x1323
 6407 0298 05       		.uleb128 0x5
 6408 0299 07       		.byte	0x7
 6409 029a 4A       		.byte	0x4a
 6410 029b 3A130000 		.4byte	0x133a
 6411 029f 05       		.uleb128 0x5
 6412 02a0 08       		.byte	0x8
 6413 02a1 38       		.byte	0x38
 6414 02a2 60130000 		.4byte	0x1360
 6415 02a6 00       		.byte	0x0
 6416 02a7 06       		.uleb128 0x6
 6417 02a8 E1010000 		.4byte	.LASF474
 6418 02ac 1B       		.byte	0x1b
 6419 02ad 45       		.byte	0x45
 6420 02ae 03       		.uleb128 0x3
 6421 02af 04       		.byte	0x4
 6422 02b0 07       		.byte	0x7
 6423 02b1 C3010000 		.4byte	.LASF17
 6424 02b5 07       		.uleb128 0x7
 6425 02b6 04       		.byte	0x4
 6426 02b7 05       		.byte	0x5
 6427 02b8 696E7400 		.ascii	"int\000"
 6428 02bc 02       		.uleb128 0x2
 6429 02bd 4B150000 		.4byte	.LASF18
 6430 02c1 09       		.byte	0x9
 6431 02c2 07       		.byte	0x7
 6432 02c3 B5020000 		.4byte	0x2b5
 6433 02c7 02       		.uleb128 0x2
 6434 02c8 98030000 		.4byte	.LASF19
 6435 02cc 0A       		.byte	0xa
 6436 02cd 2C       		.byte	0x2c
 6437 02ce 83000000 		.4byte	0x83
 6438 02d2 08       		.uleb128 0x8
 6439 02d3 EF130000 		.4byte	.LASF20
 6440 02d7 0B       		.byte	0xb
 6441 02d8 6001     		.2byte	0x160
 6442 02da AE020000 		.4byte	0x2ae
 6443 02de 09       		.uleb128 0x9
 6444 02df 08       		.byte	0x8
 6445 02e0 0A       		.byte	0xa
 6446 02e1 44       		.byte	0x44
 6447 02e2 EF0D0000 		.4byte	.LASF163
 6448 02e6 26030000 		.4byte	0x326
 6449 02ea 0A       		.uleb128 0xa
 6450 02eb 04       		.byte	0x4
 6451 02ec 0A       		.byte	0xa
 6452 02ed 47       		.byte	0x47
 6453 02ee 09030000 		.4byte	0x309
 6454 02f2 0B       		.uleb128 0xb
 6455 02f3 A80B0000 		.4byte	.LASF21
 6456 02f7 0A       		.byte	0xa
 6457 02f8 48       		.byte	0x48
 6458 02f9 D2020000 		.4byte	0x2d2
 6459 02fd 0B       		.uleb128 0xb
 6460 02fe E8110000 		.4byte	.LASF22
 6461 0302 0A       		.byte	0xa
ARM GAS  /tmp/ccwDRvq0.s 			page 150


 6462 0303 49       		.byte	0x49
 6463 0304 26030000 		.4byte	0x326
 6464 0308 00       		.byte	0x0
 6465 0309 0C       		.uleb128 0xc
 6466 030a BB040000 		.4byte	.LASF23
 6467 030e 0A       		.byte	0xa
 6468 030f 45       		.byte	0x45
 6469 0310 B5020000 		.4byte	0x2b5
 6470 0314 02       		.byte	0x2
 6471 0315 23       		.byte	0x23
 6472 0316 00       		.uleb128 0x0
 6473 0317 0C       		.uleb128 0xc
 6474 0318 01080000 		.4byte	.LASF24
 6475 031c 0A       		.byte	0xa
 6476 031d 4A       		.byte	0x4a
 6477 031e EA020000 		.4byte	0x2ea
 6478 0322 02       		.byte	0x2
 6479 0323 23       		.byte	0x23
 6480 0324 04       		.uleb128 0x4
 6481 0325 00       		.byte	0x0
 6482 0326 0D       		.uleb128 0xd
 6483 0327 4D000000 		.4byte	0x4d
 6484 032b 36030000 		.4byte	0x336
 6485 032f 0E       		.uleb128 0xe
 6486 0330 AE020000 		.4byte	0x2ae
 6487 0334 03       		.byte	0x3
 6488 0335 00       		.byte	0x0
 6489 0336 02       		.uleb128 0x2
 6490 0337 6F0E0000 		.4byte	.LASF25
 6491 033b 0A       		.byte	0xa
 6492 033c 4F       		.byte	0x4f
 6493 033d BC020000 		.4byte	0x2bc
 6494 0341 0F       		.uleb128 0xf
 6495 0342 04       		.byte	0x4
 6496 0343 02       		.uleb128 0x2
 6497 0344 27030000 		.4byte	.LASF26
 6498 0348 0C       		.byte	0xc
 6499 0349 15       		.byte	0x15
 6500 034a 95000000 		.4byte	0x95
 6501 034e 10       		.uleb128 0x10
 6502 034f E9030000 		.4byte	.LASF31
 6503 0353 18       		.byte	0x18
 6504 0354 0C       		.byte	0xc
 6505 0355 2D       		.byte	0x2d
 6506 0356 AD030000 		.4byte	0x3ad
 6507 035a 0C       		.uleb128 0xc
 6508 035b 53080000 		.4byte	.LASF27
 6509 035f 0C       		.byte	0xc
 6510 0360 2E       		.byte	0x2e
 6511 0361 AD030000 		.4byte	0x3ad
 6512 0365 02       		.byte	0x2
 6513 0366 23       		.byte	0x23
 6514 0367 00       		.uleb128 0x0
 6515 0368 11       		.uleb128 0x11
 6516 0369 5F6B00   		.ascii	"_k\000"
 6517 036c 0C       		.byte	0xc
 6518 036d 2F       		.byte	0x2f
ARM GAS  /tmp/ccwDRvq0.s 			page 151


 6519 036e B5020000 		.4byte	0x2b5
 6520 0372 02       		.byte	0x2
 6521 0373 23       		.byte	0x23
 6522 0374 04       		.uleb128 0x4
 6523 0375 0C       		.uleb128 0xc
 6524 0376 F5000000 		.4byte	.LASF28
 6525 037a 0C       		.byte	0xc
 6526 037b 2F       		.byte	0x2f
 6527 037c B5020000 		.4byte	0x2b5
 6528 0380 02       		.byte	0x2
 6529 0381 23       		.byte	0x23
 6530 0382 08       		.uleb128 0x8
 6531 0383 0C       		.uleb128 0xc
 6532 0384 B5020000 		.4byte	.LASF29
 6533 0388 0C       		.byte	0xc
 6534 0389 2F       		.byte	0x2f
 6535 038a B5020000 		.4byte	0x2b5
 6536 038e 02       		.byte	0x2
 6537 038f 23       		.byte	0x23
 6538 0390 0C       		.uleb128 0xc
 6539 0391 0C       		.uleb128 0xc
 6540 0392 CB050000 		.4byte	.LASF30
 6541 0396 0C       		.byte	0xc
 6542 0397 2F       		.byte	0x2f
 6543 0398 B5020000 		.4byte	0x2b5
 6544 039c 02       		.byte	0x2
 6545 039d 23       		.byte	0x23
 6546 039e 10       		.uleb128 0x10
 6547 039f 11       		.uleb128 0x11
 6548 03a0 5F7800   		.ascii	"_x\000"
 6549 03a3 0C       		.byte	0xc
 6550 03a4 30       		.byte	0x30
 6551 03a5 B3030000 		.4byte	0x3b3
 6552 03a9 02       		.byte	0x2
 6553 03aa 23       		.byte	0x23
 6554 03ab 14       		.uleb128 0x14
 6555 03ac 00       		.byte	0x0
 6556 03ad 12       		.uleb128 0x12
 6557 03ae 04       		.byte	0x4
 6558 03af 4E030000 		.4byte	0x34e
 6559 03b3 0D       		.uleb128 0xd
 6560 03b4 95000000 		.4byte	0x95
 6561 03b8 C3030000 		.4byte	0x3c3
 6562 03bc 0E       		.uleb128 0xe
 6563 03bd AE020000 		.4byte	0x2ae
 6564 03c1 00       		.byte	0x0
 6565 03c2 00       		.byte	0x0
 6566 03c3 10       		.uleb128 0x10
 6567 03c4 4E130000 		.4byte	.LASF32
 6568 03c8 24       		.byte	0x24
 6569 03c9 0C       		.byte	0xc
 6570 03ca 35       		.byte	0x35
 6571 03cb 4E040000 		.4byte	0x44e
 6572 03cf 0C       		.uleb128 0xc
 6573 03d0 A9070000 		.4byte	.LASF33
 6574 03d4 0C       		.byte	0xc
 6575 03d5 36       		.byte	0x36
ARM GAS  /tmp/ccwDRvq0.s 			page 152


 6576 03d6 B5020000 		.4byte	0x2b5
 6577 03da 02       		.byte	0x2
 6578 03db 23       		.byte	0x23
 6579 03dc 00       		.uleb128 0x0
 6580 03dd 0C       		.uleb128 0xc
 6581 03de 14140000 		.4byte	.LASF34
 6582 03e2 0C       		.byte	0xc
 6583 03e3 37       		.byte	0x37
 6584 03e4 B5020000 		.4byte	0x2b5
 6585 03e8 02       		.byte	0x2
 6586 03e9 23       		.byte	0x23
 6587 03ea 04       		.uleb128 0x4
 6588 03eb 0C       		.uleb128 0xc
 6589 03ec 4A040000 		.4byte	.LASF35
 6590 03f0 0C       		.byte	0xc
 6591 03f1 38       		.byte	0x38
 6592 03f2 B5020000 		.4byte	0x2b5
 6593 03f6 02       		.byte	0x2
 6594 03f7 23       		.byte	0x23
 6595 03f8 08       		.uleb128 0x8
 6596 03f9 0C       		.uleb128 0xc
 6597 03fa 760A0000 		.4byte	.LASF36
 6598 03fe 0C       		.byte	0xc
 6599 03ff 39       		.byte	0x39
 6600 0400 B5020000 		.4byte	0x2b5
 6601 0404 02       		.byte	0x2
 6602 0405 23       		.byte	0x23
 6603 0406 0C       		.uleb128 0xc
 6604 0407 0C       		.uleb128 0xc
 6605 0408 770F0000 		.4byte	.LASF37
 6606 040c 0C       		.byte	0xc
 6607 040d 3A       		.byte	0x3a
 6608 040e B5020000 		.4byte	0x2b5
 6609 0412 02       		.byte	0x2
 6610 0413 23       		.byte	0x23
 6611 0414 10       		.uleb128 0x10
 6612 0415 0C       		.uleb128 0xc
 6613 0416 F6110000 		.4byte	.LASF38
 6614 041a 0C       		.byte	0xc
 6615 041b 3B       		.byte	0x3b
 6616 041c B5020000 		.4byte	0x2b5
 6617 0420 02       		.byte	0x2
 6618 0421 23       		.byte	0x23
 6619 0422 14       		.uleb128 0x14
 6620 0423 0C       		.uleb128 0xc
 6621 0424 FF030000 		.4byte	.LASF39
 6622 0428 0C       		.byte	0xc
 6623 0429 3C       		.byte	0x3c
 6624 042a B5020000 		.4byte	0x2b5
 6625 042e 02       		.byte	0x2
 6626 042f 23       		.byte	0x23
 6627 0430 18       		.uleb128 0x18
 6628 0431 0C       		.uleb128 0xc
 6629 0432 F7070000 		.4byte	.LASF40
 6630 0436 0C       		.byte	0xc
 6631 0437 3D       		.byte	0x3d
 6632 0438 B5020000 		.4byte	0x2b5
ARM GAS  /tmp/ccwDRvq0.s 			page 153


 6633 043c 02       		.byte	0x2
 6634 043d 23       		.byte	0x23
 6635 043e 1C       		.uleb128 0x1c
 6636 043f 0C       		.uleb128 0xc
 6637 0440 800E0000 		.4byte	.LASF41
 6638 0444 0C       		.byte	0xc
 6639 0445 3E       		.byte	0x3e
 6640 0446 B5020000 		.4byte	0x2b5
 6641 044a 02       		.byte	0x2
 6642 044b 23       		.byte	0x23
 6643 044c 20       		.uleb128 0x20
 6644 044d 00       		.byte	0x0
 6645 044e 13       		.uleb128 0x13
 6646 044f 1D010000 		.4byte	.LASF42
 6647 0453 0801     		.2byte	0x108
 6648 0455 0C       		.byte	0xc
 6649 0456 47       		.byte	0x47
 6650 0457 97040000 		.4byte	0x497
 6651 045b 0C       		.uleb128 0xc
 6652 045c 8A160000 		.4byte	.LASF43
 6653 0460 0C       		.byte	0xc
 6654 0461 48       		.byte	0x48
 6655 0462 97040000 		.4byte	0x497
 6656 0466 02       		.byte	0x2
 6657 0467 23       		.byte	0x23
 6658 0468 00       		.uleb128 0x0
 6659 0469 0C       		.uleb128 0xc
 6660 046a 5E140000 		.4byte	.LASF44
 6661 046e 0C       		.byte	0xc
 6662 046f 49       		.byte	0x49
 6663 0470 97040000 		.4byte	0x497
 6664 0474 03       		.byte	0x3
 6665 0475 23       		.byte	0x23
 6666 0476 8001     		.uleb128 0x80
 6667 0478 0C       		.uleb128 0xc
 6668 0479 1D170000 		.4byte	.LASF45
 6669 047d 0C       		.byte	0xc
 6670 047e 4B       		.byte	0x4b
 6671 047f 43030000 		.4byte	0x343
 6672 0483 03       		.byte	0x3
 6673 0484 23       		.byte	0x23
 6674 0485 8002     		.uleb128 0x100
 6675 0487 0C       		.uleb128 0xc
 6676 0488 05180000 		.4byte	.LASF46
 6677 048c 0C       		.byte	0xc
 6678 048d 4E       		.byte	0x4e
 6679 048e 43030000 		.4byte	0x343
 6680 0492 03       		.byte	0x3
 6681 0493 23       		.byte	0x23
 6682 0494 8402     		.uleb128 0x104
 6683 0496 00       		.byte	0x0
 6684 0497 0D       		.uleb128 0xd
 6685 0498 41030000 		.4byte	0x341
 6686 049c A7040000 		.4byte	0x4a7
 6687 04a0 0E       		.uleb128 0xe
 6688 04a1 AE020000 		.4byte	0x2ae
 6689 04a5 1F       		.byte	0x1f
ARM GAS  /tmp/ccwDRvq0.s 			page 154


 6690 04a6 00       		.byte	0x0
 6691 04a7 13       		.uleb128 0x13
 6692 04a8 70100000 		.4byte	.LASF47
 6693 04ac 9001     		.2byte	0x190
 6694 04ae 0C       		.byte	0xc
 6695 04af 59       		.byte	0x59
 6696 04b0 EE040000 		.4byte	0x4ee
 6697 04b4 0C       		.uleb128 0xc
 6698 04b5 53080000 		.4byte	.LASF27
 6699 04b9 0C       		.byte	0xc
 6700 04ba 5A       		.byte	0x5a
 6701 04bb EE040000 		.4byte	0x4ee
 6702 04bf 02       		.byte	0x2
 6703 04c0 23       		.byte	0x23
 6704 04c1 00       		.uleb128 0x0
 6705 04c2 0C       		.uleb128 0xc
 6706 04c3 0E080000 		.4byte	.LASF48
 6707 04c7 0C       		.byte	0xc
 6708 04c8 5B       		.byte	0x5b
 6709 04c9 B5020000 		.4byte	0x2b5
 6710 04cd 02       		.byte	0x2
 6711 04ce 23       		.byte	0x23
 6712 04cf 04       		.uleb128 0x4
 6713 04d0 0C       		.uleb128 0xc
 6714 04d1 AE030000 		.4byte	.LASF49
 6715 04d5 0C       		.byte	0xc
 6716 04d6 5D       		.byte	0x5d
 6717 04d7 F4040000 		.4byte	0x4f4
 6718 04db 02       		.byte	0x2
 6719 04dc 23       		.byte	0x23
 6720 04dd 08       		.uleb128 0x8
 6721 04de 0C       		.uleb128 0xc
 6722 04df 1D010000 		.4byte	.LASF42
 6723 04e3 0C       		.byte	0xc
 6724 04e4 5E       		.byte	0x5e
 6725 04e5 4E040000 		.4byte	0x44e
 6726 04e9 03       		.byte	0x3
 6727 04ea 23       		.byte	0x23
 6728 04eb 8801     		.uleb128 0x88
 6729 04ed 00       		.byte	0x0
 6730 04ee 12       		.uleb128 0x12
 6731 04ef 04       		.byte	0x4
 6732 04f0 A7040000 		.4byte	0x4a7
 6733 04f4 0D       		.uleb128 0xd
 6734 04f5 05050000 		.4byte	0x505
 6735 04f9 04050000 		.4byte	0x504
 6736 04fd 0E       		.uleb128 0xe
 6737 04fe AE020000 		.4byte	0x2ae
 6738 0502 1F       		.byte	0x1f
 6739 0503 00       		.byte	0x0
 6740 0504 14       		.uleb128 0x14
 6741 0505 12       		.uleb128 0x12
 6742 0506 04       		.byte	0x4
 6743 0507 04050000 		.4byte	0x504
 6744 050b 10       		.uleb128 0x10
 6745 050c B6150000 		.4byte	.LASF50
 6746 0510 08       		.byte	0x8
ARM GAS  /tmp/ccwDRvq0.s 			page 155


 6747 0511 0C       		.byte	0xc
 6748 0512 69       		.byte	0x69
 6749 0513 34050000 		.4byte	0x534
 6750 0517 0C       		.uleb128 0xc
 6751 0518 DC0C0000 		.4byte	.LASF51
 6752 051c 0C       		.byte	0xc
 6753 051d 6A       		.byte	0x6a
 6754 051e 34050000 		.4byte	0x534
 6755 0522 02       		.byte	0x2
 6756 0523 23       		.byte	0x23
 6757 0524 00       		.uleb128 0x0
 6758 0525 0C       		.uleb128 0xc
 6759 0526 F5010000 		.4byte	.LASF52
 6760 052a 0C       		.byte	0xc
 6761 052b 6B       		.byte	0x6b
 6762 052c B5020000 		.4byte	0x2b5
 6763 0530 02       		.byte	0x2
 6764 0531 23       		.byte	0x23
 6765 0532 04       		.uleb128 0x4
 6766 0533 00       		.byte	0x0
 6767 0534 12       		.uleb128 0x12
 6768 0535 04       		.byte	0x4
 6769 0536 4D000000 		.4byte	0x4d
 6770 053a 10       		.uleb128 0x10
 6771 053b 26170000 		.4byte	.LASF53
 6772 053f 68       		.byte	0x68
 6773 0540 0C       		.byte	0xc
 6774 0541 B3       		.byte	0xb3
 6775 0542 94060000 		.4byte	0x694
 6776 0546 11       		.uleb128 0x11
 6777 0547 5F7000   		.ascii	"_p\000"
 6778 054a 0C       		.byte	0xc
 6779 054b B4       		.byte	0xb4
 6780 054c 34050000 		.4byte	0x534
 6781 0550 02       		.byte	0x2
 6782 0551 23       		.byte	0x23
 6783 0552 00       		.uleb128 0x0
 6784 0553 11       		.uleb128 0x11
 6785 0554 5F7200   		.ascii	"_r\000"
 6786 0557 0C       		.byte	0xc
 6787 0558 B5       		.byte	0xb5
 6788 0559 B5020000 		.4byte	0x2b5
 6789 055d 02       		.byte	0x2
 6790 055e 23       		.byte	0x23
 6791 055f 04       		.uleb128 0x4
 6792 0560 11       		.uleb128 0x11
 6793 0561 5F7700   		.ascii	"_w\000"
 6794 0564 0C       		.byte	0xc
 6795 0565 B6       		.byte	0xb6
 6796 0566 B5020000 		.4byte	0x2b5
 6797 056a 02       		.byte	0x2
 6798 056b 23       		.byte	0x23
 6799 056c 08       		.uleb128 0x8
 6800 056d 0C       		.uleb128 0xc
 6801 056e 1B020000 		.4byte	.LASF54
 6802 0572 0C       		.byte	0xc
 6803 0573 B7       		.byte	0xb7
ARM GAS  /tmp/ccwDRvq0.s 			page 156


 6804 0574 5F000000 		.4byte	0x5f
 6805 0578 02       		.byte	0x2
 6806 0579 23       		.byte	0x23
 6807 057a 0C       		.uleb128 0xc
 6808 057b 0C       		.uleb128 0xc
 6809 057c 19120000 		.4byte	.LASF55
 6810 0580 0C       		.byte	0xc
 6811 0581 B8       		.byte	0xb8
 6812 0582 5F000000 		.4byte	0x5f
 6813 0586 02       		.byte	0x2
 6814 0587 23       		.byte	0x23
 6815 0588 0E       		.uleb128 0xe
 6816 0589 11       		.uleb128 0x11
 6817 058a 5F626600 		.ascii	"_bf\000"
 6818 058e 0C       		.byte	0xc
 6819 058f B9       		.byte	0xb9
 6820 0590 0B050000 		.4byte	0x50b
 6821 0594 02       		.byte	0x2
 6822 0595 23       		.byte	0x23
 6823 0596 10       		.uleb128 0x10
 6824 0597 0C       		.uleb128 0xc
 6825 0598 12020000 		.4byte	.LASF56
 6826 059c 0C       		.byte	0xc
 6827 059d BA       		.byte	0xba
 6828 059e B5020000 		.4byte	0x2b5
 6829 05a2 02       		.byte	0x2
 6830 05a3 23       		.byte	0x23
 6831 05a4 18       		.uleb128 0x18
 6832 05a5 0C       		.uleb128 0xc
 6833 05a6 CC030000 		.4byte	.LASF57
 6834 05aa 0C       		.byte	0xc
 6835 05ab C1       		.byte	0xc1
 6836 05ac 41030000 		.4byte	0x341
 6837 05b0 02       		.byte	0x2
 6838 05b1 23       		.byte	0x23
 6839 05b2 1C       		.uleb128 0x1c
 6840 05b3 0C       		.uleb128 0xc
 6841 05b4 1A070000 		.4byte	.LASF58
 6842 05b8 0C       		.byte	0xc
 6843 05b9 C3       		.byte	0xc3
 6844 05ba 9D090000 		.4byte	0x99d
 6845 05be 02       		.byte	0x2
 6846 05bf 23       		.byte	0x23
 6847 05c0 20       		.uleb128 0x20
 6848 05c1 0C       		.uleb128 0xc
 6849 05c2 16100000 		.4byte	.LASF59
 6850 05c6 0C       		.byte	0xc
 6851 05c7 C5       		.byte	0xc5
 6852 05c8 CC090000 		.4byte	0x9cc
 6853 05cc 02       		.byte	0x2
 6854 05cd 23       		.byte	0x23
 6855 05ce 24       		.uleb128 0x24
 6856 05cf 0C       		.uleb128 0xc
 6857 05d0 45180000 		.4byte	.LASF60
 6858 05d4 0C       		.byte	0xc
 6859 05d5 C7       		.byte	0xc7
 6860 05d6 F0090000 		.4byte	0x9f0
ARM GAS  /tmp/ccwDRvq0.s 			page 157


 6861 05da 02       		.byte	0x2
 6862 05db 23       		.byte	0x23
 6863 05dc 28       		.uleb128 0x28
 6864 05dd 0C       		.uleb128 0xc
 6865 05de 0D0C0000 		.4byte	.LASF61
 6866 05e2 0C       		.byte	0xc
 6867 05e3 C8       		.byte	0xc8
 6868 05e4 0A0A0000 		.4byte	0xa0a
 6869 05e8 02       		.byte	0x2
 6870 05e9 23       		.byte	0x23
 6871 05ea 2C       		.uleb128 0x2c
 6872 05eb 11       		.uleb128 0x11
 6873 05ec 5F756200 		.ascii	"_ub\000"
 6874 05f0 0C       		.byte	0xc
 6875 05f1 CB       		.byte	0xcb
 6876 05f2 0B050000 		.4byte	0x50b
 6877 05f6 02       		.byte	0x2
 6878 05f7 23       		.byte	0x23
 6879 05f8 30       		.uleb128 0x30
 6880 05f9 11       		.uleb128 0x11
 6881 05fa 5F757000 		.ascii	"_up\000"
 6882 05fe 0C       		.byte	0xc
 6883 05ff CC       		.byte	0xcc
 6884 0600 34050000 		.4byte	0x534
 6885 0604 02       		.byte	0x2
 6886 0605 23       		.byte	0x23
 6887 0606 38       		.uleb128 0x38
 6888 0607 11       		.uleb128 0x11
 6889 0608 5F757200 		.ascii	"_ur\000"
 6890 060c 0C       		.byte	0xc
 6891 060d CD       		.byte	0xcd
 6892 060e B5020000 		.4byte	0x2b5
 6893 0612 02       		.byte	0x2
 6894 0613 23       		.byte	0x23
 6895 0614 3C       		.uleb128 0x3c
 6896 0615 0C       		.uleb128 0xc
 6897 0616 5C060000 		.4byte	.LASF62
 6898 061a 0C       		.byte	0xc
 6899 061b D0       		.byte	0xd0
 6900 061c 100A0000 		.4byte	0xa10
 6901 0620 02       		.byte	0x2
 6902 0621 23       		.byte	0x23
 6903 0622 40       		.uleb128 0x40
 6904 0623 0C       		.uleb128 0xc
 6905 0624 AF170000 		.4byte	.LASF63
 6906 0628 0C       		.byte	0xc
 6907 0629 D1       		.byte	0xd1
 6908 062a 200A0000 		.4byte	0xa20
 6909 062e 02       		.byte	0x2
 6910 062f 23       		.byte	0x23
 6911 0630 43       		.uleb128 0x43
 6912 0631 11       		.uleb128 0x11
 6913 0632 5F6C6200 		.ascii	"_lb\000"
 6914 0636 0C       		.byte	0xc
 6915 0637 D4       		.byte	0xd4
 6916 0638 0B050000 		.4byte	0x50b
 6917 063c 02       		.byte	0x2
ARM GAS  /tmp/ccwDRvq0.s 			page 158


 6918 063d 23       		.byte	0x23
 6919 063e 44       		.uleb128 0x44
 6920 063f 0C       		.uleb128 0xc
 6921 0640 3C020000 		.4byte	.LASF64
 6922 0644 0C       		.byte	0xc
 6923 0645 D7       		.byte	0xd7
 6924 0646 B5020000 		.4byte	0x2b5
 6925 064a 02       		.byte	0x2
 6926 064b 23       		.byte	0x23
 6927 064c 4C       		.uleb128 0x4c
 6928 064d 0C       		.uleb128 0xc
 6929 064e 54060000 		.4byte	.LASF65
 6930 0652 0C       		.byte	0xc
 6931 0653 D8       		.byte	0xd8
 6932 0654 B5020000 		.4byte	0x2b5
 6933 0658 02       		.byte	0x2
 6934 0659 23       		.byte	0x23
 6935 065a 50       		.uleb128 0x50
 6936 065b 0C       		.uleb128 0xc
 6937 065c E2110000 		.4byte	.LASF66
 6938 0660 0C       		.byte	0xc
 6939 0661 DB       		.byte	0xdb
 6940 0662 B2060000 		.4byte	0x6b2
 6941 0666 02       		.byte	0x2
 6942 0667 23       		.byte	0x23
 6943 0668 54       		.uleb128 0x54
 6944 0669 0C       		.uleb128 0xc
 6945 066a 9D130000 		.4byte	.LASF67
 6946 066e 0C       		.byte	0xc
 6947 066f DF       		.byte	0xdf
 6948 0670 36030000 		.4byte	0x336
 6949 0674 02       		.byte	0x2
 6950 0675 23       		.byte	0x23
 6951 0676 58       		.uleb128 0x58
 6952 0677 0C       		.uleb128 0xc
 6953 0678 F8020000 		.4byte	.LASF68
 6954 067c 0C       		.byte	0xc
 6955 067d E1       		.byte	0xe1
 6956 067e DE020000 		.4byte	0x2de
 6957 0682 02       		.byte	0x2
 6958 0683 23       		.byte	0x23
 6959 0684 5C       		.uleb128 0x5c
 6960 0685 0C       		.uleb128 0xc
 6961 0686 FD170000 		.4byte	.LASF69
 6962 068a 0C       		.byte	0xc
 6963 068b E2       		.byte	0xe2
 6964 068c B5020000 		.4byte	0x2b5
 6965 0690 02       		.byte	0x2
 6966 0691 23       		.byte	0x23
 6967 0692 64       		.uleb128 0x64
 6968 0693 00       		.byte	0x0
 6969 0694 15       		.uleb128 0x15
 6970 0695 B5020000 		.4byte	0x2b5
 6971 0699 B2060000 		.4byte	0x6b2
 6972 069d 16       		.uleb128 0x16
 6973 069e B2060000 		.4byte	0x6b2
 6974 06a2 16       		.uleb128 0x16
ARM GAS  /tmp/ccwDRvq0.s 			page 159


 6975 06a3 41030000 		.4byte	0x341
 6976 06a7 16       		.uleb128 0x16
 6977 06a8 90090000 		.4byte	0x990
 6978 06ac 16       		.uleb128 0x16
 6979 06ad B5020000 		.4byte	0x2b5
 6980 06b1 00       		.byte	0x0
 6981 06b2 12       		.uleb128 0x12
 6982 06b3 04       		.byte	0x4
 6983 06b4 B8060000 		.4byte	0x6b8
 6984 06b8 17       		.uleb128 0x17
 6985 06b9 B0090000 		.4byte	.LASF70
 6986 06bd 2804     		.2byte	0x428
 6987 06bf 0C       		.byte	0xc
 6988 06c0 5A02     		.2byte	0x25a
 6989 06c2 90090000 		.4byte	0x990
 6990 06c6 18       		.uleb128 0x18
 6991 06c7 F0       		.byte	0xf0
 6992 06c8 0C       		.byte	0xc
 6993 06c9 7702     		.2byte	0x277
 6994 06cb 40080000 		.4byte	0x840
 6995 06cf 19       		.uleb128 0x19
 6996 06d0 D0       		.byte	0xd0
 6997 06d1 0C       		.byte	0xc
 6998 06d2 7902     		.2byte	0x279
 6999 06d4 FF070000 		.4byte	0x7ff
 7000 06d8 1A       		.uleb128 0x1a
 7001 06d9 B5170000 		.4byte	.LASF71
 7002 06dd 0C       		.byte	0xc
 7003 06de 7A02     		.2byte	0x27a
 7004 06e0 AE020000 		.4byte	0x2ae
 7005 06e4 02       		.byte	0x2
 7006 06e5 23       		.byte	0x23
 7007 06e6 00       		.uleb128 0x0
 7008 06e7 1A       		.uleb128 0x1a
 7009 06e8 2A160000 		.4byte	.LASF72
 7010 06ec 0C       		.byte	0xc
 7011 06ed 7B02     		.2byte	0x27b
 7012 06ef 90090000 		.4byte	0x990
 7013 06f3 02       		.byte	0x2
 7014 06f4 23       		.byte	0x23
 7015 06f5 04       		.uleb128 0x4
 7016 06f6 1A       		.uleb128 0x1a
 7017 06f7 CF0C0000 		.4byte	.LASF73
 7018 06fb 0C       		.byte	0xc
 7019 06fc 7C02     		.2byte	0x27c
 7020 06fe CE0A0000 		.4byte	0xace
 7021 0702 02       		.byte	0x2
 7022 0703 23       		.byte	0x23
 7023 0704 08       		.uleb128 0x8
 7024 0705 1A       		.uleb128 0x1a
 7025 0706 75120000 		.4byte	.LASF74
 7026 070a 0C       		.byte	0xc
 7027 070b 7D02     		.2byte	0x27d
 7028 070d C3030000 		.4byte	0x3c3
 7029 0711 02       		.byte	0x2
 7030 0712 23       		.byte	0x23
 7031 0713 24       		.uleb128 0x24
ARM GAS  /tmp/ccwDRvq0.s 			page 160


 7032 0714 1A       		.uleb128 0x1a
 7033 0715 CF130000 		.4byte	.LASF75
 7034 0719 0C       		.byte	0xc
 7035 071a 7E02     		.2byte	0x27e
 7036 071c B5020000 		.4byte	0x2b5
 7037 0720 02       		.byte	0x2
 7038 0721 23       		.byte	0x23
 7039 0722 48       		.uleb128 0x48
 7040 0723 1A       		.uleb128 0x1a
 7041 0724 4F100000 		.4byte	.LASF76
 7042 0728 0C       		.byte	0xc
 7043 0729 7F02     		.2byte	0x27f
 7044 072b A3000000 		.4byte	0xa3
 7045 072f 02       		.byte	0x2
 7046 0730 23       		.byte	0x23
 7047 0731 50       		.uleb128 0x50
 7048 0732 1A       		.uleb128 0x1a
 7049 0733 22030000 		.4byte	.LASF77
 7050 0737 0C       		.byte	0xc
 7051 0738 8002     		.2byte	0x280
 7052 073a 830A0000 		.4byte	0xa83
 7053 073e 02       		.byte	0x2
 7054 073f 23       		.byte	0x23
 7055 0740 58       		.uleb128 0x58
 7056 0741 1A       		.uleb128 0x1a
 7057 0742 C8090000 		.4byte	.LASF78
 7058 0746 0C       		.byte	0xc
 7059 0747 8102     		.2byte	0x281
 7060 0749 DE020000 		.4byte	0x2de
 7061 074d 02       		.byte	0x2
 7062 074e 23       		.byte	0x23
 7063 074f 68       		.uleb128 0x68
 7064 0750 1A       		.uleb128 0x1a
 7065 0751 37160000 		.4byte	.LASF79
 7066 0755 0C       		.byte	0xc
 7067 0756 8202     		.2byte	0x282
 7068 0758 DE020000 		.4byte	0x2de
 7069 075c 02       		.byte	0x2
 7070 075d 23       		.byte	0x23
 7071 075e 70       		.uleb128 0x70
 7072 075f 1A       		.uleb128 0x1a
 7073 0760 3A010000 		.4byte	.LASF80
 7074 0764 0C       		.byte	0xc
 7075 0765 8302     		.2byte	0x283
 7076 0767 DE020000 		.4byte	0x2de
 7077 076b 02       		.byte	0x2
 7078 076c 23       		.byte	0x23
 7079 076d 78       		.uleb128 0x78
 7080 076e 1A       		.uleb128 0x1a
 7081 076f C8120000 		.4byte	.LASF81
 7082 0773 0C       		.byte	0xc
 7083 0774 8402     		.2byte	0x284
 7084 0776 DE0A0000 		.4byte	0xade
 7085 077a 03       		.byte	0x3
 7086 077b 23       		.byte	0x23
 7087 077c 8001     		.uleb128 0x80
 7088 077e 1A       		.uleb128 0x1a
ARM GAS  /tmp/ccwDRvq0.s 			page 161


 7089 077f B1010000 		.4byte	.LASF82
 7090 0783 0C       		.byte	0xc
 7091 0784 8502     		.2byte	0x285
 7092 0786 EE0A0000 		.4byte	0xaee
 7093 078a 03       		.byte	0x3
 7094 078b 23       		.byte	0x23
 7095 078c 8801     		.uleb128 0x88
 7096 078e 1A       		.uleb128 0x1a
 7097 078f 1D160000 		.4byte	.LASF83
 7098 0793 0C       		.byte	0xc
 7099 0794 8602     		.2byte	0x286
 7100 0796 B5020000 		.4byte	0x2b5
 7101 079a 03       		.byte	0x3
 7102 079b 23       		.byte	0x23
 7103 079c A001     		.uleb128 0xa0
 7104 079e 1A       		.uleb128 0x1a
 7105 079f 8C150000 		.4byte	.LASF84
 7106 07a3 0C       		.byte	0xc
 7107 07a4 8702     		.2byte	0x287
 7108 07a6 DE020000 		.4byte	0x2de
 7109 07aa 03       		.byte	0x3
 7110 07ab 23       		.byte	0x23
 7111 07ac A401     		.uleb128 0xa4
 7112 07ae 1A       		.uleb128 0x1a
 7113 07af 960A0000 		.4byte	.LASF85
 7114 07b3 0C       		.byte	0xc
 7115 07b4 8802     		.2byte	0x288
 7116 07b6 DE020000 		.4byte	0x2de
 7117 07ba 03       		.byte	0x3
 7118 07bb 23       		.byte	0x23
 7119 07bc AC01     		.uleb128 0xac
 7120 07be 1A       		.uleb128 0x1a
 7121 07bf 1F050000 		.4byte	.LASF86
 7122 07c3 0C       		.byte	0xc
 7123 07c4 8902     		.2byte	0x289
 7124 07c6 DE020000 		.4byte	0x2de
 7125 07ca 03       		.byte	0x3
 7126 07cb 23       		.byte	0x23
 7127 07cc B401     		.uleb128 0xb4
 7128 07ce 1A       		.uleb128 0x1a
 7129 07cf 300D0000 		.4byte	.LASF87
 7130 07d3 0C       		.byte	0xc
 7131 07d4 8A02     		.2byte	0x28a
 7132 07d6 DE020000 		.4byte	0x2de
 7133 07da 03       		.byte	0x3
 7134 07db 23       		.byte	0x23
 7135 07dc BC01     		.uleb128 0xbc
 7136 07de 1A       		.uleb128 0x1a
 7137 07df B7090000 		.4byte	.LASF88
 7138 07e3 0C       		.byte	0xc
 7139 07e4 8B02     		.2byte	0x28b
 7140 07e6 DE020000 		.4byte	0x2de
 7141 07ea 03       		.byte	0x3
 7142 07eb 23       		.byte	0x23
 7143 07ec C401     		.uleb128 0xc4
 7144 07ee 1A       		.uleb128 0x1a
 7145 07ef D50E0000 		.4byte	.LASF89
ARM GAS  /tmp/ccwDRvq0.s 			page 162


 7146 07f3 0C       		.byte	0xc
 7147 07f4 8C02     		.2byte	0x28c
 7148 07f6 B5020000 		.4byte	0x2b5
 7149 07fa 03       		.byte	0x3
 7150 07fb 23       		.byte	0x23
 7151 07fc CC01     		.uleb128 0xcc
 7152 07fe 00       		.byte	0x0
 7153 07ff 19       		.uleb128 0x19
 7154 0800 F0       		.byte	0xf0
 7155 0801 0C       		.byte	0xc
 7156 0802 9202     		.2byte	0x292
 7157 0804 27080000 		.4byte	0x827
 7158 0808 1A       		.uleb128 0x1a
 7159 0809 C80C0000 		.4byte	.LASF90
 7160 080d 0C       		.byte	0xc
 7161 080e 9402     		.2byte	0x294
 7162 0810 FE0A0000 		.4byte	0xafe
 7163 0814 02       		.byte	0x2
 7164 0815 23       		.byte	0x23
 7165 0816 00       		.uleb128 0x0
 7166 0817 1A       		.uleb128 0x1a
 7167 0818 E1180000 		.4byte	.LASF91
 7168 081c 0C       		.byte	0xc
 7169 081d 9502     		.2byte	0x295
 7170 081f 0E0B0000 		.4byte	0xb0e
 7171 0823 02       		.byte	0x2
 7172 0824 23       		.byte	0x23
 7173 0825 78       		.uleb128 0x78
 7174 0826 00       		.byte	0x0
 7175 0827 1B       		.uleb128 0x1b
 7176 0828 B0090000 		.4byte	.LASF70
 7177 082c 0C       		.byte	0xc
 7178 082d 8D02     		.2byte	0x28d
 7179 082f CF060000 		.4byte	0x6cf
 7180 0833 1B       		.uleb128 0x1b
 7181 0834 98120000 		.4byte	.LASF92
 7182 0838 0C       		.byte	0xc
 7183 0839 9602     		.2byte	0x296
 7184 083b FF070000 		.4byte	0x7ff
 7185 083f 00       		.byte	0x0
 7186 0840 1A       		.uleb128 0x1a
 7187 0841 87020000 		.4byte	.LASF93
 7188 0845 0C       		.byte	0xc
 7189 0846 5B02     		.2byte	0x25b
 7190 0848 B5020000 		.4byte	0x2b5
 7191 084c 02       		.byte	0x2
 7192 084d 23       		.byte	0x23
 7193 084e 00       		.uleb128 0x0
 7194 084f 1A       		.uleb128 0x1a
 7195 0850 800C0000 		.4byte	.LASF94
 7196 0854 0C       		.byte	0xc
 7197 0855 6002     		.2byte	0x260
 7198 0857 7D0A0000 		.4byte	0xa7d
 7199 085b 02       		.byte	0x2
 7200 085c 23       		.byte	0x23
 7201 085d 04       		.uleb128 0x4
 7202 085e 1A       		.uleb128 0x1a
ARM GAS  /tmp/ccwDRvq0.s 			page 163


 7203 085f 98140000 		.4byte	.LASF95
 7204 0863 0C       		.byte	0xc
 7205 0864 6002     		.2byte	0x260
 7206 0866 7D0A0000 		.4byte	0xa7d
 7207 086a 02       		.byte	0x2
 7208 086b 23       		.byte	0x23
 7209 086c 08       		.uleb128 0x8
 7210 086d 1A       		.uleb128 0x1a
 7211 086e D9180000 		.4byte	.LASF96
 7212 0872 0C       		.byte	0xc
 7213 0873 6002     		.2byte	0x260
 7214 0875 7D0A0000 		.4byte	0xa7d
 7215 0879 02       		.byte	0x2
 7216 087a 23       		.byte	0x23
 7217 087b 0C       		.uleb128 0xc
 7218 087c 1A       		.uleb128 0x1a
 7219 087d 09080000 		.4byte	.LASF97
 7220 0881 0C       		.byte	0xc
 7221 0882 6202     		.2byte	0x262
 7222 0884 B5020000 		.4byte	0x2b5
 7223 0888 02       		.byte	0x2
 7224 0889 23       		.byte	0x23
 7225 088a 10       		.uleb128 0x10
 7226 088b 1A       		.uleb128 0x1a
 7227 088c 05070000 		.4byte	.LASF98
 7228 0890 0C       		.byte	0xc
 7229 0891 6302     		.2byte	0x263
 7230 0893 1E0B0000 		.4byte	0xb1e
 7231 0897 02       		.byte	0x2
 7232 0898 23       		.byte	0x23
 7233 0899 14       		.uleb128 0x14
 7234 089a 1A       		.uleb128 0x1a
 7235 089b D2120000 		.4byte	.LASF99
 7236 089f 0C       		.byte	0xc
 7237 08a0 6502     		.2byte	0x265
 7238 08a2 B5020000 		.4byte	0x2b5
 7239 08a6 02       		.byte	0x2
 7240 08a7 23       		.byte	0x23
 7241 08a8 30       		.uleb128 0x30
 7242 08a9 1A       		.uleb128 0x1a
 7243 08aa CB110000 		.4byte	.LASF100
 7244 08ae 0C       		.byte	0xc
 7245 08af 6602     		.2byte	0x266
 7246 08b1 C1090000 		.4byte	0x9c1
 7247 08b5 02       		.byte	0x2
 7248 08b6 23       		.byte	0x23
 7249 08b7 34       		.uleb128 0x34
 7250 08b8 1A       		.uleb128 0x1a
 7251 08b9 320C0000 		.4byte	.LASF101
 7252 08bd 0C       		.byte	0xc
 7253 08be 6802     		.2byte	0x268
 7254 08c0 B5020000 		.4byte	0x2b5
 7255 08c4 02       		.byte	0x2
 7256 08c5 23       		.byte	0x23
 7257 08c6 38       		.uleb128 0x38
 7258 08c7 1A       		.uleb128 0x1a
 7259 08c8 E50D0000 		.4byte	.LASF102
ARM GAS  /tmp/ccwDRvq0.s 			page 164


 7260 08cc 0C       		.byte	0xc
 7261 08cd 6A02     		.2byte	0x26a
 7262 08cf 3F0B0000 		.4byte	0xb3f
 7263 08d3 02       		.byte	0x2
 7264 08d4 23       		.byte	0x23
 7265 08d5 3C       		.uleb128 0x3c
 7266 08d6 1A       		.uleb128 0x1a
 7267 08d7 29040000 		.4byte	.LASF103
 7268 08db 0C       		.byte	0xc
 7269 08dc 6D02     		.2byte	0x26d
 7270 08de 450B0000 		.4byte	0xb45
 7271 08e2 02       		.byte	0x2
 7272 08e3 23       		.byte	0x23
 7273 08e4 40       		.uleb128 0x40
 7274 08e5 1A       		.uleb128 0x1a
 7275 08e6 690B0000 		.4byte	.LASF104
 7276 08ea 0C       		.byte	0xc
 7277 08eb 6E02     		.2byte	0x26e
 7278 08ed B5020000 		.4byte	0x2b5
 7279 08f1 02       		.byte	0x2
 7280 08f2 23       		.byte	0x23
 7281 08f3 44       		.uleb128 0x44
 7282 08f4 1A       		.uleb128 0x1a
 7283 08f5 7F090000 		.4byte	.LASF105
 7284 08f9 0C       		.byte	0xc
 7285 08fa 6F02     		.2byte	0x26f
 7286 08fc 450B0000 		.4byte	0xb45
 7287 0900 02       		.byte	0x2
 7288 0901 23       		.byte	0x23
 7289 0902 48       		.uleb128 0x48
 7290 0903 1A       		.uleb128 0x1a
 7291 0904 E20C0000 		.4byte	.LASF106
 7292 0908 0C       		.byte	0xc
 7293 0909 7002     		.2byte	0x270
 7294 090b 4B0B0000 		.4byte	0xb4b
 7295 090f 02       		.byte	0x2
 7296 0910 23       		.byte	0x23
 7297 0911 4C       		.uleb128 0x4c
 7298 0912 1A       		.uleb128 0x1a
 7299 0913 B6120000 		.4byte	.LASF107
 7300 0917 0C       		.byte	0xc
 7301 0918 7302     		.2byte	0x273
 7302 091a B5020000 		.4byte	0x2b5
 7303 091e 02       		.byte	0x2
 7304 091f 23       		.byte	0x23
 7305 0920 50       		.uleb128 0x50
 7306 0921 1A       		.uleb128 0x1a
 7307 0922 DF070000 		.4byte	.LASF108
 7308 0926 0C       		.byte	0xc
 7309 0927 7402     		.2byte	0x274
 7310 0929 90090000 		.4byte	0x990
 7311 092d 02       		.byte	0x2
 7312 092e 23       		.byte	0x23
 7313 092f 54       		.uleb128 0x54
 7314 0930 1A       		.uleb128 0x1a
 7315 0931 AA120000 		.4byte	.LASF109
 7316 0935 0C       		.byte	0xc
ARM GAS  /tmp/ccwDRvq0.s 			page 165


 7317 0936 9702     		.2byte	0x297
 7318 0938 C6060000 		.4byte	0x6c6
 7319 093c 02       		.byte	0x2
 7320 093d 23       		.byte	0x23
 7321 093e 58       		.uleb128 0x58
 7322 093f 1A       		.uleb128 0x1a
 7323 0940 70100000 		.4byte	.LASF47
 7324 0944 0C       		.byte	0xc
 7325 0945 9A02     		.2byte	0x29a
 7326 0947 510B0000 		.4byte	0xb51
 7327 094b 03       		.byte	0x3
 7328 094c 23       		.byte	0x23
 7329 094d C802     		.uleb128 0x148
 7330 094f 1A       		.uleb128 0x1a
 7331 0950 A50A0000 		.4byte	.LASF110
 7332 0954 0C       		.byte	0xc
 7333 0955 9B02     		.2byte	0x29b
 7334 0957 A7040000 		.4byte	0x4a7
 7335 095b 03       		.byte	0x3
 7336 095c 23       		.byte	0x23
 7337 095d CC02     		.uleb128 0x14c
 7338 095f 1A       		.uleb128 0x1a
 7339 0960 8C0A0000 		.4byte	.LASF111
 7340 0964 0C       		.byte	0xc
 7341 0965 9E02     		.2byte	0x29e
 7342 0967 620B0000 		.4byte	0xb62
 7343 096b 03       		.byte	0x3
 7344 096c 23       		.byte	0x23
 7345 096d DC05     		.uleb128 0x2dc
 7346 096f 1A       		.uleb128 0x1a
 7347 0970 15160000 		.4byte	.LASF112
 7348 0974 0C       		.byte	0xc
 7349 0975 A302     		.2byte	0x2a3
 7350 0977 3C0A0000 		.4byte	0xa3c
 7351 097b 03       		.byte	0x3
 7352 097c 23       		.byte	0x23
 7353 097d E005     		.uleb128 0x2e0
 7354 097f 1A       		.uleb128 0x1a
 7355 0980 83110000 		.4byte	.LASF113
 7356 0984 0C       		.byte	0xc
 7357 0985 A402     		.2byte	0x2a4
 7358 0987 6E0B0000 		.4byte	0xb6e
 7359 098b 03       		.byte	0x3
 7360 098c 23       		.byte	0x23
 7361 098d EC05     		.uleb128 0x2ec
 7362 098f 00       		.byte	0x0
 7363 0990 12       		.uleb128 0x12
 7364 0991 04       		.byte	0x4
 7365 0992 96090000 		.4byte	0x996
 7366 0996 03       		.uleb128 0x3
 7367 0997 01       		.byte	0x1
 7368 0998 08       		.byte	0x8
 7369 0999 0A010000 		.4byte	.LASF114
 7370 099d 12       		.uleb128 0x12
 7371 099e 04       		.byte	0x4
 7372 099f 94060000 		.4byte	0x694
 7373 09a3 15       		.uleb128 0x15
ARM GAS  /tmp/ccwDRvq0.s 			page 166


 7374 09a4 B5020000 		.4byte	0x2b5
 7375 09a8 C1090000 		.4byte	0x9c1
 7376 09ac 16       		.uleb128 0x16
 7377 09ad B2060000 		.4byte	0x6b2
 7378 09b1 16       		.uleb128 0x16
 7379 09b2 41030000 		.4byte	0x341
 7380 09b6 16       		.uleb128 0x16
 7381 09b7 C1090000 		.4byte	0x9c1
 7382 09bb 16       		.uleb128 0x16
 7383 09bc B5020000 		.4byte	0x2b5
 7384 09c0 00       		.byte	0x0
 7385 09c1 12       		.uleb128 0x12
 7386 09c2 04       		.byte	0x4
 7387 09c3 C7090000 		.4byte	0x9c7
 7388 09c7 1C       		.uleb128 0x1c
 7389 09c8 96090000 		.4byte	0x996
 7390 09cc 12       		.uleb128 0x12
 7391 09cd 04       		.byte	0x4
 7392 09ce A3090000 		.4byte	0x9a3
 7393 09d2 15       		.uleb128 0x15
 7394 09d3 C7020000 		.4byte	0x2c7
 7395 09d7 F0090000 		.4byte	0x9f0
 7396 09db 16       		.uleb128 0x16
 7397 09dc B2060000 		.4byte	0x6b2
 7398 09e0 16       		.uleb128 0x16
 7399 09e1 41030000 		.4byte	0x341
 7400 09e5 16       		.uleb128 0x16
 7401 09e6 C7020000 		.4byte	0x2c7
 7402 09ea 16       		.uleb128 0x16
 7403 09eb B5020000 		.4byte	0x2b5
 7404 09ef 00       		.byte	0x0
 7405 09f0 12       		.uleb128 0x12
 7406 09f1 04       		.byte	0x4
 7407 09f2 D2090000 		.4byte	0x9d2
 7408 09f6 15       		.uleb128 0x15
 7409 09f7 B5020000 		.4byte	0x2b5
 7410 09fb 0A0A0000 		.4byte	0xa0a
 7411 09ff 16       		.uleb128 0x16
 7412 0a00 B2060000 		.4byte	0x6b2
 7413 0a04 16       		.uleb128 0x16
 7414 0a05 41030000 		.4byte	0x341
 7415 0a09 00       		.byte	0x0
 7416 0a0a 12       		.uleb128 0x12
 7417 0a0b 04       		.byte	0x4
 7418 0a0c F6090000 		.4byte	0x9f6
 7419 0a10 0D       		.uleb128 0xd
 7420 0a11 4D000000 		.4byte	0x4d
 7421 0a15 200A0000 		.4byte	0xa20
 7422 0a19 0E       		.uleb128 0xe
 7423 0a1a AE020000 		.4byte	0x2ae
 7424 0a1e 02       		.byte	0x2
 7425 0a1f 00       		.byte	0x0
 7426 0a20 0D       		.uleb128 0xd
 7427 0a21 4D000000 		.4byte	0x4d
 7428 0a25 300A0000 		.4byte	0xa30
 7429 0a29 0E       		.uleb128 0xe
 7430 0a2a AE020000 		.4byte	0x2ae
ARM GAS  /tmp/ccwDRvq0.s 			page 167


 7431 0a2e 00       		.byte	0x0
 7432 0a2f 00       		.byte	0x0
 7433 0a30 08       		.uleb128 0x8
 7434 0a31 4D060000 		.4byte	.LASF115
 7435 0a35 0C       		.byte	0xc
 7436 0a36 1E01     		.2byte	0x11e
 7437 0a38 3A050000 		.4byte	0x53a
 7438 0a3c 1D       		.uleb128 0x1d
 7439 0a3d CC150000 		.4byte	.LASF116
 7440 0a41 0C       		.byte	0xc
 7441 0a42 0C       		.byte	0xc
 7442 0a43 2301     		.2byte	0x123
 7443 0a45 770A0000 		.4byte	0xa77
 7444 0a49 1A       		.uleb128 0x1a
 7445 0a4a 53080000 		.4byte	.LASF27
 7446 0a4e 0C       		.byte	0xc
 7447 0a4f 2401     		.2byte	0x124
 7448 0a51 770A0000 		.4byte	0xa77
 7449 0a55 02       		.byte	0x2
 7450 0a56 23       		.byte	0x23
 7451 0a57 00       		.uleb128 0x0
 7452 0a58 1A       		.uleb128 0x1a
 7453 0a59 AF150000 		.4byte	.LASF117
 7454 0a5d 0C       		.byte	0xc
 7455 0a5e 2501     		.2byte	0x125
 7456 0a60 B5020000 		.4byte	0x2b5
 7457 0a64 02       		.byte	0x2
 7458 0a65 23       		.byte	0x23
 7459 0a66 04       		.uleb128 0x4
 7460 0a67 1A       		.uleb128 0x1a
 7461 0a68 EA180000 		.4byte	.LASF118
 7462 0a6c 0C       		.byte	0xc
 7463 0a6d 2601     		.2byte	0x126
 7464 0a6f 7D0A0000 		.4byte	0xa7d
 7465 0a73 02       		.byte	0x2
 7466 0a74 23       		.byte	0x23
 7467 0a75 08       		.uleb128 0x8
 7468 0a76 00       		.byte	0x0
 7469 0a77 12       		.uleb128 0x12
 7470 0a78 04       		.byte	0x4
 7471 0a79 3C0A0000 		.4byte	0xa3c
 7472 0a7d 12       		.uleb128 0x12
 7473 0a7e 04       		.byte	0x4
 7474 0a7f 300A0000 		.4byte	0xa30
 7475 0a83 1D       		.uleb128 0x1d
 7476 0a84 DE050000 		.4byte	.LASF119
 7477 0a88 0E       		.byte	0xe
 7478 0a89 0C       		.byte	0xc
 7479 0a8a 3E01     		.2byte	0x13e
 7480 0a8c BE0A0000 		.4byte	0xabe
 7481 0a90 1A       		.uleb128 0x1a
 7482 0a91 2F180000 		.4byte	.LASF120
 7483 0a95 0C       		.byte	0xc
 7484 0a96 3F01     		.2byte	0x13f
 7485 0a98 BE0A0000 		.4byte	0xabe
 7486 0a9c 02       		.byte	0x2
 7487 0a9d 23       		.byte	0x23
ARM GAS  /tmp/ccwDRvq0.s 			page 168


 7488 0a9e 00       		.uleb128 0x0
 7489 0a9f 1A       		.uleb128 0x1a
 7490 0aa0 EC0C0000 		.4byte	.LASF121
 7491 0aa4 0C       		.byte	0xc
 7492 0aa5 4001     		.2byte	0x140
 7493 0aa7 BE0A0000 		.4byte	0xabe
 7494 0aab 02       		.byte	0x2
 7495 0aac 23       		.byte	0x23
 7496 0aad 06       		.uleb128 0x6
 7497 0aae 1A       		.uleb128 0x1a
 7498 0aaf F20C0000 		.4byte	.LASF122
 7499 0ab3 0C       		.byte	0xc
 7500 0ab4 4101     		.2byte	0x141
 7501 0ab6 71000000 		.4byte	0x71
 7502 0aba 02       		.byte	0x2
 7503 0abb 23       		.byte	0x23
 7504 0abc 0C       		.uleb128 0xc
 7505 0abd 00       		.byte	0x0
 7506 0abe 0D       		.uleb128 0xd
 7507 0abf 71000000 		.4byte	0x71
 7508 0ac3 CE0A0000 		.4byte	0xace
 7509 0ac7 0E       		.uleb128 0xe
 7510 0ac8 AE020000 		.4byte	0x2ae
 7511 0acc 02       		.byte	0x2
 7512 0acd 00       		.byte	0x0
 7513 0ace 0D       		.uleb128 0xd
 7514 0acf 96090000 		.4byte	0x996
 7515 0ad3 DE0A0000 		.4byte	0xade
 7516 0ad7 0E       		.uleb128 0xe
 7517 0ad8 AE020000 		.4byte	0x2ae
 7518 0adc 19       		.byte	0x19
 7519 0add 00       		.byte	0x0
 7520 0ade 0D       		.uleb128 0xd
 7521 0adf 96090000 		.4byte	0x996
 7522 0ae3 EE0A0000 		.4byte	0xaee
 7523 0ae7 0E       		.uleb128 0xe
 7524 0ae8 AE020000 		.4byte	0x2ae
 7525 0aec 07       		.byte	0x7
 7526 0aed 00       		.byte	0x0
 7527 0aee 0D       		.uleb128 0xd
 7528 0aef 96090000 		.4byte	0x996
 7529 0af3 FE0A0000 		.4byte	0xafe
 7530 0af7 0E       		.uleb128 0xe
 7531 0af8 AE020000 		.4byte	0x2ae
 7532 0afc 17       		.byte	0x17
 7533 0afd 00       		.byte	0x0
 7534 0afe 0D       		.uleb128 0xd
 7535 0aff 34050000 		.4byte	0x534
 7536 0b03 0E0B0000 		.4byte	0xb0e
 7537 0b07 0E       		.uleb128 0xe
 7538 0b08 AE020000 		.4byte	0x2ae
 7539 0b0c 1D       		.byte	0x1d
 7540 0b0d 00       		.byte	0x0
 7541 0b0e 0D       		.uleb128 0xd
 7542 0b0f AE020000 		.4byte	0x2ae
 7543 0b13 1E0B0000 		.4byte	0xb1e
 7544 0b17 0E       		.uleb128 0xe
ARM GAS  /tmp/ccwDRvq0.s 			page 169


 7545 0b18 AE020000 		.4byte	0x2ae
 7546 0b1c 1D       		.byte	0x1d
 7547 0b1d 00       		.byte	0x0
 7548 0b1e 0D       		.uleb128 0xd
 7549 0b1f 96090000 		.4byte	0x996
 7550 0b23 2E0B0000 		.4byte	0xb2e
 7551 0b27 0E       		.uleb128 0xe
 7552 0b28 AE020000 		.4byte	0x2ae
 7553 0b2c 18       		.byte	0x18
 7554 0b2d 00       		.byte	0x0
 7555 0b2e 1E       		.uleb128 0x1e
 7556 0b2f 390B0000 		.4byte	0xb39
 7557 0b33 16       		.uleb128 0x16
 7558 0b34 390B0000 		.4byte	0xb39
 7559 0b38 00       		.byte	0x0
 7560 0b39 12       		.uleb128 0x12
 7561 0b3a 04       		.byte	0x4
 7562 0b3b B8060000 		.4byte	0x6b8
 7563 0b3f 12       		.uleb128 0x12
 7564 0b40 04       		.byte	0x4
 7565 0b41 2E0B0000 		.4byte	0xb2e
 7566 0b45 12       		.uleb128 0x12
 7567 0b46 04       		.byte	0x4
 7568 0b47 4E030000 		.4byte	0x34e
 7569 0b4b 12       		.uleb128 0x12
 7570 0b4c 04       		.byte	0x4
 7571 0b4d 450B0000 		.4byte	0xb45
 7572 0b51 12       		.uleb128 0x12
 7573 0b52 04       		.byte	0x4
 7574 0b53 A7040000 		.4byte	0x4a7
 7575 0b57 1E       		.uleb128 0x1e
 7576 0b58 620B0000 		.4byte	0xb62
 7577 0b5c 16       		.uleb128 0x16
 7578 0b5d B5020000 		.4byte	0x2b5
 7579 0b61 00       		.byte	0x0
 7580 0b62 12       		.uleb128 0x12
 7581 0b63 04       		.byte	0x4
 7582 0b64 680B0000 		.4byte	0xb68
 7583 0b68 12       		.uleb128 0x12
 7584 0b69 04       		.byte	0x4
 7585 0b6a 570B0000 		.4byte	0xb57
 7586 0b6e 0D       		.uleb128 0xd
 7587 0b6f 3A050000 		.4byte	0x53a
 7588 0b73 7E0B0000 		.4byte	0xb7e
 7589 0b77 0E       		.uleb128 0xe
 7590 0b78 AE020000 		.4byte	0x2ae
 7591 0b7c 02       		.byte	0x2
 7592 0b7d 00       		.byte	0x0
 7593 0b7e 03       		.uleb128 0x3
 7594 0b7f 08       		.byte	0x8
 7595 0b80 04       		.byte	0x4
 7596 0b81 C30F0000 		.4byte	.LASF123
 7597 0b85 02       		.uleb128 0x2
 7598 0b86 040E0000 		.4byte	.LASF124
 7599 0b8a 0B       		.byte	0xb
 7600 0b8b 95       		.byte	0x95
 7601 0b8c B5020000 		.4byte	0x2b5
ARM GAS  /tmp/ccwDRvq0.s 			page 170


 7602 0b90 02       		.uleb128 0x2
 7603 0b91 85070000 		.4byte	.LASF125
 7604 0b95 0B       		.byte	0xb
 7605 0b96 D3       		.byte	0xd3
 7606 0b97 AE020000 		.4byte	0x2ae
 7607 0b9b 02       		.uleb128 0x2
 7608 0b9c 64070000 		.4byte	.LASF126
 7609 0ba0 0D       		.byte	0xd
 7610 0ba1 28       		.byte	0x28
 7611 0ba2 A60B0000 		.4byte	0xba6
 7612 0ba6 10       		.uleb128 0x10
 7613 0ba7 93130000 		.4byte	.LASF127
 7614 0bab 04       		.byte	0x4
 7615 0bac 0E       		.byte	0xe
 7616 0bad 00       		.byte	0x0
 7617 0bae C00B0000 		.4byte	0xbc0
 7618 0bb2 1F       		.uleb128 0x1f
 7619 0bb3 890D0000 		.4byte	.LASF128
 7620 0bb7 41030000 		.4byte	0x341
 7621 0bbb 02       		.byte	0x2
 7622 0bbc 23       		.byte	0x23
 7623 0bbd 00       		.uleb128 0x0
 7624 0bbe 01       		.byte	0x1
 7625 0bbf 00       		.byte	0x0
 7626 0bc0 02       		.uleb128 0x2
 7627 0bc1 D1060000 		.4byte	.LASF129
 7628 0bc5 0F       		.byte	0xf
 7629 0bc6 68       		.byte	0x68
 7630 0bc7 95000000 		.4byte	0x95
 7631 0bcb 02       		.uleb128 0x2
 7632 0bcc F60B0000 		.4byte	.LASF130
 7633 0bd0 0F       		.byte	0xf
 7634 0bd1 6D       		.byte	0x6d
 7635 0bd2 83000000 		.4byte	0x83
 7636 0bd6 02       		.uleb128 0x2
 7637 0bd7 D4170000 		.4byte	.LASF131
 7638 0bdb 10       		.byte	0x10
 7639 0bdc 32       		.byte	0x32
 7640 0bdd 300A0000 		.4byte	0xa30
 7641 0be1 02       		.uleb128 0x2
 7642 0be2 B4040000 		.4byte	.LASF132
 7643 0be6 10       		.byte	0x10
 7644 0be7 37       		.byte	0x37
 7645 0be8 C7020000 		.4byte	0x2c7
 7646 0bec 20       		.uleb128 0x20
 7647 0bed 01       		.byte	0x1
 7648 0bee 59080000 		.4byte	.LASF148
 7649 0bf2 10       		.byte	0x10
 7650 0bf3 0001     		.2byte	0x100
 7651 0bf5 01       		.byte	0x1
 7652 0bf6 000C0000 		.4byte	0xc00
 7653 0bfa 16       		.uleb128 0x16
 7654 0bfb 000C0000 		.4byte	0xc00
 7655 0bff 00       		.byte	0x0
 7656 0c00 12       		.uleb128 0x12
 7657 0c01 04       		.byte	0x4
 7658 0c02 D60B0000 		.4byte	0xbd6
ARM GAS  /tmp/ccwDRvq0.s 			page 171


 7659 0c06 21       		.uleb128 0x21
 7660 0c07 01       		.byte	0x1
 7661 0c08 EF110000 		.4byte	.LASF133
 7662 0c0c 10       		.byte	0x10
 7663 0c0d D2       		.byte	0xd2
 7664 0c0e B5020000 		.4byte	0x2b5
 7665 0c12 01       		.byte	0x1
 7666 0c13 1D0C0000 		.4byte	0xc1d
 7667 0c17 16       		.uleb128 0x16
 7668 0c18 000C0000 		.4byte	0xc00
 7669 0c1c 00       		.byte	0x0
 7670 0c1d 22       		.uleb128 0x22
 7671 0c1e 01       		.byte	0x1
 7672 0c1f 87150000 		.4byte	.LASF134
 7673 0c23 10       		.byte	0x10
 7674 0c24 0101     		.2byte	0x101
 7675 0c26 B5020000 		.4byte	0x2b5
 7676 0c2a 01       		.byte	0x1
 7677 0c2b 350C0000 		.4byte	0xc35
 7678 0c2f 16       		.uleb128 0x16
 7679 0c30 000C0000 		.4byte	0xc00
 7680 0c34 00       		.byte	0x0
 7681 0c35 22       		.uleb128 0x22
 7682 0c36 01       		.byte	0x1
 7683 0c37 91120000 		.4byte	.LASF135
 7684 0c3b 10       		.byte	0x10
 7685 0c3c 0201     		.2byte	0x102
 7686 0c3e B5020000 		.4byte	0x2b5
 7687 0c42 01       		.byte	0x1
 7688 0c43 4D0C0000 		.4byte	0xc4d
 7689 0c47 16       		.uleb128 0x16
 7690 0c48 000C0000 		.4byte	0xc00
 7691 0c4c 00       		.byte	0x0
 7692 0c4d 21       		.uleb128 0x21
 7693 0c4e 01       		.byte	0x1
 7694 0c4f 05140000 		.4byte	.LASF136
 7695 0c53 10       		.byte	0x10
 7696 0c54 D3       		.byte	0xd3
 7697 0c55 B5020000 		.4byte	0x2b5
 7698 0c59 01       		.byte	0x1
 7699 0c5a 640C0000 		.4byte	0xc64
 7700 0c5e 16       		.uleb128 0x16
 7701 0c5f 000C0000 		.4byte	0xc00
 7702 0c63 00       		.byte	0x0
 7703 0c64 21       		.uleb128 0x21
 7704 0c65 01       		.byte	0x1
 7705 0c66 020F0000 		.4byte	.LASF137
 7706 0c6a 10       		.byte	0x10
 7707 0c6b E7       		.byte	0xe7
 7708 0c6c B5020000 		.4byte	0x2b5
 7709 0c70 01       		.byte	0x1
 7710 0c71 7B0C0000 		.4byte	0xc7b
 7711 0c75 16       		.uleb128 0x16
 7712 0c76 000C0000 		.4byte	0xc00
 7713 0c7a 00       		.byte	0x0
 7714 0c7b 21       		.uleb128 0x21
 7715 0c7c 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 172


 7716 0c7d 2E170000 		.4byte	.LASF138
 7717 0c81 10       		.byte	0x10
 7718 0c82 F9       		.byte	0xf9
 7719 0c83 B5020000 		.4byte	0x2b5
 7720 0c87 01       		.byte	0x1
 7721 0c88 970C0000 		.4byte	0xc97
 7722 0c8c 16       		.uleb128 0x16
 7723 0c8d 000C0000 		.4byte	0xc00
 7724 0c91 16       		.uleb128 0x16
 7725 0c92 970C0000 		.4byte	0xc97
 7726 0c96 00       		.byte	0x0
 7727 0c97 12       		.uleb128 0x12
 7728 0c98 04       		.byte	0x4
 7729 0c99 E10B0000 		.4byte	0xbe1
 7730 0c9d 21       		.uleb128 0x21
 7731 0c9e 01       		.byte	0x1
 7732 0c9f 390F0000 		.4byte	.LASF139
 7733 0ca3 10       		.byte	0x10
 7734 0ca4 E8       		.byte	0xe8
 7735 0ca5 90090000 		.4byte	0x990
 7736 0ca9 01       		.byte	0x1
 7737 0caa BE0C0000 		.4byte	0xcbe
 7738 0cae 16       		.uleb128 0x16
 7739 0caf 90090000 		.4byte	0x990
 7740 0cb3 16       		.uleb128 0x16
 7741 0cb4 B5020000 		.4byte	0x2b5
 7742 0cb8 16       		.uleb128 0x16
 7743 0cb9 000C0000 		.4byte	0xc00
 7744 0cbd 00       		.byte	0x0
 7745 0cbe 22       		.uleb128 0x22
 7746 0cbf 01       		.byte	0x1
 7747 0cc0 170F0000 		.4byte	.LASF140
 7748 0cc4 10       		.byte	0x10
 7749 0cc5 0501     		.2byte	0x105
 7750 0cc7 000C0000 		.4byte	0xc00
 7751 0ccb 01       		.byte	0x1
 7752 0ccc DB0C0000 		.4byte	0xcdb
 7753 0cd0 16       		.uleb128 0x16
 7754 0cd1 C1090000 		.4byte	0x9c1
 7755 0cd5 16       		.uleb128 0x16
 7756 0cd6 C1090000 		.4byte	0x9c1
 7757 0cda 00       		.byte	0x0
 7758 0cdb 21       		.uleb128 0x21
 7759 0cdc 01       		.byte	0x1
 7760 0cdd 63110000 		.4byte	.LASF141
 7761 0ce1 10       		.byte	0x10
 7762 0ce2 F2       		.byte	0xf2
 7763 0ce3 900B0000 		.4byte	0xb90
 7764 0ce7 01       		.byte	0x1
 7765 0ce8 010D0000 		.4byte	0xd01
 7766 0cec 16       		.uleb128 0x16
 7767 0ced 41030000 		.4byte	0x341
 7768 0cf1 16       		.uleb128 0x16
 7769 0cf2 900B0000 		.4byte	0xb90
 7770 0cf6 16       		.uleb128 0x16
 7771 0cf7 900B0000 		.4byte	0xb90
 7772 0cfb 16       		.uleb128 0x16
ARM GAS  /tmp/ccwDRvq0.s 			page 173


 7773 0cfc 000C0000 		.4byte	0xc00
 7774 0d00 00       		.byte	0x0
 7775 0d01 21       		.uleb128 0x21
 7776 0d02 01       		.byte	0x1
 7777 0d03 00090000 		.4byte	.LASF142
 7778 0d07 10       		.byte	0x10
 7779 0d08 D4       		.byte	0xd4
 7780 0d09 000C0000 		.4byte	0xc00
 7781 0d0d 01       		.byte	0x1
 7782 0d0e 220D0000 		.4byte	0xd22
 7783 0d12 16       		.uleb128 0x16
 7784 0d13 C1090000 		.4byte	0x9c1
 7785 0d17 16       		.uleb128 0x16
 7786 0d18 C1090000 		.4byte	0x9c1
 7787 0d1c 16       		.uleb128 0x16
 7788 0d1d 000C0000 		.4byte	0xc00
 7789 0d21 00       		.byte	0x0
 7790 0d22 21       		.uleb128 0x21
 7791 0d23 01       		.byte	0x1
 7792 0d24 CD0D0000 		.4byte	.LASF143
 7793 0d28 10       		.byte	0x10
 7794 0d29 FD       		.byte	0xfd
 7795 0d2a B5020000 		.4byte	0x2b5
 7796 0d2e 01       		.byte	0x1
 7797 0d2f 430D0000 		.4byte	0xd43
 7798 0d33 16       		.uleb128 0x16
 7799 0d34 000C0000 		.4byte	0xc00
 7800 0d38 16       		.uleb128 0x16
 7801 0d39 83000000 		.4byte	0x83
 7802 0d3d 16       		.uleb128 0x16
 7803 0d3e B5020000 		.4byte	0x2b5
 7804 0d42 00       		.byte	0x0
 7805 0d43 21       		.uleb128 0x21
 7806 0d44 01       		.byte	0x1
 7807 0d45 780E0000 		.4byte	.LASF144
 7808 0d49 10       		.byte	0x10
 7809 0d4a FA       		.byte	0xfa
 7810 0d4b B5020000 		.4byte	0x2b5
 7811 0d4f 01       		.byte	0x1
 7812 0d50 5F0D0000 		.4byte	0xd5f
 7813 0d54 16       		.uleb128 0x16
 7814 0d55 000C0000 		.4byte	0xc00
 7815 0d59 16       		.uleb128 0x16
 7816 0d5a 5F0D0000 		.4byte	0xd5f
 7817 0d5e 00       		.byte	0x0
 7818 0d5f 12       		.uleb128 0x12
 7819 0d60 04       		.byte	0x4
 7820 0d61 650D0000 		.4byte	0xd65
 7821 0d65 1C       		.uleb128 0x1c
 7822 0d66 E10B0000 		.4byte	0xbe1
 7823 0d6a 21       		.uleb128 0x21
 7824 0d6b 01       		.byte	0x1
 7825 0d6c B70E0000 		.4byte	.LASF145
 7826 0d70 10       		.byte	0x10
 7827 0d71 FE       		.byte	0xfe
 7828 0d72 83000000 		.4byte	0x83
 7829 0d76 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 174


 7830 0d77 810D0000 		.4byte	0xd81
 7831 0d7b 16       		.uleb128 0x16
 7832 0d7c 000C0000 		.4byte	0xc00
 7833 0d80 00       		.byte	0x0
 7834 0d81 21       		.uleb128 0x21
 7835 0d82 01       		.byte	0x1
 7836 0d83 62060000 		.4byte	.LASF146
 7837 0d87 10       		.byte	0x10
 7838 0d88 EB       		.byte	0xeb
 7839 0d89 B5020000 		.4byte	0x2b5
 7840 0d8d 01       		.byte	0x1
 7841 0d8e 980D0000 		.4byte	0xd98
 7842 0d92 16       		.uleb128 0x16
 7843 0d93 000C0000 		.4byte	0xc00
 7844 0d97 00       		.byte	0x0
 7845 0d98 23       		.uleb128 0x23
 7846 0d99 01       		.byte	0x1
 7847 0d9a 700C0000 		.4byte	.LASF155
 7848 0d9e 10       		.byte	0x10
 7849 0d9f EC       		.byte	0xec
 7850 0da0 B5020000 		.4byte	0x2b5
 7851 0da4 01       		.byte	0x1
 7852 0da5 21       		.uleb128 0x21
 7853 0da6 01       		.byte	0x1
 7854 0da7 5A010000 		.4byte	.LASF147
 7855 0dab 10       		.byte	0x10
 7856 0dac ED       		.byte	0xed
 7857 0dad 90090000 		.4byte	0x990
 7858 0db1 01       		.byte	0x1
 7859 0db2 BC0D0000 		.4byte	0xdbc
 7860 0db6 16       		.uleb128 0x16
 7861 0db7 90090000 		.4byte	0x990
 7862 0dbb 00       		.byte	0x0
 7863 0dbc 20       		.uleb128 0x20
 7864 0dbd 01       		.byte	0x1
 7865 0dbe 16170000 		.4byte	.LASF149
 7866 0dc2 10       		.byte	0x10
 7867 0dc3 0301     		.2byte	0x103
 7868 0dc5 01       		.byte	0x1
 7869 0dc6 D00D0000 		.4byte	0xdd0
 7870 0dca 16       		.uleb128 0x16
 7871 0dcb C1090000 		.4byte	0x9c1
 7872 0dcf 00       		.byte	0x0
 7873 0dd0 22       		.uleb128 0x22
 7874 0dd1 01       		.byte	0x1
 7875 0dd2 16010000 		.4byte	.LASF150
 7876 0dd6 10       		.byte	0x10
 7877 0dd7 0801     		.2byte	0x108
 7878 0dd9 B5020000 		.4byte	0x2b5
 7879 0ddd 01       		.byte	0x1
 7880 0dde E80D0000 		.4byte	0xde8
 7881 0de2 16       		.uleb128 0x16
 7882 0de3 C1090000 		.4byte	0x9c1
 7883 0de7 00       		.byte	0x0
 7884 0de8 22       		.uleb128 0x22
 7885 0de9 01       		.byte	0x1
 7886 0dea 3D0C0000 		.4byte	.LASF151
ARM GAS  /tmp/ccwDRvq0.s 			page 175


 7887 0dee 10       		.byte	0x10
 7888 0def 0901     		.2byte	0x109
 7889 0df1 B5020000 		.4byte	0x2b5
 7890 0df5 01       		.byte	0x1
 7891 0df6 050E0000 		.4byte	0xe05
 7892 0dfa 16       		.uleb128 0x16
 7893 0dfb C1090000 		.4byte	0x9c1
 7894 0dff 16       		.uleb128 0x16
 7895 0e00 C1090000 		.4byte	0x9c1
 7896 0e04 00       		.byte	0x0
 7897 0e05 24       		.uleb128 0x24
 7898 0e06 01       		.byte	0x1
 7899 0e07 AF120000 		.4byte	.LASF152
 7900 0e0b 10       		.byte	0x10
 7901 0e0c FF       		.byte	0xff
 7902 0e0d 01       		.byte	0x1
 7903 0e0e 180E0000 		.4byte	0xe18
 7904 0e12 16       		.uleb128 0x16
 7905 0e13 000C0000 		.4byte	0xc00
 7906 0e17 00       		.byte	0x0
 7907 0e18 24       		.uleb128 0x24
 7908 0e19 01       		.byte	0x1
 7909 0e1a 8E0C0000 		.4byte	.LASF153
 7910 0e1e 10       		.byte	0x10
 7911 0e1f D5       		.byte	0xd5
 7912 0e20 01       		.byte	0x1
 7913 0e21 300E0000 		.4byte	0xe30
 7914 0e25 16       		.uleb128 0x16
 7915 0e26 000C0000 		.4byte	0xc00
 7916 0e2a 16       		.uleb128 0x16
 7917 0e2b 90090000 		.4byte	0x990
 7918 0e2f 00       		.byte	0x0
 7919 0e30 21       		.uleb128 0x21
 7920 0e31 01       		.byte	0x1
 7921 0e32 FD000000 		.4byte	.LASF154
 7922 0e36 10       		.byte	0x10
 7923 0e37 D6       		.byte	0xd6
 7924 0e38 B5020000 		.4byte	0x2b5
 7925 0e3c 01       		.byte	0x1
 7926 0e3d 560E0000 		.4byte	0xe56
 7927 0e41 16       		.uleb128 0x16
 7928 0e42 000C0000 		.4byte	0xc00
 7929 0e46 16       		.uleb128 0x16
 7930 0e47 90090000 		.4byte	0x990
 7931 0e4b 16       		.uleb128 0x16
 7932 0e4c B5020000 		.4byte	0x2b5
 7933 0e50 16       		.uleb128 0x16
 7934 0e51 900B0000 		.4byte	0xb90
 7935 0e55 00       		.byte	0x0
 7936 0e56 23       		.uleb128 0x23
 7937 0e57 01       		.byte	0x1
 7938 0e58 D0140000 		.4byte	.LASF156
 7939 0e5c 10       		.byte	0x10
 7940 0e5d D0       		.byte	0xd0
 7941 0e5e 000C0000 		.4byte	0xc00
 7942 0e62 01       		.byte	0x1
 7943 0e63 21       		.uleb128 0x21
ARM GAS  /tmp/ccwDRvq0.s 			page 176


 7944 0e64 01       		.byte	0x1
 7945 0e65 870C0000 		.4byte	.LASF157
 7946 0e69 10       		.byte	0x10
 7947 0e6a D1       		.byte	0xd1
 7948 0e6b 90090000 		.4byte	0x990
 7949 0e6f 01       		.byte	0x1
 7950 0e70 7A0E0000 		.4byte	0xe7a
 7951 0e74 16       		.uleb128 0x16
 7952 0e75 90090000 		.4byte	0x990
 7953 0e79 00       		.byte	0x0
 7954 0e7a 21       		.uleb128 0x21
 7955 0e7b 01       		.byte	0x1
 7956 0e7c 7B030000 		.4byte	.LASF158
 7957 0e80 10       		.byte	0x10
 7958 0e81 F1       		.byte	0xf1
 7959 0e82 B5020000 		.4byte	0x2b5
 7960 0e86 01       		.byte	0x1
 7961 0e87 960E0000 		.4byte	0xe96
 7962 0e8b 16       		.uleb128 0x16
 7963 0e8c B5020000 		.4byte	0x2b5
 7964 0e90 16       		.uleb128 0x16
 7965 0e91 000C0000 		.4byte	0xc00
 7966 0e95 00       		.byte	0x0
 7967 0e96 21       		.uleb128 0x21
 7968 0e97 01       		.byte	0x1
 7969 0e98 3E090000 		.4byte	.LASF159
 7970 0e9c 11       		.byte	0x11
 7971 0e9d 1E       		.byte	0x1e
 7972 0e9e B5020000 		.4byte	0x2b5
 7973 0ea2 01       		.byte	0x1
 7974 0ea3 B20E0000 		.4byte	0xeb2
 7975 0ea7 16       		.uleb128 0x16
 7976 0ea8 C1090000 		.4byte	0x9c1
 7977 0eac 16       		.uleb128 0x16
 7978 0ead C1090000 		.4byte	0x9c1
 7979 0eb1 00       		.byte	0x0
 7980 0eb2 21       		.uleb128 0x21
 7981 0eb3 01       		.byte	0x1
 7982 0eb4 300F0000 		.4byte	.LASF160
 7983 0eb8 11       		.byte	0x11
 7984 0eb9 21       		.byte	0x21
 7985 0eba 90090000 		.4byte	0x990
 7986 0ebe 01       		.byte	0x1
 7987 0ebf C90E0000 		.4byte	0xec9
 7988 0ec3 16       		.uleb128 0x16
 7989 0ec4 B5020000 		.4byte	0x2b5
 7990 0ec8 00       		.byte	0x0
 7991 0ec9 21       		.uleb128 0x21
 7992 0eca 01       		.byte	0x1
 7993 0ecb 25140000 		.4byte	.LASF161
 7994 0ecf 11       		.byte	0x11
 7995 0ed0 2C       		.byte	0x2c
 7996 0ed1 90090000 		.4byte	0x990
 7997 0ed5 01       		.byte	0x1
 7998 0ed6 E50E0000 		.4byte	0xee5
 7999 0eda 16       		.uleb128 0x16
 8000 0edb 90090000 		.4byte	0x990
ARM GAS  /tmp/ccwDRvq0.s 			page 177


 8001 0edf 16       		.uleb128 0x16
 8002 0ee0 C1090000 		.4byte	0x9c1
 8003 0ee4 00       		.byte	0x0
 8004 0ee5 21       		.uleb128 0x21
 8005 0ee6 01       		.byte	0x1
 8006 0ee7 99070000 		.4byte	.LASF162
 8007 0eeb 11       		.byte	0x11
 8008 0eec 2F       		.byte	0x2f
 8009 0eed 900B0000 		.4byte	0xb90
 8010 0ef1 01       		.byte	0x1
 8011 0ef2 060F0000 		.4byte	0xf06
 8012 0ef6 16       		.uleb128 0x16
 8013 0ef7 90090000 		.4byte	0x990
 8014 0efb 16       		.uleb128 0x16
 8015 0efc C1090000 		.4byte	0x9c1
 8016 0f00 16       		.uleb128 0x16
 8017 0f01 900B0000 		.4byte	0xb90
 8018 0f05 00       		.byte	0x0
 8019 0f06 09       		.uleb128 0x9
 8020 0f07 08       		.byte	0x8
 8021 0f08 12       		.byte	0x12
 8022 0f09 23       		.byte	0x23
 8023 0f0a E9170000 		.4byte	.LASF164
 8024 0f0e 2F0F0000 		.4byte	0xf2f
 8025 0f12 0C       		.uleb128 0xc
 8026 0f13 F10B0000 		.4byte	.LASF165
 8027 0f17 12       		.byte	0x12
 8028 0f18 24       		.byte	0x24
 8029 0f19 B5020000 		.4byte	0x2b5
 8030 0f1d 02       		.byte	0x2
 8031 0f1e 23       		.byte	0x23
 8032 0f1f 00       		.uleb128 0x0
 8033 0f20 11       		.uleb128 0x11
 8034 0f21 72656D00 		.ascii	"rem\000"
 8035 0f25 12       		.byte	0x12
 8036 0f26 25       		.byte	0x25
 8037 0f27 B5020000 		.4byte	0x2b5
 8038 0f2b 02       		.byte	0x2
 8039 0f2c 23       		.byte	0x23
 8040 0f2d 04       		.uleb128 0x4
 8041 0f2e 00       		.byte	0x0
 8042 0f2f 09       		.uleb128 0x9
 8043 0f30 08       		.byte	0x8
 8044 0f31 12       		.byte	0x12
 8045 0f32 29       		.byte	0x29
 8046 0f33 5C120000 		.4byte	.LASF166
 8047 0f37 580F0000 		.4byte	0xf58
 8048 0f3b 0C       		.uleb128 0xc
 8049 0f3c F10B0000 		.4byte	.LASF165
 8050 0f40 12       		.byte	0x12
 8051 0f41 2A       		.byte	0x2a
 8052 0f42 83000000 		.4byte	0x83
 8053 0f46 02       		.byte	0x2
 8054 0f47 23       		.byte	0x23
 8055 0f48 00       		.uleb128 0x0
 8056 0f49 11       		.uleb128 0x11
 8057 0f4a 72656D00 		.ascii	"rem\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 178


 8058 0f4e 12       		.byte	0x12
 8059 0f4f 2B       		.byte	0x2b
 8060 0f50 83000000 		.4byte	0x83
 8061 0f54 02       		.byte	0x2
 8062 0f55 23       		.byte	0x23
 8063 0f56 04       		.uleb128 0x4
 8064 0f57 00       		.byte	0x0
 8065 0f58 21       		.uleb128 0x21
 8066 0f59 01       		.byte	0x1
 8067 0f5a 88110000 		.4byte	.LASF167
 8068 0f5e 12       		.byte	0x12
 8069 0f5f 4A       		.byte	0x4a
 8070 0f60 B5020000 		.4byte	0x2b5
 8071 0f64 01       		.byte	0x1
 8072 0f65 6F0F0000 		.4byte	0xf6f
 8073 0f69 16       		.uleb128 0x16
 8074 0f6a 05050000 		.4byte	0x505
 8075 0f6e 00       		.byte	0x0
 8076 0f6f 21       		.uleb128 0x21
 8077 0f70 01       		.byte	0x1
 8078 0f71 33000000 		.4byte	.LASF168
 8079 0f75 12       		.byte	0x12
 8080 0f76 4B       		.byte	0x4b
 8081 0f77 B1000000 		.4byte	0xb1
 8082 0f7b 01       		.byte	0x1
 8083 0f7c 860F0000 		.4byte	0xf86
 8084 0f80 16       		.uleb128 0x16
 8085 0f81 C1090000 		.4byte	0x9c1
 8086 0f85 00       		.byte	0x0
 8087 0f86 21       		.uleb128 0x21
 8088 0f87 01       		.byte	0x1
 8089 0f88 E7160000 		.4byte	.LASF169
 8090 0f8c 12       		.byte	0x12
 8091 0f8d 4F       		.byte	0x4f
 8092 0f8e B5020000 		.4byte	0x2b5
 8093 0f92 01       		.byte	0x1
 8094 0f93 9D0F0000 		.4byte	0xf9d
 8095 0f97 16       		.uleb128 0x16
 8096 0f98 C1090000 		.4byte	0x9c1
 8097 0f9c 00       		.byte	0x0
 8098 0f9d 21       		.uleb128 0x21
 8099 0f9e 01       		.byte	0x1
 8100 0f9f 7E000000 		.4byte	.LASF170
 8101 0fa3 12       		.byte	0x12
 8102 0fa4 51       		.byte	0x51
 8103 0fa5 83000000 		.4byte	0x83
 8104 0fa9 01       		.byte	0x1
 8105 0faa B40F0000 		.4byte	0xfb4
 8106 0fae 16       		.uleb128 0x16
 8107 0faf C1090000 		.4byte	0x9c1
 8108 0fb3 00       		.byte	0x0
 8109 0fb4 21       		.uleb128 0x21
 8110 0fb5 01       		.byte	0x1
 8111 0fb6 20080000 		.4byte	.LASF171
 8112 0fba 12       		.byte	0x12
 8113 0fbb 53       		.byte	0x53
 8114 0fbc 41030000 		.4byte	0x341
ARM GAS  /tmp/ccwDRvq0.s 			page 179


 8115 0fc0 01       		.byte	0x1
 8116 0fc1 DF0F0000 		.4byte	0xfdf
 8117 0fc5 16       		.uleb128 0x16
 8118 0fc6 DF0F0000 		.4byte	0xfdf
 8119 0fca 16       		.uleb128 0x16
 8120 0fcb DF0F0000 		.4byte	0xfdf
 8121 0fcf 16       		.uleb128 0x16
 8122 0fd0 900B0000 		.4byte	0xb90
 8123 0fd4 16       		.uleb128 0x16
 8124 0fd5 900B0000 		.4byte	0xb90
 8125 0fd9 16       		.uleb128 0x16
 8126 0fda E60F0000 		.4byte	0xfe6
 8127 0fde 00       		.byte	0x0
 8128 0fdf 12       		.uleb128 0x12
 8129 0fe0 04       		.byte	0x4
 8130 0fe1 E50F0000 		.4byte	0xfe5
 8131 0fe5 25       		.uleb128 0x25
 8132 0fe6 12       		.uleb128 0x12
 8133 0fe7 04       		.byte	0x4
 8134 0fe8 EC0F0000 		.4byte	0xfec
 8135 0fec 15       		.uleb128 0x15
 8136 0fed B5020000 		.4byte	0x2b5
 8137 0ff1 00100000 		.4byte	0x1000
 8138 0ff5 16       		.uleb128 0x16
 8139 0ff6 DF0F0000 		.4byte	0xfdf
 8140 0ffa 16       		.uleb128 0x16
 8141 0ffb DF0F0000 		.4byte	0xfdf
 8142 0fff 00       		.byte	0x0
 8143 1000 26       		.uleb128 0x26
 8144 1001 01       		.byte	0x1
 8145 1002 64697600 		.ascii	"div\000"
 8146 1006 12       		.byte	0x12
 8147 1007 59       		.byte	0x59
 8148 1008 060F0000 		.4byte	0xf06
 8149 100c 01       		.byte	0x1
 8150 100d 1C100000 		.4byte	0x101c
 8151 1011 16       		.uleb128 0x16
 8152 1012 B5020000 		.4byte	0x2b5
 8153 1016 16       		.uleb128 0x16
 8154 1017 B5020000 		.4byte	0x2b5
 8155 101b 00       		.byte	0x0
 8156 101c 21       		.uleb128 0x21
 8157 101d 01       		.byte	0x1
 8158 101e 00000000 		.4byte	.LASF172
 8159 1022 12       		.byte	0x12
 8160 1023 5C       		.byte	0x5c
 8161 1024 90090000 		.4byte	0x990
 8162 1028 01       		.byte	0x1
 8163 1029 33100000 		.4byte	0x1033
 8164 102d 16       		.uleb128 0x16
 8165 102e C1090000 		.4byte	0x9c1
 8166 1032 00       		.byte	0x0
 8167 1033 21       		.uleb128 0x21
 8168 1034 01       		.byte	0x1
 8169 1035 E00D0000 		.4byte	.LASF173
 8170 1039 12       		.byte	0x12
 8171 103a 65       		.byte	0x65
ARM GAS  /tmp/ccwDRvq0.s 			page 180


 8172 103b 2F0F0000 		.4byte	0xf2f
 8173 103f 01       		.byte	0x1
 8174 1040 4F100000 		.4byte	0x104f
 8175 1044 16       		.uleb128 0x16
 8176 1045 83000000 		.4byte	0x83
 8177 1049 16       		.uleb128 0x16
 8178 104a 83000000 		.4byte	0x83
 8179 104e 00       		.byte	0x0
 8180 104f 21       		.uleb128 0x21
 8181 1050 01       		.byte	0x1
 8182 1051 BD010000 		.4byte	.LASF174
 8183 1055 12       		.byte	0x12
 8184 1056 67       		.byte	0x67
 8185 1057 B5020000 		.4byte	0x2b5
 8186 105b 01       		.byte	0x1
 8187 105c 6B100000 		.4byte	0x106b
 8188 1060 16       		.uleb128 0x16
 8189 1061 C1090000 		.4byte	0x9c1
 8190 1065 16       		.uleb128 0x16
 8191 1066 900B0000 		.4byte	0xb90
 8192 106a 00       		.byte	0x0
 8193 106b 21       		.uleb128 0x21
 8194 106c 01       		.byte	0x1
 8195 106d 36110000 		.4byte	.LASF175
 8196 1071 12       		.byte	0x12
 8197 1072 6D       		.byte	0x6d
 8198 1073 900B0000 		.4byte	0xb90
 8199 1077 01       		.byte	0x1
 8200 1078 8C100000 		.4byte	0x108c
 8201 107c 16       		.uleb128 0x16
 8202 107d 8C100000 		.4byte	0x108c
 8203 1081 16       		.uleb128 0x16
 8204 1082 C1090000 		.4byte	0x9c1
 8205 1086 16       		.uleb128 0x16
 8206 1087 900B0000 		.4byte	0xb90
 8207 108b 00       		.byte	0x0
 8208 108c 12       		.uleb128 0x12
 8209 108d 04       		.byte	0x4
 8210 108e 92100000 		.4byte	0x1092
 8211 1092 03       		.uleb128 0x3
 8212 1093 04       		.byte	0x4
 8213 1094 07       		.byte	0x7
 8214 1095 8E020000 		.4byte	.LASF176
 8215 1099 21       		.uleb128 0x21
 8216 109a 01       		.byte	0x1
 8217 109b 88040000 		.4byte	.LASF177
 8218 109f 12       		.byte	0x12
 8219 10a0 69       		.byte	0x69
 8220 10a1 B5020000 		.4byte	0x2b5
 8221 10a5 01       		.byte	0x1
 8222 10a6 BA100000 		.4byte	0x10ba
 8223 10aa 16       		.uleb128 0x16
 8224 10ab 8C100000 		.4byte	0x108c
 8225 10af 16       		.uleb128 0x16
 8226 10b0 C1090000 		.4byte	0x9c1
 8227 10b4 16       		.uleb128 0x16
 8228 10b5 900B0000 		.4byte	0xb90
ARM GAS  /tmp/ccwDRvq0.s 			page 181


 8229 10b9 00       		.byte	0x0
 8230 10ba 24       		.uleb128 0x24
 8231 10bb 01       		.byte	0x1
 8232 10bc FB180000 		.4byte	.LASF178
 8233 10c0 12       		.byte	0x12
 8234 10c1 81       		.byte	0x81
 8235 10c2 01       		.byte	0x1
 8236 10c3 DC100000 		.4byte	0x10dc
 8237 10c7 16       		.uleb128 0x16
 8238 10c8 41030000 		.4byte	0x341
 8239 10cc 16       		.uleb128 0x16
 8240 10cd 900B0000 		.4byte	0xb90
 8241 10d1 16       		.uleb128 0x16
 8242 10d2 900B0000 		.4byte	0xb90
 8243 10d6 16       		.uleb128 0x16
 8244 10d7 E60F0000 		.4byte	0xfe6
 8245 10db 00       		.byte	0x0
 8246 10dc 23       		.uleb128 0x23
 8247 10dd 01       		.byte	0x1
 8248 10de 560C0000 		.4byte	.LASF179
 8249 10e2 12       		.byte	0x12
 8250 10e3 82       		.byte	0x82
 8251 10e4 B5020000 		.4byte	0x2b5
 8252 10e8 01       		.byte	0x1
 8253 10e9 24       		.uleb128 0x24
 8254 10ea 01       		.byte	0x1
 8255 10eb 93070000 		.4byte	.LASF180
 8256 10ef 12       		.byte	0x12
 8257 10f0 87       		.byte	0x87
 8258 10f1 01       		.byte	0x1
 8259 10f2 FC100000 		.4byte	0x10fc
 8260 10f6 16       		.uleb128 0x16
 8261 10f7 AE020000 		.4byte	0x2ae
 8262 10fb 00       		.byte	0x0
 8263 10fc 21       		.uleb128 0x21
 8264 10fd 01       		.byte	0x1
 8265 10fe 8C070000 		.4byte	.LASF181
 8266 1102 12       		.byte	0x12
 8267 1103 88       		.byte	0x88
 8268 1104 B1000000 		.4byte	0xb1
 8269 1108 01       		.byte	0x1
 8270 1109 18110000 		.4byte	0x1118
 8271 110d 16       		.uleb128 0x16
 8272 110e C1090000 		.4byte	0x9c1
 8273 1112 16       		.uleb128 0x16
 8274 1113 18110000 		.4byte	0x1118
 8275 1117 00       		.byte	0x0
 8276 1118 12       		.uleb128 0x12
 8277 1119 04       		.byte	0x4
 8278 111a 90090000 		.4byte	0x990
 8279 111e 21       		.uleb128 0x21
 8280 111f 01       		.byte	0x1
 8281 1120 A3150000 		.4byte	.LASF182
 8282 1124 12       		.byte	0x12
 8283 1125 91       		.byte	0x91
 8284 1126 83000000 		.4byte	0x83
 8285 112a 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 182


 8286 112b 3F110000 		.4byte	0x113f
 8287 112f 16       		.uleb128 0x16
 8288 1130 C1090000 		.4byte	0x9c1
 8289 1134 16       		.uleb128 0x16
 8290 1135 18110000 		.4byte	0x1118
 8291 1139 16       		.uleb128 0x16
 8292 113a B5020000 		.4byte	0x2b5
 8293 113e 00       		.byte	0x0
 8294 113f 21       		.uleb128 0x21
 8295 1140 01       		.byte	0x1
 8296 1141 B5130000 		.4byte	.LASF183
 8297 1145 12       		.byte	0x12
 8298 1146 93       		.byte	0x93
 8299 1147 95000000 		.4byte	0x95
 8300 114b 01       		.byte	0x1
 8301 114c 60110000 		.4byte	0x1160
 8302 1150 16       		.uleb128 0x16
 8303 1151 C1090000 		.4byte	0x9c1
 8304 1155 16       		.uleb128 0x16
 8305 1156 18110000 		.4byte	0x1118
 8306 115a 16       		.uleb128 0x16
 8307 115b B5020000 		.4byte	0x2b5
 8308 115f 00       		.byte	0x0
 8309 1160 21       		.uleb128 0x21
 8310 1161 01       		.byte	0x1
 8311 1162 2B010000 		.4byte	.LASF184
 8312 1166 12       		.byte	0x12
 8313 1167 96       		.byte	0x96
 8314 1168 B5020000 		.4byte	0x2b5
 8315 116c 01       		.byte	0x1
 8316 116d 77110000 		.4byte	0x1177
 8317 1171 16       		.uleb128 0x16
 8318 1172 C1090000 		.4byte	0x9c1
 8319 1176 00       		.byte	0x0
 8320 1177 21       		.uleb128 0x21
 8321 1178 01       		.byte	0x1
 8322 1179 9A150000 		.4byte	.LASF185
 8323 117d 12       		.byte	0x12
 8324 117e 6F       		.byte	0x6f
 8325 117f 900B0000 		.4byte	0xb90
 8326 1183 01       		.byte	0x1
 8327 1184 98110000 		.4byte	0x1198
 8328 1188 16       		.uleb128 0x16
 8329 1189 90090000 		.4byte	0x990
 8330 118d 16       		.uleb128 0x16
 8331 118e 98110000 		.4byte	0x1198
 8332 1192 16       		.uleb128 0x16
 8333 1193 900B0000 		.4byte	0xb90
 8334 1197 00       		.byte	0x0
 8335 1198 12       		.uleb128 0x12
 8336 1199 04       		.byte	0x4
 8337 119a 9E110000 		.4byte	0x119e
 8338 119e 1C       		.uleb128 0x1c
 8339 119f 92100000 		.4byte	0x1092
 8340 11a3 21       		.uleb128 0x21
 8341 11a4 01       		.byte	0x1
 8342 11a5 1E060000 		.4byte	.LASF186
ARM GAS  /tmp/ccwDRvq0.s 			page 183


 8343 11a9 12       		.byte	0x12
 8344 11aa 6B       		.byte	0x6b
 8345 11ab B5020000 		.4byte	0x2b5
 8346 11af 01       		.byte	0x1
 8347 11b0 BF110000 		.4byte	0x11bf
 8348 11b4 16       		.uleb128 0x16
 8349 11b5 90090000 		.4byte	0x990
 8350 11b9 16       		.uleb128 0x16
 8351 11ba 92100000 		.4byte	0x1092
 8352 11be 00       		.byte	0x0
 8353 11bf 27       		.uleb128 0x27
 8354 11c0 746D00   		.ascii	"tm\000"
 8355 11c3 2C       		.byte	0x2c
 8356 11c4 13       		.byte	0x13
 8357 11c5 2D       		.byte	0x2d
 8358 11c6 65120000 		.4byte	0x1265
 8359 11ca 0C       		.uleb128 0xc
 8360 11cb CE160000 		.4byte	.LASF187
 8361 11cf 13       		.byte	0x13
 8362 11d0 2E       		.byte	0x2e
 8363 11d1 B5020000 		.4byte	0x2b5
 8364 11d5 02       		.byte	0x2
 8365 11d6 23       		.byte	0x23
 8366 11d7 00       		.uleb128 0x0
 8367 11d8 0C       		.uleb128 0xc
 8368 11d9 57140000 		.4byte	.LASF188
 8369 11dd 13       		.byte	0x13
 8370 11de 2F       		.byte	0x2f
 8371 11df B5020000 		.4byte	0x2b5
 8372 11e3 02       		.byte	0x2
 8373 11e4 23       		.byte	0x23
 8374 11e5 04       		.uleb128 0x4
 8375 11e6 0C       		.uleb128 0xc
 8376 11e7 6E160000 		.4byte	.LASF189
 8377 11eb 13       		.byte	0x13
 8378 11ec 30       		.byte	0x30
 8379 11ed B5020000 		.4byte	0x2b5
 8380 11f1 02       		.byte	0x2
 8381 11f2 23       		.byte	0x23
 8382 11f3 08       		.uleb128 0x8
 8383 11f4 0C       		.uleb128 0xc
 8384 11f5 CD020000 		.4byte	.LASF190
 8385 11f9 13       		.byte	0x13
 8386 11fa 31       		.byte	0x31
 8387 11fb B5020000 		.4byte	0x2b5
 8388 11ff 02       		.byte	0x2
 8389 1200 23       		.byte	0x23
 8390 1201 0C       		.uleb128 0xc
 8391 1202 0C       		.uleb128 0xc
 8392 1203 8F040000 		.4byte	.LASF191
 8393 1207 13       		.byte	0x13
 8394 1208 32       		.byte	0x32
 8395 1209 B5020000 		.4byte	0x2b5
 8396 120d 02       		.byte	0x2
 8397 120e 23       		.byte	0x23
 8398 120f 10       		.uleb128 0x10
 8399 1210 0C       		.uleb128 0xc
ARM GAS  /tmp/ccwDRvq0.s 			page 184


 8400 1211 390B0000 		.4byte	.LASF192
 8401 1215 13       		.byte	0x13
 8402 1216 33       		.byte	0x33
 8403 1217 B5020000 		.4byte	0x2b5
 8404 121b 02       		.byte	0x2
 8405 121c 23       		.byte	0x23
 8406 121d 14       		.uleb128 0x14
 8407 121e 0C       		.uleb128 0xc
 8408 121f E2150000 		.4byte	.LASF193
 8409 1223 13       		.byte	0x13
 8410 1224 34       		.byte	0x34
 8411 1225 B5020000 		.4byte	0x2b5
 8412 1229 02       		.byte	0x2
 8413 122a 23       		.byte	0x23
 8414 122b 18       		.uleb128 0x18
 8415 122c 0C       		.uleb128 0xc
 8416 122d 32010000 		.4byte	.LASF194
 8417 1231 13       		.byte	0x13
 8418 1232 35       		.byte	0x35
 8419 1233 B5020000 		.4byte	0x2b5
 8420 1237 02       		.byte	0x2
 8421 1238 23       		.byte	0x23
 8422 1239 1C       		.uleb128 0x1c
 8423 123a 0C       		.uleb128 0xc
 8424 123b 82100000 		.4byte	.LASF195
 8425 123f 13       		.byte	0x13
 8426 1240 36       		.byte	0x36
 8427 1241 B5020000 		.4byte	0x2b5
 8428 1245 02       		.byte	0x2
 8429 1246 23       		.byte	0x23
 8430 1247 20       		.uleb128 0x20
 8431 1248 0C       		.uleb128 0xc
 8432 1249 A0140000 		.4byte	.LASF196
 8433 124d 13       		.byte	0x13
 8434 124e 37       		.byte	0x37
 8435 124f B5020000 		.4byte	0x2b5
 8436 1253 02       		.byte	0x2
 8437 1254 23       		.byte	0x23
 8438 1255 24       		.uleb128 0x24
 8439 1256 0C       		.uleb128 0xc
 8440 1257 AA140000 		.4byte	.LASF197
 8441 125b 13       		.byte	0x13
 8442 125c 38       		.byte	0x38
 8443 125d B5020000 		.4byte	0x2b5
 8444 1261 02       		.byte	0x2
 8445 1262 23       		.byte	0x23
 8446 1263 28       		.uleb128 0x28
 8447 1264 00       		.byte	0x0
 8448 1265 23       		.uleb128 0x23
 8449 1266 01       		.byte	0x1
 8450 1267 1E090000 		.4byte	.LASF198
 8451 126b 13       		.byte	0x13
 8452 126c 3B       		.byte	0x3b
 8453 126d C00B0000 		.4byte	0xbc0
 8454 1271 01       		.byte	0x1
 8455 1272 21       		.uleb128 0x21
 8456 1273 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 185


 8457 1274 0F060000 		.4byte	.LASF199
 8458 1278 13       		.byte	0x13
 8459 1279 3C       		.byte	0x3c
 8460 127a B1000000 		.4byte	0xb1
 8461 127e 01       		.byte	0x1
 8462 127f 8E120000 		.4byte	0x128e
 8463 1283 16       		.uleb128 0x16
 8464 1284 CB0B0000 		.4byte	0xbcb
 8465 1288 16       		.uleb128 0x16
 8466 1289 CB0B0000 		.4byte	0xbcb
 8467 128d 00       		.byte	0x0
 8468 128e 21       		.uleb128 0x21
 8469 128f 01       		.byte	0x1
 8470 1290 0F010000 		.4byte	.LASF200
 8471 1294 13       		.byte	0x13
 8472 1295 3D       		.byte	0x3d
 8473 1296 CB0B0000 		.4byte	0xbcb
 8474 129a 01       		.byte	0x1
 8475 129b A5120000 		.4byte	0x12a5
 8476 129f 16       		.uleb128 0x16
 8477 12a0 A5120000 		.4byte	0x12a5
 8478 12a4 00       		.byte	0x0
 8479 12a5 12       		.uleb128 0x12
 8480 12a6 04       		.byte	0x4
 8481 12a7 BF110000 		.4byte	0x11bf
 8482 12ab 21       		.uleb128 0x21
 8483 12ac 01       		.byte	0x1
 8484 12ad F9040000 		.4byte	.LASF201
 8485 12b1 13       		.byte	0x13
 8486 12b2 3E       		.byte	0x3e
 8487 12b3 CB0B0000 		.4byte	0xbcb
 8488 12b7 01       		.byte	0x1
 8489 12b8 C2120000 		.4byte	0x12c2
 8490 12bc 16       		.uleb128 0x16
 8491 12bd C2120000 		.4byte	0x12c2
 8492 12c1 00       		.byte	0x0
 8493 12c2 12       		.uleb128 0x12
 8494 12c3 04       		.byte	0x4
 8495 12c4 CB0B0000 		.4byte	0xbcb
 8496 12c8 21       		.uleb128 0x21
 8497 12c9 01       		.byte	0x1
 8498 12ca 680D0000 		.4byte	.LASF202
 8499 12ce 13       		.byte	0x13
 8500 12cf 40       		.byte	0x40
 8501 12d0 90090000 		.4byte	0x990
 8502 12d4 01       		.byte	0x1
 8503 12d5 DF120000 		.4byte	0x12df
 8504 12d9 16       		.uleb128 0x16
 8505 12da DF120000 		.4byte	0x12df
 8506 12de 00       		.byte	0x0
 8507 12df 12       		.uleb128 0x12
 8508 12e0 04       		.byte	0x4
 8509 12e1 E5120000 		.4byte	0x12e5
 8510 12e5 1C       		.uleb128 0x1c
 8511 12e6 BF110000 		.4byte	0x11bf
 8512 12ea 21       		.uleb128 0x21
 8513 12eb 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 186


 8514 12ec 18060000 		.4byte	.LASF203
 8515 12f0 13       		.byte	0x13
 8516 12f1 41       		.byte	0x41
 8517 12f2 90090000 		.4byte	0x990
 8518 12f6 01       		.byte	0x1
 8519 12f7 01130000 		.4byte	0x1301
 8520 12fb 16       		.uleb128 0x16
 8521 12fc 01130000 		.4byte	0x1301
 8522 1300 00       		.byte	0x0
 8523 1301 12       		.uleb128 0x12
 8524 1302 04       		.byte	0x4
 8525 1303 07130000 		.4byte	0x1307
 8526 1307 1C       		.uleb128 0x1c
 8527 1308 CB0B0000 		.4byte	0xbcb
 8528 130c 21       		.uleb128 0x21
 8529 130d 01       		.byte	0x1
 8530 130e DB110000 		.4byte	.LASF204
 8531 1312 13       		.byte	0x13
 8532 1313 42       		.byte	0x42
 8533 1314 A5120000 		.4byte	0x12a5
 8534 1318 01       		.byte	0x1
 8535 1319 23130000 		.4byte	0x1323
 8536 131d 16       		.uleb128 0x16
 8537 131e 01130000 		.4byte	0x1301
 8538 1322 00       		.byte	0x0
 8539 1323 21       		.uleb128 0x21
 8540 1324 01       		.byte	0x1
 8541 1325 140C0000 		.4byte	.LASF205
 8542 1329 13       		.byte	0x13
 8543 132a 43       		.byte	0x43
 8544 132b A5120000 		.4byte	0x12a5
 8545 132f 01       		.byte	0x1
 8546 1330 3A130000 		.4byte	0x133a
 8547 1334 16       		.uleb128 0x16
 8548 1335 01130000 		.4byte	0x1301
 8549 1339 00       		.byte	0x0
 8550 133a 21       		.uleb128 0x21
 8551 133b 01       		.byte	0x1
 8552 133c 54040000 		.4byte	.LASF206
 8553 1340 13       		.byte	0x13
 8554 1341 45       		.byte	0x45
 8555 1342 900B0000 		.4byte	0xb90
 8556 1346 01       		.byte	0x1
 8557 1347 60130000 		.4byte	0x1360
 8558 134b 16       		.uleb128 0x16
 8559 134c 90090000 		.4byte	0x990
 8560 1350 16       		.uleb128 0x16
 8561 1351 900B0000 		.4byte	0xb90
 8562 1355 16       		.uleb128 0x16
 8563 1356 C1090000 		.4byte	0x9c1
 8564 135a 16       		.uleb128 0x16
 8565 135b DF120000 		.4byte	0x12df
 8566 135f 00       		.byte	0x0
 8567 1360 02       		.uleb128 0x2
 8568 1361 780C0000 		.4byte	.LASF207
 8569 1365 0D       		.byte	0xd
 8570 1366 66       		.byte	0x66
ARM GAS  /tmp/ccwDRvq0.s 			page 187


 8571 1367 9B0B0000 		.4byte	0xb9b
 8572 136b 1C       		.uleb128 0x1c
 8573 136c 8A000000 		.4byte	0x8a
 8574 1370 0D       		.uleb128 0xd
 8575 1371 4D000000 		.4byte	0x4d
 8576 1375 80130000 		.4byte	0x1380
 8577 1379 0E       		.uleb128 0xe
 8578 137a AE020000 		.4byte	0x2ae
 8579 137e 1F       		.byte	0x1f
 8580 137f 00       		.byte	0x0
 8581 1380 12       		.uleb128 0x12
 8582 1381 04       		.byte	0x4
 8583 1382 86130000 		.4byte	0x1386
 8584 1386 1C       		.uleb128 0x1c
 8585 1387 42000000 		.4byte	0x42
 8586 138b 12       		.uleb128 0x12
 8587 138c 04       		.byte	0x4
 8588 138d 42000000 		.4byte	0x42
 8589 1391 28       		.uleb128 0x28
 8590 1392 B20E0000 		.4byte	.LASF215
 8591 1396 0801     		.2byte	0x108
 8592 1398 14       		.byte	0x14
 8593 1399 22       		.byte	0x22
 8594 139a 74140000 		.4byte	0x1474
 8595 139e 29       		.uleb128 0x29
 8596 139f B2070000 		.4byte	.LASF208
 8597 13a3 14       		.byte	0x14
 8598 13a4 2D       		.byte	0x2d
 8599 13a5 3A070000 		.4byte	.LASF210
 8600 13a9 6B130000 		.4byte	0x136b
 8601 13ad 01       		.byte	0x1
 8602 13ae 03       		.byte	0x3
 8603 13af 01       		.byte	0x1
 8604 13b0 0001     		.2byte	0x100
 8605 13b2 2A       		.uleb128 0x2a
 8606 13b3 7E050000 		.4byte	.LASF209
 8607 13b7 14       		.byte	0x14
 8608 13b8 30       		.byte	0x30
 8609 13b9 24090000 		.4byte	.LASF211
 8610 13bd 6B130000 		.4byte	0x136b
 8611 13c1 01       		.byte	0x1
 8612 13c2 03       		.byte	0x3
 8613 13c3 01       		.byte	0x1
 8614 13c4 FF       		.byte	0xff
 8615 13c5 2B       		.uleb128 0x2b
 8616 13c6 22020000 		.4byte	.LASF212
 8617 13ca 14       		.byte	0x14
 8618 13cb 33       		.byte	0x33
 8619 13cc 8A000000 		.4byte	0x8a
 8620 13d0 02       		.byte	0x2
 8621 13d1 23       		.byte	0x23
 8622 13d2 00       		.uleb128 0x0
 8623 13d3 03       		.byte	0x3
 8624 13d4 2B       		.uleb128 0x2b
 8625 13d5 29070000 		.4byte	.LASF213
 8626 13d9 14       		.byte	0x14
 8627 13da 36       		.byte	0x36
ARM GAS  /tmp/ccwDRvq0.s 			page 188


 8628 13db 8A000000 		.4byte	0x8a
 8629 13df 02       		.byte	0x2
 8630 13e0 23       		.byte	0x23
 8631 13e1 04       		.uleb128 0x4
 8632 13e2 03       		.byte	0x3
 8633 13e3 2B       		.uleb128 0x2b
 8634 13e4 8F010000 		.4byte	.LASF214
 8635 13e8 14       		.byte	0x14
 8636 13e9 39       		.byte	0x39
 8637 13ea 74140000 		.4byte	0x1474
 8638 13ee 02       		.byte	0x2
 8639 13ef 23       		.byte	0x23
 8640 13f0 08       		.uleb128 0x8
 8641 13f1 03       		.byte	0x3
 8642 13f2 21       		.uleb128 0x21
 8643 13f3 01       		.byte	0x1
 8644 13f4 B20E0000 		.4byte	.LASF215
 8645 13f8 14       		.byte	0x14
 8646 13f9 24       		.byte	0x24
 8647 13fa 84140000 		.4byte	0x1484
 8648 13fe 01       		.byte	0x1
 8649 13ff 0A140000 		.4byte	0x140a
 8650 1403 2C       		.uleb128 0x2c
 8651 1404 84140000 		.4byte	0x1484
 8652 1408 01       		.byte	0x1
 8653 1409 00       		.byte	0x0
 8654 140a 2D       		.uleb128 0x2d
 8655 140b 01       		.byte	0x1
 8656 140c DA080000 		.4byte	.LASF216
 8657 1410 14       		.byte	0x14
 8658 1411 26       		.byte	0x26
 8659 1412 4F0B0000 		.4byte	.LASF236
 8660 1416 01       		.byte	0x1
 8661 1417 22140000 		.4byte	0x1422
 8662 141b 2C       		.uleb128 0x2c
 8663 141c 84140000 		.4byte	0x1484
 8664 1420 01       		.byte	0x1
 8665 1421 00       		.byte	0x0
 8666 1422 2E       		.uleb128 0x2e
 8667 1423 01       		.byte	0x1
 8668 1424 15110000 		.4byte	.LASF217
 8669 1428 14       		.byte	0x14
 8670 1429 27       		.byte	0x27
 8671 142a C3040000 		.4byte	.LASF219
 8672 142e 29000000 		.4byte	0x29
 8673 1432 01       		.byte	0x1
 8674 1433 3E140000 		.4byte	0x143e
 8675 1437 2C       		.uleb128 0x2c
 8676 1438 84140000 		.4byte	0x1484
 8677 143c 01       		.byte	0x1
 8678 143d 00       		.byte	0x0
 8679 143e 2E       		.uleb128 0x2e
 8680 143f 01       		.byte	0x1
 8681 1440 93030000 		.4byte	.LASF218
 8682 1444 14       		.byte	0x14
 8683 1445 28       		.byte	0x28
 8684 1446 D2150000 		.4byte	.LASF220
ARM GAS  /tmp/ccwDRvq0.s 			page 189


 8685 144a 42000000 		.4byte	0x42
 8686 144e 01       		.byte	0x1
 8687 144f 5A140000 		.4byte	0x145a
 8688 1453 2C       		.uleb128 0x2c
 8689 1454 84140000 		.4byte	0x1484
 8690 1458 01       		.byte	0x1
 8691 1459 00       		.byte	0x0
 8692 145a 2F       		.uleb128 0x2f
 8693 145b 01       		.byte	0x1
 8694 145c F0120000 		.4byte	.LASF221
 8695 1460 14       		.byte	0x14
 8696 1461 29       		.byte	0x29
 8697 1462 B3100000 		.4byte	.LASF232
 8698 1466 01       		.byte	0x1
 8699 1467 2C       		.uleb128 0x2c
 8700 1468 84140000 		.4byte	0x1484
 8701 146c 01       		.byte	0x1
 8702 146d 16       		.uleb128 0x16
 8703 146e 42000000 		.4byte	0x42
 8704 1472 00       		.byte	0x0
 8705 1473 00       		.byte	0x0
 8706 1474 0D       		.uleb128 0xd
 8707 1475 4D000000 		.4byte	0x4d
 8708 1479 84140000 		.4byte	0x1484
 8709 147d 0E       		.uleb128 0xe
 8710 147e AE020000 		.4byte	0x2ae
 8711 1482 FF       		.byte	0xff
 8712 1483 00       		.byte	0x0
 8713 1484 12       		.uleb128 0x12
 8714 1485 04       		.byte	0x4
 8715 1486 91130000 		.4byte	0x1391
 8716 148a 28       		.uleb128 0x28
 8717 148b 390E0000 		.4byte	.LASF222
 8718 148f 0801     		.2byte	0x108
 8719 1491 15       		.byte	0x15
 8720 1492 21       		.byte	0x21
 8721 1493 04150000 		.4byte	0x1504
 8722 1497 30       		.uleb128 0x30
 8723 1498 04       		.byte	0x4
 8724 1499 15       		.byte	0x15
 8725 149a 26       		.byte	0x26
 8726 149b DC040000 		.4byte	.LASF475
 8727 149f E1140000 		.4byte	0x14e1
 8728 14a3 31       		.uleb128 0x31
 8729 14a4 D4030000 		.4byte	.LASF223
 8730 14a8 B009     		.sleb128 1200
 8731 14aa 31       		.uleb128 0x31
 8732 14ab D30D0000 		.4byte	.LASF224
 8733 14af E012     		.sleb128 2400
 8734 14b1 31       		.uleb128 0x31
 8735 14b2 74060000 		.4byte	.LASF225
 8736 14b6 C025     		.sleb128 4800
 8737 14b8 31       		.uleb128 0x31
 8738 14b9 CD080000 		.4byte	.LASF226
 8739 14bd 80CB00   		.sleb128 9600
 8740 14c0 31       		.uleb128 0x31
 8741 14c1 08170000 		.4byte	.LASF227
ARM GAS  /tmp/ccwDRvq0.s 			page 190


 8742 14c5 809601   		.sleb128 19200
 8743 14c8 31       		.uleb128 0x31
 8744 14c9 AE0B0000 		.4byte	.LASF228
 8745 14cd 80AC02   		.sleb128 38400
 8746 14d0 31       		.uleb128 0x31
 8747 14d1 0D180000 		.4byte	.LASF229
 8748 14d5 80C203   		.sleb128 57600
 8749 14d8 31       		.uleb128 0x31
 8750 14d9 F6060000 		.4byte	.LASF230
 8751 14dd 808407   		.sleb128 115200
 8752 14e0 00       		.byte	0x0
 8753 14e1 0C       		.uleb128 0xc
 8754 14e2 AA150000 		.4byte	.LASF231
 8755 14e6 15       		.byte	0x15
 8756 14e7 4C       		.byte	0x4c
 8757 14e8 91130000 		.4byte	0x1391
 8758 14ec 02       		.byte	0x2
 8759 14ed 23       		.byte	0x23
 8760 14ee 00       		.uleb128 0x0
 8761 14ef 2F       		.uleb128 0x2f
 8762 14f0 01       		.byte	0x1
 8763 14f1 DA080000 		.4byte	.LASF216
 8764 14f5 15       		.byte	0x15
 8765 14f6 23       		.byte	0x23
 8766 14f7 27020000 		.4byte	.LASF233
 8767 14fb 01       		.byte	0x1
 8768 14fc 2C       		.uleb128 0x2c
 8769 14fd 04150000 		.4byte	0x1504
 8770 1501 01       		.byte	0x1
 8771 1502 00       		.byte	0x0
 8772 1503 00       		.byte	0x0
 8773 1504 12       		.uleb128 0x12
 8774 1505 04       		.byte	0x4
 8775 1506 8A140000 		.4byte	0x148a
 8776 150a 28       		.uleb128 0x28
 8777 150b B5160000 		.4byte	.LASF234
 8778 150f 0801     		.2byte	0x108
 8779 1511 16       		.byte	0x16
 8780 1512 21       		.byte	0x21
 8781 1513 0F160000 		.4byte	0x160f
 8782 1517 32       		.uleb128 0x32
 8783 1518 8A140000 		.4byte	0x148a
 8784 151c 02       		.byte	0x2
 8785 151d 23       		.byte	0x23
 8786 151e 00       		.uleb128 0x0
 8787 151f 01       		.byte	0x1
 8788 1520 2D       		.uleb128 0x2d
 8789 1521 01       		.byte	0x1
 8790 1522 DF160000 		.4byte	.LASF235
 8791 1526 16       		.byte	0x16
 8792 1527 23       		.byte	0x23
 8793 1528 76160000 		.4byte	.LASF237
 8794 152c 01       		.byte	0x1
 8795 152d 38150000 		.4byte	0x1538
 8796 1531 2C       		.uleb128 0x2c
 8797 1532 0F160000 		.4byte	0x160f
 8798 1536 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 191


 8799 1537 00       		.byte	0x0
 8800 1538 2D       		.uleb128 0x2d
 8801 1539 01       		.byte	0x1
 8802 153a 92160000 		.4byte	.LASF238
 8803 153e 16       		.byte	0x16
 8804 153f 24       		.byte	0x24
 8805 1540 D5090000 		.4byte	.LASF239
 8806 1544 01       		.byte	0x1
 8807 1545 55150000 		.4byte	0x1555
 8808 1549 2C       		.uleb128 0x2c
 8809 154a 0F160000 		.4byte	0x160f
 8810 154e 01       		.byte	0x1
 8811 154f 16       		.uleb128 0x16
 8812 1550 97140000 		.4byte	0x1497
 8813 1554 00       		.byte	0x0
 8814 1555 2E       		.uleb128 0x2e
 8815 1556 01       		.byte	0x1
 8816 1557 6A0A0000 		.4byte	.LASF240
 8817 155b 16       		.byte	0x16
 8818 155c 25       		.byte	0x25
 8819 155d 420E0000 		.4byte	.LASF241
 8820 1561 29000000 		.4byte	0x29
 8821 1565 01       		.byte	0x1
 8822 1566 71150000 		.4byte	0x1571
 8823 156a 2C       		.uleb128 0x2c
 8824 156b 0F160000 		.4byte	0x160f
 8825 156f 01       		.byte	0x1
 8826 1570 00       		.byte	0x0
 8827 1571 33       		.uleb128 0x33
 8828 1572 01       		.byte	0x1
 8829 1573 49535200 		.ascii	"ISR\000"
 8830 1577 16       		.byte	0x16
 8831 1578 26       		.byte	0x26
 8832 1579 D9170000 		.4byte	.LASF476
 8833 157d 01       		.byte	0x1
 8834 157e 89150000 		.4byte	0x1589
 8835 1582 2C       		.uleb128 0x2c
 8836 1583 0F160000 		.4byte	0x160f
 8837 1587 01       		.byte	0x1
 8838 1588 00       		.byte	0x0
 8839 1589 2E       		.uleb128 0x2e
 8840 158a 01       		.byte	0x1
 8841 158b 6A140000 		.4byte	.LASF242
 8842 158f 16       		.byte	0x16
 8843 1590 27       		.byte	0x27
 8844 1591 2F130000 		.4byte	.LASF243
 8845 1595 42000000 		.4byte	0x42
 8846 1599 01       		.byte	0x1
 8847 159a A5150000 		.4byte	0x15a5
 8848 159e 2C       		.uleb128 0x2c
 8849 159f 0F160000 		.4byte	0x160f
 8850 15a3 01       		.byte	0x1
 8851 15a4 00       		.byte	0x0
 8852 15a5 2D       		.uleb128 0x2d
 8853 15a6 01       		.byte	0x1
 8854 15a7 F0120000 		.4byte	.LASF221
 8855 15ab 16       		.byte	0x16
ARM GAS  /tmp/ccwDRvq0.s 			page 192


 8856 15ac 28       		.byte	0x28
 8857 15ad 3F080000 		.4byte	.LASF244
 8858 15b1 01       		.byte	0x1
 8859 15b2 C2150000 		.4byte	0x15c2
 8860 15b6 2C       		.uleb128 0x2c
 8861 15b7 0F160000 		.4byte	0x160f
 8862 15bb 01       		.byte	0x1
 8863 15bc 16       		.uleb128 0x16
 8864 15bd C1090000 		.4byte	0x9c1
 8865 15c1 00       		.byte	0x0
 8866 15c2 2D       		.uleb128 0x2d
 8867 15c3 01       		.byte	0x1
 8868 15c4 28080000 		.4byte	.LASF245
 8869 15c8 16       		.byte	0x16
 8870 15c9 29       		.byte	0x29
 8871 15ca DB0B0000 		.4byte	.LASF246
 8872 15ce 01       		.byte	0x1
 8873 15cf DF150000 		.4byte	0x15df
 8874 15d3 2C       		.uleb128 0x2c
 8875 15d4 0F160000 		.4byte	0x160f
 8876 15d8 01       		.byte	0x1
 8877 15d9 16       		.uleb128 0x16
 8878 15da 42000000 		.4byte	0x42
 8879 15de 00       		.byte	0x0
 8880 15df 2D       		.uleb128 0x2d
 8881 15e0 01       		.byte	0x1
 8882 15e1 44130000 		.4byte	.LASF247
 8883 15e5 16       		.byte	0x16
 8884 15e6 2A       		.byte	0x2a
 8885 15e7 B3030000 		.4byte	.LASF248
 8886 15eb 01       		.byte	0x1
 8887 15ec FD150000 		.4byte	0x15fd
 8888 15f0 2C       		.uleb128 0x2c
 8889 15f1 0F160000 		.4byte	0x160f
 8890 15f5 01       		.byte	0x1
 8891 15f6 16       		.uleb128 0x16
 8892 15f7 C1090000 		.4byte	0x9c1
 8893 15fb 34       		.uleb128 0x34
 8894 15fc 00       		.byte	0x0
 8895 15fd 35       		.uleb128 0x35
 8896 15fe 01       		.byte	0x1
 8897 15ff 0D120000 		.4byte	.LASF477
 8898 1603 16       		.byte	0x16
 8899 1604 2C       		.byte	0x2c
 8900 1605 0C0A0000 		.4byte	.LASF478
 8901 1609 15160000 		.4byte	0x1615
 8902 160d 01       		.byte	0x1
 8903 160e 00       		.byte	0x0
 8904 160f 12       		.uleb128 0x12
 8905 1610 04       		.byte	0x4
 8906 1611 0A150000 		.4byte	0x150a
 8907 1615 12       		.uleb128 0x12
 8908 1616 04       		.byte	0x4
 8909 1617 0A150000 		.4byte	0x150a
 8910 161b 02       		.uleb128 0x2
 8911 161c BF0D0000 		.4byte	.LASF249
 8912 1620 17       		.byte	0x17
ARM GAS  /tmp/ccwDRvq0.s 			page 193


 8913 1621 48       		.byte	0x48
 8914 1622 26160000 		.4byte	0x1626
 8915 1626 12       		.uleb128 0x12
 8916 1627 04       		.byte	0x4
 8917 1628 2C160000 		.4byte	0x162c
 8918 162c 15       		.uleb128 0x15
 8919 162d 42000000 		.4byte	0x42
 8920 1631 45160000 		.4byte	0x1645
 8921 1635 16       		.uleb128 0x16
 8922 1636 8A000000 		.4byte	0x8a
 8923 163a 16       		.uleb128 0x16
 8924 163b 8B130000 		.4byte	0x138b
 8925 163f 16       		.uleb128 0x16
 8926 1640 66000000 		.4byte	0x66
 8927 1644 00       		.byte	0x0
 8928 1645 02       		.uleb128 0x2
 8929 1646 C8070000 		.4byte	.LASF250
 8930 164a 17       		.byte	0x17
 8931 164b 51       		.byte	0x51
 8932 164c 50160000 		.4byte	0x1650
 8933 1650 12       		.uleb128 0x12
 8934 1651 04       		.byte	0x4
 8935 1652 56160000 		.4byte	0x1656
 8936 1656 15       		.uleb128 0x15
 8937 1657 42000000 		.4byte	0x42
 8938 165b 6F160000 		.4byte	0x166f
 8939 165f 16       		.uleb128 0x16
 8940 1660 8B130000 		.4byte	0x138b
 8941 1664 16       		.uleb128 0x16
 8942 1665 8A000000 		.4byte	0x8a
 8943 1669 16       		.uleb128 0x16
 8944 166a 41030000 		.4byte	0x341
 8945 166e 00       		.byte	0x0
 8946 166f 02       		.uleb128 0x2
 8947 1670 FB010000 		.4byte	.LASF251
 8948 1674 17       		.byte	0x17
 8949 1675 64       		.byte	0x64
 8950 1676 7A160000 		.4byte	0x167a
 8951 167a 12       		.uleb128 0x12
 8952 167b 04       		.byte	0x4
 8953 167c 80160000 		.4byte	0x1680
 8954 1680 15       		.uleb128 0x15
 8955 1681 42000000 		.4byte	0x42
 8956 1685 A8160000 		.4byte	0x16a8
 8957 1689 16       		.uleb128 0x16
 8958 168a 8A000000 		.4byte	0x8a
 8959 168e 16       		.uleb128 0x16
 8960 168f 8B130000 		.4byte	0x138b
 8961 1693 16       		.uleb128 0x16
 8962 1694 66000000 		.4byte	0x66
 8963 1698 16       		.uleb128 0x16
 8964 1699 66000000 		.4byte	0x66
 8965 169d 16       		.uleb128 0x16
 8966 169e 45160000 		.4byte	0x1645
 8967 16a2 16       		.uleb128 0x16
 8968 16a3 41030000 		.4byte	0x341
 8969 16a7 00       		.byte	0x0
ARM GAS  /tmp/ccwDRvq0.s 			page 194


 8970 16a8 02       		.uleb128 0x2
 8971 16a9 F6120000 		.4byte	.LASF252
 8972 16ad 17       		.byte	0x17
 8973 16ae 6C       		.byte	0x6c
 8974 16af B3160000 		.4byte	0x16b3
 8975 16b3 12       		.uleb128 0x12
 8976 16b4 04       		.byte	0x4
 8977 16b5 B9160000 		.4byte	0x16b9
 8978 16b9 15       		.uleb128 0x15
 8979 16ba 42000000 		.4byte	0x42
 8980 16be D2160000 		.4byte	0x16d2
 8981 16c2 16       		.uleb128 0x16
 8982 16c3 8A000000 		.4byte	0x8a
 8983 16c7 16       		.uleb128 0x16
 8984 16c8 80130000 		.4byte	0x1380
 8985 16cc 16       		.uleb128 0x16
 8986 16cd 66000000 		.4byte	0x66
 8987 16d1 00       		.byte	0x0
 8988 16d2 10       		.uleb128 0x10
 8989 16d3 26100000 		.4byte	.LASF253
 8990 16d7 18       		.byte	0x18
 8991 16d8 17       		.byte	0x17
 8992 16d9 72       		.byte	0x72
 8993 16da 33170000 		.4byte	0x1733
 8994 16de 0C       		.uleb128 0xc
 8995 16df 73070000 		.4byte	.LASF254
 8996 16e3 17       		.byte	0x17
 8997 16e4 79       		.byte	0x79
 8998 16e5 1B160000 		.4byte	0x161b
 8999 16e9 02       		.byte	0x2
 9000 16ea 23       		.byte	0x23
 9001 16eb 00       		.uleb128 0x0
 9002 16ec 0C       		.uleb128 0xc
 9003 16ed 5B0C0000 		.4byte	.LASF255
 9004 16f1 17       		.byte	0x17
 9005 16f2 80       		.byte	0x80
 9006 16f3 6F160000 		.4byte	0x166f
 9007 16f7 02       		.byte	0x2
 9008 16f8 23       		.byte	0x23
 9009 16f9 04       		.uleb128 0x4
 9010 16fa 0C       		.uleb128 0xc
 9011 16fb E9060000 		.4byte	.LASF256
 9012 16ff 17       		.byte	0x17
 9013 1700 87       		.byte	0x87
 9014 1701 A8160000 		.4byte	0x16a8
 9015 1705 02       		.byte	0x2
 9016 1706 23       		.byte	0x23
 9017 1707 08       		.uleb128 0x8
 9018 1708 0C       		.uleb128 0xc
 9019 1709 93140000 		.4byte	.LASF257
 9020 170d 17       		.byte	0x17
 9021 170e 8E       		.byte	0x8e
 9022 170f 42000000 		.4byte	0x42
 9023 1713 02       		.byte	0x2
 9024 1714 23       		.byte	0x23
 9025 1715 0C       		.uleb128 0xc
 9026 1716 0C       		.uleb128 0xc
ARM GAS  /tmp/ccwDRvq0.s 			page 195


 9027 1717 B1110000 		.4byte	.LASF258
 9028 171b 17       		.byte	0x17
 9029 171c 92       		.byte	0x92
 9030 171d 8A000000 		.4byte	0x8a
 9031 1721 02       		.byte	0x2
 9032 1722 23       		.byte	0x23
 9033 1723 10       		.uleb128 0x10
 9034 1724 0C       		.uleb128 0xc
 9035 1725 5C110000 		.4byte	.LASF259
 9036 1729 17       		.byte	0x17
 9037 172a 96       		.byte	0x96
 9038 172b 8A000000 		.4byte	0x8a
 9039 172f 02       		.byte	0x2
 9040 1730 23       		.byte	0x23
 9041 1731 14       		.uleb128 0x14
 9042 1732 00       		.byte	0x0
 9043 1733 10       		.uleb128 0x10
 9044 1734 CF0F0000 		.4byte	.LASF260
 9045 1738 2C       		.byte	0x2c
 9046 1739 18       		.byte	0x18
 9047 173a 42       		.byte	0x42
 9048 173b 86170000 		.4byte	0x1786
 9049 173f 0C       		.uleb128 0xc
 9050 1740 EB010000 		.4byte	.LASF261
 9051 1744 18       		.byte	0x18
 9052 1745 44       		.byte	0x44
 9053 1746 86170000 		.4byte	0x1786
 9054 174a 02       		.byte	0x2
 9055 174b 23       		.byte	0x23
 9056 174c 00       		.uleb128 0x0
 9057 174d 0C       		.uleb128 0xc
 9058 174e 5D150000 		.4byte	.LASF262
 9059 1752 18       		.byte	0x18
 9060 1753 46       		.byte	0x46
 9061 1754 42000000 		.4byte	0x42
 9062 1758 02       		.byte	0x2
 9063 1759 23       		.byte	0x23
 9064 175a 20       		.uleb128 0x20
 9065 175b 0C       		.uleb128 0xc
 9066 175c A4050000 		.4byte	.LASF263
 9067 1760 18       		.byte	0x18
 9068 1761 4E       		.byte	0x4e
 9069 1762 66000000 		.4byte	0x66
 9070 1766 02       		.byte	0x2
 9071 1767 23       		.byte	0x23
 9072 1768 22       		.uleb128 0x22
 9073 1769 0C       		.uleb128 0xc
 9074 176a 040D0000 		.4byte	.LASF264
 9075 176e 18       		.byte	0x18
 9076 176f 50       		.byte	0x50
 9077 1770 8A000000 		.4byte	0x8a
 9078 1774 02       		.byte	0x2
 9079 1775 23       		.byte	0x23
 9080 1776 24       		.uleb128 0x24
 9081 1777 0C       		.uleb128 0xc
 9082 1778 F70C0000 		.4byte	.LASF265
 9083 177c 18       		.byte	0x18
ARM GAS  /tmp/ccwDRvq0.s 			page 196


 9084 177d 52       		.byte	0x52
 9085 177e 8A000000 		.4byte	0x8a
 9086 1782 02       		.byte	0x2
 9087 1783 23       		.byte	0x23
 9088 1784 28       		.uleb128 0x28
 9089 1785 00       		.byte	0x0
 9090 1786 0D       		.uleb128 0xd
 9091 1787 96090000 		.4byte	0x996
 9092 178b 96170000 		.4byte	0x1796
 9093 178f 0E       		.uleb128 0xe
 9094 1790 AE020000 		.4byte	0x2ae
 9095 1794 1F       		.byte	0x1f
 9096 1795 00       		.byte	0x0
 9097 1796 10       		.uleb128 0x10
 9098 1797 1B180000 		.4byte	.LASF266
 9099 179b 18       		.byte	0x18
 9100 179c 01       		.byte	0x1
 9101 179d 7F       		.byte	0x7f
 9102 179e 05180000 		.4byte	0x1805
 9103 17a2 0C       		.uleb128 0xc
 9104 17a3 340E0000 		.4byte	.LASF267
 9105 17a7 01       		.byte	0x1
 9106 17a8 80       		.byte	0x80
 9107 17a9 8A000000 		.4byte	0x8a
 9108 17ad 02       		.byte	0x2
 9109 17ae 23       		.byte	0x23
 9110 17af 00       		.uleb128 0x0
 9111 17b0 0C       		.uleb128 0xc
 9112 17b1 96040000 		.4byte	.LASF268
 9113 17b5 01       		.byte	0x1
 9114 17b6 82       		.byte	0x82
 9115 17b7 8A000000 		.4byte	0x8a
 9116 17bb 02       		.byte	0x2
 9117 17bc 23       		.byte	0x23
 9118 17bd 04       		.uleb128 0x4
 9119 17be 0C       		.uleb128 0xc
 9120 17bf 2C140000 		.4byte	.LASF269
 9121 17c3 01       		.byte	0x1
 9122 17c4 83       		.byte	0x83
 9123 17c5 8A000000 		.4byte	0x8a
 9124 17c9 02       		.byte	0x2
 9125 17ca 23       		.byte	0x23
 9126 17cb 08       		.uleb128 0x8
 9127 17cc 0C       		.uleb128 0xc
 9128 17cd 0B050000 		.4byte	.LASF270
 9129 17d1 01       		.byte	0x1
 9130 17d2 85       		.byte	0x85
 9131 17d3 66000000 		.4byte	0x66
 9132 17d7 02       		.byte	0x2
 9133 17d8 23       		.byte	0x23
 9134 17d9 0C       		.uleb128 0xc
 9135 17da 0C       		.uleb128 0xc
 9136 17db 3F110000 		.4byte	.LASF271
 9137 17df 01       		.byte	0x1
 9138 17e0 86       		.byte	0x86
 9139 17e1 66000000 		.4byte	0x66
 9140 17e5 02       		.byte	0x2
ARM GAS  /tmp/ccwDRvq0.s 			page 197


 9141 17e6 23       		.byte	0x23
 9142 17e7 0E       		.uleb128 0xe
 9143 17e8 0C       		.uleb128 0xc
 9144 17e9 FD0B0000 		.4byte	.LASF272
 9145 17ed 01       		.byte	0x1
 9146 17ee 88       		.byte	0x88
 9147 17ef 8A000000 		.4byte	0x8a
 9148 17f3 02       		.byte	0x2
 9149 17f4 23       		.byte	0x23
 9150 17f5 10       		.uleb128 0x10
 9151 17f6 0C       		.uleb128 0xc
 9152 17f7 0E030000 		.4byte	.LASF273
 9153 17fb 01       		.byte	0x1
 9154 17fc 8A       		.byte	0x8a
 9155 17fd 8A000000 		.4byte	0x8a
 9156 1801 02       		.byte	0x2
 9157 1802 23       		.byte	0x23
 9158 1803 14       		.uleb128 0x14
 9159 1804 00       		.byte	0x0
 9160 1805 10       		.uleb128 0x10
 9161 1806 42170000 		.4byte	.LASF274
 9162 180a 1C       		.byte	0x1c
 9163 180b 01       		.byte	0x1
 9164 180c 8E       		.byte	0x8e
 9165 180d 2E180000 		.4byte	0x182e
 9166 1811 0C       		.uleb128 0xc
 9167 1812 A0120000 		.4byte	.LASF275
 9168 1816 01       		.byte	0x1
 9169 1817 8F       		.byte	0x8f
 9170 1818 2E180000 		.4byte	0x182e
 9171 181c 02       		.byte	0x2
 9172 181d 23       		.byte	0x23
 9173 181e 00       		.uleb128 0x0
 9174 181f 0C       		.uleb128 0xc
 9175 1820 BD0E0000 		.4byte	.LASF276
 9176 1824 01       		.byte	0x1
 9177 1825 90       		.byte	0x90
 9178 1826 96170000 		.4byte	0x1796
 9179 182a 02       		.byte	0x2
 9180 182b 23       		.byte	0x23
 9181 182c 04       		.uleb128 0x4
 9182 182d 00       		.byte	0x0
 9183 182e 12       		.uleb128 0x12
 9184 182f 04       		.byte	0x4
 9185 1830 D2160000 		.4byte	0x16d2
 9186 1834 10       		.uleb128 0x10
 9187 1835 440C0000 		.4byte	.LASF277
 9188 1839 38       		.byte	0x38
 9189 183a 01       		.byte	0x1
 9190 183b 94       		.byte	0x94
 9191 183c 78180000 		.4byte	0x1878
 9192 1840 11       		.uleb128 0x11
 9193 1841 667300   		.ascii	"fs\000"
 9194 1844 01       		.byte	0x1
 9195 1845 95       		.byte	0x95
 9196 1846 78180000 		.4byte	0x1878
 9197 184a 02       		.byte	0x2
ARM GAS  /tmp/ccwDRvq0.s 			page 198


 9198 184b 23       		.byte	0x23
 9199 184c 00       		.uleb128 0x0
 9200 184d 0C       		.uleb128 0xc
 9201 184e BE120000 		.4byte	.LASF278
 9202 1852 01       		.byte	0x1
 9203 1853 96       		.byte	0x96
 9204 1854 33170000 		.4byte	0x1733
 9205 1858 02       		.byte	0x2
 9206 1859 23       		.byte	0x23
 9207 185a 04       		.uleb128 0x4
 9208 185b 11       		.uleb128 0x11
 9209 185c 706F7300 		.ascii	"pos\000"
 9210 1860 01       		.byte	0x1
 9211 1861 97       		.byte	0x97
 9212 1862 8A000000 		.4byte	0x8a
 9213 1866 02       		.byte	0x2
 9214 1867 23       		.byte	0x23
 9215 1868 30       		.uleb128 0x30
 9216 1869 0C       		.uleb128 0xc
 9217 186a 96020000 		.4byte	.LASF279
 9218 186e 01       		.byte	0x1
 9219 186f 98       		.byte	0x98
 9220 1870 66000000 		.4byte	0x66
 9221 1874 02       		.byte	0x2
 9222 1875 23       		.byte	0x23
 9223 1876 34       		.uleb128 0x34
 9224 1877 00       		.byte	0x0
 9225 1878 12       		.uleb128 0x12
 9226 1879 04       		.byte	0x4
 9227 187a 05180000 		.4byte	0x1805
 9228 187e 10       		.uleb128 0x10
 9229 187f 0E0D0000 		.4byte	.LASF280
 9230 1883 34       		.byte	0x34
 9231 1884 01       		.byte	0x1
 9232 1885 9C       		.byte	0x9c
 9233 1886 B4180000 		.4byte	0x18b4
 9234 188a 11       		.uleb128 0x11
 9235 188b 667300   		.ascii	"fs\000"
 9236 188e 01       		.byte	0x1
 9237 188f 9D       		.byte	0x9d
 9238 1890 78180000 		.4byte	0x1878
 9239 1894 02       		.byte	0x2
 9240 1895 23       		.byte	0x23
 9241 1896 00       		.uleb128 0x0
 9242 1897 0C       		.uleb128 0xc
 9243 1898 BE120000 		.4byte	.LASF278
 9244 189c 01       		.byte	0x1
 9245 189d 9E       		.byte	0x9e
 9246 189e 33170000 		.4byte	0x1733
 9247 18a2 02       		.byte	0x2
 9248 18a3 23       		.byte	0x23
 9249 18a4 04       		.uleb128 0x4
 9250 18a5 0C       		.uleb128 0xc
 9251 18a6 2F030000 		.4byte	.LASF281
 9252 18aa 01       		.byte	0x1
 9253 18ab 9F       		.byte	0x9f
 9254 18ac 66000000 		.4byte	0x66
ARM GAS  /tmp/ccwDRvq0.s 			page 199


 9255 18b0 02       		.byte	0x2
 9256 18b1 23       		.byte	0x23
 9257 18b2 30       		.uleb128 0x30
 9258 18b3 00       		.byte	0x0
 9259 18b4 10       		.uleb128 0x10
 9260 18b5 66050000 		.4byte	.LASF282
 9261 18b9 0C       		.byte	0xc
 9262 18ba 01       		.byte	0x1
 9263 18bb A3       		.byte	0xa3
 9264 18bc F9180000 		.4byte	0x18f9
 9265 18c0 0C       		.uleb128 0xc
 9266 18c1 10070000 		.4byte	.LASF283
 9267 18c5 01       		.byte	0x1
 9268 18c6 A4       		.byte	0xa4
 9269 18c7 66000000 		.4byte	0x66
 9270 18cb 02       		.byte	0x2
 9271 18cc 23       		.byte	0x23
 9272 18cd 00       		.uleb128 0x0
 9273 18ce 0C       		.uleb128 0xc
 9274 18cf 78100000 		.4byte	.LASF284
 9275 18d3 01       		.byte	0x1
 9276 18d4 A5       		.byte	0xa5
 9277 18d5 66000000 		.4byte	0x66
 9278 18d9 02       		.byte	0x2
 9279 18da 23       		.byte	0x23
 9280 18db 02       		.uleb128 0x2
 9281 18dc 0C       		.uleb128 0xc
 9282 18dd F70C0000 		.4byte	.LASF265
 9283 18e1 01       		.byte	0x1
 9284 18e2 A6       		.byte	0xa6
 9285 18e3 8A000000 		.4byte	0x8a
 9286 18e7 02       		.byte	0x2
 9287 18e8 23       		.byte	0x23
 9288 18e9 04       		.uleb128 0x4
 9289 18ea 0C       		.uleb128 0xc
 9290 18eb 96090000 		.4byte	.LASF285
 9291 18ef 01       		.byte	0x1
 9292 18f0 A7       		.byte	0xa7
 9293 18f1 42000000 		.4byte	0x42
 9294 18f5 02       		.byte	0x2
 9295 18f6 23       		.byte	0x23
 9296 18f7 08       		.uleb128 0x8
 9297 18f8 00       		.byte	0x0
 9298 18f9 10       		.uleb128 0x10
 9299 18fa 68150000 		.4byte	.LASF286
 9300 18fe 04       		.byte	0x4
 9301 18ff 01       		.byte	0x1
 9302 1900 AB       		.byte	0xab
 9303 1901 22190000 		.4byte	0x1922
 9304 1905 0C       		.uleb128 0xc
 9305 1906 410B0000 		.4byte	.LASF287
 9306 190a 01       		.byte	0x1
 9307 190b AC       		.byte	0xac
 9308 190c 66000000 		.4byte	0x66
 9309 1910 02       		.byte	0x2
 9310 1911 23       		.byte	0x23
 9311 1912 00       		.uleb128 0x0
ARM GAS  /tmp/ccwDRvq0.s 			page 200


 9312 1913 0C       		.uleb128 0xc
 9313 1914 36170000 		.4byte	.LASF288
 9314 1918 01       		.byte	0x1
 9315 1919 AD       		.byte	0xad
 9316 191a 42000000 		.4byte	0x42
 9317 191e 02       		.byte	0x2
 9318 191f 23       		.byte	0x23
 9319 1920 02       		.uleb128 0x2
 9320 1921 00       		.byte	0x0
 9321 1922 36       		.uleb128 0x36
 9322 1923 01       		.byte	0x1
 9323 1924 C4100000 		.4byte	.LASF312
 9324 1928 01       		.byte	0x1
 9325 1929 C6       		.byte	0xc6
 9326 192a 8F110000 		.4byte	.LASF479
 9327 192e 78180000 		.4byte	0x1878
 9328 1932 00000000 		.4byte	.LFB109
 9329 1936 E0000000 		.4byte	.LFE109
 9330 193a 00000000 		.4byte	.LLST0
 9331 193e 76190000 		.4byte	0x1976
 9332 1942 37       		.uleb128 0x37
 9333 1943 A0120000 		.4byte	.LASF275
 9334 1947 01       		.byte	0x1
 9335 1948 C6       		.byte	0xc6
 9336 1949 2E180000 		.4byte	0x182e
 9337 194d 02       		.byte	0x2
 9338 194e 91       		.byte	0x91
 9339 194f 6C       		.sleb128 -20
 9340 1950 38       		.uleb128 0x38
 9341 1951 0C000000 		.4byte	.LBB2
 9342 1955 C8000000 		.4byte	.LBE2
 9343 1959 39       		.uleb128 0x39
 9344 195a 05010000 		.4byte	.LASF289
 9345 195e 01       		.byte	0x1
 9346 195f C8       		.byte	0xc8
 9347 1960 0F160000 		.4byte	0x160f
 9348 1964 02       		.byte	0x2
 9349 1965 91       		.byte	0x91
 9350 1966 74       		.sleb128 -12
 9351 1967 3A       		.uleb128 0x3a
 9352 1968 667300   		.ascii	"fs\000"
 9353 196b 01       		.byte	0x1
 9354 196c D2       		.byte	0xd2
 9355 196d 78180000 		.4byte	0x1878
 9356 1971 02       		.byte	0x2
 9357 1972 91       		.byte	0x91
 9358 1973 70       		.sleb128 -16
 9359 1974 00       		.byte	0x0
 9360 1975 00       		.byte	0x0
 9361 1976 3B       		.uleb128 0x3b
 9362 1977 01       		.byte	0x1
 9363 1978 2D0B0000 		.4byte	.LASF331
 9364 197c 01       		.byte	0x1
 9365 197d EF       		.byte	0xef
 9366 197e 35140000 		.4byte	.LASF480
 9367 1982 00000000 		.4byte	.LFB110
 9368 1986 34000000 		.4byte	.LFE110
ARM GAS  /tmp/ccwDRvq0.s 			page 201


 9369 198a 2C000000 		.4byte	.LLST1
 9370 198e A0190000 		.4byte	0x19a0
 9371 1992 3C       		.uleb128 0x3c
 9372 1993 667300   		.ascii	"fs\000"
 9373 1996 01       		.byte	0x1
 9374 1997 EF       		.byte	0xef
 9375 1998 78180000 		.4byte	0x1878
 9376 199c 02       		.byte	0x2
 9377 199d 91       		.byte	0x91
 9378 199e 74       		.sleb128 -12
 9379 199f 00       		.byte	0x0
 9380 19a0 3D       		.uleb128 0x3d
 9381 19a1 D5020000 		.4byte	.LASF301
 9382 19a5 01       		.byte	0x1
 9383 19a6 FE       		.byte	0xfe
 9384 19a7 42000000 		.4byte	0x42
 9385 19ab 00000000 		.4byte	.LFB111
 9386 19af 80030000 		.4byte	.LFE111
 9387 19b3 58000000 		.4byte	.LLST2
 9388 19b7 B61A0000 		.4byte	0x1ab6
 9389 19bb 3C       		.uleb128 0x3c
 9390 19bc 667300   		.ascii	"fs\000"
 9391 19bf 01       		.byte	0x1
 9392 19c0 FE       		.byte	0xfe
 9393 19c1 78180000 		.4byte	0x1878
 9394 19c5 03       		.byte	0x3
 9395 19c6 91       		.byte	0x91
 9396 19c7 AC7F     		.sleb128 -84
 9397 19c9 38       		.uleb128 0x38
 9398 19ca 0C000000 		.4byte	.LBB3
 9399 19ce 64030000 		.4byte	.LBE3
 9400 19d2 3E       		.uleb128 0x3e
 9401 19d3 05010000 		.4byte	.LASF289
 9402 19d7 01       		.byte	0x1
 9403 19d8 0001     		.2byte	0x100
 9404 19da 0F160000 		.4byte	0x160f
 9405 19de 02       		.byte	0x2
 9406 19df 91       		.byte	0x91
 9407 19e0 70       		.sleb128 -16
 9408 19e1 3E       		.uleb128 0x3e
 9409 19e2 A0120000 		.4byte	.LASF275
 9410 19e6 01       		.byte	0x1
 9411 19e7 0401     		.2byte	0x104
 9412 19e9 2E180000 		.4byte	0x182e
 9413 19ed 02       		.byte	0x2
 9414 19ee 91       		.byte	0x91
 9415 19ef 6C       		.sleb128 -20
 9416 19f0 3E       		.uleb128 0x3e
 9417 19f1 8F010000 		.4byte	.LASF214
 9418 19f5 01       		.byte	0x1
 9419 19f6 0C01     		.2byte	0x10c
 9420 19f8 B61A0000 		.4byte	0x1ab6
 9421 19fc 03       		.byte	0x3
 9422 19fd 91       		.byte	0x91
 9423 19fe B07F     		.sleb128 -80
 9424 1a00 3E       		.uleb128 0x3e
 9425 1a01 E7020000 		.4byte	.LASF290
ARM GAS  /tmp/ccwDRvq0.s 			page 202


 9426 1a05 01       		.byte	0x1
 9427 1a06 0D01     		.2byte	0x10d
 9428 1a08 8A000000 		.4byte	0x8a
 9429 1a0c 02       		.byte	0x2
 9430 1a0d 91       		.byte	0x91
 9431 1a0e 68       		.sleb128 -24
 9432 1a0f 3E       		.uleb128 0x3e
 9433 1a10 D8140000 		.4byte	.LASF291
 9434 1a14 01       		.byte	0x1
 9435 1a15 1201     		.2byte	0x112
 9436 1a17 66000000 		.4byte	0x66
 9437 1a1b 02       		.byte	0x2
 9438 1a1c 91       		.byte	0x91
 9439 1a1d 66       		.sleb128 -26
 9440 1a1e 3E       		.uleb128 0x3e
 9441 1a1f 5B0E0000 		.4byte	.LASF292
 9442 1a23 01       		.byte	0x1
 9443 1a24 1401     		.2byte	0x114
 9444 1a26 42000000 		.4byte	0x42
 9445 1a2a 02       		.byte	0x2
 9446 1a2b 91       		.byte	0x91
 9447 1a2c 65       		.sleb128 -27
 9448 1a2d 3E       		.uleb128 0x3e
 9449 1a2e 82030000 		.4byte	.LASF293
 9450 1a32 01       		.byte	0x1
 9451 1a33 1501     		.2byte	0x115
 9452 1a35 66000000 		.4byte	0x66
 9453 1a39 02       		.byte	0x2
 9454 1a3a 91       		.byte	0x91
 9455 1a3b 62       		.sleb128 -30
 9456 1a3c 3E       		.uleb128 0x3e
 9457 1a3d FB0F0000 		.4byte	.LASF294
 9458 1a41 01       		.byte	0x1
 9459 1a42 1701     		.2byte	0x117
 9460 1a44 42000000 		.4byte	0x42
 9461 1a48 02       		.byte	0x2
 9462 1a49 91       		.byte	0x91
 9463 1a4a 61       		.sleb128 -31
 9464 1a4b 3E       		.uleb128 0x3e
 9465 1a4c 660F0000 		.4byte	.LASF295
 9466 1a50 01       		.byte	0x1
 9467 1a51 1801     		.2byte	0x118
 9468 1a53 66000000 		.4byte	0x66
 9469 1a57 02       		.byte	0x2
 9470 1a58 91       		.byte	0x91
 9471 1a59 5E       		.sleb128 -34
 9472 1a5a 3E       		.uleb128 0x3e
 9473 1a5b 54070000 		.4byte	.LASF296
 9474 1a5f 01       		.byte	0x1
 9475 1a60 1A01     		.2byte	0x11a
 9476 1a62 66000000 		.4byte	0x66
 9477 1a66 02       		.byte	0x2
 9478 1a67 91       		.byte	0x91
 9479 1a68 5C       		.sleb128 -36
 9480 1a69 3E       		.uleb128 0x3e
 9481 1a6a 38000000 		.4byte	.LASF297
 9482 1a6e 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 203


 9483 1a6f 1C01     		.2byte	0x11c
 9484 1a71 66000000 		.4byte	0x66
 9485 1a75 02       		.byte	0x2
 9486 1a76 91       		.byte	0x91
 9487 1a77 5A       		.sleb128 -38
 9488 1a78 3E       		.uleb128 0x3e
 9489 1a79 AE0A0000 		.4byte	.LASF298
 9490 1a7d 01       		.byte	0x1
 9491 1a7e 1E01     		.2byte	0x11e
 9492 1a80 8A000000 		.4byte	0x8a
 9493 1a84 02       		.byte	0x2
 9494 1a85 91       		.byte	0x91
 9495 1a86 74       		.sleb128 -12
 9496 1a87 3E       		.uleb128 0x3e
 9497 1a88 BB020000 		.4byte	.LASF299
 9498 1a8c 01       		.byte	0x1
 9499 1a8d 3101     		.2byte	0x131
 9500 1a8f 8A000000 		.4byte	0x8a
 9501 1a93 02       		.byte	0x2
 9502 1a94 91       		.byte	0x91
 9503 1a95 54       		.sleb128 -44
 9504 1a96 3E       		.uleb128 0x3e
 9505 1a97 B5080000 		.4byte	.LASF300
 9506 1a9b 01       		.byte	0x1
 9507 1a9c 3501     		.2byte	0x135
 9508 1a9e 8A000000 		.4byte	0x8a
 9509 1aa2 02       		.byte	0x2
 9510 1aa3 91       		.byte	0x91
 9511 1aa4 50       		.sleb128 -48
 9512 1aa5 3E       		.uleb128 0x3e
 9513 1aa6 BD0E0000 		.4byte	.LASF276
 9514 1aaa 01       		.byte	0x1
 9515 1aab 3D01     		.2byte	0x13d
 9516 1aad C61A0000 		.4byte	0x1ac6
 9517 1ab1 02       		.byte	0x2
 9518 1ab2 91       		.byte	0x91
 9519 1ab3 4C       		.sleb128 -52
 9520 1ab4 00       		.byte	0x0
 9521 1ab5 00       		.byte	0x0
 9522 1ab6 0D       		.uleb128 0xd
 9523 1ab7 4D000000 		.4byte	0x4d
 9524 1abb C61A0000 		.4byte	0x1ac6
 9525 1abf 0E       		.uleb128 0xe
 9526 1ac0 AE020000 		.4byte	0x2ae
 9527 1ac4 18       		.byte	0x18
 9528 1ac5 00       		.byte	0x0
 9529 1ac6 12       		.uleb128 0x12
 9530 1ac7 04       		.byte	0x4
 9531 1ac8 96170000 		.4byte	0x1796
 9532 1acc 3F       		.uleb128 0x3f
 9533 1acd BF180000 		.4byte	.LASF302
 9534 1ad1 01       		.byte	0x1
 9535 1ad2 6201     		.2byte	0x162
 9536 1ad4 42000000 		.4byte	0x42
 9537 1ad8 00000000 		.4byte	.LFB112
 9538 1adc A0010000 		.4byte	.LFE112
 9539 1ae0 85000000 		.4byte	.LLST3
ARM GAS  /tmp/ccwDRvq0.s 			page 204


 9540 1ae4 5E1B0000 		.4byte	0x1b5e
 9541 1ae8 40       		.uleb128 0x40
 9542 1ae9 667300   		.ascii	"fs\000"
 9543 1aec 01       		.byte	0x1
 9544 1aed 6201     		.2byte	0x162
 9545 1aef 5E1B0000 		.4byte	0x1b5e
 9546 1af3 03       		.byte	0x3
 9547 1af4 91       		.byte	0x91
 9548 1af5 BC7F     		.sleb128 -68
 9549 1af7 41       		.uleb128 0x41
 9550 1af8 78100000 		.4byte	.LASF284
 9551 1afc 01       		.byte	0x1
 9552 1afd 6201     		.2byte	0x162
 9553 1aff 66000000 		.4byte	0x66
 9554 1b03 03       		.byte	0x3
 9555 1b04 91       		.byte	0x91
 9556 1b05 BA7F     		.sleb128 -70
 9557 1b07 41       		.uleb128 0x41
 9558 1b08 BE120000 		.4byte	.LASF278
 9559 1b0c 01       		.byte	0x1
 9560 1b0d 6201     		.2byte	0x162
 9561 1b0f 691B0000 		.4byte	0x1b69
 9562 1b13 03       		.byte	0x3
 9563 1b14 91       		.byte	0x91
 9564 1b15 B47F     		.sleb128 -76
 9565 1b17 38       		.uleb128 0x38
 9566 1b18 18000000 		.4byte	.LBB4
 9567 1b1c 88010000 		.4byte	.LBE4
 9568 1b20 3E       		.uleb128 0x3e
 9569 1b21 BD0E0000 		.4byte	.LASF276
 9570 1b25 01       		.byte	0x1
 9571 1b26 6801     		.2byte	0x168
 9572 1b28 6F1B0000 		.4byte	0x1b6f
 9573 1b2c 02       		.byte	0x2
 9574 1b2d 91       		.byte	0x91
 9575 1b2e 74       		.sleb128 -12
 9576 1b2f 3E       		.uleb128 0x3e
 9577 1b30 5B0C0000 		.4byte	.LASF255
 9578 1b34 01       		.byte	0x1
 9579 1b35 6901     		.2byte	0x169
 9580 1b37 6F160000 		.4byte	0x166f
 9581 1b3b 02       		.byte	0x2
 9582 1b3c 91       		.byte	0x91
 9583 1b3d 70       		.sleb128 -16
 9584 1b3e 3E       		.uleb128 0x3e
 9585 1b3f 8F010000 		.4byte	.LASF214
 9586 1b43 01       		.byte	0x1
 9587 1b44 6A01     		.2byte	0x16a
 9588 1b46 70130000 		.4byte	0x1370
 9589 1b4a 02       		.byte	0x2
 9590 1b4b 91       		.byte	0x91
 9591 1b4c 44       		.sleb128 -60
 9592 1b4d 42       		.uleb128 0x42
 9593 1b4e 61726700 		.ascii	"arg\000"
 9594 1b52 01       		.byte	0x1
 9595 1b53 6D01     		.2byte	0x16d
 9596 1b55 B4180000 		.4byte	0x18b4
ARM GAS  /tmp/ccwDRvq0.s 			page 205


 9597 1b59 02       		.byte	0x2
 9598 1b5a 91       		.byte	0x91
 9599 1b5b 64       		.sleb128 -28
 9600 1b5c 00       		.byte	0x0
 9601 1b5d 00       		.byte	0x0
 9602 1b5e 12       		.uleb128 0x12
 9603 1b5f 04       		.byte	0x4
 9604 1b60 641B0000 		.4byte	0x1b64
 9605 1b64 1C       		.uleb128 0x1c
 9606 1b65 05180000 		.4byte	0x1805
 9607 1b69 12       		.uleb128 0x12
 9608 1b6a 04       		.byte	0x4
 9609 1b6b 33170000 		.4byte	0x1733
 9610 1b6f 12       		.uleb128 0x12
 9611 1b70 04       		.byte	0x4
 9612 1b71 751B0000 		.4byte	0x1b75
 9613 1b75 1C       		.uleb128 0x1c
 9614 1b76 96170000 		.4byte	0x1796
 9615 1b7a 3F       		.uleb128 0x3f
 9616 1b7b 1D110000 		.4byte	.LASF303
 9617 1b7f 01       		.byte	0x1
 9618 1b80 9201     		.2byte	0x192
 9619 1b82 42000000 		.4byte	0x42
 9620 1b86 00000000 		.4byte	.LFB113
 9621 1b8a 08020000 		.4byte	.LFE113
 9622 1b8e B2000000 		.4byte	.LLST4
 9623 1b92 2B1C0000 		.4byte	0x1c2b
 9624 1b96 40       		.uleb128 0x40
 9625 1b97 667300   		.ascii	"fs\000"
 9626 1b9a 01       		.byte	0x1
 9627 1b9b 9201     		.2byte	0x192
 9628 1b9d 5E1B0000 		.4byte	0x1b5e
 9629 1ba1 03       		.byte	0x3
 9630 1ba2 91       		.byte	0x91
 9631 1ba3 BC7F     		.sleb128 -68
 9632 1ba5 41       		.uleb128 0x41
 9633 1ba6 78100000 		.4byte	.LASF284
 9634 1baa 01       		.byte	0x1
 9635 1bab 9201     		.2byte	0x192
 9636 1bad 66000000 		.4byte	0x66
 9637 1bb1 03       		.byte	0x3
 9638 1bb2 91       		.byte	0x91
 9639 1bb3 BA7F     		.sleb128 -70
 9640 1bb5 41       		.uleb128 0x41
 9641 1bb6 E3100000 		.4byte	.LASF304
 9642 1bba 01       		.byte	0x1
 9643 1bbb 9201     		.2byte	0x192
 9644 1bbd 2B1C0000 		.4byte	0x1c2b
 9645 1bc1 03       		.byte	0x3
 9646 1bc2 91       		.byte	0x91
 9647 1bc3 B47F     		.sleb128 -76
 9648 1bc5 41       		.uleb128 0x41
 9649 1bc6 BE120000 		.4byte	.LASF278
 9650 1bca 01       		.byte	0x1
 9651 1bcb 9201     		.2byte	0x192
 9652 1bcd 691B0000 		.4byte	0x1b69
 9653 1bd1 03       		.byte	0x3
ARM GAS  /tmp/ccwDRvq0.s 			page 206


 9654 1bd2 91       		.byte	0x91
 9655 1bd3 B07F     		.sleb128 -80
 9656 1bd5 38       		.uleb128 0x38
 9657 1bd6 18000000 		.4byte	.LBB5
 9658 1bda F0010000 		.4byte	.LBE5
 9659 1bde 3E       		.uleb128 0x3e
 9660 1bdf 8F010000 		.4byte	.LASF214
 9661 1be3 01       		.byte	0x1
 9662 1be4 9C01     		.2byte	0x19c
 9663 1be6 70130000 		.4byte	0x1370
 9664 1bea 02       		.byte	0x2
 9665 1beb 91       		.byte	0x91
 9666 1bec 44       		.sleb128 -60
 9667 1bed 3E       		.uleb128 0x3e
 9668 1bee F6130000 		.4byte	.LASF305
 9669 1bf2 01       		.byte	0x1
 9670 1bf3 9D01     		.2byte	0x19d
 9671 1bf5 8A000000 		.4byte	0x8a
 9672 1bf9 02       		.byte	0x2
 9673 1bfa 91       		.byte	0x91
 9674 1bfb 70       		.sleb128 -16
 9675 1bfc 3E       		.uleb128 0x3e
 9676 1bfd 3F110000 		.4byte	.LASF271
 9677 1c01 01       		.byte	0x1
 9678 1c02 9E01     		.2byte	0x19e
 9679 1c04 66000000 		.4byte	0x66
 9680 1c08 02       		.byte	0x2
 9681 1c09 91       		.byte	0x91
 9682 1c0a 74       		.sleb128 -12
 9683 1c0b 3E       		.uleb128 0x3e
 9684 1c0c 6C080000 		.4byte	.LASF306
 9685 1c10 01       		.byte	0x1
 9686 1c11 9F01     		.2byte	0x19f
 9687 1c13 66000000 		.4byte	0x66
 9688 1c17 02       		.byte	0x2
 9689 1c18 91       		.byte	0x91
 9690 1c19 76       		.sleb128 -10
 9691 1c1a 42       		.uleb128 0x42
 9692 1c1b 61726700 		.ascii	"arg\000"
 9693 1c1f 01       		.byte	0x1
 9694 1c20 A001     		.2byte	0x1a0
 9695 1c22 B4180000 		.4byte	0x18b4
 9696 1c26 02       		.byte	0x2
 9697 1c27 91       		.byte	0x91
 9698 1c28 64       		.sleb128 -28
 9699 1c29 00       		.byte	0x0
 9700 1c2a 00       		.byte	0x0
 9701 1c2b 12       		.uleb128 0x12
 9702 1c2c 04       		.byte	0x4
 9703 1c2d 311C0000 		.4byte	0x1c31
 9704 1c31 1C       		.uleb128 0x1c
 9705 1c32 33170000 		.4byte	0x1733
 9706 1c36 3F       		.uleb128 0x3f
 9707 1c37 A1180000 		.4byte	.LASF307
 9708 1c3b 01       		.byte	0x1
 9709 1c3c CE01     		.2byte	0x1ce
 9710 1c3e 42000000 		.4byte	0x42
ARM GAS  /tmp/ccwDRvq0.s 			page 207


 9711 1c42 00000000 		.4byte	.LFB114
 9712 1c46 EC000000 		.4byte	.LFE114
 9713 1c4a DF000000 		.4byte	.LLST5
 9714 1c4e 971C0000 		.4byte	0x1c97
 9715 1c52 41       		.uleb128 0x41
 9716 1c53 8F010000 		.4byte	.LASF214
 9717 1c57 01       		.byte	0x1
 9718 1c58 CE01     		.2byte	0x1ce
 9719 1c5a 8B130000 		.4byte	0x138b
 9720 1c5e 02       		.byte	0x2
 9721 1c5f 91       		.byte	0x91
 9722 1c60 74       		.sleb128 -12
 9723 1c61 41       		.uleb128 0x41
 9724 1c62 B1110000 		.4byte	.LASF258
 9725 1c66 01       		.byte	0x1
 9726 1c67 CE01     		.2byte	0x1ce
 9727 1c69 8A000000 		.4byte	0x8a
 9728 1c6d 02       		.byte	0x2
 9729 1c6e 91       		.byte	0x91
 9730 1c6f 70       		.sleb128 -16
 9731 1c70 40       		.uleb128 0x40
 9732 1c71 7000     		.ascii	"p\000"
 9733 1c73 01       		.byte	0x1
 9734 1c74 CE01     		.2byte	0x1ce
 9735 1c76 41030000 		.4byte	0x341
 9736 1c7a 02       		.byte	0x2
 9737 1c7b 91       		.byte	0x91
 9738 1c7c 6C       		.sleb128 -20
 9739 1c7d 38       		.uleb128 0x38
 9740 1c7e 10000000 		.4byte	.LBB6
 9741 1c82 E0000000 		.4byte	.LBE6
 9742 1c86 42       		.uleb128 0x42
 9743 1c87 61726700 		.ascii	"arg\000"
 9744 1c8b 01       		.byte	0x1
 9745 1c8c D001     		.2byte	0x1d0
 9746 1c8e 971C0000 		.4byte	0x1c97
 9747 1c92 02       		.byte	0x2
 9748 1c93 91       		.byte	0x91
 9749 1c94 7C       		.sleb128 -4
 9750 1c95 00       		.byte	0x0
 9751 1c96 00       		.byte	0x0
 9752 1c97 12       		.uleb128 0x12
 9753 1c98 04       		.byte	0x4
 9754 1c99 B4180000 		.4byte	0x18b4
 9755 1c9d 3F       		.uleb128 0x3f
 9756 1c9e 77170000 		.4byte	.LASF308
 9757 1ca2 01       		.byte	0x1
 9758 1ca3 EA01     		.2byte	0x1ea
 9759 1ca5 42000000 		.4byte	0x42
 9760 1ca9 00000000 		.4byte	.LFB115
 9761 1cad B4000000 		.4byte	.LFE115
 9762 1cb1 FF000000 		.4byte	.LLST6
 9763 1cb5 FE1C0000 		.4byte	0x1cfe
 9764 1cb9 41       		.uleb128 0x41
 9765 1cba 8F010000 		.4byte	.LASF214
 9766 1cbe 01       		.byte	0x1
 9767 1cbf EA01     		.2byte	0x1ea
ARM GAS  /tmp/ccwDRvq0.s 			page 208


 9768 1cc1 8B130000 		.4byte	0x138b
 9769 1cc5 02       		.byte	0x2
 9770 1cc6 91       		.byte	0x91
 9771 1cc7 6C       		.sleb128 -20
 9772 1cc8 41       		.uleb128 0x41
 9773 1cc9 B1110000 		.4byte	.LASF258
 9774 1ccd 01       		.byte	0x1
 9775 1cce EA01     		.2byte	0x1ea
 9776 1cd0 8A000000 		.4byte	0x8a
 9777 1cd4 02       		.byte	0x2
 9778 1cd5 91       		.byte	0x91
 9779 1cd6 68       		.sleb128 -24
 9780 1cd7 40       		.uleb128 0x40
 9781 1cd8 7000     		.ascii	"p\000"
 9782 1cda 01       		.byte	0x1
 9783 1cdb EA01     		.2byte	0x1ea
 9784 1cdd 41030000 		.4byte	0x341
 9785 1ce1 02       		.byte	0x2
 9786 1ce2 91       		.byte	0x91
 9787 1ce3 64       		.sleb128 -28
 9788 1ce4 38       		.uleb128 0x38
 9789 1ce5 14000000 		.4byte	.LBB7
 9790 1ce9 A4000000 		.4byte	.LBE7
 9791 1ced 3E       		.uleb128 0x3e
 9792 1cee BE120000 		.4byte	.LASF278
 9793 1cf2 01       		.byte	0x1
 9794 1cf3 EC01     		.2byte	0x1ec
 9795 1cf5 691B0000 		.4byte	0x1b69
 9796 1cf9 02       		.byte	0x2
 9797 1cfa 91       		.byte	0x91
 9798 1cfb 74       		.sleb128 -12
 9799 1cfc 00       		.byte	0x0
 9800 1cfd 00       		.byte	0x0
 9801 1cfe 3F       		.uleb128 0x3f
 9802 1cff 8E0B0000 		.4byte	.LASF309
 9803 1d03 01       		.byte	0x1
 9804 1d04 1202     		.2byte	0x212
 9805 1d06 42000000 		.4byte	0x42
 9806 1d0a 00000000 		.4byte	.LFB116
 9807 1d0e 44040000 		.4byte	.LFE116
 9808 1d12 2B010000 		.4byte	.LLST7
 9809 1d16 9D1D0000 		.4byte	0x1d9d
 9810 1d1a 41       		.uleb128 0x41
 9811 1d1b BE120000 		.4byte	.LASF278
 9812 1d1f 01       		.byte	0x1
 9813 1d20 1202     		.2byte	0x212
 9814 1d22 691B0000 		.4byte	0x1b69
 9815 1d26 02       		.byte	0x2
 9816 1d27 91       		.byte	0x91
 9817 1d28 6C       		.sleb128 -20
 9818 1d29 41       		.uleb128 0x41
 9819 1d2a 25130000 		.4byte	.LASF310
 9820 1d2e 01       		.byte	0x1
 9821 1d2f 1202     		.2byte	0x212
 9822 1d31 80130000 		.4byte	0x1380
 9823 1d35 02       		.byte	0x2
 9824 1d36 91       		.byte	0x91
ARM GAS  /tmp/ccwDRvq0.s 			page 209


 9825 1d37 68       		.sleb128 -24
 9826 1d38 38       		.uleb128 0x38
 9827 1d39 0C000000 		.4byte	.LBB8
 9828 1d3d 38040000 		.4byte	.LBE8
 9829 1d41 3E       		.uleb128 0x3e
 9830 1d42 EB010000 		.4byte	.LASF261
 9831 1d46 01       		.byte	0x1
 9832 1d47 1702     		.2byte	0x217
 9833 1d49 90090000 		.4byte	0x990
 9834 1d4d 02       		.byte	0x2
 9835 1d4e 91       		.byte	0x91
 9836 1d4f 78       		.sleb128 -8
 9837 1d50 43       		.uleb128 0x43
 9838 1d51 58000000 		.4byte	.LBB10
 9839 1d55 3C020000 		.4byte	.LBE10
 9840 1d59 6D1D0000 		.4byte	0x1d6d
 9841 1d5d 3E       		.uleb128 0x3e
 9842 1d5e 800A0000 		.4byte	.LASF311
 9843 1d62 01       		.byte	0x1
 9844 1d63 1A02     		.2byte	0x21a
 9845 1d65 66000000 		.4byte	0x66
 9846 1d69 02       		.byte	0x2
 9847 1d6a 91       		.byte	0x91
 9848 1d6b 76       		.sleb128 -10
 9849 1d6c 00       		.byte	0x0
 9850 1d6d 38       		.uleb128 0x38
 9851 1d6e 4C020000 		.4byte	.LBB13
 9852 1d72 88030000 		.4byte	.LBE13
 9853 1d76 42       		.uleb128 0x42
 9854 1d77 6900     		.ascii	"i\000"
 9855 1d79 01       		.byte	0x1
 9856 1d7a 3802     		.2byte	0x238
 9857 1d7c 42000000 		.4byte	0x42
 9858 1d80 02       		.byte	0x2
 9859 1d81 91       		.byte	0x91
 9860 1d82 7F       		.sleb128 -1
 9861 1d83 38       		.uleb128 0x38
 9862 1d84 D4020000 		.4byte	.LBB15
 9863 1d88 74030000 		.4byte	.LBE15
 9864 1d8c 42       		.uleb128 0x42
 9865 1d8d 6A00     		.ascii	"j\000"
 9866 1d8f 01       		.byte	0x1
 9867 1d90 4302     		.2byte	0x243
 9868 1d92 42000000 		.4byte	0x42
 9869 1d96 02       		.byte	0x2
 9870 1d97 91       		.byte	0x91
 9871 1d98 7E       		.sleb128 -2
 9872 1d99 00       		.byte	0x0
 9873 1d9a 00       		.byte	0x0
 9874 1d9b 00       		.byte	0x0
 9875 1d9c 00       		.byte	0x0
 9876 1d9d 44       		.uleb128 0x44
 9877 1d9e 01       		.byte	0x1
 9878 1d9f BB0A0000 		.4byte	.LASF313
 9879 1da3 01       		.byte	0x1
 9880 1da4 6D02     		.2byte	0x26d
 9881 1da6 FD140000 		.4byte	.LASF329
ARM GAS  /tmp/ccwDRvq0.s 			page 210


 9882 1daa 42000000 		.4byte	0x42
 9883 1dae 00000000 		.4byte	.LFB117
 9884 1db2 00020000 		.4byte	.LFE117
 9885 1db6 4B010000 		.4byte	.LLST8
 9886 1dba 1D1E0000 		.4byte	0x1e1d
 9887 1dbe 40       		.uleb128 0x40
 9888 1dbf 667300   		.ascii	"fs\000"
 9889 1dc2 01       		.byte	0x1
 9890 1dc3 6D02     		.2byte	0x26d
 9891 1dc5 78180000 		.4byte	0x1878
 9892 1dc9 02       		.byte	0x2
 9893 1dca 91       		.byte	0x91
 9894 1dcb 64       		.sleb128 -28
 9895 1dcc 41       		.uleb128 0x41
 9896 1dcd C8080000 		.4byte	.LASF314
 9897 1dd1 01       		.byte	0x1
 9898 1dd2 6D02     		.2byte	0x26d
 9899 1dd4 C1090000 		.4byte	0x9c1
 9900 1dd8 02       		.byte	0x2
 9901 1dd9 91       		.byte	0x91
 9902 1dda 60       		.sleb128 -32
 9903 1ddb 41       		.uleb128 0x41
 9904 1ddc BE120000 		.4byte	.LASF278
 9905 1de0 01       		.byte	0x1
 9906 1de1 6D02     		.2byte	0x26d
 9907 1de3 691B0000 		.4byte	0x1b69
 9908 1de7 02       		.byte	0x2
 9909 1de8 91       		.byte	0x91
 9910 1de9 5C       		.sleb128 -36
 9911 1dea 45       		.uleb128 0x45
 9912 1deb 00000000 		.4byte	.Ldebug_ranges0+0x0
 9913 1def 42       		.uleb128 0x42
 9914 1df0 646400   		.ascii	"dd\000"
 9915 1df3 01       		.byte	0x1
 9916 1df4 7E02     		.2byte	0x27e
 9917 1df6 1D1E0000 		.4byte	0x1e1d
 9918 1dfa 02       		.byte	0x2
 9919 1dfb 91       		.byte	0x91
 9920 1dfc 74       		.sleb128 -12
 9921 1dfd 3E       		.uleb128 0x3e
 9922 1dfe A1070000 		.4byte	.LASF315
 9923 1e02 01       		.byte	0x1
 9924 1e03 8302     		.2byte	0x283
 9925 1e05 C1090000 		.4byte	0x9c1
 9926 1e09 02       		.byte	0x2
 9927 1e0a 91       		.byte	0x91
 9928 1e0b 70       		.sleb128 -16
 9929 1e0c 3E       		.uleb128 0x3e
 9930 1e0d E5040000 		.4byte	.LASF316
 9931 1e11 01       		.byte	0x1
 9932 1e12 8602     		.2byte	0x286
 9933 1e14 42000000 		.4byte	0x42
 9934 1e18 02       		.byte	0x2
 9935 1e19 91       		.byte	0x91
 9936 1e1a 6F       		.sleb128 -17
 9937 1e1b 00       		.byte	0x0
 9938 1e1c 00       		.byte	0x0
ARM GAS  /tmp/ccwDRvq0.s 			page 211


 9939 1e1d 12       		.uleb128 0x12
 9940 1e1e 04       		.byte	0x4
 9941 1e1f 7E180000 		.4byte	0x187e
 9942 1e23 3F       		.uleb128 0x3f
 9943 1e24 4F050000 		.4byte	.LASF317
 9944 1e28 01       		.byte	0x1
 9945 1e29 B402     		.2byte	0x2b4
 9946 1e2b 66000000 		.4byte	0x66
 9947 1e2f 00000000 		.4byte	.LFB118
 9948 1e33 2C010000 		.4byte	.LFE118
 9949 1e37 77010000 		.4byte	.LLST9
 9950 1e3b 761E0000 		.4byte	0x1e76
 9951 1e3f 40       		.uleb128 0x40
 9952 1e40 667300   		.ascii	"fs\000"
 9953 1e43 01       		.byte	0x1
 9954 1e44 B402     		.2byte	0x2b4
 9955 1e46 5E1B0000 		.4byte	0x1b5e
 9956 1e4a 02       		.byte	0x2
 9957 1e4b 91       		.byte	0x91
 9958 1e4c 6C       		.sleb128 -20
 9959 1e4d 41       		.uleb128 0x41
 9960 1e4e 6C080000 		.4byte	.LASF306
 9961 1e52 01       		.byte	0x1
 9962 1e53 B402     		.2byte	0x2b4
 9963 1e55 66000000 		.4byte	0x66
 9964 1e59 02       		.byte	0x2
 9965 1e5a 91       		.byte	0x91
 9966 1e5b 6A       		.sleb128 -22
 9967 1e5c 38       		.uleb128 0x38
 9968 1e5d 14000000 		.4byte	.LBB19
 9969 1e61 10010000 		.4byte	.LBE19
 9970 1e65 3E       		.uleb128 0x3e
 9971 1e66 260F0000 		.4byte	.LASF318
 9972 1e6a 01       		.byte	0x1
 9973 1e6b BA02     		.2byte	0x2ba
 9974 1e6d 761E0000 		.4byte	0x1e76
 9975 1e71 02       		.byte	0x2
 9976 1e72 91       		.byte	0x91
 9977 1e73 74       		.sleb128 -12
 9978 1e74 00       		.byte	0x0
 9979 1e75 00       		.byte	0x0
 9980 1e76 0D       		.uleb128 0xd
 9981 1e77 4D000000 		.4byte	0x4d
 9982 1e7b 861E0000 		.4byte	0x1e86
 9983 1e7f 0E       		.uleb128 0xe
 9984 1e80 AE020000 		.4byte	0x2ae
 9985 1e84 01       		.byte	0x1
 9986 1e85 00       		.byte	0x0
 9987 1e86 3F       		.uleb128 0x3f
 9988 1e87 800F0000 		.4byte	.LASF319
 9989 1e8b 01       		.byte	0x1
 9990 1e8c D702     		.2byte	0x2d7
 9991 1e8e 66000000 		.4byte	0x66
 9992 1e92 00000000 		.4byte	.LFB119
 9993 1e96 B0020000 		.4byte	.LFE119
 9994 1e9a A3010000 		.4byte	.LLST10
 9995 1e9e 511F0000 		.4byte	0x1f51
ARM GAS  /tmp/ccwDRvq0.s 			page 212


 9996 1ea2 40       		.uleb128 0x40
 9997 1ea3 667300   		.ascii	"fs\000"
 9998 1ea6 01       		.byte	0x1
 9999 1ea7 D702     		.2byte	0x2d7
 10000 1ea9 5E1B0000 		.4byte	0x1b5e
 10001 1ead 02       		.byte	0x2
 10002 1eae 91       		.byte	0x91
 10003 1eaf 5C       		.sleb128 -36
 10004 1eb0 41       		.uleb128 0x41
 10005 1eb1 6C080000 		.4byte	.LASF306
 10006 1eb5 01       		.byte	0x1
 10007 1eb6 D702     		.2byte	0x2d7
 10008 1eb8 66000000 		.4byte	0x66
 10009 1ebc 02       		.byte	0x2
 10010 1ebd 91       		.byte	0x91
 10011 1ebe 5A       		.sleb128 -38
 10012 1ebf 41       		.uleb128 0x41
 10013 1ec0 F3040000 		.4byte	.LASF320
 10014 1ec4 01       		.byte	0x1
 10015 1ec5 D702     		.2byte	0x2d7
 10016 1ec7 66000000 		.4byte	0x66
 10017 1ecb 02       		.byte	0x2
 10018 1ecc 91       		.byte	0x91
 10019 1ecd 58       		.sleb128 -40
 10020 1ece 38       		.uleb128 0x38
 10021 1ecf 18000000 		.4byte	.LBB20
 10022 1ed3 A0020000 		.4byte	.LBE20
 10023 1ed7 3E       		.uleb128 0x3e
 10024 1ed8 73070000 		.4byte	.LASF254
 10025 1edc 01       		.byte	0x1
 10026 1edd DD02     		.2byte	0x2dd
 10027 1edf 1B160000 		.4byte	0x161b
 10028 1ee3 02       		.byte	0x2
 10029 1ee4 91       		.byte	0x91
 10030 1ee5 6C       		.sleb128 -20
 10031 1ee6 3E       		.uleb128 0x3e
 10032 1ee7 E9060000 		.4byte	.LASF256
 10033 1eeb 01       		.byte	0x1
 10034 1eec DE02     		.2byte	0x2de
 10035 1eee A8160000 		.4byte	0x16a8
 10036 1ef2 02       		.byte	0x2
 10037 1ef3 91       		.byte	0x91
 10038 1ef4 68       		.sleb128 -24
 10039 1ef5 3E       		.uleb128 0x3e
 10040 1ef6 96040000 		.4byte	.LASF268
 10041 1efa 01       		.byte	0x1
 10042 1efb DF02     		.2byte	0x2df
 10043 1efd 8A000000 		.4byte	0x8a
 10044 1f01 02       		.byte	0x2
 10045 1f02 91       		.byte	0x91
 10046 1f03 64       		.sleb128 -28
 10047 1f04 3E       		.uleb128 0x3e
 10048 1f05 BF050000 		.4byte	.LASF321
 10049 1f09 01       		.byte	0x1
 10050 1f0a E002     		.2byte	0x2e0
 10051 1f0c 66000000 		.4byte	0x66
 10052 1f10 02       		.byte	0x2
ARM GAS  /tmp/ccwDRvq0.s 			page 213


 10053 1f11 91       		.byte	0x91
 10054 1f12 62       		.sleb128 -30
 10055 1f13 3E       		.uleb128 0x3e
 10056 1f14 7A140000 		.4byte	.LASF322
 10057 1f18 01       		.byte	0x1
 10058 1f19 E102     		.2byte	0x2e1
 10059 1f1b 66000000 		.4byte	0x66
 10060 1f1f 02       		.byte	0x2
 10061 1f20 91       		.byte	0x91
 10062 1f21 76       		.sleb128 -10
 10063 1f22 3E       		.uleb128 0x3e
 10064 1f23 EA100000 		.4byte	.LASF323
 10065 1f27 01       		.byte	0x1
 10066 1f28 E202     		.2byte	0x2e2
 10067 1f2a 66000000 		.4byte	0x66
 10068 1f2e 02       		.byte	0x2
 10069 1f2f 91       		.byte	0x91
 10070 1f30 74       		.sleb128 -12
 10071 1f31 3E       		.uleb128 0x3e
 10072 1f32 8F010000 		.4byte	.LASF214
 10073 1f36 01       		.byte	0x1
 10074 1f37 E302     		.2byte	0x2e3
 10075 1f39 761E0000 		.4byte	0x1e76
 10076 1f3d 02       		.byte	0x2
 10077 1f3e 91       		.byte	0x91
 10078 1f3f 60       		.sleb128 -32
 10079 1f40 3E       		.uleb128 0x3e
 10080 1f41 81060000 		.4byte	.LASF324
 10081 1f45 01       		.byte	0x1
 10082 1f46 E402     		.2byte	0x2e4
 10083 1f48 66000000 		.4byte	0x66
 10084 1f4c 02       		.byte	0x2
 10085 1f4d 91       		.byte	0x91
 10086 1f4e 72       		.sleb128 -14
 10087 1f4f 00       		.byte	0x0
 10088 1f50 00       		.byte	0x0
 10089 1f51 3F       		.uleb128 0x3f
 10090 1f52 1E0C0000 		.4byte	.LASF325
 10091 1f56 01       		.byte	0x1
 10092 1f57 3403     		.2byte	0x334
 10093 1f59 42000000 		.4byte	0x42
 10094 1f5d 00000000 		.4byte	.LFB120
 10095 1f61 B8010000 		.4byte	.LFE120
 10096 1f65 CF010000 		.4byte	.LLST11
 10097 1f69 CC1F0000 		.4byte	0x1fcc
 10098 1f6d 40       		.uleb128 0x40
 10099 1f6e 667300   		.ascii	"fs\000"
 10100 1f71 01       		.byte	0x1
 10101 1f72 3403     		.2byte	0x334
 10102 1f74 5E1B0000 		.4byte	0x1b5e
 10103 1f78 02       		.byte	0x2
 10104 1f79 91       		.byte	0x91
 10105 1f7a 64       		.sleb128 -28
 10106 1f7b 41       		.uleb128 0x41
 10107 1f7c 6C080000 		.4byte	.LASF306
 10108 1f80 01       		.byte	0x1
 10109 1f81 3403     		.2byte	0x334
ARM GAS  /tmp/ccwDRvq0.s 			page 214


 10110 1f83 66000000 		.4byte	0x66
 10111 1f87 02       		.byte	0x2
 10112 1f88 91       		.byte	0x91
 10113 1f89 62       		.sleb128 -30
 10114 1f8a 38       		.uleb128 0x38
 10115 1f8b 14000000 		.4byte	.LBB21
 10116 1f8f 9C010000 		.4byte	.LBE21
 10117 1f93 3E       		.uleb128 0x3e
 10118 1f94 96040000 		.4byte	.LASF268
 10119 1f98 01       		.byte	0x1
 10120 1f99 3A03     		.2byte	0x33a
 10121 1f9b 8A000000 		.4byte	0x8a
 10122 1f9f 02       		.byte	0x2
 10123 1fa0 91       		.byte	0x91
 10124 1fa1 70       		.sleb128 -16
 10125 1fa2 3E       		.uleb128 0x3e
 10126 1fa3 8F010000 		.4byte	.LASF214
 10127 1fa7 01       		.byte	0x1
 10128 1fa8 3B03     		.2byte	0x33b
 10129 1faa 761E0000 		.4byte	0x1e76
 10130 1fae 02       		.byte	0x2
 10131 1faf 91       		.byte	0x91
 10132 1fb0 6C       		.sleb128 -20
 10133 1fb1 38       		.uleb128 0x38
 10134 1fb2 44000000 		.4byte	.LBB22
 10135 1fb6 7C010000 		.4byte	.LBE22
 10136 1fba 3E       		.uleb128 0x3e
 10137 1fbb 5F010000 		.4byte	.LASF326
 10138 1fbf 01       		.byte	0x1
 10139 1fc0 4203     		.2byte	0x342
 10140 1fc2 66000000 		.4byte	0x66
 10141 1fc6 02       		.byte	0x2
 10142 1fc7 91       		.byte	0x91
 10143 1fc8 76       		.sleb128 -10
 10144 1fc9 00       		.byte	0x0
 10145 1fca 00       		.byte	0x0
 10146 1fcb 00       		.byte	0x0
 10147 1fcc 3F       		.uleb128 0x3f
 10148 1fcd 45160000 		.4byte	.LASF327
 10149 1fd1 01       		.byte	0x1
 10150 1fd2 7203     		.2byte	0x372
 10151 1fd4 42000000 		.4byte	0x42
 10152 1fd8 00000000 		.4byte	.LFB121
 10153 1fdc F0000000 		.4byte	.LFE121
 10154 1fe0 FB010000 		.4byte	.LLST12
 10155 1fe4 2E200000 		.4byte	0x202e
 10156 1fe8 40       		.uleb128 0x40
 10157 1fe9 667300   		.ascii	"fs\000"
 10158 1fec 01       		.byte	0x1
 10159 1fed 7203     		.2byte	0x372
 10160 1fef 5E1B0000 		.4byte	0x1b5e
 10161 1ff3 02       		.byte	0x2
 10162 1ff4 91       		.byte	0x91
 10163 1ff5 6C       		.sleb128 -20
 10164 1ff6 41       		.uleb128 0x41
 10165 1ff7 6C080000 		.4byte	.LASF306
 10166 1ffb 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 215


 10167 1ffc 7203     		.2byte	0x372
 10168 1ffe 66000000 		.4byte	0x66
 10169 2002 02       		.byte	0x2
 10170 2003 91       		.byte	0x91
 10171 2004 6A       		.sleb128 -22
 10172 2005 38       		.uleb128 0x38
 10173 2006 14000000 		.4byte	.LBB23
 10174 200a E0000000 		.4byte	.LBE23
 10175 200e 3E       		.uleb128 0x3e
 10176 200f 5F010000 		.4byte	.LASF326
 10177 2013 01       		.byte	0x1
 10178 2014 7903     		.2byte	0x379
 10179 2016 66000000 		.4byte	0x66
 10180 201a 02       		.byte	0x2
 10181 201b 91       		.byte	0x91
 10182 201c 76       		.sleb128 -10
 10183 201d 3E       		.uleb128 0x3e
 10184 201e 8F010000 		.4byte	.LASF214
 10185 2022 01       		.byte	0x1
 10186 2023 7C03     		.2byte	0x37c
 10187 2025 761E0000 		.4byte	0x1e76
 10188 2029 02       		.byte	0x2
 10189 202a 91       		.byte	0x91
 10190 202b 74       		.sleb128 -12
 10191 202c 00       		.byte	0x0
 10192 202d 00       		.byte	0x0
 10193 202e 44       		.uleb128 0x44
 10194 202f 01       		.byte	0x1
 10195 2030 A5160000 		.4byte	.LASF328
 10196 2034 01       		.byte	0x1
 10197 2035 9503     		.2byte	0x395
 10198 2037 53130000 		.4byte	.LASF330
 10199 203b 85200000 		.4byte	0x2085
 10200 203f 00000000 		.4byte	.LFB122
 10201 2043 BC000000 		.4byte	.LFE122
 10202 2047 27020000 		.4byte	.LLST13
 10203 204b 85200000 		.4byte	0x2085
 10204 204f 40       		.uleb128 0x40
 10205 2050 667300   		.ascii	"fs\000"
 10206 2053 01       		.byte	0x1
 10207 2054 9503     		.2byte	0x395
 10208 2056 78180000 		.4byte	0x1878
 10209 205a 02       		.byte	0x2
 10210 205b 91       		.byte	0x91
 10211 205c 6C       		.sleb128 -20
 10212 205d 41       		.uleb128 0x41
 10213 205e BE120000 		.4byte	.LASF278
 10214 2062 01       		.byte	0x1
 10215 2063 9503     		.2byte	0x395
 10216 2065 2B1C0000 		.4byte	0x1c2b
 10217 2069 02       		.byte	0x2
 10218 206a 91       		.byte	0x91
 10219 206b 68       		.sleb128 -24
 10220 206c 38       		.uleb128 0x38
 10221 206d 10000000 		.4byte	.LBB24
 10222 2071 AC000000 		.4byte	.LBE24
 10223 2075 42       		.uleb128 0x42
ARM GAS  /tmp/ccwDRvq0.s 			page 216


 10224 2076 666400   		.ascii	"fd\000"
 10225 2079 01       		.byte	0x1
 10226 207a 9A03     		.2byte	0x39a
 10227 207c 85200000 		.4byte	0x2085
 10228 2080 02       		.byte	0x2
 10229 2081 91       		.byte	0x91
 10230 2082 74       		.sleb128 -12
 10231 2083 00       		.byte	0x0
 10232 2084 00       		.byte	0x0
 10233 2085 12       		.uleb128 0x12
 10234 2086 04       		.byte	0x4
 10235 2087 34180000 		.4byte	0x1834
 10236 208b 46       		.uleb128 0x46
 10237 208c 01       		.byte	0x1
 10238 208d 10000000 		.4byte	.LASF332
 10239 2091 01       		.byte	0x1
 10240 2092 AD03     		.2byte	0x3ad
 10241 2094 3F0D0000 		.4byte	.LASF354
 10242 2098 00000000 		.4byte	.LFB123
 10243 209c 2C000000 		.4byte	.LFE123
 10244 20a0 53020000 		.4byte	.LLST14
 10245 20a4 B7200000 		.4byte	0x20b7
 10246 20a8 40       		.uleb128 0x40
 10247 20a9 666400   		.ascii	"fd\000"
 10248 20ac 01       		.byte	0x1
 10249 20ad AD03     		.2byte	0x3ad
 10250 20af 85200000 		.4byte	0x2085
 10251 20b3 02       		.byte	0x2
 10252 20b4 91       		.byte	0x91
 10253 20b5 74       		.sleb128 -12
 10254 20b6 00       		.byte	0x0
 10255 20b7 44       		.uleb128 0x44
 10256 20b8 01       		.byte	0x1
 10257 20b9 9C0D0000 		.4byte	.LASF333
 10258 20bd 01       		.byte	0x1
 10259 20be BF03     		.2byte	0x3bf
 10260 20c0 EA150000 		.4byte	.LASF334
 10261 20c4 54000000 		.4byte	0x54
 10262 20c8 00000000 		.4byte	.LFB124
 10263 20cc 6C030000 		.4byte	.LFE124
 10264 20d0 7F020000 		.4byte	.LLST15
 10265 20d4 90210000 		.4byte	0x2190
 10266 20d8 40       		.uleb128 0x40
 10267 20d9 666400   		.ascii	"fd\000"
 10268 20dc 01       		.byte	0x1
 10269 20dd BF03     		.2byte	0x3bf
 10270 20df 85200000 		.4byte	0x2085
 10271 20e3 02       		.byte	0x2
 10272 20e4 91       		.byte	0x91
 10273 20e5 5C       		.sleb128 -36
 10274 20e6 41       		.uleb128 0x41
 10275 20e7 8F010000 		.4byte	.LASF214
 10276 20eb 01       		.byte	0x1
 10277 20ec BF03     		.2byte	0x3bf
 10278 20ee 8B130000 		.4byte	0x138b
 10279 20f2 02       		.byte	0x2
 10280 20f3 91       		.byte	0x91
ARM GAS  /tmp/ccwDRvq0.s 			page 217


 10281 20f4 58       		.sleb128 -40
 10282 20f5 41       		.uleb128 0x41
 10283 20f6 05130000 		.4byte	.LASF335
 10284 20fa 01       		.byte	0x1
 10285 20fb BF03     		.2byte	0x3bf
 10286 20fd 66000000 		.4byte	0x66
 10287 2101 02       		.byte	0x2
 10288 2102 91       		.byte	0x91
 10289 2103 56       		.sleb128 -42
 10290 2104 38       		.uleb128 0x38
 10291 2105 18000000 		.4byte	.LBB25
 10292 2109 58030000 		.4byte	.LBE25
 10293 210d 3E       		.uleb128 0x3e
 10294 210e 3F110000 		.4byte	.LASF271
 10295 2112 01       		.byte	0x1
 10296 2113 CB03     		.2byte	0x3cb
 10297 2115 66000000 		.4byte	0x66
 10298 2119 02       		.byte	0x2
 10299 211a 91       		.byte	0x91
 10300 211b 68       		.sleb128 -24
 10301 211c 3E       		.uleb128 0x3e
 10302 211d 6C080000 		.4byte	.LASF306
 10303 2121 01       		.byte	0x1
 10304 2122 CC03     		.2byte	0x3cc
 10305 2124 66000000 		.4byte	0x66
 10306 2128 02       		.byte	0x2
 10307 2129 91       		.byte	0x91
 10308 212a 76       		.sleb128 -10
 10309 212b 3E       		.uleb128 0x3e
 10310 212c 48000000 		.4byte	.LASF336
 10311 2130 01       		.byte	0x1
 10312 2131 CD03     		.2byte	0x3cd
 10313 2133 66000000 		.4byte	0x66
 10314 2137 02       		.byte	0x2
 10315 2138 91       		.byte	0x91
 10316 2139 74       		.sleb128 -12
 10317 213a 3E       		.uleb128 0x3e
 10318 213b 45020000 		.4byte	.LASF337
 10319 213f 01       		.byte	0x1
 10320 2140 CE03     		.2byte	0x3ce
 10321 2142 66000000 		.4byte	0x66
 10322 2146 02       		.byte	0x2
 10323 2147 91       		.byte	0x91
 10324 2148 72       		.sleb128 -14
 10325 2149 43       		.uleb128 0x43
 10326 214a 38010000 		.4byte	.LBB29
 10327 214e AC010000 		.4byte	.LBE29
 10328 2152 66210000 		.4byte	0x2166
 10329 2156 42       		.uleb128 0x42
 10330 2157 706F7300 		.ascii	"pos\000"
 10331 215b 01       		.byte	0x1
 10332 215c DF03     		.2byte	0x3df
 10333 215e 8A000000 		.4byte	0x8a
 10334 2162 02       		.byte	0x2
 10335 2163 91       		.byte	0x91
 10336 2164 6C       		.sleb128 -20
 10337 2165 00       		.byte	0x0
ARM GAS  /tmp/ccwDRvq0.s 			page 218


 10338 2166 38       		.uleb128 0x38
 10339 2167 AC010000 		.4byte	.LBB30
 10340 216b 30030000 		.4byte	.LBE30
 10341 216f 3E       		.uleb128 0x3e
 10342 2170 F6130000 		.4byte	.LASF305
 10343 2174 01       		.byte	0x1
 10344 2175 EE03     		.2byte	0x3ee
 10345 2177 8A000000 		.4byte	0x8a
 10346 217b 02       		.byte	0x2
 10347 217c 91       		.byte	0x91
 10348 217d 64       		.sleb128 -28
 10349 217e 3E       		.uleb128 0x3e
 10350 217f 3E040000 		.4byte	.LASF338
 10351 2183 01       		.byte	0x1
 10352 2184 F003     		.2byte	0x3f0
 10353 2186 66000000 		.4byte	0x66
 10354 218a 02       		.byte	0x2
 10355 218b 91       		.byte	0x91
 10356 218c 6A       		.sleb128 -22
 10357 218d 00       		.byte	0x0
 10358 218e 00       		.byte	0x0
 10359 218f 00       		.byte	0x0
 10360 2190 44       		.uleb128 0x44
 10361 2191 01       		.byte	0x1
 10362 2192 DE130000 		.4byte	.LASF339
 10363 2196 01       		.byte	0x1
 10364 2197 1F04     		.2byte	0x41f
 10365 2199 5A020000 		.4byte	.LASF340
 10366 219d 54000000 		.4byte	0x54
 10367 21a1 00000000 		.4byte	.LFB125
 10368 21a5 5C040000 		.4byte	.LFE125
 10369 21a9 AB020000 		.4byte	.LLST16
 10370 21ad AA220000 		.4byte	0x22aa
 10371 21b1 40       		.uleb128 0x40
 10372 21b2 666400   		.ascii	"fd\000"
 10373 21b5 01       		.byte	0x1
 10374 21b6 1F04     		.2byte	0x41f
 10375 21b8 85200000 		.4byte	0x2085
 10376 21bc 02       		.byte	0x2
 10377 21bd 91       		.byte	0x91
 10378 21be 54       		.sleb128 -44
 10379 21bf 41       		.uleb128 0x41
 10380 21c0 8F010000 		.4byte	.LASF214
 10381 21c4 01       		.byte	0x1
 10382 21c5 1F04     		.2byte	0x41f
 10383 21c7 80130000 		.4byte	0x1380
 10384 21cb 02       		.byte	0x2
 10385 21cc 91       		.byte	0x91
 10386 21cd 50       		.sleb128 -48
 10387 21ce 41       		.uleb128 0x41
 10388 21cf 05130000 		.4byte	.LASF335
 10389 21d3 01       		.byte	0x1
 10390 21d4 1F04     		.2byte	0x41f
 10391 21d6 66000000 		.4byte	0x66
 10392 21da 02       		.byte	0x2
 10393 21db 91       		.byte	0x91
 10394 21dc 4E       		.sleb128 -50
ARM GAS  /tmp/ccwDRvq0.s 			page 219


 10395 21dd 38       		.uleb128 0x38
 10396 21de 18000000 		.4byte	.LBB31
 10397 21e2 48040000 		.4byte	.LBE31
 10398 21e6 3E       		.uleb128 0x3e
 10399 21e7 3F110000 		.4byte	.LASF271
 10400 21eb 01       		.byte	0x1
 10401 21ec 2804     		.2byte	0x428
 10402 21ee 66000000 		.4byte	0x66
 10403 21f2 02       		.byte	0x2
 10404 21f3 91       		.byte	0x91
 10405 21f4 64       		.sleb128 -28
 10406 21f5 3E       		.uleb128 0x3e
 10407 21f6 6C080000 		.4byte	.LASF306
 10408 21fa 01       		.byte	0x1
 10409 21fb 2904     		.2byte	0x429
 10410 21fd 66000000 		.4byte	0x66
 10411 2201 02       		.byte	0x2
 10412 2202 91       		.byte	0x91
 10413 2203 76       		.sleb128 -10
 10414 2204 3E       		.uleb128 0x3e
 10415 2205 48000000 		.4byte	.LASF336
 10416 2209 01       		.byte	0x1
 10417 220a 2A04     		.2byte	0x42a
 10418 220c 66000000 		.4byte	0x66
 10419 2210 02       		.byte	0x2
 10420 2211 91       		.byte	0x91
 10421 2212 74       		.sleb128 -12
 10422 2213 3E       		.uleb128 0x3e
 10423 2214 45020000 		.4byte	.LASF337
 10424 2218 01       		.byte	0x1
 10425 2219 2B04     		.2byte	0x42b
 10426 221b 66000000 		.4byte	0x66
 10427 221f 02       		.byte	0x2
 10428 2220 91       		.byte	0x91
 10429 2221 72       		.sleb128 -14
 10430 2222 43       		.uleb128 0x43
 10431 2223 34010000 		.4byte	.LBB35
 10432 2227 EC010000 		.4byte	.LBE35
 10433 222b 4E220000 		.4byte	0x224e
 10434 222f 42       		.uleb128 0x42
 10435 2230 706F7300 		.ascii	"pos\000"
 10436 2234 01       		.byte	0x1
 10437 2235 4304     		.2byte	0x443
 10438 2237 8A000000 		.4byte	0x8a
 10439 223b 02       		.byte	0x2
 10440 223c 91       		.byte	0x91
 10441 223d 6C       		.sleb128 -20
 10442 223e 3E       		.uleb128 0x3e
 10443 223f 5F010000 		.4byte	.LASF326
 10444 2243 01       		.byte	0x1
 10445 2244 4404     		.2byte	0x444
 10446 2246 66000000 		.4byte	0x66
 10447 224a 02       		.byte	0x2
 10448 224b 91       		.byte	0x91
 10449 224c 6A       		.sleb128 -22
 10450 224d 00       		.byte	0x0
 10451 224e 47       		.uleb128 0x47
ARM GAS  /tmp/ccwDRvq0.s 			page 220


 10452 224f 18000000 		.4byte	.Ldebug_ranges0+0x18
 10453 2253 8F220000 		.4byte	0x228f
 10454 2257 3E       		.uleb128 0x3e
 10455 2258 F6130000 		.4byte	.LASF305
 10456 225c 01       		.byte	0x1
 10457 225d 5804     		.2byte	0x458
 10458 225f 8A000000 		.4byte	0x8a
 10459 2263 02       		.byte	0x2
 10460 2264 91       		.byte	0x91
 10461 2265 60       		.sleb128 -32
 10462 2266 3E       		.uleb128 0x3e
 10463 2267 FE040000 		.4byte	.LASF341
 10464 226b 01       		.byte	0x1
 10465 226c 5A04     		.2byte	0x45a
 10466 226e 66000000 		.4byte	0x66
 10467 2272 02       		.byte	0x2
 10468 2273 91       		.byte	0x91
 10469 2274 68       		.sleb128 -24
 10470 2275 38       		.uleb128 0x38
 10471 2276 D0020000 		.4byte	.LBB38
 10472 227a 58030000 		.4byte	.LBE38
 10473 227e 3E       		.uleb128 0x3e
 10474 227f 5F010000 		.4byte	.LASF326
 10475 2283 01       		.byte	0x1
 10476 2284 6A04     		.2byte	0x46a
 10477 2286 66000000 		.4byte	0x66
 10478 228a 02       		.byte	0x2
 10479 228b 91       		.byte	0x91
 10480 228c 66       		.sleb128 -26
 10481 228d 00       		.byte	0x0
 10482 228e 00       		.byte	0x0
 10483 228f 38       		.uleb128 0x38
 10484 2290 A0030000 		.4byte	.LBB41
 10485 2294 24040000 		.4byte	.LBE41
 10486 2298 3E       		.uleb128 0x3e
 10487 2299 600B0000 		.4byte	.LASF342
 10488 229d 01       		.byte	0x1
 10489 229e 8004     		.2byte	0x480
 10490 22a0 8A000000 		.4byte	0x8a
 10491 22a4 02       		.byte	0x2
 10492 22a5 91       		.byte	0x91
 10493 22a6 5C       		.sleb128 -36
 10494 22a7 00       		.byte	0x0
 10495 22a8 00       		.byte	0x0
 10496 22a9 00       		.byte	0x0
 10497 22aa 44       		.uleb128 0x44
 10498 22ab 01       		.byte	0x1
 10499 22ac E7070000 		.4byte	.LASF343
 10500 22b0 01       		.byte	0x1
 10501 22b1 B104     		.2byte	0x4b1
 10502 22b3 5D040000 		.4byte	.LASF344
 10503 22b7 42000000 		.4byte	0x42
 10504 22bb 00000000 		.4byte	.LFB126
 10505 22bf 2C010000 		.4byte	.LFE126
 10506 22c3 D7020000 		.4byte	.LLST17
 10507 22c7 11230000 		.4byte	0x2311
 10508 22cb 40       		.uleb128 0x40
ARM GAS  /tmp/ccwDRvq0.s 			page 221


 10509 22cc 666400   		.ascii	"fd\000"
 10510 22cf 01       		.byte	0x1
 10511 22d0 B104     		.2byte	0x4b1
 10512 22d2 85200000 		.4byte	0x2085
 10513 22d6 02       		.byte	0x2
 10514 22d7 91       		.byte	0x91
 10515 22d8 6C       		.sleb128 -20
 10516 22d9 41       		.uleb128 0x41
 10517 22da B1110000 		.4byte	.LASF258
 10518 22de 01       		.byte	0x1
 10519 22df B104     		.2byte	0x4b1
 10520 22e1 11230000 		.4byte	0x2311
 10521 22e5 02       		.byte	0x2
 10522 22e6 91       		.byte	0x91
 10523 22e7 68       		.sleb128 -24
 10524 22e8 41       		.uleb128 0x41
 10525 22e9 73140000 		.4byte	.LASF345
 10526 22ed 01       		.byte	0x1
 10527 22ee B104     		.2byte	0x4b1
 10528 22f0 42000000 		.4byte	0x42
 10529 22f4 02       		.byte	0x2
 10530 22f5 91       		.byte	0x91
 10531 22f6 67       		.sleb128 -25
 10532 22f7 38       		.uleb128 0x38
 10533 22f8 18000000 		.4byte	.LBB42
 10534 22fc 1C010000 		.4byte	.LBE42
 10535 2300 3E       		.uleb128 0x3e
 10536 2301 96010000 		.4byte	.LASF346
 10537 2305 01       		.byte	0x1
 10538 2306 B604     		.2byte	0x4b6
 10539 2308 8A000000 		.4byte	0x8a
 10540 230c 02       		.byte	0x2
 10541 230d 91       		.byte	0x91
 10542 230e 74       		.sleb128 -12
 10543 230f 00       		.byte	0x0
 10544 2310 00       		.byte	0x0
 10545 2311 12       		.uleb128 0x12
 10546 2312 04       		.byte	0x4
 10547 2313 78000000 		.4byte	0x78
 10548 2317 44       		.uleb128 0x44
 10549 2318 01       		.byte	0x1
 10550 2319 A3130000 		.4byte	.LASF347
 10551 231d 01       		.byte	0x1
 10552 231e E304     		.2byte	0x4e3
 10553 2320 46090000 		.4byte	.LASF348
 10554 2324 42000000 		.4byte	0x42
 10555 2328 00000000 		.4byte	.LFB127
 10556 232c 78020000 		.4byte	.LFE127
 10557 2330 03030000 		.4byte	.LLST18
 10558 2334 CE230000 		.4byte	0x23ce
 10559 2338 40       		.uleb128 0x40
 10560 2339 666400   		.ascii	"fd\000"
 10561 233c 01       		.byte	0x1
 10562 233d E304     		.2byte	0x4e3
 10563 233f 85200000 		.4byte	0x2085
 10564 2343 02       		.byte	0x2
 10565 2344 91       		.byte	0x91
ARM GAS  /tmp/ccwDRvq0.s 			page 222


 10566 2345 64       		.sleb128 -28
 10567 2346 41       		.uleb128 0x41
 10568 2347 340E0000 		.4byte	.LASF267
 10569 234b 01       		.byte	0x1
 10570 234c E304     		.2byte	0x4e3
 10571 234e 8A000000 		.4byte	0x8a
 10572 2352 02       		.byte	0x2
 10573 2353 91       		.byte	0x91
 10574 2354 60       		.sleb128 -32
 10575 2355 38       		.uleb128 0x38
 10576 2356 10000000 		.4byte	.LBB43
 10577 235a 68020000 		.4byte	.LBE43
 10578 235e 3E       		.uleb128 0x3e
 10579 235f 6C080000 		.4byte	.LASF306
 10580 2363 01       		.byte	0x1
 10581 2364 E904     		.2byte	0x4e9
 10582 2366 66000000 		.4byte	0x66
 10583 236a 02       		.byte	0x2
 10584 236b 91       		.byte	0x91
 10585 236c 76       		.sleb128 -10
 10586 236d 3E       		.uleb128 0x3e
 10587 236e 3F110000 		.4byte	.LASF271
 10588 2372 01       		.byte	0x1
 10589 2373 EA04     		.2byte	0x4ea
 10590 2375 66000000 		.4byte	0x66
 10591 2379 02       		.byte	0x2
 10592 237a 91       		.byte	0x91
 10593 237b 6C       		.sleb128 -20
 10594 237c 3E       		.uleb128 0x3e
 10595 237d 1D0F0000 		.4byte	.LASF349
 10596 2381 01       		.byte	0x1
 10597 2382 EB04     		.2byte	0x4eb
 10598 2384 8A000000 		.4byte	0x8a
 10599 2388 02       		.byte	0x2
 10600 2389 91       		.byte	0x91
 10601 238a 70       		.sleb128 -16
 10602 238b 47       		.uleb128 0x47
 10603 238c 30000000 		.4byte	.Ldebug_ranges0+0x30
 10604 2390 A4230000 		.4byte	0x23a4
 10605 2394 3E       		.uleb128 0x3e
 10606 2395 5F010000 		.4byte	.LASF326
 10607 2399 01       		.byte	0x1
 10608 239a F704     		.2byte	0x4f7
 10609 239c 66000000 		.4byte	0x66
 10610 23a0 02       		.byte	0x2
 10611 23a1 91       		.byte	0x91
 10612 23a2 6A       		.sleb128 -22
 10613 23a3 00       		.byte	0x0
 10614 23a4 38       		.uleb128 0x38
 10615 23a5 EC000000 		.4byte	.LBB48
 10616 23a9 84010000 		.4byte	.LBE48
 10617 23ad 3E       		.uleb128 0x3e
 10618 23ae 410B0000 		.4byte	.LASF287
 10619 23b2 01       		.byte	0x1
 10620 23b3 0805     		.2byte	0x508
 10621 23b5 66000000 		.4byte	0x66
 10622 23b9 02       		.byte	0x2
ARM GAS  /tmp/ccwDRvq0.s 			page 223


 10623 23ba 91       		.byte	0x91
 10624 23bb 6E       		.sleb128 -18
 10625 23bc 3E       		.uleb128 0x3e
 10626 23bd 54000000 		.4byte	.LASF350
 10627 23c1 01       		.byte	0x1
 10628 23c2 0B05     		.2byte	0x50b
 10629 23c4 66000000 		.4byte	0x66
 10630 23c8 02       		.byte	0x2
 10631 23c9 91       		.byte	0x91
 10632 23ca 68       		.sleb128 -24
 10633 23cb 00       		.byte	0x0
 10634 23cc 00       		.byte	0x0
 10635 23cd 00       		.byte	0x0
 10636 23ce 44       		.uleb128 0x44
 10637 23cf 01       		.byte	0x1
 10638 23d0 080F0000 		.4byte	.LASF351
 10639 23d4 01       		.byte	0x1
 10640 23d5 4105     		.2byte	0x541
 10641 23d7 8D060000 		.4byte	.LASF352
 10642 23db 1D1E0000 		.4byte	0x1e1d
 10643 23df 00000000 		.4byte	.LFB128
 10644 23e3 AC000000 		.4byte	.LFE128
 10645 23e7 2F030000 		.4byte	.LLST19
 10646 23eb 25240000 		.4byte	0x2425
 10647 23ef 40       		.uleb128 0x40
 10648 23f0 667300   		.ascii	"fs\000"
 10649 23f3 01       		.byte	0x1
 10650 23f4 4105     		.2byte	0x541
 10651 23f6 78180000 		.4byte	0x1878
 10652 23fa 02       		.byte	0x2
 10653 23fb 91       		.byte	0x91
 10654 23fc 6C       		.sleb128 -20
 10655 23fd 41       		.uleb128 0x41
 10656 23fe BE120000 		.4byte	.LASF278
 10657 2402 01       		.byte	0x1
 10658 2403 4105     		.2byte	0x541
 10659 2405 2B1C0000 		.4byte	0x1c2b
 10660 2409 02       		.byte	0x2
 10661 240a 91       		.byte	0x91
 10662 240b 68       		.sleb128 -24
 10663 240c 38       		.uleb128 0x38
 10664 240d 10000000 		.4byte	.LBB49
 10665 2411 9C000000 		.4byte	.LBE49
 10666 2415 42       		.uleb128 0x42
 10667 2416 646400   		.ascii	"dd\000"
 10668 2419 01       		.byte	0x1
 10669 241a 4605     		.2byte	0x546
 10670 241c 1D1E0000 		.4byte	0x1e1d
 10671 2420 02       		.byte	0x2
 10672 2421 91       		.byte	0x91
 10673 2422 74       		.sleb128 -12
 10674 2423 00       		.byte	0x0
 10675 2424 00       		.byte	0x0
 10676 2425 46       		.uleb128 0x46
 10677 2426 01       		.byte	0x1
 10678 2427 D9060000 		.4byte	.LASF353
 10679 242b 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 224


 10680 242c 5C05     		.2byte	0x55c
 10681 242e 950C0000 		.4byte	.LASF355
 10682 2432 00000000 		.4byte	.LFB129
 10683 2436 2C000000 		.4byte	.LFE129
 10684 243a 5B030000 		.4byte	.LLST20
 10685 243e 51240000 		.4byte	0x2451
 10686 2442 40       		.uleb128 0x40
 10687 2443 646400   		.ascii	"dd\000"
 10688 2446 01       		.byte	0x1
 10689 2447 5C05     		.2byte	0x55c
 10690 2449 1D1E0000 		.4byte	0x1e1d
 10691 244d 02       		.byte	0x2
 10692 244e 91       		.byte	0x91
 10693 244f 74       		.sleb128 -12
 10694 2450 00       		.byte	0x0
 10695 2451 44       		.uleb128 0x44
 10696 2452 01       		.byte	0x1
 10697 2453 BD150000 		.4byte	.LASF356
 10698 2457 01       		.byte	0x1
 10699 2458 6B05     		.2byte	0x56b
 10700 245a D70A0000 		.4byte	.LASF357
 10701 245e 42000000 		.4byte	0x42
 10702 2462 00000000 		.4byte	.LFB130
 10703 2466 2C010000 		.4byte	.LFE130
 10704 246a 87030000 		.4byte	.LLST21
 10705 246e 90240000 		.4byte	0x2490
 10706 2472 40       		.uleb128 0x40
 10707 2473 646400   		.ascii	"dd\000"
 10708 2476 01       		.byte	0x1
 10709 2477 6B05     		.2byte	0x56b
 10710 2479 1D1E0000 		.4byte	0x1e1d
 10711 247d 02       		.byte	0x2
 10712 247e 91       		.byte	0x91
 10713 247f 74       		.sleb128 -12
 10714 2480 41       		.uleb128 0x41
 10715 2481 BE120000 		.4byte	.LASF278
 10716 2485 01       		.byte	0x1
 10717 2486 6B05     		.2byte	0x56b
 10718 2488 691B0000 		.4byte	0x1b69
 10719 248c 02       		.byte	0x2
 10720 248d 91       		.byte	0x91
 10721 248e 70       		.sleb128 -16
 10722 248f 00       		.byte	0x0
 10723 2490 44       		.uleb128 0x44
 10724 2491 01       		.byte	0x1
 10725 2492 4C110000 		.4byte	.LASF358
 10726 2496 01       		.byte	0x1
 10727 2497 9405     		.2byte	0x594
 10728 2499 3F0F0000 		.4byte	.LASF359
 10729 249d 42000000 		.4byte	0x42
 10730 24a1 00000000 		.4byte	.LFB131
 10731 24a5 38000000 		.4byte	.LFE131
 10732 24a9 B3030000 		.4byte	.LLST22
 10733 24ad C0240000 		.4byte	0x24c0
 10734 24b1 40       		.uleb128 0x40
 10735 24b2 646400   		.ascii	"dd\000"
 10736 24b5 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 225


 10737 24b6 9405     		.2byte	0x594
 10738 24b8 1D1E0000 		.4byte	0x1e1d
 10739 24bc 02       		.byte	0x2
 10740 24bd 91       		.byte	0x91
 10741 24be 7C       		.sleb128 -4
 10742 24bf 00       		.byte	0x0
 10743 24c0 44       		.uleb128 0x44
 10744 24c1 01       		.byte	0x1
 10745 24c2 71090000 		.4byte	.LASF360
 10746 24c6 01       		.byte	0x1
 10747 24c7 9D05     		.2byte	0x59d
 10748 24c9 55030000 		.4byte	.LASF361
 10749 24cd 42000000 		.4byte	0x42
 10750 24d1 00000000 		.4byte	.LFB132
 10751 24d5 40000000 		.4byte	.LFE132
 10752 24d9 D3030000 		.4byte	.LLST23
 10753 24dd FF240000 		.4byte	0x24ff
 10754 24e1 40       		.uleb128 0x40
 10755 24e2 646400   		.ascii	"dd\000"
 10756 24e5 01       		.byte	0x1
 10757 24e6 9D05     		.2byte	0x59d
 10758 24e8 1D1E0000 		.4byte	0x1e1d
 10759 24ec 02       		.byte	0x2
 10760 24ed 91       		.byte	0x91
 10761 24ee 7C       		.sleb128 -4
 10762 24ef 41       		.uleb128 0x41
 10763 24f0 B1110000 		.4byte	.LASF258
 10764 24f4 01       		.byte	0x1
 10765 24f5 9D05     		.2byte	0x59d
 10766 24f7 66000000 		.4byte	0x66
 10767 24fb 02       		.byte	0x2
 10768 24fc 91       		.byte	0x91
 10769 24fd 7A       		.sleb128 -6
 10770 24fe 00       		.byte	0x0
 10771 24ff 3F       		.uleb128 0x3f
 10772 2500 8B0E0000 		.4byte	.LASF362
 10773 2504 01       		.byte	0x1
 10774 2505 B905     		.2byte	0x5b9
 10775 2507 42000000 		.4byte	0x42
 10776 250b 00000000 		.4byte	.LFB133
 10777 250f 58050000 		.4byte	.LFE133
 10778 2513 F3030000 		.4byte	.LLST24
 10779 2517 1E260000 		.4byte	0x261e
 10780 251b 40       		.uleb128 0x40
 10781 251c 667300   		.ascii	"fs\000"
 10782 251f 01       		.byte	0x1
 10783 2520 B905     		.2byte	0x5b9
 10784 2522 5E1B0000 		.4byte	0x1b5e
 10785 2526 03       		.byte	0x3
 10786 2527 91       		.byte	0x91
 10787 2528 B47F     		.sleb128 -76
 10788 252a 41       		.uleb128 0x41
 10789 252b BE120000 		.4byte	.LASF278
 10790 252f 01       		.byte	0x1
 10791 2530 B905     		.2byte	0x5b9
 10792 2532 2B1C0000 		.4byte	0x1c2b
 10793 2536 03       		.byte	0x3
ARM GAS  /tmp/ccwDRvq0.s 			page 226


 10794 2537 91       		.byte	0x91
 10795 2538 B07F     		.sleb128 -80
 10796 253a 38       		.uleb128 0x38
 10797 253b 10000000 		.4byte	.LBB50
 10798 253f 44050000 		.4byte	.LBE50
 10799 2543 3E       		.uleb128 0x3e
 10800 2544 E9060000 		.4byte	.LASF256
 10801 2548 01       		.byte	0x1
 10802 2549 BF05     		.2byte	0x5bf
 10803 254b A8160000 		.4byte	0x16a8
 10804 254f 02       		.byte	0x2
 10805 2550 91       		.byte	0x91
 10806 2551 64       		.sleb128 -28
 10807 2552 3E       		.uleb128 0x3e
 10808 2553 B1110000 		.4byte	.LASF258
 10809 2557 01       		.byte	0x1
 10810 2558 C005     		.2byte	0x5c0
 10811 255a 8A000000 		.4byte	0x8a
 10812 255e 02       		.byte	0x2
 10813 255f 91       		.byte	0x91
 10814 2560 74       		.sleb128 -12
 10815 2561 3E       		.uleb128 0x3e
 10816 2562 1D100000 		.4byte	.LASF363
 10817 2566 01       		.byte	0x1
 10818 2567 C105     		.2byte	0x5c1
 10819 2569 42000000 		.4byte	0x42
 10820 256d 02       		.byte	0x2
 10821 256e 91       		.byte	0x91
 10822 256f 73       		.sleb128 -13
 10823 2570 3E       		.uleb128 0x3e
 10824 2571 35180000 		.4byte	.LASF364
 10825 2575 01       		.byte	0x1
 10826 2576 C205     		.2byte	0x5c2
 10827 2578 42000000 		.4byte	0x42
 10828 257c 02       		.byte	0x2
 10829 257d 91       		.byte	0x91
 10830 257e 63       		.sleb128 -29
 10831 257f 3E       		.uleb128 0x3e
 10832 2580 8F010000 		.4byte	.LASF214
 10833 2584 01       		.byte	0x1
 10834 2585 C305     		.2byte	0x5c3
 10835 2587 70130000 		.4byte	0x1370
 10836 258b 03       		.byte	0x3
 10837 258c 91       		.byte	0x91
 10838 258d B87F     		.sleb128 -72
 10839 258f 3E       		.uleb128 0x3e
 10840 2590 AC020000 		.4byte	.LASF365
 10841 2594 01       		.byte	0x1
 10842 2595 C905     		.2byte	0x5c9
 10843 2597 90090000 		.4byte	0x990
 10844 259b 02       		.byte	0x2
 10845 259c 91       		.byte	0x91
 10846 259d 5C       		.sleb128 -36
 10847 259e 3E       		.uleb128 0x3e
 10848 259f 800D0000 		.4byte	.LASF366
 10849 25a3 01       		.byte	0x1
 10850 25a4 2E06     		.2byte	0x62e
ARM GAS  /tmp/ccwDRvq0.s 			page 227


 10851 25a6 42000000 		.4byte	0x42
 10852 25aa 02       		.byte	0x2
 10853 25ab 91       		.byte	0x91
 10854 25ac 71       		.sleb128 -15
 10855 25ad 42       		.uleb128 0x42
 10856 25ae 6900     		.ascii	"i\000"
 10857 25b0 01       		.byte	0x1
 10858 25b1 2F06     		.2byte	0x62f
 10859 25b3 42000000 		.4byte	0x42
 10860 25b7 02       		.byte	0x2
 10861 25b8 91       		.byte	0x91
 10862 25b9 70       		.sleb128 -16
 10863 25ba 3E       		.uleb128 0x3e
 10864 25bb D5160000 		.4byte	.LASF367
 10865 25bf 01       		.byte	0x1
 10866 25c0 3406     		.2byte	0x634
 10867 25c2 42000000 		.4byte	0x42
 10868 25c6 02       		.byte	0x2
 10869 25c7 91       		.byte	0x91
 10870 25c8 6F       		.sleb128 -17
 10871 25c9 43       		.uleb128 0x43
 10872 25ca B4000000 		.4byte	.LBB52
 10873 25ce 18010000 		.4byte	.LBE52
 10874 25d2 E6250000 		.4byte	0x25e6
 10875 25d6 3E       		.uleb128 0x3e
 10876 25d7 31040000 		.4byte	.LASF368
 10877 25db 01       		.byte	0x1
 10878 25dc CE05     		.2byte	0x5ce
 10879 25de 42000000 		.4byte	0x42
 10880 25e2 02       		.byte	0x2
 10881 25e3 91       		.byte	0x91
 10882 25e4 72       		.sleb128 -14
 10883 25e5 00       		.byte	0x0
 10884 25e6 43       		.uleb128 0x43
 10885 25e7 44010000 		.4byte	.LBB54
 10886 25eb DC010000 		.4byte	.LBE54
 10887 25ef 03260000 		.4byte	0x2603
 10888 25f3 42       		.uleb128 0x42
 10889 25f4 6E756D00 		.ascii	"num\000"
 10890 25f8 01       		.byte	0x1
 10891 25f9 E205     		.2byte	0x5e2
 10892 25fb 42000000 		.4byte	0x42
 10893 25ff 02       		.byte	0x2
 10894 2600 91       		.byte	0x91
 10895 2601 5B       		.sleb128 -37
 10896 2602 00       		.byte	0x0
 10897 2603 38       		.uleb128 0x38
 10898 2604 54030000 		.4byte	.LBB56
 10899 2608 18050000 		.4byte	.LBE56
 10900 260c 3E       		.uleb128 0x3e
 10901 260d 33060000 		.4byte	.LASF369
 10902 2611 01       		.byte	0x1
 10903 2612 4106     		.2byte	0x641
 10904 2614 C1090000 		.4byte	0x9c1
 10905 2618 02       		.byte	0x2
 10906 2619 91       		.byte	0x91
 10907 261a 68       		.sleb128 -24
ARM GAS  /tmp/ccwDRvq0.s 			page 228


 10908 261b 00       		.byte	0x0
 10909 261c 00       		.byte	0x0
 10910 261d 00       		.byte	0x0
 10911 261e 44       		.uleb128 0x44
 10912 261f 01       		.byte	0x1
 10913 2620 17040000 		.4byte	.LASF370
 10914 2624 01       		.byte	0x1
 10915 2625 8306     		.2byte	0x683
 10916 2627 250A0000 		.4byte	.LASF371
 10917 262b 42000000 		.4byte	0x42
 10918 262f 00000000 		.4byte	.LFB134
 10919 2633 50030000 		.4byte	.LFE134
 10920 2637 20040000 		.4byte	.LLST25
 10921 263b 0D270000 		.4byte	0x270d
 10922 263f 41       		.uleb128 0x41
 10923 2640 E3100000 		.4byte	.LASF304
 10924 2644 01       		.byte	0x1
 10925 2645 8306     		.2byte	0x683
 10926 2647 1D1E0000 		.4byte	0x1e1d
 10927 264b 02       		.byte	0x2
 10928 264c 91       		.byte	0x91
 10929 264d 54       		.sleb128 -44
 10930 264e 41       		.uleb128 0x41
 10931 264f AC050000 		.4byte	.LASF372
 10932 2653 01       		.byte	0x1
 10933 2654 8306     		.2byte	0x683
 10934 2656 C1090000 		.4byte	0x9c1
 10935 265a 02       		.byte	0x2
 10936 265b 91       		.byte	0x91
 10937 265c 50       		.sleb128 -48
 10938 265d 41       		.uleb128 0x41
 10939 265e BE120000 		.4byte	.LASF278
 10940 2662 01       		.byte	0x1
 10941 2663 8306     		.2byte	0x683
 10942 2665 691B0000 		.4byte	0x1b69
 10943 2669 02       		.byte	0x2
 10944 266a 91       		.byte	0x91
 10945 266b 4C       		.sleb128 -52
 10946 266c 38       		.uleb128 0x38
 10947 266d 14000000 		.4byte	.LBB57
 10948 2671 3C030000 		.4byte	.LBE57
 10949 2675 3E       		.uleb128 0x3e
 10950 2676 960F0000 		.4byte	.LASF373
 10951 267a 01       		.byte	0x1
 10952 267b 9A06     		.2byte	0x69a
 10953 267d 42000000 		.4byte	0x42
 10954 2681 02       		.byte	0x2
 10955 2682 91       		.byte	0x91
 10956 2683 67       		.sleb128 -25
 10957 2684 3E       		.uleb128 0x3e
 10958 2685 BC0B0000 		.4byte	.LASF374
 10959 2689 01       		.byte	0x1
 10960 268a 9B06     		.2byte	0x69b
 10961 268c 42000000 		.4byte	0x42
 10962 2690 02       		.byte	0x2
 10963 2691 91       		.byte	0x91
 10964 2692 77       		.sleb128 -9
ARM GAS  /tmp/ccwDRvq0.s 			page 229


 10965 2693 42       		.uleb128 0x42
 10966 2694 667300   		.ascii	"fs\000"
 10967 2697 01       		.byte	0x1
 10968 2698 9C06     		.2byte	0x69c
 10969 269a 78180000 		.4byte	0x1878
 10970 269e 02       		.byte	0x2
 10971 269f 91       		.byte	0x91
 10972 26a0 60       		.sleb128 -32
 10973 26a1 3E       		.uleb128 0x3e
 10974 26a2 6C080000 		.4byte	.LASF306
 10975 26a6 01       		.byte	0x1
 10976 26a7 9D06     		.2byte	0x69d
 10977 26a9 66000000 		.4byte	0x66
 10978 26ad 02       		.byte	0x2
 10979 26ae 91       		.byte	0x91
 10980 26af 74       		.sleb128 -12
 10981 26b0 3E       		.uleb128 0x3e
 10982 26b1 66170000 		.4byte	.LASF375
 10983 26b5 01       		.byte	0x1
 10984 26b6 9E06     		.2byte	0x69e
 10985 26b8 8A000000 		.4byte	0x8a
 10986 26bc 02       		.byte	0x2
 10987 26bd 91       		.byte	0x91
 10988 26be 70       		.sleb128 -16
 10989 26bf 3E       		.uleb128 0x3e
 10990 26c0 B1110000 		.4byte	.LASF258
 10991 26c4 01       		.byte	0x1
 10992 26c5 9F06     		.2byte	0x69f
 10993 26c7 8A000000 		.4byte	0x8a
 10994 26cb 02       		.byte	0x2
 10995 26cc 91       		.byte	0x91
 10996 26cd 6C       		.sleb128 -20
 10997 26ce 3E       		.uleb128 0x3e
 10998 26cf FA0D0000 		.4byte	.LASF376
 10999 26d3 01       		.byte	0x1
 11000 26d4 A006     		.2byte	0x6a0
 11001 26d6 8A000000 		.4byte	0x8a
 11002 26da 02       		.byte	0x2
 11003 26db 91       		.byte	0x91
 11004 26dc 68       		.sleb128 -24
 11005 26dd 45       		.uleb128 0x45
 11006 26de 48000000 		.4byte	.Ldebug_ranges0+0x48
 11007 26e2 3E       		.uleb128 0x3e
 11008 26e3 F0180000 		.4byte	.LASF377
 11009 26e7 01       		.byte	0x1
 11010 26e8 D506     		.2byte	0x6d5
 11011 26ea 42000000 		.4byte	0x42
 11012 26ee 02       		.byte	0x2
 11013 26ef 91       		.byte	0x91
 11014 26f0 5D       		.sleb128 -35
 11015 26f1 38       		.uleb128 0x38
 11016 26f2 7C010000 		.4byte	.LBB62
 11017 26f6 00020000 		.4byte	.LBE62
 11018 26fa 3E       		.uleb128 0x3e
 11019 26fb 7A140000 		.4byte	.LASF322
 11020 26ff 01       		.byte	0x1
 11021 2700 BA06     		.2byte	0x6ba
ARM GAS  /tmp/ccwDRvq0.s 			page 230


 11022 2702 66000000 		.4byte	0x66
 11023 2706 02       		.byte	0x2
 11024 2707 91       		.byte	0x91
 11025 2708 5E       		.sleb128 -34
 11026 2709 00       		.byte	0x0
 11027 270a 00       		.byte	0x0
 11028 270b 00       		.byte	0x0
 11029 270c 00       		.byte	0x0
 11030 270d 44       		.uleb128 0x44
 11031 270e 01       		.byte	0x1
 11032 270f 84090000 		.4byte	.LASF378
 11033 2713 01       		.byte	0x1
 11034 2714 0607     		.2byte	0x706
 11035 2716 83000000 		.4byte	.LASF379
 11036 271a 42000000 		.4byte	0x42
 11037 271e 00000000 		.4byte	.LFB135
 11038 2722 30010000 		.4byte	.LFE135
 11039 2726 4C040000 		.4byte	.LLST26
 11040 272a 74270000 		.4byte	0x2774
 11041 272e 40       		.uleb128 0x40
 11042 272f 667300   		.ascii	"fs\000"
 11043 2732 01       		.byte	0x1
 11044 2733 0607     		.2byte	0x706
 11045 2735 78180000 		.4byte	0x1878
 11046 2739 02       		.byte	0x2
 11047 273a 91       		.byte	0x91
 11048 273b 64       		.sleb128 -28
 11049 273c 41       		.uleb128 0x41
 11050 273d BE120000 		.4byte	.LASF278
 11051 2741 01       		.byte	0x1
 11052 2742 0607     		.2byte	0x706
 11053 2744 691B0000 		.4byte	0x1b69
 11054 2748 02       		.byte	0x2
 11055 2749 91       		.byte	0x91
 11056 274a 60       		.sleb128 -32
 11057 274b 38       		.uleb128 0x38
 11058 274c 10000000 		.4byte	.LBB65
 11059 2750 20010000 		.4byte	.LBE65
 11060 2754 3E       		.uleb128 0x3e
 11061 2755 66170000 		.4byte	.LASF375
 11062 2759 01       		.byte	0x1
 11063 275a 0D07     		.2byte	0x70d
 11064 275c 8A000000 		.4byte	0x8a
 11065 2760 02       		.byte	0x2
 11066 2761 91       		.byte	0x91
 11067 2762 74       		.sleb128 -12
 11068 2763 3E       		.uleb128 0x3e
 11069 2764 8F010000 		.4byte	.LASF214
 11070 2768 01       		.byte	0x1
 11071 2769 1107     		.2byte	0x711
 11072 276b 74270000 		.4byte	0x2774
 11073 276f 02       		.byte	0x2
 11074 2770 91       		.byte	0x91
 11075 2771 68       		.sleb128 -24
 11076 2772 00       		.byte	0x0
 11077 2773 00       		.byte	0x0
 11078 2774 0D       		.uleb128 0xd
ARM GAS  /tmp/ccwDRvq0.s 			page 231


 11079 2775 4D000000 		.4byte	0x4d
 11080 2779 84270000 		.4byte	0x2784
 11081 277d 0E       		.uleb128 0xe
 11082 277e AE020000 		.4byte	0x2ae
 11083 2782 0B       		.byte	0xb
 11084 2783 00       		.byte	0x0
 11085 2784 44       		.uleb128 0x44
 11086 2785 01       		.byte	0x1
 11087 2786 48010000 		.4byte	.LASF380
 11088 278a 01       		.byte	0x1
 11089 278b 3607     		.2byte	0x736
 11090 278d CC000000 		.4byte	.LASF381
 11091 2791 8A000000 		.4byte	0x8a
 11092 2795 00000000 		.4byte	.LFB136
 11093 2799 44000000 		.4byte	.LFE136
 11094 279d 78040000 		.4byte	.LLST27
 11095 27a1 B4270000 		.4byte	0x27b4
 11096 27a5 40       		.uleb128 0x40
 11097 27a6 667300   		.ascii	"fs\000"
 11098 27a9 01       		.byte	0x1
 11099 27aa 3607     		.2byte	0x736
 11100 27ac 5E1B0000 		.4byte	0x1b5e
 11101 27b0 02       		.byte	0x2
 11102 27b1 91       		.byte	0x91
 11103 27b2 7C       		.sleb128 -4
 11104 27b3 00       		.byte	0x0
 11105 27b4 44       		.uleb128 0x44
 11106 27b5 01       		.byte	0x1
 11107 27b6 63120000 		.4byte	.LASF382
 11108 27ba 01       		.byte	0x1
 11109 27bb 4807     		.2byte	0x748
 11110 27bd E6050000 		.4byte	.LASF383
 11111 27c1 8A000000 		.4byte	0x8a
 11112 27c5 00000000 		.4byte	.LFB137
 11113 27c9 28010000 		.4byte	.LFE137
 11114 27cd 98040000 		.4byte	.LLST28
 11115 27d1 43280000 		.4byte	0x2843
 11116 27d5 40       		.uleb128 0x40
 11117 27d6 667300   		.ascii	"fs\000"
 11118 27d9 01       		.byte	0x1
 11119 27da 4807     		.2byte	0x748
 11120 27dc 5E1B0000 		.4byte	0x1b5e
 11121 27e0 02       		.byte	0x2
 11122 27e1 91       		.byte	0x91
 11123 27e2 44       		.sleb128 -60
 11124 27e3 38       		.uleb128 0x38
 11125 27e4 0C000000 		.4byte	.LBB66
 11126 27e8 14010000 		.4byte	.LBE66
 11127 27ec 42       		.uleb128 0x42
 11128 27ed 66617400 		.ascii	"fat\000"
 11129 27f1 01       		.byte	0x1
 11130 27f2 4D07     		.2byte	0x74d
 11131 27f4 70130000 		.4byte	0x1370
 11132 27f8 02       		.byte	0x2
 11133 27f9 91       		.byte	0x91
 11134 27fa 48       		.sleb128 -56
 11135 27fb 3E       		.uleb128 0x3e
ARM GAS  /tmp/ccwDRvq0.s 			page 232


 11136 27fc C2170000 		.4byte	.LASF384
 11137 2800 01       		.byte	0x1
 11138 2801 4E07     		.2byte	0x74e
 11139 2803 F9180000 		.4byte	0x18f9
 11140 2807 02       		.byte	0x2
 11141 2808 91       		.byte	0x91
 11142 2809 68       		.sleb128 -24
 11143 280a 3E       		.uleb128 0x3e
 11144 280b 96040000 		.4byte	.LASF268
 11145 280f 01       		.byte	0x1
 11146 2810 5207     		.2byte	0x752
 11147 2812 8A000000 		.4byte	0x8a
 11148 2816 02       		.byte	0x2
 11149 2817 91       		.byte	0x91
 11150 2818 74       		.sleb128 -12
 11151 2819 3E       		.uleb128 0x3e
 11152 281a 2C140000 		.4byte	.LASF269
 11153 281e 01       		.byte	0x1
 11154 281f 5307     		.2byte	0x753
 11155 2821 8A000000 		.4byte	0x8a
 11156 2825 02       		.byte	0x2
 11157 2826 91       		.byte	0x91
 11158 2827 70       		.sleb128 -16
 11159 2828 38       		.uleb128 0x38
 11160 2829 4C000000 		.4byte	.LBB67
 11161 282d E8000000 		.4byte	.LBE67
 11162 2831 3E       		.uleb128 0x3e
 11163 2832 5C110000 		.4byte	.LASF259
 11164 2836 01       		.byte	0x1
 11165 2837 5607     		.2byte	0x756
 11166 2839 66000000 		.4byte	0x66
 11167 283d 02       		.byte	0x2
 11168 283e 91       		.byte	0x91
 11169 283f 6E       		.sleb128 -18
 11170 2840 00       		.byte	0x0
 11171 2841 00       		.byte	0x0
 11172 2842 00       		.byte	0x0
 11173 2843 3F       		.uleb128 0x3f
 11174 2844 3A030000 		.4byte	.LASF385
 11175 2848 01       		.byte	0x1
 11176 2849 6F07     		.2byte	0x76f
 11177 284b 42000000 		.4byte	0x42
 11178 284f 00000000 		.4byte	.LFB138
 11179 2853 B8000000 		.4byte	.LFE138
 11180 2857 C5040000 		.4byte	.LLST29
 11181 285b C0280000 		.4byte	0x28c0
 11182 285f 41       		.uleb128 0x41
 11183 2860 8F010000 		.4byte	.LASF214
 11184 2864 01       		.byte	0x1
 11185 2865 6F07     		.2byte	0x76f
 11186 2867 8B130000 		.4byte	0x138b
 11187 286b 02       		.byte	0x2
 11188 286c 91       		.byte	0x91
 11189 286d 6C       		.sleb128 -20
 11190 286e 41       		.uleb128 0x41
 11191 286f B1110000 		.4byte	.LASF258
 11192 2873 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 233


 11193 2874 6F07     		.2byte	0x76f
 11194 2876 8A000000 		.4byte	0x8a
 11195 287a 02       		.byte	0x2
 11196 287b 91       		.byte	0x91
 11197 287c 68       		.sleb128 -24
 11198 287d 40       		.uleb128 0x40
 11199 287e 7000     		.ascii	"p\000"
 11200 2880 01       		.byte	0x1
 11201 2881 6F07     		.2byte	0x76f
 11202 2883 41030000 		.4byte	0x341
 11203 2887 02       		.byte	0x2
 11204 2888 91       		.byte	0x91
 11205 2889 64       		.sleb128 -28
 11206 288a 38       		.uleb128 0x38
 11207 288b 10000000 		.4byte	.LBB68
 11208 288f AC000000 		.4byte	.LBE68
 11209 2893 3E       		.uleb128 0x3e
 11210 2894 C2170000 		.4byte	.LASF384
 11211 2898 01       		.byte	0x1
 11212 2899 7107     		.2byte	0x771
 11213 289b C0280000 		.4byte	0x28c0
 11214 289f 02       		.byte	0x2
 11215 28a0 91       		.byte	0x91
 11216 28a1 78       		.sleb128 -8
 11217 28a2 3E       		.uleb128 0x3e
 11218 28a3 36170000 		.4byte	.LASF288
 11219 28a7 01       		.byte	0x1
 11220 28a8 7207     		.2byte	0x772
 11221 28aa 42000000 		.4byte	0x42
 11222 28ae 02       		.byte	0x2
 11223 28af 91       		.byte	0x91
 11224 28b0 77       		.sleb128 -9
 11225 28b1 42       		.uleb128 0x42
 11226 28b2 6900     		.ascii	"i\000"
 11227 28b4 01       		.byte	0x1
 11228 28b5 7307     		.2byte	0x773
 11229 28b7 42000000 		.4byte	0x42
 11230 28bb 02       		.byte	0x2
 11231 28bc 91       		.byte	0x91
 11232 28bd 7F       		.sleb128 -1
 11233 28be 00       		.byte	0x0
 11234 28bf 00       		.byte	0x0
 11235 28c0 12       		.uleb128 0x12
 11236 28c1 04       		.byte	0x4
 11237 28c2 F9180000 		.4byte	0x18f9
 11238 28c6 44       		.uleb128 0x44
 11239 28c7 01       		.byte	0x1
 11240 28c8 1F0D0000 		.4byte	.LASF386
 11241 28cc 01       		.byte	0x1
 11242 28cd 7F07     		.2byte	0x77f
 11243 28cf 4B180000 		.4byte	.LASF387
 11244 28d3 42000000 		.4byte	0x42
 11245 28d7 00000000 		.4byte	.LFB139
 11246 28db 84000000 		.4byte	.LFE139
 11247 28df E5040000 		.4byte	.LLST30
 11248 28e3 22290000 		.4byte	0x2922
 11249 28e7 40       		.uleb128 0x40
ARM GAS  /tmp/ccwDRvq0.s 			page 234


 11250 28e8 667300   		.ascii	"fs\000"
 11251 28eb 01       		.byte	0x1
 11252 28ec 7F07     		.2byte	0x77f
 11253 28ee 78180000 		.4byte	0x1878
 11254 28f2 02       		.byte	0x2
 11255 28f3 91       		.byte	0x91
 11256 28f4 74       		.sleb128 -12
 11257 28f5 40       		.uleb128 0x40
 11258 28f6 646400   		.ascii	"dd\000"
 11259 28f9 01       		.byte	0x1
 11260 28fa 7F07     		.2byte	0x77f
 11261 28fc 1D1E0000 		.4byte	0x1e1d
 11262 2900 02       		.byte	0x2
 11263 2901 91       		.byte	0x91
 11264 2902 70       		.sleb128 -16
 11265 2903 41       		.uleb128 0x41
 11266 2904 CC060000 		.4byte	.LASF388
 11267 2908 01       		.byte	0x1
 11268 2909 7F07     		.2byte	0x77f
 11269 290b C1090000 		.4byte	0x9c1
 11270 290f 02       		.byte	0x2
 11271 2910 91       		.byte	0x91
 11272 2911 6C       		.sleb128 -20
 11273 2912 41       		.uleb128 0x41
 11274 2913 BE120000 		.4byte	.LASF278
 11275 2917 01       		.byte	0x1
 11276 2918 7F07     		.2byte	0x77f
 11277 291a 691B0000 		.4byte	0x1b69
 11278 291e 02       		.byte	0x2
 11279 291f 91       		.byte	0x91
 11280 2920 68       		.sleb128 -24
 11281 2921 00       		.byte	0x0
 11282 2922 44       		.uleb128 0x44
 11283 2923 01       		.byte	0x1
 11284 2924 FB090000 		.4byte	.LASF389
 11285 2928 01       		.byte	0x1
 11286 2929 8D07     		.2byte	0x78d
 11287 292b 78080000 		.4byte	.LASF390
 11288 292f 85200000 		.4byte	0x2085
 11289 2933 00000000 		.4byte	.LFB140
 11290 2937 70000000 		.4byte	.LFE140
 11291 293b 11050000 		.4byte	.LLST31
 11292 293f 89290000 		.4byte	0x2989
 11293 2943 40       		.uleb128 0x40
 11294 2944 667300   		.ascii	"fs\000"
 11295 2947 01       		.byte	0x1
 11296 2948 8D07     		.2byte	0x78d
 11297 294a 78180000 		.4byte	0x1878
 11298 294e 02       		.byte	0x2
 11299 294f 91       		.byte	0x91
 11300 2950 44       		.sleb128 -60
 11301 2951 40       		.uleb128 0x40
 11302 2952 646400   		.ascii	"dd\000"
 11303 2955 01       		.byte	0x1
 11304 2956 8D07     		.2byte	0x78d
 11305 2958 1D1E0000 		.4byte	0x1e1d
 11306 295c 02       		.byte	0x2
ARM GAS  /tmp/ccwDRvq0.s 			page 235


 11307 295d 91       		.byte	0x91
 11308 295e 40       		.sleb128 -64
 11309 295f 41       		.uleb128 0x41
 11310 2960 CC060000 		.4byte	.LASF388
 11311 2964 01       		.byte	0x1
 11312 2965 8D07     		.2byte	0x78d
 11313 2967 C1090000 		.4byte	0x9c1
 11314 296b 03       		.byte	0x3
 11315 296c 91       		.byte	0x91
 11316 296d BC7F     		.sleb128 -68
 11317 296f 38       		.uleb128 0x38
 11318 2970 14000000 		.4byte	.LBB69
 11319 2974 60000000 		.4byte	.LBE69
 11320 2978 3E       		.uleb128 0x3e
 11321 2979 700D0000 		.4byte	.LASF391
 11322 297d 01       		.byte	0x1
 11323 297e 8F07     		.2byte	0x78f
 11324 2980 33170000 		.4byte	0x1733
 11325 2984 02       		.byte	0x2
 11326 2985 91       		.byte	0x91
 11327 2986 4C       		.sleb128 -52
 11328 2987 00       		.byte	0x0
 11329 2988 00       		.byte	0x0
 11330 2989 44       		.uleb128 0x44
 11331 298a 01       		.byte	0x1
 11332 298b 06100000 		.4byte	.LASF392
 11333 298f 01       		.byte	0x1
 11334 2990 9607     		.2byte	0x796
 11335 2992 8B100000 		.4byte	.LASF393
 11336 2996 B5020000 		.4byte	0x2b5
 11337 299a 00000000 		.4byte	.LFB141
 11338 299e 1C000000 		.4byte	.LFE141
 11339 29a2 3E050000 		.4byte	.LLST32
 11340 29a6 BA290000 		.4byte	0x29ba
 11341 29aa 41       		.uleb128 0x41
 11342 29ab AC050000 		.4byte	.LASF372
 11343 29af 01       		.byte	0x1
 11344 29b0 9607     		.2byte	0x796
 11345 29b2 85200000 		.4byte	0x2085
 11346 29b6 02       		.byte	0x2
 11347 29b7 91       		.byte	0x91
 11348 29b8 7C       		.sleb128 -4
 11349 29b9 00       		.byte	0x0
 11350 29ba 3E       		.uleb128 0x3e
 11351 29bb 810B0000 		.4byte	.LASF394
 11352 29bf 19       		.byte	0x19
 11353 29c0 8501     		.2byte	0x185
 11354 29c2 6B130000 		.4byte	0x136b
 11355 29c6 05       		.byte	0x5
 11356 29c7 03       		.byte	0x3
 11357 29c8 38000000 		.4byte	_ZL12VIC_USB_Intr
 11358 29cc 3E       		.uleb128 0x3e
 11359 29cd 52120000 		.4byte	.LASF395
 11360 29d1 19       		.byte	0x19
 11361 29d2 8801     		.2byte	0x188
 11362 29d4 6B130000 		.4byte	0x136b
 11363 29d8 05       		.byte	0x5
ARM GAS  /tmp/ccwDRvq0.s 			page 236


 11364 29d9 03       		.byte	0x3
 11365 29da 3C000000 		.4byte	_ZL9CCR_CLKEN
 11366 29de 3E       		.uleb128 0x3e
 11367 29df B8110000 		.4byte	.LASF396
 11368 29e3 19       		.byte	0x19
 11369 29e4 8B01     		.2byte	0x18b
 11370 29e6 6B130000 		.4byte	0x136b
 11371 29ea 05       		.byte	0x5
 11372 29eb 03       		.byte	0x3
 11373 29ec 40000000 		.4byte	_ZL10CCR_CTCRST
 11374 29f0 3E       		.uleb128 0x3e
 11375 29f1 A10E0000 		.4byte	.LASF397
 11376 29f5 19       		.byte	0x19
 11377 29f6 8E01     		.2byte	0x18e
 11378 29f8 6B130000 		.4byte	0x136b
 11379 29fc 05       		.byte	0x5
 11380 29fd 03       		.byte	0x3
 11381 29fe 44000000 		.4byte	_ZL16CCR_CLKSRC_32KHZ
 11382 2a02 3E       		.uleb128 0x3e
 11383 2a03 0E0E0000 		.4byte	.LASF398
 11384 2a07 19       		.byte	0x19
 11385 2a08 9101     		.2byte	0x191
 11386 2a0a 6B130000 		.4byte	0x136b
 11387 2a0e 05       		.byte	0x5
 11388 2a0f 03       		.byte	0x3
 11389 2a10 48000000 		.4byte	_ZL18VIC_Channel_Timer0
 11390 2a14 3E       		.uleb128 0x3e
 11391 2a15 210E0000 		.4byte	.LASF399
 11392 2a19 19       		.byte	0x19
 11393 2a1a 9401     		.2byte	0x194
 11394 2a1c 6B130000 		.4byte	0x136b
 11395 2a20 05       		.byte	0x5
 11396 2a21 03       		.byte	0x3
 11397 2a22 4C000000 		.4byte	_ZL18VIC_Channel_Timer1
 11398 2a26 3E       		.uleb128 0x3e
 11399 2a27 DE0E0000 		.4byte	.LASF400
 11400 2a2b 19       		.byte	0x19
 11401 2a2c 9701     		.2byte	0x197
 11402 2a2e 6B130000 		.4byte	0x136b
 11403 2a32 05       		.byte	0x5
 11404 2a33 03       		.byte	0x3
 11405 2a34 50000000 		.4byte	_ZL17VIC_Channel_UART0
 11406 2a38 3E       		.uleb128 0x3e
 11407 2a39 F00E0000 		.4byte	.LASF401
 11408 2a3d 19       		.byte	0x19
 11409 2a3e 9A01     		.2byte	0x19a
 11410 2a40 6B130000 		.4byte	0x136b
 11411 2a44 05       		.byte	0x5
 11412 2a45 03       		.byte	0x3
 11413 2a46 54000000 		.4byte	_ZL17VIC_Channel_UART1
 11414 2a4a 3E       		.uleb128 0x3e
 11415 2a4b 42120000 		.4byte	.LASF402
 11416 2a4f 19       		.byte	0x19
 11417 2a50 9D01     		.2byte	0x19d
 11418 2a52 6B130000 		.4byte	0x136b
 11419 2a56 05       		.byte	0x5
 11420 2a57 03       		.byte	0x3
ARM GAS  /tmp/ccwDRvq0.s 			page 237


 11421 2a58 58000000 		.4byte	_ZL15VIC_Channel_USB
 11422 2a5c 3E       		.uleb128 0x3e
 11423 2a5d 9E010000 		.4byte	.LASF403
 11424 2a61 19       		.byte	0x19
 11425 2a62 9F01     		.2byte	0x19f
 11426 2a64 6B130000 		.4byte	0x136b
 11427 2a68 05       		.byte	0x5
 11428 2a69 03       		.byte	0x3
 11429 2a6a 5C000000 		.4byte	_ZL18VICVectCntl_ENABLE
 11430 2a6e 3E       		.uleb128 0x3e
 11431 2a6f AC0D0000 		.4byte	.LASF404
 11432 2a73 19       		.byte	0x19
 11433 2a74 A201     		.2byte	0x1a2
 11434 2a76 6B130000 		.4byte	0x136b
 11435 2a7a 05       		.byte	0x5
 11436 2a7b 03       		.byte	0x3
 11437 2a7c 60000000 		.4byte	_ZL10UIER_ERBFI
 11438 2a80 3E       		.uleb128 0x3e
 11439 2a81 67060000 		.4byte	.LASF405
 11440 2a85 19       		.byte	0x19
 11441 2a86 A401     		.2byte	0x1a4
 11442 2a88 6B130000 		.4byte	0x136b
 11443 2a8c 05       		.byte	0x5
 11444 2a8d 03       		.byte	0x3
 11445 2a8e 64000000 		.4byte	_ZL12UIIR_ID_MASK
 11446 2a92 3E       		.uleb128 0x3e
 11447 2a93 A2170000 		.4byte	.LASF406
 11448 2a97 19       		.byte	0x19
 11449 2a98 A601     		.2byte	0x1a6
 11450 2a9a 6B130000 		.4byte	0x136b
 11451 2a9e 05       		.byte	0x5
 11452 2a9f 03       		.byte	0x3
 11453 2aa0 68000000 		.4byte	_ZL12UIIR_RDA_INT
 11454 2aa4 3E       		.uleb128 0x3e
 11455 2aa5 20070000 		.4byte	.LASF407
 11456 2aa9 19       		.byte	0x19
 11457 2aaa A801     		.2byte	0x1a8
 11458 2aac 6B130000 		.4byte	0x136b
 11459 2ab0 05       		.byte	0x5
 11460 2ab1 03       		.byte	0x3
 11461 2ab2 6C000000 		.4byte	_ZL8ULSR_RDR
 11462 2ab6 3E       		.uleb128 0x3e
 11463 2ab7 7F070000 		.4byte	.LASF408
 11464 2abb 19       		.byte	0x19
 11465 2abc AB01     		.2byte	0x1ab
 11466 2abe 6B130000 		.4byte	0x136b
 11467 2ac2 05       		.byte	0x5
 11468 2ac3 03       		.byte	0x3
 11469 2ac4 70000000 		.4byte	_ZL5SSEL1
 11470 2ac8 3E       		.uleb128 0x3e
 11471 2ac9 A2020000 		.4byte	.LASF409
 11472 2acd 19       		.byte	0x19
 11473 2ace AE01     		.2byte	0x1ae
 11474 2ad0 6B130000 		.4byte	0x136b
 11475 2ad4 05       		.byte	0x5
 11476 2ad5 03       		.byte	0x3
 11477 2ad6 74000000 		.4byte	_ZL9SSPSR_TFE
ARM GAS  /tmp/ccwDRvq0.s 			page 238


 11478 2ada 3E       		.uleb128 0x3e
 11479 2adb 0B110000 		.4byte	.LASF410
 11480 2adf 19       		.byte	0x19
 11481 2ae0 B101     		.2byte	0x1b1
 11482 2ae2 6B130000 		.4byte	0x136b
 11483 2ae6 05       		.byte	0x5
 11484 2ae7 03       		.byte	0x3
 11485 2ae8 78000000 		.4byte	_ZL9SSPSR_TNF
 11486 2aec 3E       		.uleb128 0x3e
 11487 2aed E9140000 		.4byte	.LASF411
 11488 2af1 19       		.byte	0x19
 11489 2af2 B401     		.2byte	0x1b4
 11490 2af4 6B130000 		.4byte	0x136b
 11491 2af8 05       		.byte	0x5
 11492 2af9 03       		.byte	0x3
 11493 2afa 7C000000 		.4byte	_ZL9SSPSR_RNE
 11494 2afe 3E       		.uleb128 0x3e
 11495 2aff F3140000 		.4byte	.LASF412
 11496 2b03 19       		.byte	0x19
 11497 2b04 B701     		.2byte	0x1b7
 11498 2b06 6B130000 		.4byte	0x136b
 11499 2b0a 05       		.byte	0x5
 11500 2b0b 03       		.byte	0x3
 11501 2b0c 80000000 		.4byte	_ZL9SSPSR_BSY
 11502 2b10 3E       		.uleb128 0x3e
 11503 2b11 BC0C0000 		.4byte	.LASF413
 11504 2b15 19       		.byte	0x19
 11505 2b16 BA01     		.2byte	0x1ba
 11506 2b18 6B130000 		.4byte	0x136b
 11507 2b1c 05       		.byte	0x5
 11508 2b1d 03       		.byte	0x3
 11509 2b1e 84000000 		.4byte	_ZL11SSPCR0_CPOL
 11510 2b22 3E       		.uleb128 0x3e
 11511 2b23 2E070000 		.4byte	.LASF414
 11512 2b27 19       		.byte	0x19
 11513 2b28 BD01     		.2byte	0x1bd
 11514 2b2a 6B130000 		.4byte	0x136b
 11515 2b2e 05       		.byte	0x5
 11516 2b2f 03       		.byte	0x3
 11517 2b30 88000000 		.4byte	_ZL11SSPCR0_CPHA
 11518 2b34 3E       		.uleb128 0x3e
 11519 2b35 C2140000 		.4byte	.LASF415
 11520 2b39 19       		.byte	0x19
 11521 2b3a BF01     		.2byte	0x1bf
 11522 2b3c 6B130000 		.4byte	0x136b
 11523 2b40 05       		.byte	0x5
 11524 2b41 03       		.byte	0x3
 11525 2b42 8C000000 		.4byte	_ZL13I2CxCONCLR_AA
 11526 2b46 3E       		.uleb128 0x3e
 11527 2b47 EF170000 		.4byte	.LASF416
 11528 2b4b 19       		.byte	0x19
 11529 2b4c C001     		.2byte	0x1c0
 11530 2b4e 6B130000 		.4byte	0x136b
 11531 2b52 05       		.byte	0x5
 11532 2b53 03       		.byte	0x3
 11533 2b54 90000000 		.4byte	_ZL13I2CxCONCLR_SI
 11534 2b58 3E       		.uleb128 0x3e
ARM GAS  /tmp/ccwDRvq0.s 			page 239


 11535 2b59 E0080000 		.4byte	.LASF417
 11536 2b5d 19       		.byte	0x19
 11537 2b5e C101     		.2byte	0x1c1
 11538 2b60 6B130000 		.4byte	0x136b
 11539 2b64 05       		.byte	0x5
 11540 2b65 03       		.byte	0x3
 11541 2b66 94000000 		.4byte	_ZL15I2CxCONCLR_STAC
 11542 2b6a 3E       		.uleb128 0x3e
 11543 2b6b C40E0000 		.4byte	.LASF418
 11544 2b6f 19       		.byte	0x19
 11545 2b70 C201     		.2byte	0x1c2
 11546 2b72 6B130000 		.4byte	0x136b
 11547 2b76 05       		.byte	0x5
 11548 2b77 03       		.byte	0x3
 11549 2b78 98000000 		.4byte	_ZL16I2CxCONCLR_I2ENC
 11550 2b7c 3E       		.uleb128 0x3e
 11551 2b7d 81010000 		.4byte	.LASF419
 11552 2b81 19       		.byte	0x19
 11553 2b82 C401     		.2byte	0x1c4
 11554 2b84 6B130000 		.4byte	0x136b
 11555 2b88 05       		.byte	0x5
 11556 2b89 03       		.byte	0x3
 11557 2b8a 9C000000 		.4byte	_ZL13I2CxCONSET_AA
 11558 2b8e 3E       		.uleb128 0x3e
 11559 2b8f B1050000 		.4byte	.LASF420
 11560 2b93 19       		.byte	0x19
 11561 2b94 C501     		.2byte	0x1c5
 11562 2b96 6B130000 		.4byte	0x136b
 11563 2b9a 05       		.byte	0x5
 11564 2b9b 03       		.byte	0x3
 11565 2b9c A0000000 		.4byte	_ZL13I2CxCONSET_SI
 11566 2ba0 3E       		.uleb128 0x3e
 11567 2ba1 160B0000 		.4byte	.LASF421
 11568 2ba5 19       		.byte	0x19
 11569 2ba6 C601     		.2byte	0x1c6
 11570 2ba8 6B130000 		.4byte	0x136b
 11571 2bac 05       		.byte	0x5
 11572 2bad 03       		.byte	0x3
 11573 2bae A4000000 		.4byte	_ZL14I2CxCONSET_STO
 11574 2bb2 3E       		.uleb128 0x3e
 11575 2bb3 A1090000 		.4byte	.LASF422
 11576 2bb7 19       		.byte	0x19
 11577 2bb8 C701     		.2byte	0x1c7
 11578 2bba 6B130000 		.4byte	0x136b
 11579 2bbe 05       		.byte	0x5
 11580 2bbf 03       		.byte	0x3
 11581 2bc0 A8000000 		.4byte	_ZL14I2CxCONSET_STA
 11582 2bc4 3E       		.uleb128 0x3e
 11583 2bc5 F0080000 		.4byte	.LASF423
 11584 2bc9 19       		.byte	0x19
 11585 2bca C801     		.2byte	0x1c8
 11586 2bcc 6B130000 		.4byte	0x136b
 11587 2bd0 05       		.byte	0x5
 11588 2bd1 03       		.byte	0x3
 11589 2bd2 AC000000 		.4byte	_ZL15I2CxCONSET_I2EN
 11590 2bd6 3E       		.uleb128 0x3e
 11591 2bd7 10130000 		.4byte	.LASF424
ARM GAS  /tmp/ccwDRvq0.s 			page 240


 11592 2bdb 19       		.byte	0x19
 11593 2bdc CB01     		.2byte	0x1cb
 11594 2bde 6B130000 		.4byte	0x136b
 11595 2be2 05       		.byte	0x5
 11596 2be3 03       		.byte	0x3
 11597 2be4 B0000000 		.4byte	_ZL20TxTCR_COUNTER_ENABLE
 11598 2be8 3E       		.uleb128 0x3e
 11599 2be9 CF100000 		.4byte	.LASF425
 11600 2bed 19       		.byte	0x19
 11601 2bee CC01     		.2byte	0x1cc
 11602 2bf0 6B130000 		.4byte	0x136b
 11603 2bf4 05       		.byte	0x5
 11604 2bf5 03       		.byte	0x3
 11605 2bf6 B4000000 		.4byte	_ZL19TxTCR_COUNTER_RESET
 11606 2bfa 3E       		.uleb128 0x3e
 11607 2bfb 70010000 		.4byte	.LASF426
 11608 2bff 19       		.byte	0x19
 11609 2c00 CD01     		.2byte	0x1cd
 11610 2c02 6B130000 		.4byte	0x136b
 11611 2c06 05       		.byte	0x5
 11612 2c07 03       		.byte	0x3
 11613 2c08 B8000000 		.4byte	_ZL16TxMCR_INT_ON_MR0
 11614 2c0c 3E       		.uleb128 0x3e
 11615 2c0d A1040000 		.4byte	.LASF427
 11616 2c11 19       		.byte	0x19
 11617 2c12 CE01     		.2byte	0x1ce
 11618 2c14 6B130000 		.4byte	0x136b
 11619 2c18 05       		.byte	0x5
 11620 2c19 03       		.byte	0x3
 11621 2c1a BC000000 		.4byte	_ZL18TxMCR_RESET_ON_MR0
 11622 2c1e 3E       		.uleb128 0x3e
 11623 2c1f 37100000 		.4byte	.LASF428
 11624 2c23 19       		.byte	0x19
 11625 2c24 D001     		.2byte	0x1d0
 11626 2c26 6B130000 		.4byte	0x136b
 11627 2c2a 05       		.byte	0x5
 11628 2c2b 03       		.byte	0x3
 11629 2c2c C0000000 		.4byte	_ZL13TxIR_MR0_FLAG
 11630 2c30 3E       		.uleb128 0x3e
 11631 2c31 09040000 		.4byte	.LASF429
 11632 2c35 19       		.byte	0x19
 11633 2c36 D101     		.2byte	0x1d1
 11634 2c38 6B130000 		.4byte	0x136b
 11635 2c3c 05       		.byte	0x5
 11636 2c3d 03       		.byte	0x3
 11637 2c3e C4000000 		.4byte	_ZL13TxIR_MR1_FLAG
 11638 2c42 3E       		.uleb128 0x3e
 11639 2c43 27120000 		.4byte	.LASF430
 11640 2c47 19       		.byte	0x19
 11641 2c48 D201     		.2byte	0x1d2
 11642 2c4a 6B130000 		.4byte	0x136b
 11643 2c4e 05       		.byte	0x5
 11644 2c4f 03       		.byte	0x3
 11645 2c50 C8000000 		.4byte	_ZL13TxIR_MR2_FLAG
 11646 2c54 3E       		.uleb128 0x3e
 11647 2c55 D0050000 		.4byte	.LASF431
 11648 2c59 19       		.byte	0x19
ARM GAS  /tmp/ccwDRvq0.s 			page 241


 11649 2c5a D301     		.2byte	0x1d3
 11650 2c5c 6B130000 		.4byte	0x136b
 11651 2c60 05       		.byte	0x5
 11652 2c61 03       		.byte	0x3
 11653 2c62 CC000000 		.4byte	_ZL13TxIR_MR3_FLAG
 11654 2c66 3E       		.uleb128 0x3e
 11655 2c67 25060000 		.4byte	.LASF432
 11656 2c6b 19       		.byte	0x19
 11657 2c6c D501     		.2byte	0x1d5
 11658 2c6e 6B130000 		.4byte	0x136b
 11659 2c72 05       		.byte	0x5
 11660 2c73 03       		.byte	0x3
 11661 2c74 D0000000 		.4byte	_ZL13TxIR_CR0_FLAG
 11662 2c78 3E       		.uleb128 0x3e
 11663 2c79 5A100000 		.4byte	.LASF433
 11664 2c7d 19       		.byte	0x19
 11665 2c7e D601     		.2byte	0x1d6
 11666 2c80 6B130000 		.4byte	0x136b
 11667 2c84 05       		.byte	0x5
 11668 2c85 03       		.byte	0x3
 11669 2c86 D4000000 		.4byte	_ZL13TxIR_CR1_FLAG
 11670 2c8a 3E       		.uleb128 0x3e
 11671 2c8b F1030000 		.4byte	.LASF434
 11672 2c8f 19       		.byte	0x19
 11673 2c90 D701     		.2byte	0x1d7
 11674 2c92 6B130000 		.4byte	0x136b
 11675 2c96 05       		.byte	0x5
 11676 2c97 03       		.byte	0x3
 11677 2c98 D8000000 		.4byte	_ZL13TxIR_CR2_FLAG
 11678 2c9c 3E       		.uleb128 0x3e
 11679 2c9d 69110000 		.4byte	.LASF435
 11680 2ca1 19       		.byte	0x19
 11681 2ca2 D801     		.2byte	0x1d8
 11682 2ca4 6B130000 		.4byte	0x136b
 11683 2ca8 05       		.byte	0x5
 11684 2ca9 03       		.byte	0x3
 11685 2caa DC000000 		.4byte	_ZL13TxIR_CR3_FLAG
 11686 2cae 3E       		.uleb128 0x3e
 11687 2caf 13080000 		.4byte	.LASF436
 11688 2cb3 19       		.byte	0x19
 11689 2cb4 DA01     		.2byte	0x1da
 11690 2cb6 6B130000 		.4byte	0x136b
 11691 2cba 05       		.byte	0x5
 11692 2cbb 03       		.byte	0x3
 11693 2cbc E0000000 		.4byte	_ZL12TxCCR_CAP0RE
 11694 2cc0 3E       		.uleb128 0x3e
 11695 2cc1 00120000 		.4byte	.LASF437
 11696 2cc5 19       		.byte	0x19
 11697 2cc6 DB01     		.2byte	0x1db
 11698 2cc8 6B130000 		.4byte	0x136b
 11699 2ccc 05       		.byte	0x5
 11700 2ccd 03       		.byte	0x3
 11701 2cce E4000000 		.4byte	_ZL12TxCCR_CAP0FE
 11702 2cd2 3E       		.uleb128 0x3e
 11703 2cd3 E60F0000 		.4byte	.LASF438
 11704 2cd7 19       		.byte	0x19
 11705 2cd8 DC01     		.2byte	0x1dc
ARM GAS  /tmp/ccwDRvq0.s 			page 242


 11706 2cda 6B130000 		.4byte	0x136b
 11707 2cde 05       		.byte	0x5
 11708 2cdf 03       		.byte	0x3
 11709 2ce0 E8000000 		.4byte	_ZL11TxCCR_CAP0I
 11710 2ce4 3E       		.uleb128 0x3e
 11711 2ce5 35120000 		.4byte	.LASF439
 11712 2ce9 19       		.byte	0x19
 11713 2cea DE01     		.2byte	0x1de
 11714 2cec 6B130000 		.4byte	0x136b
 11715 2cf0 05       		.byte	0x5
 11716 2cf1 03       		.byte	0x3
 11717 2cf2 EC000000 		.4byte	_ZL12TxCCR_CAP1RE
 11718 2cf6 3E       		.uleb128 0x3e
 11719 2cf7 95170000 		.4byte	.LASF440
 11720 2cfb 19       		.byte	0x19
 11721 2cfc DF01     		.2byte	0x1df
 11722 2cfe 6B130000 		.4byte	0x136b
 11723 2d02 05       		.byte	0x5
 11724 2d03 03       		.byte	0x3
 11725 2d04 F0000000 		.4byte	_ZL12TxCCR_CAP1FE
 11726 2d08 3E       		.uleb128 0x3e
 11727 2d09 F5100000 		.4byte	.LASF441
 11728 2d0d 19       		.byte	0x19
 11729 2d0e E001     		.2byte	0x1e0
 11730 2d10 6B130000 		.4byte	0x136b
 11731 2d14 05       		.byte	0x5
 11732 2d15 03       		.byte	0x3
 11733 2d16 F4000000 		.4byte	_ZL11TxCCR_CAP1I
 11734 2d1a 3E       		.uleb128 0x3e
 11735 2d1b 01030000 		.4byte	.LASF442
 11736 2d1f 19       		.byte	0x19
 11737 2d20 E201     		.2byte	0x1e2
 11738 2d22 6B130000 		.4byte	0x136b
 11739 2d26 05       		.byte	0x5
 11740 2d27 03       		.byte	0x3
 11741 2d28 F8000000 		.4byte	_ZL12TxCCR_CAP2RE
 11742 2d2c 3E       		.uleb128 0x3e
 11743 2d2d 32080000 		.4byte	.LASF443
 11744 2d31 19       		.byte	0x19
 11745 2d32 E301     		.2byte	0x1e3
 11746 2d34 6B130000 		.4byte	0x136b
 11747 2d38 05       		.byte	0x5
 11748 2d39 03       		.byte	0x3
 11749 2d3a FC000000 		.4byte	_ZL12TxCCR_CAP2FE
 11750 2d3e 3E       		.uleb128 0x3e
 11751 2d3f E4120000 		.4byte	.LASF444
 11752 2d43 19       		.byte	0x19
 11753 2d44 E401     		.2byte	0x1e4
 11754 2d46 6B130000 		.4byte	0x136b
 11755 2d4a 05       		.byte	0x5
 11756 2d4b 03       		.byte	0x3
 11757 2d4c 00010000 		.4byte	_ZL11TxCCR_CAP2I
 11758 2d50 3E       		.uleb128 0x3e
 11759 2d51 B60F0000 		.4byte	.LASF445
 11760 2d55 19       		.byte	0x19
 11761 2d56 E601     		.2byte	0x1e6
 11762 2d58 6B130000 		.4byte	0x136b
ARM GAS  /tmp/ccwDRvq0.s 			page 243


 11763 2d5c 05       		.byte	0x5
 11764 2d5d 03       		.byte	0x3
 11765 2d5e 04010000 		.4byte	_ZL12TxCCR_CAP3RE
 11766 2d62 3E       		.uleb128 0x3e
 11767 2d63 84120000 		.4byte	.LASF446
 11768 2d67 19       		.byte	0x19
 11769 2d68 E701     		.2byte	0x1e7
 11770 2d6a 6B130000 		.4byte	0x136b
 11771 2d6e 05       		.byte	0x5
 11772 2d6f 03       		.byte	0x3
 11773 2d70 08010000 		.4byte	_ZL12TxCCR_CAP3FE
 11774 2d74 3E       		.uleb128 0x3e
 11775 2d75 87140000 		.4byte	.LASF447
 11776 2d79 19       		.byte	0x19
 11777 2d7a E801     		.2byte	0x1e8
 11778 2d7c 6B130000 		.4byte	0x136b
 11779 2d80 05       		.byte	0x5
 11780 2d81 03       		.byte	0x3
 11781 2d82 0C010000 		.4byte	_ZL11TxCCR_CAP3I
 11782 2d86 3E       		.uleb128 0x3e
 11783 2d87 45100000 		.4byte	.LASF448
 11784 2d8b 19       		.byte	0x19
 11785 2d8c EA01     		.2byte	0x1ea
 11786 2d8e 6B130000 		.4byte	0x136b
 11787 2d92 05       		.byte	0x5
 11788 2d93 03       		.byte	0x3
 11789 2d94 10010000 		.4byte	_ZL9ADxCR_PDN
 11790 2d98 3E       		.uleb128 0x3e
 11791 2d99 5E160000 		.4byte	.LASF449
 11792 2d9d 19       		.byte	0x19
 11793 2d9e EC01     		.2byte	0x1ec
 11794 2da0 6B130000 		.4byte	0x136b
 11795 2da4 05       		.byte	0x5
 11796 2da5 03       		.byte	0x3
 11797 2da6 14010000 		.4byte	_ZL15ADxCR_START_NOW
 11798 2daa 3E       		.uleb128 0x3e
 11799 2dab 77110000 		.4byte	.LASF450
 11800 2daf 19       		.byte	0x19
 11801 2db0 EE01     		.2byte	0x1ee
 11802 2db2 6B130000 		.4byte	0x136b
 11803 2db6 05       		.byte	0x5
 11804 2db7 03       		.byte	0x3
 11805 2db8 18010000 		.4byte	_ZL11ADxGDR_DONE
 11806 2dbc 3E       		.uleb128 0x3e
 11807 2dbd C3110000 		.4byte	.LASF451
 11808 2dc1 19       		.byte	0x19
 11809 2dc2 F101     		.2byte	0x1f1
 11810 2dc4 6B130000 		.4byte	0x136b
 11811 2dc8 05       		.byte	0x5
 11812 2dc9 03       		.byte	0x3
 11813 2dca 1C010000 		.4byte	_ZL7PWMMR0R
 11814 2dce 3E       		.uleb128 0x3e
 11815 2dcf D0010000 		.4byte	.LASF452
 11816 2dd3 19       		.byte	0x19
 11817 2dd4 F401     		.2byte	0x1f4
 11818 2dd6 6B130000 		.4byte	0x136b
 11819 2dda 05       		.byte	0x5
ARM GAS  /tmp/ccwDRvq0.s 			page 244


 11820 2ddb 03       		.byte	0x3
 11821 2ddc 20010000 		.4byte	_ZL7LER0_EN
 11822 2de0 3E       		.uleb128 0x3e
 11823 2de1 68100000 		.4byte	.LASF453
 11824 2de5 19       		.byte	0x19
 11825 2de6 F701     		.2byte	0x1f7
 11826 2de8 6B130000 		.4byte	0x136b
 11827 2dec 05       		.byte	0x5
 11828 2ded 03       		.byte	0x3
 11829 2dee 24010000 		.4byte	_ZL7LER1_EN
 11830 2df2 3E       		.uleb128 0x3e
 11831 2df3 E1030000 		.4byte	.LASF454
 11832 2df7 19       		.byte	0x19
 11833 2df8 FA01     		.2byte	0x1fa
 11834 2dfa 6B130000 		.4byte	0x136b
 11835 2dfe 05       		.byte	0x5
 11836 2dff 03       		.byte	0x3
 11837 2e00 28010000 		.4byte	_ZL7LER2_EN
 11838 2e04 3E       		.uleb128 0x3e
 11839 2e05 1D140000 		.4byte	.LASF455
 11840 2e09 19       		.byte	0x19
 11841 2e0a FD01     		.2byte	0x1fd
 11842 2e0c 6B130000 		.4byte	0x136b
 11843 2e10 05       		.byte	0x5
 11844 2e11 03       		.byte	0x3
 11845 2e12 2C010000 		.4byte	_ZL7LER3_EN
 11846 2e16 3E       		.uleb128 0x3e
 11847 2e17 1F120000 		.4byte	.LASF456
 11848 2e1b 19       		.byte	0x19
 11849 2e1c 0002     		.2byte	0x200
 11850 2e1e 6B130000 		.4byte	0x136b
 11851 2e22 05       		.byte	0x5
 11852 2e23 03       		.byte	0x3
 11853 2e24 30010000 		.4byte	_ZL7LER4_EN
 11854 2e28 3E       		.uleb128 0x3e
 11855 2e29 CC170000 		.4byte	.LASF457
 11856 2e2d 19       		.byte	0x19
 11857 2e2e 0302     		.2byte	0x203
 11858 2e30 6B130000 		.4byte	0x136b
 11859 2e34 05       		.byte	0x5
 11860 2e35 03       		.byte	0x3
 11861 2e36 34010000 		.4byte	_ZL7LER5_EN
 11862 2e3a 3E       		.uleb128 0x3e
 11863 2e3b B70D0000 		.4byte	.LASF458
 11864 2e3f 19       		.byte	0x19
 11865 2e40 0602     		.2byte	0x206
 11866 2e42 6B130000 		.4byte	0x136b
 11867 2e46 05       		.byte	0x5
 11868 2e47 03       		.byte	0x3
 11869 2e48 38010000 		.4byte	_ZL7LER6_EN
 11870 2e4c 3E       		.uleb128 0x3e
 11871 2e4d 66000000 		.4byte	.LASF459
 11872 2e51 19       		.byte	0x19
 11873 2e52 0902     		.2byte	0x209
 11874 2e54 6B130000 		.4byte	0x136b
 11875 2e58 05       		.byte	0x5
 11876 2e59 03       		.byte	0x3
ARM GAS  /tmp/ccwDRvq0.s 			page 245


 11877 2e5a 3C010000 		.4byte	_ZL7PWMENA1
 11878 2e5e 3E       		.uleb128 0x3e
 11879 2e5f 6E000000 		.4byte	.LASF460
 11880 2e63 19       		.byte	0x19
 11881 2e64 0C02     		.2byte	0x20c
 11882 2e66 6B130000 		.4byte	0x136b
 11883 2e6a 05       		.byte	0x5
 11884 2e6b 03       		.byte	0x3
 11885 2e6c 40010000 		.4byte	_ZL7PWMENA2
 11886 2e70 3E       		.uleb128 0x3e
 11887 2e71 76000000 		.4byte	.LASF461
 11888 2e75 19       		.byte	0x19
 11889 2e76 0F02     		.2byte	0x20f
 11890 2e78 6B130000 		.4byte	0x136b
 11891 2e7c 05       		.byte	0x5
 11892 2e7d 03       		.byte	0x3
 11893 2e7e 44010000 		.4byte	_ZL7PWMENA3
 11894 2e82 3E       		.uleb128 0x3e
 11895 2e83 AE0F0000 		.4byte	.LASF462
 11896 2e87 19       		.byte	0x19
 11897 2e88 1202     		.2byte	0x212
 11898 2e8a 6B130000 		.4byte	0x136b
 11899 2e8e 05       		.byte	0x5
 11900 2e8f 03       		.byte	0x3
 11901 2e90 48010000 		.4byte	_ZL7PWMENA4
 11902 2e94 3E       		.uleb128 0x3e
 11903 2e95 250B0000 		.4byte	.LASF463
 11904 2e99 19       		.byte	0x19
 11905 2e9a 1502     		.2byte	0x215
 11906 2e9c 6B130000 		.4byte	0x136b
 11907 2ea0 05       		.byte	0x5
 11908 2ea1 03       		.byte	0x3
 11909 2ea2 4C010000 		.4byte	_ZL7PWMENA5
 11910 2ea6 3E       		.uleb128 0x3e
 11911 2ea7 C4000000 		.4byte	.LASF464
 11912 2eab 19       		.byte	0x19
 11913 2eac 1802     		.2byte	0x218
 11914 2eae 6B130000 		.4byte	0x136b
 11915 2eb2 05       		.byte	0x5
 11916 2eb3 03       		.byte	0x3
 11917 2eb4 50010000 		.4byte	_ZL7PWMENA6
 11918 2eb8 3E       		.uleb128 0x3e
 11919 2eb9 08090000 		.4byte	.LASF465
 11920 2ebd 19       		.byte	0x19
 11921 2ebe 1B02     		.2byte	0x21b
 11922 2ec0 6B130000 		.4byte	0x136b
 11923 2ec4 05       		.byte	0x5
 11924 2ec5 03       		.byte	0x3
 11925 2ec6 54010000 		.4byte	_ZL21PWMTCR_COUNTER_ENABLE
 11926 2eca 3E       		.uleb128 0x3e
 11927 2ecb 59170000 		.4byte	.LASF466
 11928 2ecf 19       		.byte	0x19
 11929 2ed0 1E02     		.2byte	0x21e
 11930 2ed2 6B130000 		.4byte	0x136b
 11931 2ed6 05       		.byte	0x5
 11932 2ed7 03       		.byte	0x3
 11933 2ed8 58010000 		.4byte	_ZL12PWMTCR_RESET
ARM GAS  /tmp/ccwDRvq0.s 			page 246


 11934 2edc 3E       		.uleb128 0x3e
 11935 2edd 21000000 		.4byte	.LASF467
 11936 2ee1 19       		.byte	0x19
 11937 2ee2 2102     		.2byte	0x221
 11938 2ee4 6B130000 		.4byte	0x136b
 11939 2ee8 05       		.byte	0x5
 11940 2ee9 03       		.byte	0x3
 11941 2eea 5C010000 		.4byte	_ZL17PWMTCR_PWM_ENABLE
 11942 2eee 3E       		.uleb128 0x3e
 11943 2eef 42060000 		.4byte	.LASF468
 11944 2ef3 19       		.byte	0x19
 11945 2ef4 2402     		.2byte	0x224
 11946 2ef6 6B130000 		.4byte	0x136b
 11947 2efa 05       		.byte	0x5
 11948 2efb 03       		.byte	0x3
 11949 2efc 60010000 		.4byte	_ZL10WDMOD_WDEN
 11950 2f00 3E       		.uleb128 0x3e
 11951 2f01 A0030000 		.4byte	.LASF469
 11952 2f05 19       		.byte	0x19
 11953 2f06 2702     		.2byte	0x227
 11954 2f08 6B130000 		.4byte	0x136b
 11955 2f0c 05       		.byte	0x5
 11956 2f0d 03       		.byte	0x3
 11957 2f0e 64010000 		.4byte	_ZL13WDMOD_WDRESET
 11958 2f12 39       		.uleb128 0x39
 11959 2f13 EC160000 		.4byte	.LASF470
 11960 2f17 1A       		.byte	0x1a
 11961 2f18 1E       		.byte	0x1e
 11962 2f19 6B130000 		.4byte	0x136b
 11963 2f1d 05       		.byte	0x5
 11964 2f1e 03       		.byte	0x3
 11965 2f1f 68010000 		.4byte	_ZL27HID_MESSAGE_ID_SYSTEM_DEBUG
 11966 2f23 00       		.byte	0x0
 11967              		.section	.debug_abbrev
 11968 0000 01       		.uleb128 0x1
 11969 0001 11       		.uleb128 0x11
 11970 0002 01       		.byte	0x1
 11971 0003 25       		.uleb128 0x25
 11972 0004 0E       		.uleb128 0xe
 11973 0005 13       		.uleb128 0x13
 11974 0006 0B       		.uleb128 0xb
 11975 0007 03       		.uleb128 0x3
 11976 0008 0E       		.uleb128 0xe
 11977 0009 1B       		.uleb128 0x1b
 11978 000a 0E       		.uleb128 0xe
 11979 000b 11       		.uleb128 0x11
 11980 000c 01       		.uleb128 0x1
 11981 000d 52       		.uleb128 0x52
 11982 000e 01       		.uleb128 0x1
 11983 000f 55       		.uleb128 0x55
 11984 0010 06       		.uleb128 0x6
 11985 0011 10       		.uleb128 0x10
 11986 0012 06       		.uleb128 0x6
 11987 0013 00       		.byte	0x0
 11988 0014 00       		.byte	0x0
 11989 0015 02       		.uleb128 0x2
 11990 0016 16       		.uleb128 0x16
ARM GAS  /tmp/ccwDRvq0.s 			page 247


 11991 0017 00       		.byte	0x0
 11992 0018 03       		.uleb128 0x3
 11993 0019 0E       		.uleb128 0xe
 11994 001a 3A       		.uleb128 0x3a
 11995 001b 0B       		.uleb128 0xb
 11996 001c 3B       		.uleb128 0x3b
 11997 001d 0B       		.uleb128 0xb
 11998 001e 49       		.uleb128 0x49
 11999 001f 13       		.uleb128 0x13
 12000 0020 00       		.byte	0x0
 12001 0021 00       		.byte	0x0
 12002 0022 03       		.uleb128 0x3
 12003 0023 24       		.uleb128 0x24
 12004 0024 00       		.byte	0x0
 12005 0025 0B       		.uleb128 0xb
 12006 0026 0B       		.uleb128 0xb
 12007 0027 3E       		.uleb128 0x3e
 12008 0028 0B       		.uleb128 0xb
 12009 0029 03       		.uleb128 0x3
 12010 002a 0E       		.uleb128 0xe
 12011 002b 00       		.byte	0x0
 12012 002c 00       		.byte	0x0
 12013 002d 04       		.uleb128 0x4
 12014 002e 39       		.uleb128 0x39
 12015 002f 01       		.byte	0x1
 12016 0030 03       		.uleb128 0x3
 12017 0031 08       		.uleb128 0x8
 12018 0032 3A       		.uleb128 0x3a
 12019 0033 0B       		.uleb128 0xb
 12020 0034 3B       		.uleb128 0x3b
 12021 0035 0B       		.uleb128 0xb
 12022 0036 01       		.uleb128 0x1
 12023 0037 13       		.uleb128 0x13
 12024 0038 00       		.byte	0x0
 12025 0039 00       		.byte	0x0
 12026 003a 05       		.uleb128 0x5
 12027 003b 08       		.uleb128 0x8
 12028 003c 00       		.byte	0x0
 12029 003d 3A       		.uleb128 0x3a
 12030 003e 0B       		.uleb128 0xb
 12031 003f 3B       		.uleb128 0x3b
 12032 0040 0B       		.uleb128 0xb
 12033 0041 18       		.uleb128 0x18
 12034 0042 13       		.uleb128 0x13
 12035 0043 00       		.byte	0x0
 12036 0044 00       		.byte	0x0
 12037 0045 06       		.uleb128 0x6
 12038 0046 39       		.uleb128 0x39
 12039 0047 00       		.byte	0x0
 12040 0048 03       		.uleb128 0x3
 12041 0049 0E       		.uleb128 0xe
 12042 004a 3A       		.uleb128 0x3a
 12043 004b 0B       		.uleb128 0xb
 12044 004c 3B       		.uleb128 0x3b
 12045 004d 0B       		.uleb128 0xb
 12046 004e 00       		.byte	0x0
 12047 004f 00       		.byte	0x0
ARM GAS  /tmp/ccwDRvq0.s 			page 248


 12048 0050 07       		.uleb128 0x7
 12049 0051 24       		.uleb128 0x24
 12050 0052 00       		.byte	0x0
 12051 0053 0B       		.uleb128 0xb
 12052 0054 0B       		.uleb128 0xb
 12053 0055 3E       		.uleb128 0x3e
 12054 0056 0B       		.uleb128 0xb
 12055 0057 03       		.uleb128 0x3
 12056 0058 08       		.uleb128 0x8
 12057 0059 00       		.byte	0x0
 12058 005a 00       		.byte	0x0
 12059 005b 08       		.uleb128 0x8
 12060 005c 16       		.uleb128 0x16
 12061 005d 00       		.byte	0x0
 12062 005e 03       		.uleb128 0x3
 12063 005f 0E       		.uleb128 0xe
 12064 0060 3A       		.uleb128 0x3a
 12065 0061 0B       		.uleb128 0xb
 12066 0062 3B       		.uleb128 0x3b
 12067 0063 05       		.uleb128 0x5
 12068 0064 49       		.uleb128 0x49
 12069 0065 13       		.uleb128 0x13
 12070 0066 00       		.byte	0x0
 12071 0067 00       		.byte	0x0
 12072 0068 09       		.uleb128 0x9
 12073 0069 13       		.uleb128 0x13
 12074 006a 01       		.byte	0x1
 12075 006b 0B       		.uleb128 0xb
 12076 006c 0B       		.uleb128 0xb
 12077 006d 3A       		.uleb128 0x3a
 12078 006e 0B       		.uleb128 0xb
 12079 006f 3B       		.uleb128 0x3b
 12080 0070 0B       		.uleb128 0xb
 12081 0071 03       		.uleb128 0x3
 12082 0072 0E       		.uleb128 0xe
 12083 0073 01       		.uleb128 0x1
 12084 0074 13       		.uleb128 0x13
 12085 0075 00       		.byte	0x0
 12086 0076 00       		.byte	0x0
 12087 0077 0A       		.uleb128 0xa
 12088 0078 17       		.uleb128 0x17
 12089 0079 01       		.byte	0x1
 12090 007a 0B       		.uleb128 0xb
 12091 007b 0B       		.uleb128 0xb
 12092 007c 3A       		.uleb128 0x3a
 12093 007d 0B       		.uleb128 0xb
 12094 007e 3B       		.uleb128 0x3b
 12095 007f 0B       		.uleb128 0xb
 12096 0080 01       		.uleb128 0x1
 12097 0081 13       		.uleb128 0x13
 12098 0082 00       		.byte	0x0
 12099 0083 00       		.byte	0x0
 12100 0084 0B       		.uleb128 0xb
 12101 0085 0D       		.uleb128 0xd
 12102 0086 00       		.byte	0x0
 12103 0087 03       		.uleb128 0x3
 12104 0088 0E       		.uleb128 0xe
ARM GAS  /tmp/ccwDRvq0.s 			page 249


 12105 0089 3A       		.uleb128 0x3a
 12106 008a 0B       		.uleb128 0xb
 12107 008b 3B       		.uleb128 0x3b
 12108 008c 0B       		.uleb128 0xb
 12109 008d 49       		.uleb128 0x49
 12110 008e 13       		.uleb128 0x13
 12111 008f 00       		.byte	0x0
 12112 0090 00       		.byte	0x0
 12113 0091 0C       		.uleb128 0xc
 12114 0092 0D       		.uleb128 0xd
 12115 0093 00       		.byte	0x0
 12116 0094 03       		.uleb128 0x3
 12117 0095 0E       		.uleb128 0xe
 12118 0096 3A       		.uleb128 0x3a
 12119 0097 0B       		.uleb128 0xb
 12120 0098 3B       		.uleb128 0x3b
 12121 0099 0B       		.uleb128 0xb
 12122 009a 49       		.uleb128 0x49
 12123 009b 13       		.uleb128 0x13
 12124 009c 38       		.uleb128 0x38
 12125 009d 0A       		.uleb128 0xa
 12126 009e 00       		.byte	0x0
 12127 009f 00       		.byte	0x0
 12128 00a0 0D       		.uleb128 0xd
 12129 00a1 01       		.uleb128 0x1
 12130 00a2 01       		.byte	0x1
 12131 00a3 49       		.uleb128 0x49
 12132 00a4 13       		.uleb128 0x13
 12133 00a5 01       		.uleb128 0x1
 12134 00a6 13       		.uleb128 0x13
 12135 00a7 00       		.byte	0x0
 12136 00a8 00       		.byte	0x0
 12137 00a9 0E       		.uleb128 0xe
 12138 00aa 21       		.uleb128 0x21
 12139 00ab 00       		.byte	0x0
 12140 00ac 49       		.uleb128 0x49
 12141 00ad 13       		.uleb128 0x13
 12142 00ae 2F       		.uleb128 0x2f
 12143 00af 0B       		.uleb128 0xb
 12144 00b0 00       		.byte	0x0
 12145 00b1 00       		.byte	0x0
 12146 00b2 0F       		.uleb128 0xf
 12147 00b3 0F       		.uleb128 0xf
 12148 00b4 00       		.byte	0x0
 12149 00b5 0B       		.uleb128 0xb
 12150 00b6 0B       		.uleb128 0xb
 12151 00b7 00       		.byte	0x0
 12152 00b8 00       		.byte	0x0
 12153 00b9 10       		.uleb128 0x10
 12154 00ba 13       		.uleb128 0x13
 12155 00bb 01       		.byte	0x1
 12156 00bc 03       		.uleb128 0x3
 12157 00bd 0E       		.uleb128 0xe
 12158 00be 0B       		.uleb128 0xb
 12159 00bf 0B       		.uleb128 0xb
 12160 00c0 3A       		.uleb128 0x3a
 12161 00c1 0B       		.uleb128 0xb
ARM GAS  /tmp/ccwDRvq0.s 			page 250


 12162 00c2 3B       		.uleb128 0x3b
 12163 00c3 0B       		.uleb128 0xb
 12164 00c4 01       		.uleb128 0x1
 12165 00c5 13       		.uleb128 0x13
 12166 00c6 00       		.byte	0x0
 12167 00c7 00       		.byte	0x0
 12168 00c8 11       		.uleb128 0x11
 12169 00c9 0D       		.uleb128 0xd
 12170 00ca 00       		.byte	0x0
 12171 00cb 03       		.uleb128 0x3
 12172 00cc 08       		.uleb128 0x8
 12173 00cd 3A       		.uleb128 0x3a
 12174 00ce 0B       		.uleb128 0xb
 12175 00cf 3B       		.uleb128 0x3b
 12176 00d0 0B       		.uleb128 0xb
 12177 00d1 49       		.uleb128 0x49
 12178 00d2 13       		.uleb128 0x13
 12179 00d3 38       		.uleb128 0x38
 12180 00d4 0A       		.uleb128 0xa
 12181 00d5 00       		.byte	0x0
 12182 00d6 00       		.byte	0x0
 12183 00d7 12       		.uleb128 0x12
 12184 00d8 0F       		.uleb128 0xf
 12185 00d9 00       		.byte	0x0
 12186 00da 0B       		.uleb128 0xb
 12187 00db 0B       		.uleb128 0xb
 12188 00dc 49       		.uleb128 0x49
 12189 00dd 13       		.uleb128 0x13
 12190 00de 00       		.byte	0x0
 12191 00df 00       		.byte	0x0
 12192 00e0 13       		.uleb128 0x13
 12193 00e1 13       		.uleb128 0x13
 12194 00e2 01       		.byte	0x1
 12195 00e3 03       		.uleb128 0x3
 12196 00e4 0E       		.uleb128 0xe
 12197 00e5 0B       		.uleb128 0xb
 12198 00e6 05       		.uleb128 0x5
 12199 00e7 3A       		.uleb128 0x3a
 12200 00e8 0B       		.uleb128 0xb
 12201 00e9 3B       		.uleb128 0x3b
 12202 00ea 0B       		.uleb128 0xb
 12203 00eb 01       		.uleb128 0x1
 12204 00ec 13       		.uleb128 0x13
 12205 00ed 00       		.byte	0x0
 12206 00ee 00       		.byte	0x0
 12207 00ef 14       		.uleb128 0x14
 12208 00f0 15       		.uleb128 0x15
 12209 00f1 00       		.byte	0x0
 12210 00f2 00       		.byte	0x0
 12211 00f3 00       		.byte	0x0
 12212 00f4 15       		.uleb128 0x15
 12213 00f5 15       		.uleb128 0x15
 12214 00f6 01       		.byte	0x1
 12215 00f7 49       		.uleb128 0x49
 12216 00f8 13       		.uleb128 0x13
 12217 00f9 01       		.uleb128 0x1
 12218 00fa 13       		.uleb128 0x13
ARM GAS  /tmp/ccwDRvq0.s 			page 251


 12219 00fb 00       		.byte	0x0
 12220 00fc 00       		.byte	0x0
 12221 00fd 16       		.uleb128 0x16
 12222 00fe 05       		.uleb128 0x5
 12223 00ff 00       		.byte	0x0
 12224 0100 49       		.uleb128 0x49
 12225 0101 13       		.uleb128 0x13
 12226 0102 00       		.byte	0x0
 12227 0103 00       		.byte	0x0
 12228 0104 17       		.uleb128 0x17
 12229 0105 13       		.uleb128 0x13
 12230 0106 01       		.byte	0x1
 12231 0107 03       		.uleb128 0x3
 12232 0108 0E       		.uleb128 0xe
 12233 0109 0B       		.uleb128 0xb
 12234 010a 05       		.uleb128 0x5
 12235 010b 3A       		.uleb128 0x3a
 12236 010c 0B       		.uleb128 0xb
 12237 010d 3B       		.uleb128 0x3b
 12238 010e 05       		.uleb128 0x5
 12239 010f 01       		.uleb128 0x1
 12240 0110 13       		.uleb128 0x13
 12241 0111 00       		.byte	0x0
 12242 0112 00       		.byte	0x0
 12243 0113 18       		.uleb128 0x18
 12244 0114 17       		.uleb128 0x17
 12245 0115 01       		.byte	0x1
 12246 0116 0B       		.uleb128 0xb
 12247 0117 0B       		.uleb128 0xb
 12248 0118 3A       		.uleb128 0x3a
 12249 0119 0B       		.uleb128 0xb
 12250 011a 3B       		.uleb128 0x3b
 12251 011b 05       		.uleb128 0x5
 12252 011c 01       		.uleb128 0x1
 12253 011d 13       		.uleb128 0x13
 12254 011e 00       		.byte	0x0
 12255 011f 00       		.byte	0x0
 12256 0120 19       		.uleb128 0x19
 12257 0121 13       		.uleb128 0x13
 12258 0122 01       		.byte	0x1
 12259 0123 0B       		.uleb128 0xb
 12260 0124 0B       		.uleb128 0xb
 12261 0125 3A       		.uleb128 0x3a
 12262 0126 0B       		.uleb128 0xb
 12263 0127 3B       		.uleb128 0x3b
 12264 0128 05       		.uleb128 0x5
 12265 0129 01       		.uleb128 0x1
 12266 012a 13       		.uleb128 0x13
 12267 012b 00       		.byte	0x0
 12268 012c 00       		.byte	0x0
 12269 012d 1A       		.uleb128 0x1a
 12270 012e 0D       		.uleb128 0xd
 12271 012f 00       		.byte	0x0
 12272 0130 03       		.uleb128 0x3
 12273 0131 0E       		.uleb128 0xe
 12274 0132 3A       		.uleb128 0x3a
 12275 0133 0B       		.uleb128 0xb
ARM GAS  /tmp/ccwDRvq0.s 			page 252


 12276 0134 3B       		.uleb128 0x3b
 12277 0135 05       		.uleb128 0x5
 12278 0136 49       		.uleb128 0x49
 12279 0137 13       		.uleb128 0x13
 12280 0138 38       		.uleb128 0x38
 12281 0139 0A       		.uleb128 0xa
 12282 013a 00       		.byte	0x0
 12283 013b 00       		.byte	0x0
 12284 013c 1B       		.uleb128 0x1b
 12285 013d 0D       		.uleb128 0xd
 12286 013e 00       		.byte	0x0
 12287 013f 03       		.uleb128 0x3
 12288 0140 0E       		.uleb128 0xe
 12289 0141 3A       		.uleb128 0x3a
 12290 0142 0B       		.uleb128 0xb
 12291 0143 3B       		.uleb128 0x3b
 12292 0144 05       		.uleb128 0x5
 12293 0145 49       		.uleb128 0x49
 12294 0146 13       		.uleb128 0x13
 12295 0147 00       		.byte	0x0
 12296 0148 00       		.byte	0x0
 12297 0149 1C       		.uleb128 0x1c
 12298 014a 26       		.uleb128 0x26
 12299 014b 00       		.byte	0x0
 12300 014c 49       		.uleb128 0x49
 12301 014d 13       		.uleb128 0x13
 12302 014e 00       		.byte	0x0
 12303 014f 00       		.byte	0x0
 12304 0150 1D       		.uleb128 0x1d
 12305 0151 13       		.uleb128 0x13
 12306 0152 01       		.byte	0x1
 12307 0153 03       		.uleb128 0x3
 12308 0154 0E       		.uleb128 0xe
 12309 0155 0B       		.uleb128 0xb
 12310 0156 0B       		.uleb128 0xb
 12311 0157 3A       		.uleb128 0x3a
 12312 0158 0B       		.uleb128 0xb
 12313 0159 3B       		.uleb128 0x3b
 12314 015a 05       		.uleb128 0x5
 12315 015b 01       		.uleb128 0x1
 12316 015c 13       		.uleb128 0x13
 12317 015d 00       		.byte	0x0
 12318 015e 00       		.byte	0x0
 12319 015f 1E       		.uleb128 0x1e
 12320 0160 15       		.uleb128 0x15
 12321 0161 01       		.byte	0x1
 12322 0162 01       		.uleb128 0x1
 12323 0163 13       		.uleb128 0x13
 12324 0164 00       		.byte	0x0
 12325 0165 00       		.byte	0x0
 12326 0166 1F       		.uleb128 0x1f
 12327 0167 0D       		.uleb128 0xd
 12328 0168 00       		.byte	0x0
 12329 0169 03       		.uleb128 0x3
 12330 016a 0E       		.uleb128 0xe
 12331 016b 49       		.uleb128 0x49
 12332 016c 13       		.uleb128 0x13
ARM GAS  /tmp/ccwDRvq0.s 			page 253


 12333 016d 38       		.uleb128 0x38
 12334 016e 0A       		.uleb128 0xa
 12335 016f 34       		.uleb128 0x34
 12336 0170 0C       		.uleb128 0xc
 12337 0171 00       		.byte	0x0
 12338 0172 00       		.byte	0x0
 12339 0173 20       		.uleb128 0x20
 12340 0174 2E       		.uleb128 0x2e
 12341 0175 01       		.byte	0x1
 12342 0176 3F       		.uleb128 0x3f
 12343 0177 0C       		.uleb128 0xc
 12344 0178 03       		.uleb128 0x3
 12345 0179 0E       		.uleb128 0xe
 12346 017a 3A       		.uleb128 0x3a
 12347 017b 0B       		.uleb128 0xb
 12348 017c 3B       		.uleb128 0x3b
 12349 017d 05       		.uleb128 0x5
 12350 017e 3C       		.uleb128 0x3c
 12351 017f 0C       		.uleb128 0xc
 12352 0180 01       		.uleb128 0x1
 12353 0181 13       		.uleb128 0x13
 12354 0182 00       		.byte	0x0
 12355 0183 00       		.byte	0x0
 12356 0184 21       		.uleb128 0x21
 12357 0185 2E       		.uleb128 0x2e
 12358 0186 01       		.byte	0x1
 12359 0187 3F       		.uleb128 0x3f
 12360 0188 0C       		.uleb128 0xc
 12361 0189 03       		.uleb128 0x3
 12362 018a 0E       		.uleb128 0xe
 12363 018b 3A       		.uleb128 0x3a
 12364 018c 0B       		.uleb128 0xb
 12365 018d 3B       		.uleb128 0x3b
 12366 018e 0B       		.uleb128 0xb
 12367 018f 49       		.uleb128 0x49
 12368 0190 13       		.uleb128 0x13
 12369 0191 3C       		.uleb128 0x3c
 12370 0192 0C       		.uleb128 0xc
 12371 0193 01       		.uleb128 0x1
 12372 0194 13       		.uleb128 0x13
 12373 0195 00       		.byte	0x0
 12374 0196 00       		.byte	0x0
 12375 0197 22       		.uleb128 0x22
 12376 0198 2E       		.uleb128 0x2e
 12377 0199 01       		.byte	0x1
 12378 019a 3F       		.uleb128 0x3f
 12379 019b 0C       		.uleb128 0xc
 12380 019c 03       		.uleb128 0x3
 12381 019d 0E       		.uleb128 0xe
 12382 019e 3A       		.uleb128 0x3a
 12383 019f 0B       		.uleb128 0xb
 12384 01a0 3B       		.uleb128 0x3b
 12385 01a1 05       		.uleb128 0x5
 12386 01a2 49       		.uleb128 0x49
 12387 01a3 13       		.uleb128 0x13
 12388 01a4 3C       		.uleb128 0x3c
 12389 01a5 0C       		.uleb128 0xc
ARM GAS  /tmp/ccwDRvq0.s 			page 254


 12390 01a6 01       		.uleb128 0x1
 12391 01a7 13       		.uleb128 0x13
 12392 01a8 00       		.byte	0x0
 12393 01a9 00       		.byte	0x0
 12394 01aa 23       		.uleb128 0x23
 12395 01ab 2E       		.uleb128 0x2e
 12396 01ac 00       		.byte	0x0
 12397 01ad 3F       		.uleb128 0x3f
 12398 01ae 0C       		.uleb128 0xc
 12399 01af 03       		.uleb128 0x3
 12400 01b0 0E       		.uleb128 0xe
 12401 01b1 3A       		.uleb128 0x3a
 12402 01b2 0B       		.uleb128 0xb
 12403 01b3 3B       		.uleb128 0x3b
 12404 01b4 0B       		.uleb128 0xb
 12405 01b5 49       		.uleb128 0x49
 12406 01b6 13       		.uleb128 0x13
 12407 01b7 3C       		.uleb128 0x3c
 12408 01b8 0C       		.uleb128 0xc
 12409 01b9 00       		.byte	0x0
 12410 01ba 00       		.byte	0x0
 12411 01bb 24       		.uleb128 0x24
 12412 01bc 2E       		.uleb128 0x2e
 12413 01bd 01       		.byte	0x1
 12414 01be 3F       		.uleb128 0x3f
 12415 01bf 0C       		.uleb128 0xc
 12416 01c0 03       		.uleb128 0x3
 12417 01c1 0E       		.uleb128 0xe
 12418 01c2 3A       		.uleb128 0x3a
 12419 01c3 0B       		.uleb128 0xb
 12420 01c4 3B       		.uleb128 0x3b
 12421 01c5 0B       		.uleb128 0xb
 12422 01c6 3C       		.uleb128 0x3c
 12423 01c7 0C       		.uleb128 0xc
 12424 01c8 01       		.uleb128 0x1
 12425 01c9 13       		.uleb128 0x13
 12426 01ca 00       		.byte	0x0
 12427 01cb 00       		.byte	0x0
 12428 01cc 25       		.uleb128 0x25
 12429 01cd 26       		.uleb128 0x26
 12430 01ce 00       		.byte	0x0
 12431 01cf 00       		.byte	0x0
 12432 01d0 00       		.byte	0x0
 12433 01d1 26       		.uleb128 0x26
 12434 01d2 2E       		.uleb128 0x2e
 12435 01d3 01       		.byte	0x1
 12436 01d4 3F       		.uleb128 0x3f
 12437 01d5 0C       		.uleb128 0xc
 12438 01d6 03       		.uleb128 0x3
 12439 01d7 08       		.uleb128 0x8
 12440 01d8 3A       		.uleb128 0x3a
 12441 01d9 0B       		.uleb128 0xb
 12442 01da 3B       		.uleb128 0x3b
 12443 01db 0B       		.uleb128 0xb
 12444 01dc 49       		.uleb128 0x49
 12445 01dd 13       		.uleb128 0x13
 12446 01de 3C       		.uleb128 0x3c
ARM GAS  /tmp/ccwDRvq0.s 			page 255


 12447 01df 0C       		.uleb128 0xc
 12448 01e0 01       		.uleb128 0x1
 12449 01e1 13       		.uleb128 0x13
 12450 01e2 00       		.byte	0x0
 12451 01e3 00       		.byte	0x0
 12452 01e4 27       		.uleb128 0x27
 12453 01e5 13       		.uleb128 0x13
 12454 01e6 01       		.byte	0x1
 12455 01e7 03       		.uleb128 0x3
 12456 01e8 08       		.uleb128 0x8
 12457 01e9 0B       		.uleb128 0xb
 12458 01ea 0B       		.uleb128 0xb
 12459 01eb 3A       		.uleb128 0x3a
 12460 01ec 0B       		.uleb128 0xb
 12461 01ed 3B       		.uleb128 0x3b
 12462 01ee 0B       		.uleb128 0xb
 12463 01ef 01       		.uleb128 0x1
 12464 01f0 13       		.uleb128 0x13
 12465 01f1 00       		.byte	0x0
 12466 01f2 00       		.byte	0x0
 12467 01f3 28       		.uleb128 0x28
 12468 01f4 02       		.uleb128 0x2
 12469 01f5 01       		.byte	0x1
 12470 01f6 03       		.uleb128 0x3
 12471 01f7 0E       		.uleb128 0xe
 12472 01f8 0B       		.uleb128 0xb
 12473 01f9 05       		.uleb128 0x5
 12474 01fa 3A       		.uleb128 0x3a
 12475 01fb 0B       		.uleb128 0xb
 12476 01fc 3B       		.uleb128 0x3b
 12477 01fd 0B       		.uleb128 0xb
 12478 01fe 01       		.uleb128 0x1
 12479 01ff 13       		.uleb128 0x13
 12480 0200 00       		.byte	0x0
 12481 0201 00       		.byte	0x0
 12482 0202 29       		.uleb128 0x29
 12483 0203 0D       		.uleb128 0xd
 12484 0204 00       		.byte	0x0
 12485 0205 03       		.uleb128 0x3
 12486 0206 0E       		.uleb128 0xe
 12487 0207 3A       		.uleb128 0x3a
 12488 0208 0B       		.uleb128 0xb
 12489 0209 3B       		.uleb128 0x3b
 12490 020a 0B       		.uleb128 0xb
 12491 020b 8740     		.uleb128 0x2007
 12492 020d 0E       		.uleb128 0xe
 12493 020e 49       		.uleb128 0x49
 12494 020f 13       		.uleb128 0x13
 12495 0210 3F       		.uleb128 0x3f
 12496 0211 0C       		.uleb128 0xc
 12497 0212 32       		.uleb128 0x32
 12498 0213 0B       		.uleb128 0xb
 12499 0214 3C       		.uleb128 0x3c
 12500 0215 0C       		.uleb128 0xc
 12501 0216 1C       		.uleb128 0x1c
 12502 0217 05       		.uleb128 0x5
 12503 0218 00       		.byte	0x0
ARM GAS  /tmp/ccwDRvq0.s 			page 256


 12504 0219 00       		.byte	0x0
 12505 021a 2A       		.uleb128 0x2a
 12506 021b 0D       		.uleb128 0xd
 12507 021c 00       		.byte	0x0
 12508 021d 03       		.uleb128 0x3
 12509 021e 0E       		.uleb128 0xe
 12510 021f 3A       		.uleb128 0x3a
 12511 0220 0B       		.uleb128 0xb
 12512 0221 3B       		.uleb128 0x3b
 12513 0222 0B       		.uleb128 0xb
 12514 0223 8740     		.uleb128 0x2007
 12515 0225 0E       		.uleb128 0xe
 12516 0226 49       		.uleb128 0x49
 12517 0227 13       		.uleb128 0x13
 12518 0228 3F       		.uleb128 0x3f
 12519 0229 0C       		.uleb128 0xc
 12520 022a 32       		.uleb128 0x32
 12521 022b 0B       		.uleb128 0xb
 12522 022c 3C       		.uleb128 0x3c
 12523 022d 0C       		.uleb128 0xc
 12524 022e 1C       		.uleb128 0x1c
 12525 022f 0B       		.uleb128 0xb
 12526 0230 00       		.byte	0x0
 12527 0231 00       		.byte	0x0
 12528 0232 2B       		.uleb128 0x2b
 12529 0233 0D       		.uleb128 0xd
 12530 0234 00       		.byte	0x0
 12531 0235 03       		.uleb128 0x3
 12532 0236 0E       		.uleb128 0xe
 12533 0237 3A       		.uleb128 0x3a
 12534 0238 0B       		.uleb128 0xb
 12535 0239 3B       		.uleb128 0x3b
 12536 023a 0B       		.uleb128 0xb
 12537 023b 49       		.uleb128 0x49
 12538 023c 13       		.uleb128 0x13
 12539 023d 38       		.uleb128 0x38
 12540 023e 0A       		.uleb128 0xa
 12541 023f 32       		.uleb128 0x32
 12542 0240 0B       		.uleb128 0xb
 12543 0241 00       		.byte	0x0
 12544 0242 00       		.byte	0x0
 12545 0243 2C       		.uleb128 0x2c
 12546 0244 05       		.uleb128 0x5
 12547 0245 00       		.byte	0x0
 12548 0246 49       		.uleb128 0x49
 12549 0247 13       		.uleb128 0x13
 12550 0248 34       		.uleb128 0x34
 12551 0249 0C       		.uleb128 0xc
 12552 024a 00       		.byte	0x0
 12553 024b 00       		.byte	0x0
 12554 024c 2D       		.uleb128 0x2d
 12555 024d 2E       		.uleb128 0x2e
 12556 024e 01       		.byte	0x1
 12557 024f 3F       		.uleb128 0x3f
 12558 0250 0C       		.uleb128 0xc
 12559 0251 03       		.uleb128 0x3
 12560 0252 0E       		.uleb128 0xe
ARM GAS  /tmp/ccwDRvq0.s 			page 257


 12561 0253 3A       		.uleb128 0x3a
 12562 0254 0B       		.uleb128 0xb
 12563 0255 3B       		.uleb128 0x3b
 12564 0256 0B       		.uleb128 0xb
 12565 0257 8740     		.uleb128 0x2007
 12566 0259 0E       		.uleb128 0xe
 12567 025a 3C       		.uleb128 0x3c
 12568 025b 0C       		.uleb128 0xc
 12569 025c 01       		.uleb128 0x1
 12570 025d 13       		.uleb128 0x13
 12571 025e 00       		.byte	0x0
 12572 025f 00       		.byte	0x0
 12573 0260 2E       		.uleb128 0x2e
 12574 0261 2E       		.uleb128 0x2e
 12575 0262 01       		.byte	0x1
 12576 0263 3F       		.uleb128 0x3f
 12577 0264 0C       		.uleb128 0xc
 12578 0265 03       		.uleb128 0x3
 12579 0266 0E       		.uleb128 0xe
 12580 0267 3A       		.uleb128 0x3a
 12581 0268 0B       		.uleb128 0xb
 12582 0269 3B       		.uleb128 0x3b
 12583 026a 0B       		.uleb128 0xb
 12584 026b 8740     		.uleb128 0x2007
 12585 026d 0E       		.uleb128 0xe
 12586 026e 49       		.uleb128 0x49
 12587 026f 13       		.uleb128 0x13
 12588 0270 3C       		.uleb128 0x3c
 12589 0271 0C       		.uleb128 0xc
 12590 0272 01       		.uleb128 0x1
 12591 0273 13       		.uleb128 0x13
 12592 0274 00       		.byte	0x0
 12593 0275 00       		.byte	0x0
 12594 0276 2F       		.uleb128 0x2f
 12595 0277 2E       		.uleb128 0x2e
 12596 0278 01       		.byte	0x1
 12597 0279 3F       		.uleb128 0x3f
 12598 027a 0C       		.uleb128 0xc
 12599 027b 03       		.uleb128 0x3
 12600 027c 0E       		.uleb128 0xe
 12601 027d 3A       		.uleb128 0x3a
 12602 027e 0B       		.uleb128 0xb
 12603 027f 3B       		.uleb128 0x3b
 12604 0280 0B       		.uleb128 0xb
 12605 0281 8740     		.uleb128 0x2007
 12606 0283 0E       		.uleb128 0xe
 12607 0284 3C       		.uleb128 0x3c
 12608 0285 0C       		.uleb128 0xc
 12609 0286 00       		.byte	0x0
 12610 0287 00       		.byte	0x0
 12611 0288 30       		.uleb128 0x30
 12612 0289 04       		.uleb128 0x4
 12613 028a 01       		.byte	0x1
 12614 028b 0B       		.uleb128 0xb
 12615 028c 0B       		.uleb128 0xb
 12616 028d 3A       		.uleb128 0x3a
 12617 028e 0B       		.uleb128 0xb
ARM GAS  /tmp/ccwDRvq0.s 			page 258


 12618 028f 3B       		.uleb128 0x3b
 12619 0290 0B       		.uleb128 0xb
 12620 0291 03       		.uleb128 0x3
 12621 0292 0E       		.uleb128 0xe
 12622 0293 01       		.uleb128 0x1
 12623 0294 13       		.uleb128 0x13
 12624 0295 00       		.byte	0x0
 12625 0296 00       		.byte	0x0
 12626 0297 31       		.uleb128 0x31
 12627 0298 28       		.uleb128 0x28
 12628 0299 00       		.byte	0x0
 12629 029a 03       		.uleb128 0x3
 12630 029b 0E       		.uleb128 0xe
 12631 029c 1C       		.uleb128 0x1c
 12632 029d 0D       		.uleb128 0xd
 12633 029e 00       		.byte	0x0
 12634 029f 00       		.byte	0x0
 12635 02a0 32       		.uleb128 0x32
 12636 02a1 1C       		.uleb128 0x1c
 12637 02a2 00       		.byte	0x0
 12638 02a3 49       		.uleb128 0x49
 12639 02a4 13       		.uleb128 0x13
 12640 02a5 38       		.uleb128 0x38
 12641 02a6 0A       		.uleb128 0xa
 12642 02a7 32       		.uleb128 0x32
 12643 02a8 0B       		.uleb128 0xb
 12644 02a9 00       		.byte	0x0
 12645 02aa 00       		.byte	0x0
 12646 02ab 33       		.uleb128 0x33
 12647 02ac 2E       		.uleb128 0x2e
 12648 02ad 01       		.byte	0x1
 12649 02ae 3F       		.uleb128 0x3f
 12650 02af 0C       		.uleb128 0xc
 12651 02b0 03       		.uleb128 0x3
 12652 02b1 08       		.uleb128 0x8
 12653 02b2 3A       		.uleb128 0x3a
 12654 02b3 0B       		.uleb128 0xb
 12655 02b4 3B       		.uleb128 0x3b
 12656 02b5 0B       		.uleb128 0xb
 12657 02b6 8740     		.uleb128 0x2007
 12658 02b8 0E       		.uleb128 0xe
 12659 02b9 3C       		.uleb128 0x3c
 12660 02ba 0C       		.uleb128 0xc
 12661 02bb 01       		.uleb128 0x1
 12662 02bc 13       		.uleb128 0x13
 12663 02bd 00       		.byte	0x0
 12664 02be 00       		.byte	0x0
 12665 02bf 34       		.uleb128 0x34
 12666 02c0 18       		.uleb128 0x18
 12667 02c1 00       		.byte	0x0
 12668 02c2 00       		.byte	0x0
 12669 02c3 00       		.byte	0x0
 12670 02c4 35       		.uleb128 0x35
 12671 02c5 2E       		.uleb128 0x2e
 12672 02c6 00       		.byte	0x0
 12673 02c7 3F       		.uleb128 0x3f
 12674 02c8 0C       		.uleb128 0xc
ARM GAS  /tmp/ccwDRvq0.s 			page 259


 12675 02c9 03       		.uleb128 0x3
 12676 02ca 0E       		.uleb128 0xe
 12677 02cb 3A       		.uleb128 0x3a
 12678 02cc 0B       		.uleb128 0xb
 12679 02cd 3B       		.uleb128 0x3b
 12680 02ce 0B       		.uleb128 0xb
 12681 02cf 8740     		.uleb128 0x2007
 12682 02d1 0E       		.uleb128 0xe
 12683 02d2 49       		.uleb128 0x49
 12684 02d3 13       		.uleb128 0x13
 12685 02d4 3C       		.uleb128 0x3c
 12686 02d5 0C       		.uleb128 0xc
 12687 02d6 00       		.byte	0x0
 12688 02d7 00       		.byte	0x0
 12689 02d8 36       		.uleb128 0x36
 12690 02d9 2E       		.uleb128 0x2e
 12691 02da 01       		.byte	0x1
 12692 02db 3F       		.uleb128 0x3f
 12693 02dc 0C       		.uleb128 0xc
 12694 02dd 03       		.uleb128 0x3
 12695 02de 0E       		.uleb128 0xe
 12696 02df 3A       		.uleb128 0x3a
 12697 02e0 0B       		.uleb128 0xb
 12698 02e1 3B       		.uleb128 0x3b
 12699 02e2 0B       		.uleb128 0xb
 12700 02e3 8740     		.uleb128 0x2007
 12701 02e5 0E       		.uleb128 0xe
 12702 02e6 49       		.uleb128 0x49
 12703 02e7 13       		.uleb128 0x13
 12704 02e8 11       		.uleb128 0x11
 12705 02e9 01       		.uleb128 0x1
 12706 02ea 12       		.uleb128 0x12
 12707 02eb 01       		.uleb128 0x1
 12708 02ec 40       		.uleb128 0x40
 12709 02ed 06       		.uleb128 0x6
 12710 02ee 01       		.uleb128 0x1
 12711 02ef 13       		.uleb128 0x13
 12712 02f0 00       		.byte	0x0
 12713 02f1 00       		.byte	0x0
 12714 02f2 37       		.uleb128 0x37
 12715 02f3 05       		.uleb128 0x5
 12716 02f4 00       		.byte	0x0
 12717 02f5 03       		.uleb128 0x3
 12718 02f6 0E       		.uleb128 0xe
 12719 02f7 3A       		.uleb128 0x3a
 12720 02f8 0B       		.uleb128 0xb
 12721 02f9 3B       		.uleb128 0x3b
 12722 02fa 0B       		.uleb128 0xb
 12723 02fb 49       		.uleb128 0x49
 12724 02fc 13       		.uleb128 0x13
 12725 02fd 02       		.uleb128 0x2
 12726 02fe 0A       		.uleb128 0xa
 12727 02ff 00       		.byte	0x0
 12728 0300 00       		.byte	0x0
 12729 0301 38       		.uleb128 0x38
 12730 0302 0B       		.uleb128 0xb
 12731 0303 01       		.byte	0x1
ARM GAS  /tmp/ccwDRvq0.s 			page 260


 12732 0304 11       		.uleb128 0x11
 12733 0305 01       		.uleb128 0x1
 12734 0306 12       		.uleb128 0x12
 12735 0307 01       		.uleb128 0x1
 12736 0308 00       		.byte	0x0
 12737 0309 00       		.byte	0x0
 12738 030a 39       		.uleb128 0x39
 12739 030b 34       		.uleb128 0x34
 12740 030c 00       		.byte	0x0
 12741 030d 03       		.uleb128 0x3
 12742 030e 0E       		.uleb128 0xe
 12743 030f 3A       		.uleb128 0x3a
 12744 0310 0B       		.uleb128 0xb
 12745 0311 3B       		.uleb128 0x3b
 12746 0312 0B       		.uleb128 0xb
 12747 0313 49       		.uleb128 0x49
 12748 0314 13       		.uleb128 0x13
 12749 0315 02       		.uleb128 0x2
 12750 0316 0A       		.uleb128 0xa
 12751 0317 00       		.byte	0x0
 12752 0318 00       		.byte	0x0
 12753 0319 3A       		.uleb128 0x3a
 12754 031a 34       		.uleb128 0x34
 12755 031b 00       		.byte	0x0
 12756 031c 03       		.uleb128 0x3
 12757 031d 08       		.uleb128 0x8
 12758 031e 3A       		.uleb128 0x3a
 12759 031f 0B       		.uleb128 0xb
 12760 0320 3B       		.uleb128 0x3b
 12761 0321 0B       		.uleb128 0xb
 12762 0322 49       		.uleb128 0x49
 12763 0323 13       		.uleb128 0x13
 12764 0324 02       		.uleb128 0x2
 12765 0325 0A       		.uleb128 0xa
 12766 0326 00       		.byte	0x0
 12767 0327 00       		.byte	0x0
 12768 0328 3B       		.uleb128 0x3b
 12769 0329 2E       		.uleb128 0x2e
 12770 032a 01       		.byte	0x1
 12771 032b 3F       		.uleb128 0x3f
 12772 032c 0C       		.uleb128 0xc
 12773 032d 03       		.uleb128 0x3
 12774 032e 0E       		.uleb128 0xe
 12775 032f 3A       		.uleb128 0x3a
 12776 0330 0B       		.uleb128 0xb
 12777 0331 3B       		.uleb128 0x3b
 12778 0332 0B       		.uleb128 0xb
 12779 0333 8740     		.uleb128 0x2007
 12780 0335 0E       		.uleb128 0xe
 12781 0336 11       		.uleb128 0x11
 12782 0337 01       		.uleb128 0x1
 12783 0338 12       		.uleb128 0x12
 12784 0339 01       		.uleb128 0x1
 12785 033a 40       		.uleb128 0x40
 12786 033b 06       		.uleb128 0x6
 12787 033c 01       		.uleb128 0x1
 12788 033d 13       		.uleb128 0x13
ARM GAS  /tmp/ccwDRvq0.s 			page 261


 12789 033e 00       		.byte	0x0
 12790 033f 00       		.byte	0x0
 12791 0340 3C       		.uleb128 0x3c
 12792 0341 05       		.uleb128 0x5
 12793 0342 00       		.byte	0x0
 12794 0343 03       		.uleb128 0x3
 12795 0344 08       		.uleb128 0x8
 12796 0345 3A       		.uleb128 0x3a
 12797 0346 0B       		.uleb128 0xb
 12798 0347 3B       		.uleb128 0x3b
 12799 0348 0B       		.uleb128 0xb
 12800 0349 49       		.uleb128 0x49
 12801 034a 13       		.uleb128 0x13
 12802 034b 02       		.uleb128 0x2
 12803 034c 0A       		.uleb128 0xa
 12804 034d 00       		.byte	0x0
 12805 034e 00       		.byte	0x0
 12806 034f 3D       		.uleb128 0x3d
 12807 0350 2E       		.uleb128 0x2e
 12808 0351 01       		.byte	0x1
 12809 0352 03       		.uleb128 0x3
 12810 0353 0E       		.uleb128 0xe
 12811 0354 3A       		.uleb128 0x3a
 12812 0355 0B       		.uleb128 0xb
 12813 0356 3B       		.uleb128 0x3b
 12814 0357 0B       		.uleb128 0xb
 12815 0358 49       		.uleb128 0x49
 12816 0359 13       		.uleb128 0x13
 12817 035a 11       		.uleb128 0x11
 12818 035b 01       		.uleb128 0x1
 12819 035c 12       		.uleb128 0x12
 12820 035d 01       		.uleb128 0x1
 12821 035e 40       		.uleb128 0x40
 12822 035f 06       		.uleb128 0x6
 12823 0360 01       		.uleb128 0x1
 12824 0361 13       		.uleb128 0x13
 12825 0362 00       		.byte	0x0
 12826 0363 00       		.byte	0x0
 12827 0364 3E       		.uleb128 0x3e
 12828 0365 34       		.uleb128 0x34
 12829 0366 00       		.byte	0x0
 12830 0367 03       		.uleb128 0x3
 12831 0368 0E       		.uleb128 0xe
 12832 0369 3A       		.uleb128 0x3a
 12833 036a 0B       		.uleb128 0xb
 12834 036b 3B       		.uleb128 0x3b
 12835 036c 05       		.uleb128 0x5
 12836 036d 49       		.uleb128 0x49
 12837 036e 13       		.uleb128 0x13
 12838 036f 02       		.uleb128 0x2
 12839 0370 0A       		.uleb128 0xa
 12840 0371 00       		.byte	0x0
 12841 0372 00       		.byte	0x0
 12842 0373 3F       		.uleb128 0x3f
 12843 0374 2E       		.uleb128 0x2e
 12844 0375 01       		.byte	0x1
 12845 0376 03       		.uleb128 0x3
ARM GAS  /tmp/ccwDRvq0.s 			page 262


 12846 0377 0E       		.uleb128 0xe
 12847 0378 3A       		.uleb128 0x3a
 12848 0379 0B       		.uleb128 0xb
 12849 037a 3B       		.uleb128 0x3b
 12850 037b 05       		.uleb128 0x5
 12851 037c 49       		.uleb128 0x49
 12852 037d 13       		.uleb128 0x13
 12853 037e 11       		.uleb128 0x11
 12854 037f 01       		.uleb128 0x1
 12855 0380 12       		.uleb128 0x12
 12856 0381 01       		.uleb128 0x1
 12857 0382 40       		.uleb128 0x40
 12858 0383 06       		.uleb128 0x6
 12859 0384 01       		.uleb128 0x1
 12860 0385 13       		.uleb128 0x13
 12861 0386 00       		.byte	0x0
 12862 0387 00       		.byte	0x0
 12863 0388 40       		.uleb128 0x40
 12864 0389 05       		.uleb128 0x5
 12865 038a 00       		.byte	0x0
 12866 038b 03       		.uleb128 0x3
 12867 038c 08       		.uleb128 0x8
 12868 038d 3A       		.uleb128 0x3a
 12869 038e 0B       		.uleb128 0xb
 12870 038f 3B       		.uleb128 0x3b
 12871 0390 05       		.uleb128 0x5
 12872 0391 49       		.uleb128 0x49
 12873 0392 13       		.uleb128 0x13
 12874 0393 02       		.uleb128 0x2
 12875 0394 0A       		.uleb128 0xa
 12876 0395 00       		.byte	0x0
 12877 0396 00       		.byte	0x0
 12878 0397 41       		.uleb128 0x41
 12879 0398 05       		.uleb128 0x5
 12880 0399 00       		.byte	0x0
 12881 039a 03       		.uleb128 0x3
 12882 039b 0E       		.uleb128 0xe
 12883 039c 3A       		.uleb128 0x3a
 12884 039d 0B       		.uleb128 0xb
 12885 039e 3B       		.uleb128 0x3b
 12886 039f 05       		.uleb128 0x5
 12887 03a0 49       		.uleb128 0x49
 12888 03a1 13       		.uleb128 0x13
 12889 03a2 02       		.uleb128 0x2
 12890 03a3 0A       		.uleb128 0xa
 12891 03a4 00       		.byte	0x0
 12892 03a5 00       		.byte	0x0
 12893 03a6 42       		.uleb128 0x42
 12894 03a7 34       		.uleb128 0x34
 12895 03a8 00       		.byte	0x0
 12896 03a9 03       		.uleb128 0x3
 12897 03aa 08       		.uleb128 0x8
 12898 03ab 3A       		.uleb128 0x3a
 12899 03ac 0B       		.uleb128 0xb
 12900 03ad 3B       		.uleb128 0x3b
 12901 03ae 05       		.uleb128 0x5
 12902 03af 49       		.uleb128 0x49
ARM GAS  /tmp/ccwDRvq0.s 			page 263


 12903 03b0 13       		.uleb128 0x13
 12904 03b1 02       		.uleb128 0x2
 12905 03b2 0A       		.uleb128 0xa
 12906 03b3 00       		.byte	0x0
 12907 03b4 00       		.byte	0x0
 12908 03b5 43       		.uleb128 0x43
 12909 03b6 0B       		.uleb128 0xb
 12910 03b7 01       		.byte	0x1
 12911 03b8 11       		.uleb128 0x11
 12912 03b9 01       		.uleb128 0x1
 12913 03ba 12       		.uleb128 0x12
 12914 03bb 01       		.uleb128 0x1
 12915 03bc 01       		.uleb128 0x1
 12916 03bd 13       		.uleb128 0x13
 12917 03be 00       		.byte	0x0
 12918 03bf 00       		.byte	0x0
 12919 03c0 44       		.uleb128 0x44
 12920 03c1 2E       		.uleb128 0x2e
 12921 03c2 01       		.byte	0x1
 12922 03c3 3F       		.uleb128 0x3f
 12923 03c4 0C       		.uleb128 0xc
 12924 03c5 03       		.uleb128 0x3
 12925 03c6 0E       		.uleb128 0xe
 12926 03c7 3A       		.uleb128 0x3a
 12927 03c8 0B       		.uleb128 0xb
 12928 03c9 3B       		.uleb128 0x3b
 12929 03ca 05       		.uleb128 0x5
 12930 03cb 8740     		.uleb128 0x2007
 12931 03cd 0E       		.uleb128 0xe
 12932 03ce 49       		.uleb128 0x49
 12933 03cf 13       		.uleb128 0x13
 12934 03d0 11       		.uleb128 0x11
 12935 03d1 01       		.uleb128 0x1
 12936 03d2 12       		.uleb128 0x12
 12937 03d3 01       		.uleb128 0x1
 12938 03d4 40       		.uleb128 0x40
 12939 03d5 06       		.uleb128 0x6
 12940 03d6 01       		.uleb128 0x1
 12941 03d7 13       		.uleb128 0x13
 12942 03d8 00       		.byte	0x0
 12943 03d9 00       		.byte	0x0
 12944 03da 45       		.uleb128 0x45
 12945 03db 0B       		.uleb128 0xb
 12946 03dc 01       		.byte	0x1
 12947 03dd 55       		.uleb128 0x55
 12948 03de 06       		.uleb128 0x6
 12949 03df 00       		.byte	0x0
 12950 03e0 00       		.byte	0x0
 12951 03e1 46       		.uleb128 0x46
 12952 03e2 2E       		.uleb128 0x2e
 12953 03e3 01       		.byte	0x1
 12954 03e4 3F       		.uleb128 0x3f
 12955 03e5 0C       		.uleb128 0xc
 12956 03e6 03       		.uleb128 0x3
 12957 03e7 0E       		.uleb128 0xe
 12958 03e8 3A       		.uleb128 0x3a
 12959 03e9 0B       		.uleb128 0xb
ARM GAS  /tmp/ccwDRvq0.s 			page 264


 12960 03ea 3B       		.uleb128 0x3b
 12961 03eb 05       		.uleb128 0x5
 12962 03ec 8740     		.uleb128 0x2007
 12963 03ee 0E       		.uleb128 0xe
 12964 03ef 11       		.uleb128 0x11
 12965 03f0 01       		.uleb128 0x1
 12966 03f1 12       		.uleb128 0x12
 12967 03f2 01       		.uleb128 0x1
 12968 03f3 40       		.uleb128 0x40
 12969 03f4 06       		.uleb128 0x6
 12970 03f5 01       		.uleb128 0x1
 12971 03f6 13       		.uleb128 0x13
 12972 03f7 00       		.byte	0x0
 12973 03f8 00       		.byte	0x0
 12974 03f9 47       		.uleb128 0x47
 12975 03fa 0B       		.uleb128 0xb
 12976 03fb 01       		.byte	0x1
 12977 03fc 55       		.uleb128 0x55
 12978 03fd 06       		.uleb128 0x6
 12979 03fe 01       		.uleb128 0x1
 12980 03ff 13       		.uleb128 0x13
 12981 0400 00       		.byte	0x0
 12982 0401 00       		.byte	0x0
 12983 0402 00       		.byte	0x0
 12984              		.section	.debug_pubnames,"",%progbits
 12985 0000 BF010000 		.4byte	0x1bf
 12986 0004 0200     		.2byte	0x2
 12987 0006 00000000 		.4byte	.Ldebug_info0
 12988 000a 242F0000 		.4byte	0x2f24
 12989 000e 22190000 		.4byte	0x1922
 12990 0012 66617431 		.ascii	"fat16_open\000"
 12990      365F6F70 
 12990      656E00
 12991 001d 76190000 		.4byte	0x1976
 12992 0021 66617431 		.ascii	"fat16_close\000"
 12992      365F636C 
 12992      6F736500 
 12993 002d 9D1D0000 		.4byte	0x1d9d
 12994 0031 66617431 		.ascii	"fat16_get_dir_entry_of_path\000"
 12994      365F6765 
 12994      745F6469 
 12994      725F656E 
 12994      7472795F 
 12995 004d 2E200000 		.4byte	0x202e
 12996 0051 66617431 		.ascii	"fat16_open_file\000"
 12996      365F6F70 
 12996      656E5F66 
 12996      696C6500 
 12997 0061 8B200000 		.4byte	0x208b
 12998 0065 66617431 		.ascii	"fat16_close_file\000"
 12998      365F636C 
 12998      6F73655F 
 12998      66696C65 
 12998      00
 12999 0076 B7200000 		.4byte	0x20b7
 13000 007a 66617431 		.ascii	"fat16_read_file\000"
 13000      365F7265 
ARM GAS  /tmp/ccwDRvq0.s 			page 265


 13000      61645F66 
 13000      696C6500 
 13001 008a 90210000 		.4byte	0x2190
 13002 008e 66617431 		.ascii	"fat16_write_file\000"
 13002      365F7772 
 13002      6974655F 
 13002      66696C65 
 13002      00
 13003 009f AA220000 		.4byte	0x22aa
 13004 00a3 66617431 		.ascii	"fat16_seek_file\000"
 13004      365F7365 
 13004      656B5F66 
 13004      696C6500 
 13005 00b3 17230000 		.4byte	0x2317
 13006 00b7 66617431 		.ascii	"fat16_resize_file\000"
 13006      365F7265 
 13006      73697A65 
 13006      5F66696C 
 13006      6500
 13007 00c9 CE230000 		.4byte	0x23ce
 13008 00cd 66617431 		.ascii	"fat16_open_dir\000"
 13008      365F6F70 
 13008      656E5F64 
 13008      697200
 13009 00dc 25240000 		.4byte	0x2425
 13010 00e0 66617431 		.ascii	"fat16_close_dir\000"
 13010      365F636C 
 13010      6F73655F 
 13010      64697200 
 13011 00f0 51240000 		.4byte	0x2451
 13012 00f4 66617431 		.ascii	"fat16_read_dir\000"
 13012      365F7265 
 13012      61645F64 
 13012      697200
 13013 0103 90240000 		.4byte	0x2490
 13014 0107 66617431 		.ascii	"fat16_reset_dir\000"
 13014      365F7265 
 13014      7365745F 
 13014      64697200 
 13015 0117 C0240000 		.4byte	0x24c0
 13016 011b 66617431 		.ascii	"fat16_set_dir\000"
 13016      365F7365 
 13016      745F6469 
 13016      7200
 13017 0129 1E260000 		.4byte	0x261e
 13018 012d 66617431 		.ascii	"fat16_create_file\000"
 13018      365F6372 
 13018      65617465 
 13018      5F66696C 
 13018      6500
 13019 013f 0D270000 		.4byte	0x270d
 13020 0143 66617431 		.ascii	"fat16_delete_file\000"
 13020      365F6465 
 13020      6C657465 
 13020      5F66696C 
 13020      6500
 13021 0155 84270000 		.4byte	0x2784
ARM GAS  /tmp/ccwDRvq0.s 			page 266


 13022 0159 66617431 		.ascii	"fat16_get_fs_size\000"
 13022      365F6765 
 13022      745F6673 
 13022      5F73697A 
 13022      6500
 13023 016b B4270000 		.4byte	0x27b4
 13024 016f 66617431 		.ascii	"fat16_get_fs_free\000"
 13024      365F6765 
 13024      745F6673 
 13024      5F667265 
 13024      6500
 13025 0181 C6280000 		.4byte	0x28c6
 13026 0185 66696E64 		.ascii	"find_file_in_dir\000"
 13026      5F66696C 
 13026      655F696E 
 13026      5F646972 
 13026      00
 13027 0196 22290000 		.4byte	0x2922
 13028 019a 6F70656E 		.ascii	"open_file_in_dir\000"
 13028      5F66696C 
 13028      655F696E 
 13028      5F646972 
 13028      00
 13029 01ab 89290000 		.4byte	0x2989
 13030 01af 66617431 		.ascii	"fat16_file_size\000"
 13030      365F6669 
 13030      6C655F73 
 13030      697A6500 
 13031 01bf 00000000 		.4byte	0x0
 13032              		.section	.debug_pubtypes,"",%progbits
 13033 0000 CC020000 		.4byte	0x2cc
 13034 0004 0200     		.2byte	0x2
 13035 0006 00000000 		.4byte	.Ldebug_info0
 13036 000a 242F0000 		.4byte	0x2f24
 13037 000e 29000000 		.4byte	0x29
 13038 0012 626F6F6C 		.ascii	"bool_t\000"
 13038      5F7400
 13039 0019 42000000 		.4byte	0x42
 13040 001d 75696E74 		.ascii	"uint8_t\000"
 13040      385F7400 
 13041 0025 54000000 		.4byte	0x54
 13042 0029 696E7431 		.ascii	"int16_t\000"
 13042      365F7400 
 13043 0031 66000000 		.4byte	0x66
 13044 0035 75696E74 		.ascii	"uint16_t\000"
 13044      31365F74 
 13044      00
 13045 003e 78000000 		.4byte	0x78
 13046 0042 696E7433 		.ascii	"int32_t\000"
 13046      325F7400 
 13047 004a 8A000000 		.4byte	0x8a
 13048 004e 75696E74 		.ascii	"uint32_t\000"
 13048      33325F74 
 13048      00
 13049 0057 BC020000 		.4byte	0x2bc
 13050 005b 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 13050      4B5F5245 
ARM GAS  /tmp/ccwDRvq0.s 			page 267


 13050      43555253 
 13050      4956455F 
 13050      5400
 13051 006d C7020000 		.4byte	0x2c7
 13052 0071 5F66706F 		.ascii	"_fpos_t\000"
 13052      735F7400 
 13053 0079 D2020000 		.4byte	0x2d2
 13054 007d 77696E74 		.ascii	"wint_t\000"
 13054      5F7400
 13055 0084 36030000 		.4byte	0x336
 13056 0088 5F666C6F 		.ascii	"_flock_t\000"
 13056      636B5F74 
 13056      00
 13057 0091 43030000 		.4byte	0x343
 13058 0095 5F5F554C 		.ascii	"__ULong\000"
 13058      6F6E6700 
 13059 009d 4E030000 		.4byte	0x34e
 13060 00a1 5F426967 		.ascii	"_Bigint\000"
 13060      696E7400 
 13061 00a9 C3030000 		.4byte	0x3c3
 13062 00ad 5F5F746D 		.ascii	"__tm\000"
 13062      00
 13063 00b2 4E040000 		.4byte	0x44e
 13064 00b6 5F6F6E5F 		.ascii	"_on_exit_args\000"
 13064      65786974 
 13064      5F617267 
 13064      7300
 13065 00c4 A7040000 		.4byte	0x4a7
 13066 00c8 5F617465 		.ascii	"_atexit\000"
 13066      78697400 
 13067 00d0 0B050000 		.4byte	0x50b
 13068 00d4 5F5F7362 		.ascii	"__sbuf\000"
 13068      756600
 13069 00db 3A050000 		.4byte	0x53a
 13070 00df 5F5F7346 		.ascii	"__sFILE\000"
 13070      494C4500 
 13071 00e7 300A0000 		.4byte	0xa30
 13072 00eb 5F5F4649 		.ascii	"__FILE\000"
 13072      4C4500
 13073 00f2 3C0A0000 		.4byte	0xa3c
 13074 00f6 5F676C75 		.ascii	"_glue\000"
 13074      6500
 13075 00fc 830A0000 		.4byte	0xa83
 13076 0100 5F72616E 		.ascii	"_rand48\000"
 13076      64343800 
 13077 0108 B8060000 		.4byte	0x6b8
 13078 010c 5F726565 		.ascii	"_reent\000"
 13078      6E7400
 13079 0113 850B0000 		.4byte	0xb85
 13080 0117 70747264 		.ascii	"ptrdiff_t\000"
 13080      6966665F 
 13080      7400
 13081 0121 900B0000 		.4byte	0xb90
 13082 0125 73697A65 		.ascii	"size_t\000"
 13082      5F7400
 13083 012c A60B0000 		.4byte	0xba6
 13084 0130 5F5F7661 		.ascii	"__va_list\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 268


 13084      5F6C6973 
 13084      7400
 13085 013a 9B0B0000 		.4byte	0xb9b
 13086 013e 5F5F676E 		.ascii	"__gnuc_va_list\000"
 13086      75635F76 
 13086      615F6C69 
 13086      737400
 13087 014d C00B0000 		.4byte	0xbc0
 13088 0151 636C6F63 		.ascii	"clock_t\000"
 13088      6B5F7400 
 13089 0159 CB0B0000 		.4byte	0xbcb
 13090 015d 74696D65 		.ascii	"time_t\000"
 13090      5F7400
 13091 0164 D60B0000 		.4byte	0xbd6
 13092 0168 46494C45 		.ascii	"FILE\000"
 13092      00
 13093 016d E10B0000 		.4byte	0xbe1
 13094 0171 66706F73 		.ascii	"fpos_t\000"
 13094      5F7400
 13095 0178 BF110000 		.4byte	0x11bf
 13096 017c 746D00   		.ascii	"tm\000"
 13097 017f 60130000 		.4byte	0x1360
 13098 0183 76615F6C 		.ascii	"va_list\000"
 13098      69737400 
 13099 018b 91130000 		.4byte	0x1391
 13100 018f 4649464F 		.ascii	"FIFO\000"
 13100      00
 13101 0194 8A140000 		.4byte	0x148a
 13102 0198 55415254 		.ascii	"UARTBase\000"
 13102      42617365 
 13102      00
 13103 01a1 0A150000 		.4byte	0x150a
 13104 01a5 55415254 		.ascii	"UART0\000"
 13104      3000
 13105 01ab 1B160000 		.4byte	0x161b
 13106 01af 64657669 		.ascii	"device_read_t\000"
 13106      63655F72 
 13106      6561645F 
 13106      7400
 13107 01bd 45160000 		.4byte	0x1645
 13108 01c1 64657669 		.ascii	"device_read_callback_t\000"
 13108      63655F72 
 13108      6561645F 
 13108      63616C6C 
 13108      6261636B 
 13109 01d8 6F160000 		.4byte	0x166f
 13110 01dc 64657669 		.ascii	"device_read_interval_t\000"
 13110      63655F72 
 13110      6561645F 
 13110      696E7465 
 13110      7276616C 
 13111 01f3 A8160000 		.4byte	0x16a8
 13112 01f7 64657669 		.ascii	"device_write_t\000"
 13112      63655F77 
 13112      72697465 
 13112      5F7400
 13113 0206 D2160000 		.4byte	0x16d2
ARM GAS  /tmp/ccwDRvq0.s 			page 269


 13114 020a 70617274 		.ascii	"partition_struct\000"
 13114      6974696F 
 13114      6E5F7374 
 13114      72756374 
 13114      00
 13115 021b 33170000 		.4byte	0x1733
 13116 021f 66617431 		.ascii	"fat16_dir_entry_struct\000"
 13116      365F6469 
 13116      725F656E 
 13116      7472795F 
 13116      73747275 
 13117 0236 96170000 		.4byte	0x1796
 13118 023a 66617431 		.ascii	"fat16_header_struct\000"
 13118      365F6865 
 13118      61646572 
 13118      5F737472 
 13118      75637400 
 13119 024e 05180000 		.4byte	0x1805
 13120 0252 66617431 		.ascii	"fat16_fs_struct\000"
 13120      365F6673 
 13120      5F737472 
 13120      75637400 
 13121 0262 34180000 		.4byte	0x1834
 13122 0266 66617431 		.ascii	"fat16_file_struct\000"
 13122      365F6669 
 13122      6C655F73 
 13122      74727563 
 13122      7400
 13123 0278 7E180000 		.4byte	0x187e
 13124 027c 66617431 		.ascii	"fat16_dir_struct\000"
 13124      365F6469 
 13124      725F7374 
 13124      72756374 
 13124      00
 13125 028d B4180000 		.4byte	0x18b4
 13126 0291 66617431 		.ascii	"fat16_read_callback_arg\000"
 13126      365F7265 
 13126      61645F63 
 13126      616C6C62 
 13126      61636B5F 
 13127 02a9 F9180000 		.4byte	0x18f9
 13128 02ad 66617431 		.ascii	"fat16_usage_count_callback_arg\000"
 13128      365F7573 
 13128      6167655F 
 13128      636F756E 
 13128      745F6361 
 13129 02cc 00000000 		.4byte	0x0
 13130              		.section	.debug_aranges,"",%progbits
 13131 0000 1C010000 		.4byte	0x11c
 13132 0004 0200     		.2byte	0x2
 13133 0006 00000000 		.4byte	.Ldebug_info0
 13134 000a 04       		.byte	0x4
 13135 000b 00       		.byte	0x0
 13136 000c 0000     		.2byte	0x0
 13137 000e 0000     		.2byte	0x0
 13138 0010 00000000 		.4byte	.LFB109
 13139 0014 E0000000 		.4byte	.LFE109-.LFB109
ARM GAS  /tmp/ccwDRvq0.s 			page 270


 13140 0018 00000000 		.4byte	.LFB110
 13141 001c 34000000 		.4byte	.LFE110-.LFB110
 13142 0020 00000000 		.4byte	.LFB111
 13143 0024 80030000 		.4byte	.LFE111-.LFB111
 13144 0028 00000000 		.4byte	.LFB112
 13145 002c A0010000 		.4byte	.LFE112-.LFB112
 13146 0030 00000000 		.4byte	.LFB113
 13147 0034 08020000 		.4byte	.LFE113-.LFB113
 13148 0038 00000000 		.4byte	.LFB114
 13149 003c EC000000 		.4byte	.LFE114-.LFB114
 13150 0040 00000000 		.4byte	.LFB115
 13151 0044 B4000000 		.4byte	.LFE115-.LFB115
 13152 0048 00000000 		.4byte	.LFB116
 13153 004c 44040000 		.4byte	.LFE116-.LFB116
 13154 0050 00000000 		.4byte	.LFB117
 13155 0054 00020000 		.4byte	.LFE117-.LFB117
 13156 0058 00000000 		.4byte	.LFB118
 13157 005c 2C010000 		.4byte	.LFE118-.LFB118
 13158 0060 00000000 		.4byte	.LFB119
 13159 0064 B0020000 		.4byte	.LFE119-.LFB119
 13160 0068 00000000 		.4byte	.LFB120
 13161 006c B8010000 		.4byte	.LFE120-.LFB120
 13162 0070 00000000 		.4byte	.LFB121
 13163 0074 F0000000 		.4byte	.LFE121-.LFB121
 13164 0078 00000000 		.4byte	.LFB122
 13165 007c BC000000 		.4byte	.LFE122-.LFB122
 13166 0080 00000000 		.4byte	.LFB123
 13167 0084 2C000000 		.4byte	.LFE123-.LFB123
 13168 0088 00000000 		.4byte	.LFB124
 13169 008c 6C030000 		.4byte	.LFE124-.LFB124
 13170 0090 00000000 		.4byte	.LFB125
 13171 0094 5C040000 		.4byte	.LFE125-.LFB125
 13172 0098 00000000 		.4byte	.LFB126
 13173 009c 2C010000 		.4byte	.LFE126-.LFB126
 13174 00a0 00000000 		.4byte	.LFB127
 13175 00a4 78020000 		.4byte	.LFE127-.LFB127
 13176 00a8 00000000 		.4byte	.LFB128
 13177 00ac AC000000 		.4byte	.LFE128-.LFB128
 13178 00b0 00000000 		.4byte	.LFB129
 13179 00b4 2C000000 		.4byte	.LFE129-.LFB129
 13180 00b8 00000000 		.4byte	.LFB130
 13181 00bc 2C010000 		.4byte	.LFE130-.LFB130
 13182 00c0 00000000 		.4byte	.LFB131
 13183 00c4 38000000 		.4byte	.LFE131-.LFB131
 13184 00c8 00000000 		.4byte	.LFB132
 13185 00cc 40000000 		.4byte	.LFE132-.LFB132
 13186 00d0 00000000 		.4byte	.LFB133
 13187 00d4 58050000 		.4byte	.LFE133-.LFB133
 13188 00d8 00000000 		.4byte	.LFB134
 13189 00dc 50030000 		.4byte	.LFE134-.LFB134
 13190 00e0 00000000 		.4byte	.LFB135
 13191 00e4 30010000 		.4byte	.LFE135-.LFB135
 13192 00e8 00000000 		.4byte	.LFB136
 13193 00ec 44000000 		.4byte	.LFE136-.LFB136
 13194 00f0 00000000 		.4byte	.LFB137
 13195 00f4 28010000 		.4byte	.LFE137-.LFB137
 13196 00f8 00000000 		.4byte	.LFB138
ARM GAS  /tmp/ccwDRvq0.s 			page 271


 13197 00fc B8000000 		.4byte	.LFE138-.LFB138
 13198 0100 00000000 		.4byte	.LFB139
 13199 0104 84000000 		.4byte	.LFE139-.LFB139
 13200 0108 00000000 		.4byte	.LFB140
 13201 010c 70000000 		.4byte	.LFE140-.LFB140
 13202 0110 00000000 		.4byte	.LFB141
 13203 0114 1C000000 		.4byte	.LFE141-.LFB141
 13204 0118 00000000 		.4byte	0x0
 13205 011c 00000000 		.4byte	0x0
 13206              		.section	.debug_ranges,"",%progbits
 13207              	.Ldebug_ranges0:
 13208 0000 A0000000 		.4byte	.LBB17
 13209 0004 BC000000 		.4byte	.LBE17
 13210 0008 C4000000 		.4byte	.LBB18
 13211 000c EC010000 		.4byte	.LBE18
 13212 0010 00000000 		.4byte	0x0
 13213 0014 00000000 		.4byte	0x0
 13214 0018 EC010000 		.4byte	.LBB36
 13215 001c 64030000 		.4byte	.LBE36
 13216 0020 84030000 		.4byte	.LBB39
 13217 0024 88030000 		.4byte	.LBE39
 13218 0028 00000000 		.4byte	0x0
 13219 002c 00000000 		.4byte	0x0
 13220 0030 64000000 		.4byte	.LBB45
 13221 0034 A8000000 		.4byte	.LBE45
 13222 0038 CC000000 		.4byte	.LBB46
 13223 003c D0000000 		.4byte	.LBE46
 13224 0040 00000000 		.4byte	0x0
 13225 0044 00000000 		.4byte	0x0
 13226 0048 4C010000 		.4byte	.LBB58
 13227 004c D4020000 		.4byte	.LBE58
 13228 0050 F8020000 		.4byte	.LBB64
 13229 0054 FC020000 		.4byte	.LBE64
 13230 0058 D8020000 		.4byte	.LBB63
 13231 005c F4020000 		.4byte	.LBE63
 13232 0060 00000000 		.4byte	0x0
 13233 0064 00000000 		.4byte	0x0
 13234 0068 00000000 		.4byte	.LFB109
 13235 006c E0000000 		.4byte	.LFE109
 13236 0070 00000000 		.4byte	.LFB110
 13237 0074 34000000 		.4byte	.LFE110
 13238 0078 00000000 		.4byte	.LFB111
 13239 007c 80030000 		.4byte	.LFE111
 13240 0080 00000000 		.4byte	.LFB112
 13241 0084 A0010000 		.4byte	.LFE112
 13242 0088 00000000 		.4byte	.LFB113
 13243 008c 08020000 		.4byte	.LFE113
 13244 0090 00000000 		.4byte	.LFB114
 13245 0094 EC000000 		.4byte	.LFE114
 13246 0098 00000000 		.4byte	.LFB115
 13247 009c B4000000 		.4byte	.LFE115
 13248 00a0 00000000 		.4byte	.LFB116
 13249 00a4 44040000 		.4byte	.LFE116
 13250 00a8 00000000 		.4byte	.LFB117
 13251 00ac 00020000 		.4byte	.LFE117
 13252 00b0 00000000 		.4byte	.LFB118
 13253 00b4 2C010000 		.4byte	.LFE118
ARM GAS  /tmp/ccwDRvq0.s 			page 272


 13254 00b8 00000000 		.4byte	.LFB119
 13255 00bc B0020000 		.4byte	.LFE119
 13256 00c0 00000000 		.4byte	.LFB120
 13257 00c4 B8010000 		.4byte	.LFE120
 13258 00c8 00000000 		.4byte	.LFB121
 13259 00cc F0000000 		.4byte	.LFE121
 13260 00d0 00000000 		.4byte	.LFB122
 13261 00d4 BC000000 		.4byte	.LFE122
 13262 00d8 00000000 		.4byte	.LFB123
 13263 00dc 2C000000 		.4byte	.LFE123
 13264 00e0 00000000 		.4byte	.LFB124
 13265 00e4 6C030000 		.4byte	.LFE124
 13266 00e8 00000000 		.4byte	.LFB125
 13267 00ec 5C040000 		.4byte	.LFE125
 13268 00f0 00000000 		.4byte	.LFB126
 13269 00f4 2C010000 		.4byte	.LFE126
 13270 00f8 00000000 		.4byte	.LFB127
 13271 00fc 78020000 		.4byte	.LFE127
 13272 0100 00000000 		.4byte	.LFB128
 13273 0104 AC000000 		.4byte	.LFE128
 13274 0108 00000000 		.4byte	.LFB129
 13275 010c 2C000000 		.4byte	.LFE129
 13276 0110 00000000 		.4byte	.LFB130
 13277 0114 2C010000 		.4byte	.LFE130
 13278 0118 00000000 		.4byte	.LFB131
 13279 011c 38000000 		.4byte	.LFE131
 13280 0120 00000000 		.4byte	.LFB132
 13281 0124 40000000 		.4byte	.LFE132
 13282 0128 00000000 		.4byte	.LFB133
 13283 012c 58050000 		.4byte	.LFE133
 13284 0130 00000000 		.4byte	.LFB134
 13285 0134 50030000 		.4byte	.LFE134
 13286 0138 00000000 		.4byte	.LFB135
 13287 013c 30010000 		.4byte	.LFE135
 13288 0140 00000000 		.4byte	.LFB136
 13289 0144 44000000 		.4byte	.LFE136
 13290 0148 00000000 		.4byte	.LFB137
 13291 014c 28010000 		.4byte	.LFE137
 13292 0150 00000000 		.4byte	.LFB138
 13293 0154 B8000000 		.4byte	.LFE138
 13294 0158 00000000 		.4byte	.LFB139
 13295 015c 84000000 		.4byte	.LFE139
 13296 0160 00000000 		.4byte	.LFB140
 13297 0164 70000000 		.4byte	.LFE140
 13298 0168 00000000 		.4byte	.LFB141
 13299 016c 1C000000 		.4byte	.LFE141
 13300 0170 00000000 		.4byte	0x0
 13301 0174 00000000 		.4byte	0x0
 13302              		.section	.debug_str,"MS",%progbits,1
 13303              	.LASF172:
 13304 0000 67657465 		.ascii	"getenv\000"
 13304      6E7600
 13305              	.LASF10:
 13306 0007 6C6F6E67 		.ascii	"long int\000"
 13306      20696E74 
 13306      00
 13307              	.LASF332:
ARM GAS  /tmp/ccwDRvq0.s 			page 273


 13308 0010 66617431 		.ascii	"fat16_close_file\000"
 13308      365F636C 
 13308      6F73655F 
 13308      66696C65 
 13308      00
 13309              	.LASF467:
 13310 0021 50574D54 		.ascii	"PWMTCR_PWM_ENABLE\000"
 13310      43525F50 
 13310      574D5F45 
 13310      4E41424C 
 13310      4500
 13311              	.LASF168:
 13312 0033 61746F66 		.ascii	"atof\000"
 13312      00
 13313              	.LASF297:
 13314 0038 73656374 		.ascii	"sectors_per_fat\000"
 13314      6F72735F 
 13314      7065725F 
 13314      66617400 
 13315              	.LASF336:
 13316 0048 62756666 		.ascii	"buffer_left\000"
 13316      65725F6C 
 13316      65667400 
 13317              	.LASF350:
 13318 0054 636C7573 		.ascii	"cluster_new_chain\000"
 13318      7465725F 
 13318      6E65775F 
 13318      63686169 
 13318      6E00
 13319              	.LASF459:
 13320 0066 50574D45 		.ascii	"PWMENA1\000"
 13320      4E413100 
 13321              	.LASF460:
 13322 006e 50574D45 		.ascii	"PWMENA2\000"
 13322      4E413200 
 13323              	.LASF461:
 13324 0076 50574D45 		.ascii	"PWMENA3\000"
 13324      4E413300 
 13325              	.LASF170:
 13326 007e 61746F6C 		.ascii	"atol\000"
 13326      00
 13327              	.LASF379:
 13328 0083 5F5A3137 		.ascii	"_Z17fat16_delete_fileP15fat16_fs_structP22fat16_dir"
 13328      66617431 
 13328      365F6465 
 13328      6C657465 
 13328      5F66696C 
 13329 00b6 5F656E74 		.ascii	"_entry_struct\000"
 13329      72795F73 
 13329      74727563 
 13329      7400
 13330              	.LASF464:
 13331 00c4 50574D45 		.ascii	"PWMENA6\000"
 13331      4E413600 
 13332              	.LASF381:
 13333 00cc 5F5A3137 		.ascii	"_Z17fat16_get_fs_sizePK15fat16_fs_struct\000"
 13333      66617431 
ARM GAS  /tmp/ccwDRvq0.s 			page 274


 13333      365F6765 
 13333      745F6673 
 13333      5F73697A 
 13334              	.LASF28:
 13335 00f5 5F6D6178 		.ascii	"_maxwds\000"
 13335      77647300 
 13336              	.LASF154:
 13337 00fd 73657476 		.ascii	"setvbuf\000"
 13337      62756600 
 13338              	.LASF289:
 13339 0105 75617274 		.ascii	"uart\000"
 13339      00
 13340              	.LASF114:
 13341 010a 63686172 		.ascii	"char\000"
 13341      00
 13342              	.LASF200:
 13343 010f 6D6B7469 		.ascii	"mktime\000"
 13343      6D6500
 13344              	.LASF150:
 13345 0116 72656D6F 		.ascii	"remove\000"
 13345      766500
 13346              	.LASF42:
 13347 011d 5F6F6E5F 		.ascii	"_on_exit_args\000"
 13347      65786974 
 13347      5F617267 
 13347      7300
 13348              	.LASF184:
 13349 012b 73797374 		.ascii	"system\000"
 13349      656D00
 13350              	.LASF194:
 13351 0132 746D5F79 		.ascii	"tm_yday\000"
 13351      64617900 
 13352              	.LASF80:
 13353 013a 5F776374 		.ascii	"_wctomb_state\000"
 13353      6F6D625F 
 13353      73746174 
 13353      6500
 13354              	.LASF380:
 13355 0148 66617431 		.ascii	"fat16_get_fs_size\000"
 13355      365F6765 
 13355      745F6673 
 13355      5F73697A 
 13355      6500
 13356              	.LASF147:
 13357 015a 67657473 		.ascii	"gets\000"
 13357      00
 13358              	.LASF326:
 13359 015f 636C7573 		.ascii	"cluster_num_next\000"
 13359      7465725F 
 13359      6E756D5F 
 13359      6E657874 
 13359      00
 13360              	.LASF426:
 13361 0170 54784D43 		.ascii	"TxMCR_INT_ON_MR0\000"
 13361      525F494E 
 13361      545F4F4E 
 13361      5F4D5230 
ARM GAS  /tmp/ccwDRvq0.s 			page 275


 13361      00
 13362              	.LASF419:
 13363 0181 49324378 		.ascii	"I2CxCONSET_AA\000"
 13363      434F4E53 
 13363      45545F41 
 13363      4100
 13364              	.LASF214:
 13365 018f 62756666 		.ascii	"buffer\000"
 13365      657200
 13366              	.LASF346:
 13367 0196 6E65775F 		.ascii	"new_pos\000"
 13367      706F7300 
 13368              	.LASF403:
 13369 019e 56494356 		.ascii	"VICVectCntl_ENABLE\000"
 13369      65637443 
 13369      6E746C5F 
 13369      454E4142 
 13369      4C4500
 13370              	.LASF82:
 13371 01b1 5F736967 		.ascii	"_signal_buf\000"
 13371      6E616C5F 
 13371      62756600 
 13372              	.LASF174:
 13373 01bd 6D626C65 		.ascii	"mblen\000"
 13373      6E00
 13374              	.LASF17:
 13375 01c3 756E7369 		.ascii	"unsigned int\000"
 13375      676E6564 
 13375      20696E74 
 13375      00
 13376              	.LASF452:
 13377 01d0 4C455230 		.ascii	"LER0_EN\000"
 13377      5F454E00 
 13378              	.LASF11:
 13379 01d8 75696E74 		.ascii	"uint32_t\000"
 13379      33325F74 
 13379      00
 13380              	.LASF474:
 13381 01e1 5F5F676E 		.ascii	"__gnu_cxx\000"
 13381      755F6378 
 13381      7800
 13382              	.LASF261:
 13383 01eb 6C6F6E67 		.ascii	"long_name\000"
 13383      5F6E616D 
 13383      6500
 13384              	.LASF52:
 13385 01f5 5F73697A 		.ascii	"_size\000"
 13385      6500
 13386              	.LASF251:
 13387 01fb 64657669 		.ascii	"device_read_interval_t\000"
 13387      63655F72 
 13387      6561645F 
 13387      696E7465 
 13387      7276616C 
 13388              	.LASF56:
 13389 0212 5F6C6266 		.ascii	"_lbfsize\000"
 13389      73697A65 
ARM GAS  /tmp/ccwDRvq0.s 			page 276


 13389      00
 13390              	.LASF54:
 13391 021b 5F666C61 		.ascii	"_flags\000"
 13391      677300
 13392              	.LASF212:
 13393 0222 68656164 		.ascii	"head\000"
 13393      00
 13394              	.LASF233:
 13395 0227 5F5A4E38 		.ascii	"_ZN8UARTBase5ClearEv\000"
 13395      55415254 
 13395      42617365 
 13395      35436C65 
 13395      61724576 
 13396              	.LASF64:
 13397 023c 5F626C6B 		.ascii	"_blksize\000"
 13397      73697A65 
 13397      00
 13398              	.LASF337:
 13399 0245 66697273 		.ascii	"first_cluster_offset\000"
 13399      745F636C 
 13399      75737465 
 13399      725F6F66 
 13399      66736574 
 13400              	.LASF340:
 13401 025a 5F5A3136 		.ascii	"_Z16fat16_write_fileP17fat16_file_structPKht\000"
 13401      66617431 
 13401      365F7772 
 13401      6974655F 
 13401      66696C65 
 13402              	.LASF93:
 13403 0287 5F657272 		.ascii	"_errno\000"
 13403      6E6F00
 13404              	.LASF176:
 13405 028e 77636861 		.ascii	"wchar_t\000"
 13405      725F7400 
 13406              	.LASF279:
 13407 0296 706F735F 		.ascii	"pos_cluster\000"
 13407      636C7573 
 13407      74657200 
 13408              	.LASF409:
 13409 02a2 53535053 		.ascii	"SSPSR_TFE\000"
 13409      525F5446 
 13409      4500
 13410              	.LASF365:
 13411 02ac 6E616D65 		.ascii	"name_ext\000"
 13411      5F657874 
 13411      00
 13412              	.LASF29:
 13413 02b5 5F736967 		.ascii	"_sign\000"
 13413      6E00
 13414              	.LASF299:
 13415 02bb 64617461 		.ascii	"data_sector_count\000"
 13415      5F736563 
 13415      746F725F 
 13415      636F756E 
 13415      7400
 13416              	.LASF190:
ARM GAS  /tmp/ccwDRvq0.s 			page 277


 13417 02cd 746D5F6D 		.ascii	"tm_mday\000"
 13417      64617900 
 13418              	.LASF301:
 13419 02d5 66617431 		.ascii	"fat16_read_header\000"
 13419      365F7265 
 13419      61645F68 
 13419      65616465 
 13419      7200
 13420              	.LASF290:
 13421 02e7 70617274 		.ascii	"partition_offset\000"
 13421      6974696F 
 13421      6E5F6F66 
 13421      66736574 
 13421      00
 13422              	.LASF68:
 13423 02f8 5F6D6273 		.ascii	"_mbstate\000"
 13423      74617465 
 13423      00
 13424              	.LASF442:
 13425 0301 54784343 		.ascii	"TxCCR_CAP2RE\000"
 13425      525F4341 
 13425      50325245 
 13425      00
 13426              	.LASF273:
 13427 030e 636C7573 		.ascii	"cluster_zero_offset\000"
 13427      7465725F 
 13427      7A65726F 
 13427      5F6F6666 
 13427      73657400 
 13428              	.LASF77:
 13429 0322 5F723438 		.ascii	"_r48\000"
 13429      00
 13430              	.LASF26:
 13431 0327 5F5F554C 		.ascii	"__ULong\000"
 13431      6F6E6700 
 13432              	.LASF281:
 13433 032f 656E7472 		.ascii	"entry_next\000"
 13433      795F6E65 
 13433      787400
 13434              	.LASF385:
 13435 033a 66617431 		.ascii	"fat16_get_fs_free_callback\000"
 13435      365F6765 
 13435      745F6673 
 13435      5F667265 
 13435      655F6361 
 13436              	.LASF361:
 13437 0355 5F5A3133 		.ascii	"_Z13fat16_set_dirP16fat16_dir_structt\000"
 13437      66617431 
 13437      365F7365 
 13437      745F6469 
 13437      72503136 
 13438              	.LASF158:
 13439 037b 756E6765 		.ascii	"ungetc\000"
 13439      746300
 13440              	.LASF293:
 13441 0382 72657365 		.ascii	"reserved_sectors\000"
 13441      72766564 
ARM GAS  /tmp/ccwDRvq0.s 			page 278


 13441      5F736563 
 13441      746F7273 
 13441      00
 13442              	.LASF218:
 13443 0393 52656164 		.ascii	"Read\000"
 13443      00
 13444              	.LASF19:
 13445 0398 5F66706F 		.ascii	"_fpos_t\000"
 13445      735F7400 
 13446              	.LASF469:
 13447 03a0 57444D4F 		.ascii	"WDMOD_WDRESET\000"
 13447      445F5744 
 13447      52455345 
 13447      5400
 13448              	.LASF49:
 13449 03ae 5F666E73 		.ascii	"_fns\000"
 13449      00
 13450              	.LASF248:
 13451 03b3 5F5A4E35 		.ascii	"_ZN5UART09WriteLineEPKcz\000"
 13451      55415254 
 13451      30395772 
 13451      6974654C 
 13451      696E6545 
 13452              	.LASF57:
 13453 03cc 5F636F6F 		.ascii	"_cookie\000"
 13453      6B696500 
 13454              	.LASF223:
 13455 03d4 42617564 		.ascii	"BaudRate1200\000"
 13455      52617465 
 13455      31323030 
 13455      00
 13456              	.LASF454:
 13457 03e1 4C455232 		.ascii	"LER2_EN\000"
 13457      5F454E00 
 13458              	.LASF31:
 13459 03e9 5F426967 		.ascii	"_Bigint\000"
 13459      696E7400 
 13460              	.LASF434:
 13461 03f1 54784952 		.ascii	"TxIR_CR2_FLAG\000"
 13461      5F435232 
 13461      5F464C41 
 13461      4700
 13462              	.LASF39:
 13463 03ff 5F5F746D 		.ascii	"__tm_wday\000"
 13463      5F776461 
 13463      7900
 13464              	.LASF429:
 13465 0409 54784952 		.ascii	"TxIR_MR1_FLAG\000"
 13465      5F4D5231 
 13465      5F464C41 
 13465      4700
 13466              	.LASF370:
 13467 0417 66617431 		.ascii	"fat16_create_file\000"
 13467      365F6372 
 13467      65617465 
 13467      5F66696C 
 13467      6500
ARM GAS  /tmp/ccwDRvq0.s 			page 279


 13468              	.LASF103:
 13469 0429 5F726573 		.ascii	"_result\000"
 13469      756C7400 
 13470              	.LASF368:
 13471 0431 6E616D65 		.ascii	"name_ext_len\000"
 13471      5F657874 
 13471      5F6C656E 
 13471      00
 13472              	.LASF338:
 13473 043e 636F7079 		.ascii	"copy_length\000"
 13473      5F6C656E 
 13473      67746800 
 13474              	.LASF35:
 13475 044a 5F5F746D 		.ascii	"__tm_hour\000"
 13475      5F686F75 
 13475      7200
 13476              	.LASF206:
 13477 0454 73747266 		.ascii	"strftime\000"
 13477      74696D65 
 13477      00
 13478              	.LASF344:
 13479 045d 5F5A3135 		.ascii	"_Z15fat16_seek_fileP17fat16_file_structPlh\000"
 13479      66617431 
 13479      365F7365 
 13479      656B5F66 
 13479      696C6550 
 13480              	.LASF177:
 13481 0488 6D62746F 		.ascii	"mbtowc\000"
 13481      776300
 13482              	.LASF191:
 13483 048f 746D5F6D 		.ascii	"tm_mon\000"
 13483      6F6E00
 13484              	.LASF268:
 13485 0496 6661745F 		.ascii	"fat_offset\000"
 13485      6F666673 
 13485      657400
 13486              	.LASF427:
 13487 04a1 54784D43 		.ascii	"TxMCR_RESET_ON_MR0\000"
 13487      525F5245 
 13487      5345545F 
 13487      4F4E5F4D 
 13487      523000
 13488              	.LASF132:
 13489 04b4 66706F73 		.ascii	"fpos_t\000"
 13489      5F7400
 13490              	.LASF23:
 13491 04bb 5F5F636F 		.ascii	"__count\000"
 13491      756E7400 
 13492              	.LASF219:
 13493 04c3 5F5A4E34 		.ascii	"_ZN4FIFO7HasDataEv\000"
 13493      4649464F 
 13493      37486173 
 13493      44617461 
 13493      457600
 13494              	.LASF15:
 13495 04d6 666C6F61 		.ascii	"float\000"
 13495      7400
ARM GAS  /tmp/ccwDRvq0.s 			page 280


 13496              	.LASF475:
 13497 04dc 42617564 		.ascii	"BaudRate\000"
 13497      52617465 
 13497      00
 13498              	.LASF316:
 13499 04e5 6C656E67 		.ascii	"length_to_sep\000"
 13499      74685F74 
 13499      6F5F7365 
 13499      7000
 13500              	.LASF320:
 13501 04f3 636F756E 		.ascii	"count\000"
 13501      7400
 13502              	.LASF201:
 13503 04f9 74696D65 		.ascii	"time\000"
 13503      00
 13504              	.LASF341:
 13505 04fe 77726974 		.ascii	"write_length\000"
 13505      655F6C65 
 13505      6E677468 
 13505      00
 13506              	.LASF270:
 13507 050b 73656374 		.ascii	"sector_size\000"
 13507      6F725F73 
 13507      697A6500 
 13508              	.LASF5:
 13509 0517 696E7431 		.ascii	"int16_t\000"
 13509      365F7400 
 13510              	.LASF86:
 13511 051f 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 13511      72746F77 
 13511      63735F73 
 13511      74617465 
 13511      00
 13512              	.LASF473:
 13513 0530 2F686F6D 		.ascii	"/home/elijah/projects/arm7_app\000"
 13513      652F656C 
 13513      696A6168 
 13513      2F70726F 
 13513      6A656374 
 13514              	.LASF317:
 13515 054f 66617431 		.ascii	"fat16_get_next_cluster\000"
 13515      365F6765 
 13515      745F6E65 
 13515      78745F63 
 13515      6C757374 
 13516              	.LASF282:
 13517 0566 66617431 		.ascii	"fat16_read_callback_arg\000"
 13517      365F7265 
 13517      61645F63 
 13517      616C6C62 
 13517      61636B5F 
 13518              	.LASF209:
 13519 057e 4649464F 		.ascii	"FIFOBufferMask\000"
 13519      42756666 
 13519      65724D61 
 13519      736B00
 13520              	.LASF14:
ARM GAS  /tmp/ccwDRvq0.s 			page 281


 13521 058d 6C6F6E67 		.ascii	"long long unsigned int\000"
 13521      206C6F6E 
 13521      6720756E 
 13521      7369676E 
 13521      65642069 
 13522              	.LASF263:
 13523 05a4 636C7573 		.ascii	"cluster\000"
 13523      74657200 
 13524              	.LASF372:
 13525 05ac 66696C65 		.ascii	"file\000"
 13525      00
 13526              	.LASF420:
 13527 05b1 49324378 		.ascii	"I2CxCONSET_SI\000"
 13527      434F4E53 
 13527      45545F53 
 13527      4900
 13528              	.LASF321:
 13529 05bf 636C7573 		.ascii	"cluster_max\000"
 13529      7465725F 
 13529      6D617800 
 13530              	.LASF30:
 13531 05cb 5F776473 		.ascii	"_wds\000"
 13531      00
 13532              	.LASF431:
 13533 05d0 54784952 		.ascii	"TxIR_MR3_FLAG\000"
 13533      5F4D5233 
 13533      5F464C41 
 13533      4700
 13534              	.LASF119:
 13535 05de 5F72616E 		.ascii	"_rand48\000"
 13535      64343800 
 13536              	.LASF383:
 13537 05e6 5F5A3137 		.ascii	"_Z17fat16_get_fs_freePK15fat16_fs_struct\000"
 13537      66617431 
 13537      365F6765 
 13537      745F6673 
 13537      5F667265 
 13538              	.LASF199:
 13539 060f 64696666 		.ascii	"difftime\000"
 13539      74696D65 
 13539      00
 13540              	.LASF203:
 13541 0618 6374696D 		.ascii	"ctime\000"
 13541      6500
 13542              	.LASF186:
 13543 061e 7763746F 		.ascii	"wctomb\000"
 13543      6D6200
 13544              	.LASF432:
 13545 0625 54784952 		.ascii	"TxIR_CR0_FLAG\000"
 13545      5F435230 
 13545      5F464C41 
 13545      4700
 13546              	.LASF369:
 13547 0633 6C6F6E67 		.ascii	"long_name_curr\000"
 13547      5F6E616D 
 13547      655F6375 
 13547      727200
ARM GAS  /tmp/ccwDRvq0.s 			page 282


 13548              	.LASF468:
 13549 0642 57444D4F 		.ascii	"WDMOD_WDEN\000"
 13549      445F5744 
 13549      454E00
 13550              	.LASF115:
 13551 064d 5F5F4649 		.ascii	"__FILE\000"
 13551      4C4500
 13552              	.LASF65:
 13553 0654 5F6F6666 		.ascii	"_offset\000"
 13553      73657400 
 13554              	.LASF62:
 13555 065c 5F756275 		.ascii	"_ubuf\000"
 13555      6600
 13556              	.LASF146:
 13557 0662 67657463 		.ascii	"getc\000"
 13557      00
 13558              	.LASF405:
 13559 0667 55494952 		.ascii	"UIIR_ID_MASK\000"
 13559      5F49445F 
 13559      4D41534B 
 13559      00
 13560              	.LASF225:
 13561 0674 42617564 		.ascii	"BaudRate4800\000"
 13561      52617465 
 13561      34383030 
 13561      00
 13562              	.LASF324:
 13563 0681 636C7573 		.ascii	"cluster_new\000"
 13563      7465725F 
 13563      6E657700 
 13564              	.LASF352:
 13565 068d 5F5A3134 		.ascii	"_Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_e"
 13565      66617431 
 13565      365F6F70 
 13565      656E5F64 
 13565      69725031 
 13566 06c0 6E747279 		.ascii	"ntry_struct\000"
 13566      5F737472 
 13566      75637400 
 13567              	.LASF388:
 13568 06cc 6E616D65 		.ascii	"name\000"
 13568      00
 13569              	.LASF129:
 13570 06d1 636C6F63 		.ascii	"clock_t\000"
 13570      6B5F7400 
 13571              	.LASF353:
 13572 06d9 66617431 		.ascii	"fat16_close_dir\000"
 13572      365F636C 
 13572      6F73655F 
 13572      64697200 
 13573              	.LASF256:
 13574 06e9 64657669 		.ascii	"device_write\000"
 13574      63655F77 
 13574      72697465 
 13574      00
 13575              	.LASF230:
 13576 06f6 42617564 		.ascii	"BaudRate115200\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 283


 13576      52617465 
 13576      31313532 
 13576      303000
 13577              	.LASF98:
 13578 0705 5F656D65 		.ascii	"_emergency\000"
 13578      7267656E 
 13578      637900
 13579              	.LASF283:
 13580 0710 656E7472 		.ascii	"entry_cur\000"
 13580      795F6375 
 13580      7200
 13581              	.LASF58:
 13582 071a 5F726561 		.ascii	"_read\000"
 13582      6400
 13583              	.LASF407:
 13584 0720 554C5352 		.ascii	"ULSR_RDR\000"
 13584      5F524452 
 13584      00
 13585              	.LASF213:
 13586 0729 7461696C 		.ascii	"tail\000"
 13586      00
 13587              	.LASF414:
 13588 072e 53535043 		.ascii	"SSPCR0_CPHA\000"
 13588      52305F43 
 13588      50484100 
 13589              	.LASF210:
 13590 073a 5F5A4E34 		.ascii	"_ZN4FIFO14FIFOBufferSizeE\000"
 13590      4649464F 
 13590      31344649 
 13590      464F4275 
 13590      66666572 
 13591              	.LASF296:
 13592 0754 73656374 		.ascii	"sector_count_16\000"
 13592      6F725F63 
 13592      6F756E74 
 13592      5F313600 
 13593              	.LASF126:
 13594 0764 5F5F676E 		.ascii	"__gnuc_va_list\000"
 13594      75635F76 
 13594      615F6C69 
 13594      737400
 13595              	.LASF254:
 13596 0773 64657669 		.ascii	"device_read\000"
 13596      63655F72 
 13596      65616400 
 13597              	.LASF408:
 13598 077f 5353454C 		.ascii	"SSEL1\000"
 13598      3100
 13599              	.LASF125:
 13600 0785 73697A65 		.ascii	"size_t\000"
 13600      5F7400
 13601              	.LASF181:
 13602 078c 73747274 		.ascii	"strtod\000"
 13602      6F6400
 13603              	.LASF180:
 13604 0793 7372616E 		.ascii	"srand\000"
 13604      6400
ARM GAS  /tmp/ccwDRvq0.s 			page 284


 13605              	.LASF162:
 13606 0799 73747278 		.ascii	"strxfrm\000"
 13606      66726D00 
 13607              	.LASF315:
 13608 07a1 7365705F 		.ascii	"sep_pos\000"
 13608      706F7300 
 13609              	.LASF33:
 13610 07a9 5F5F746D 		.ascii	"__tm_sec\000"
 13610      5F736563 
 13610      00
 13611              	.LASF208:
 13612 07b2 4649464F 		.ascii	"FIFOBufferSize\000"
 13612      42756666 
 13612      65725369 
 13612      7A6500
 13613              	.LASF2:
 13614 07c1 626F6F6C 		.ascii	"bool_t\000"
 13614      5F7400
 13615              	.LASF250:
 13616 07c8 64657669 		.ascii	"device_read_callback_t\000"
 13616      63655F72 
 13616      6561645F 
 13616      63616C6C 
 13616      6261636B 
 13617              	.LASF108:
 13618 07df 5F637674 		.ascii	"_cvtbuf\000"
 13618      62756600 
 13619              	.LASF343:
 13620 07e7 66617431 		.ascii	"fat16_seek_file\000"
 13620      365F7365 
 13620      656B5F66 
 13620      696C6500 
 13621              	.LASF40:
 13622 07f7 5F5F746D 		.ascii	"__tm_yday\000"
 13622      5F796461 
 13622      7900
 13623              	.LASF24:
 13624 0801 5F5F7661 		.ascii	"__value\000"
 13624      6C756500 
 13625              	.LASF97:
 13626 0809 5F696E63 		.ascii	"_inc\000"
 13626      00
 13627              	.LASF48:
 13628 080e 5F696E64 		.ascii	"_ind\000"
 13628      00
 13629              	.LASF436:
 13630 0813 54784343 		.ascii	"TxCCR_CAP0RE\000"
 13630      525F4341 
 13630      50305245 
 13630      00
 13631              	.LASF171:
 13632 0820 62736561 		.ascii	"bsearch\000"
 13632      72636800 
 13633              	.LASF245:
 13634 0828 57726974 		.ascii	"WriteChar\000"
 13634      65436861 
 13634      7200
ARM GAS  /tmp/ccwDRvq0.s 			page 285


 13635              	.LASF443:
 13636 0832 54784343 		.ascii	"TxCCR_CAP2FE\000"
 13636      525F4341 
 13636      50324645 
 13636      00
 13637              	.LASF244:
 13638 083f 5F5A4E35 		.ascii	"_ZN5UART05WriteEPKc\000"
 13638      55415254 
 13638      30355772 
 13638      69746545 
 13638      504B6300 
 13639              	.LASF27:
 13640 0853 5F6E6578 		.ascii	"_next\000"
 13640      7400
 13641              	.LASF148:
 13642 0859 636C6561 		.ascii	"clearerr\000"
 13642      72657272 
 13642      00
 13643              	.LASF472:
 13644 0862 66617431 		.ascii	"fat16.cpp\000"
 13644      362E6370 
 13644      7000
 13645              	.LASF306:
 13646 086c 636C7573 		.ascii	"cluster_num\000"
 13646      7465725F 
 13646      6E756D00 
 13647              	.LASF390:
 13648 0878 5F5A3136 		.ascii	"_Z16open_file_in_dirP15fat16_fs_structP16fat16_dir_"
 13648      6F70656E 
 13648      5F66696C 
 13648      655F696E 
 13648      5F646972 
 13649 08ab 73747275 		.ascii	"structPKc\000"
 13649      6374504B 
 13649      6300
 13650              	.LASF300:
 13651 08b5 64617461 		.ascii	"data_cluster_count\000"
 13651      5F636C75 
 13651      73746572 
 13651      5F636F75 
 13651      6E7400
 13652              	.LASF314:
 13653 08c8 70617468 		.ascii	"path\000"
 13653      00
 13654              	.LASF226:
 13655 08cd 42617564 		.ascii	"BaudRate9600\000"
 13655      52617465 
 13655      39363030 
 13655      00
 13656              	.LASF216:
 13657 08da 436C6561 		.ascii	"Clear\000"
 13657      7200
 13658              	.LASF417:
 13659 08e0 49324378 		.ascii	"I2CxCONCLR_STAC\000"
 13659      434F4E43 
 13659      4C525F53 
 13659      54414300 
ARM GAS  /tmp/ccwDRvq0.s 			page 286


 13660              	.LASF423:
 13661 08f0 49324378 		.ascii	"I2CxCONSET_I2EN\000"
 13661      434F4E53 
 13661      45545F49 
 13661      32454E00 
 13662              	.LASF142:
 13663 0900 6672656F 		.ascii	"freopen\000"
 13663      70656E00 
 13664              	.LASF465:
 13665 0908 50574D54 		.ascii	"PWMTCR_COUNTER_ENABLE\000"
 13665      43525F43 
 13665      4F554E54 
 13665      45525F45 
 13665      4E41424C 
 13666              	.LASF198:
 13667 091e 636C6F63 		.ascii	"clock\000"
 13667      6B00
 13668              	.LASF211:
 13669 0924 5F5A4E34 		.ascii	"_ZN4FIFO14FIFOBufferMaskE\000"
 13669      4649464F 
 13669      31344649 
 13669      464F4275 
 13669      66666572 
 13670              	.LASF159:
 13671 093e 73747263 		.ascii	"strcoll\000"
 13671      6F6C6C00 
 13672              	.LASF348:
 13673 0946 5F5A3137 		.ascii	"_Z17fat16_resize_fileP17fat16_file_structm\000"
 13673      66617431 
 13673      365F7265 
 13673      73697A65 
 13673      5F66696C 
 13674              	.LASF360:
 13675 0971 66617431 		.ascii	"fat16_set_dir\000"
 13675      365F7365 
 13675      745F6469 
 13675      7200
 13676              	.LASF105:
 13677 097f 5F703573 		.ascii	"_p5s\000"
 13677      00
 13678              	.LASF378:
 13679 0984 66617431 		.ascii	"fat16_delete_file\000"
 13679      365F6465 
 13679      6C657465 
 13679      5F66696C 
 13679      6500
 13680              	.LASF285:
 13681 0996 62797465 		.ascii	"byte_count\000"
 13681      5F636F75 
 13681      6E7400
 13682              	.LASF422:
 13683 09a1 49324378 		.ascii	"I2CxCONSET_STA\000"
 13683      434F4E53 
 13683      45545F53 
 13683      544100
 13684              	.LASF70:
 13685 09b0 5F726565 		.ascii	"_reent\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 287


 13685      6E7400
 13686              	.LASF88:
 13687 09b7 5F776373 		.ascii	"_wcsrtombs_state\000"
 13687      72746F6D 
 13687      62735F73 
 13687      74617465 
 13687      00
 13688              	.LASF78:
 13689 09c8 5F6D626C 		.ascii	"_mblen_state\000"
 13689      656E5F73 
 13689      74617465 
 13689      00
 13690              	.LASF239:
 13691 09d5 5F5A4E35 		.ascii	"_ZN5UART06EnableEN8UARTBase8BaudRateE\000"
 13691      55415254 
 13691      3036456E 
 13691      61626C65 
 13691      454E3855 
 13692              	.LASF389:
 13693 09fb 6F70656E 		.ascii	"open_file_in_dir\000"
 13693      5F66696C 
 13693      655F696E 
 13693      5F646972 
 13693      00
 13694              	.LASF478:
 13695 0a0c 5F5A4E35 		.ascii	"_ZN5UART011GetInstanceEv\000"
 13695      55415254 
 13695      30313147 
 13695      6574496E 
 13695      7374616E 
 13696              	.LASF371:
 13697 0a25 5F5A3137 		.ascii	"_Z17fat16_create_fileP16fat16_dir_structPKcP22fat16"
 13697      66617431 
 13697      365F6372 
 13697      65617465 
 13697      5F66696C 
 13698 0a58 5F646972 		.ascii	"_dir_entry_struct\000"
 13698      5F656E74 
 13698      72795F73 
 13698      74727563 
 13698      7400
 13699              	.LASF240:
 13700 0a6a 49734368 		.ascii	"IsCharReady\000"
 13700      61725265 
 13700      61647900 
 13701              	.LASF36:
 13702 0a76 5F5F746D 		.ascii	"__tm_mday\000"
 13702      5F6D6461 
 13702      7900
 13703              	.LASF311:
 13704 0a80 63686172 		.ascii	"char_offset\000"
 13704      5F6F6666 
 13704      73657400 
 13705              	.LASF111:
 13706 0a8c 5F736967 		.ascii	"_sig_func\000"
 13706      5F66756E 
 13706      6300
ARM GAS  /tmp/ccwDRvq0.s 			page 288


 13707              	.LASF85:
 13708 0a96 5F6D6272 		.ascii	"_mbrtowc_state\000"
 13708      746F7763 
 13708      5F737461 
 13708      746500
 13709              	.LASF110:
 13710 0aa5 5F617465 		.ascii	"_atexit0\000"
 13710      78697430 
 13710      00
 13711              	.LASF298:
 13712 0aae 73656374 		.ascii	"sector_count\000"
 13712      6F725F63 
 13712      6F756E74 
 13712      00
 13713              	.LASF313:
 13714 0abb 66617431 		.ascii	"fat16_get_dir_entry_of_path\000"
 13714      365F6765 
 13714      745F6469 
 13714      725F656E 
 13714      7472795F 
 13715              	.LASF357:
 13716 0ad7 5F5A3134 		.ascii	"_Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_e"
 13716      66617431 
 13716      365F7265 
 13716      61645F64 
 13716      69725031 
 13717 0b0a 6E747279 		.ascii	"ntry_struct\000"
 13717      5F737472 
 13717      75637400 
 13718              	.LASF421:
 13719 0b16 49324378 		.ascii	"I2CxCONSET_STO\000"
 13719      434F4E53 
 13719      45545F53 
 13719      544F00
 13720              	.LASF463:
 13721 0b25 50574D45 		.ascii	"PWMENA5\000"
 13721      4E413500 
 13722              	.LASF331:
 13723 0b2d 66617431 		.ascii	"fat16_close\000"
 13723      365F636C 
 13723      6F736500 
 13724              	.LASF192:
 13725 0b39 746D5F79 		.ascii	"tm_year\000"
 13725      65617200 
 13726              	.LASF287:
 13727 0b41 636C7573 		.ascii	"cluster_count\000"
 13727      7465725F 
 13727      636F756E 
 13727      7400
 13728              	.LASF236:
 13729 0b4f 5F5A4E34 		.ascii	"_ZN4FIFO5ClearEv\000"
 13729      4649464F 
 13729      35436C65 
 13729      61724576 
 13729      00
 13730              	.LASF342:
 13731 0b60 73697A65 		.ascii	"size_old\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 289


 13731      5F6F6C64 
 13731      00
 13732              	.LASF104:
 13733 0b69 5F726573 		.ascii	"_result_k\000"
 13733      756C745F 
 13733      6B00
 13734              	.LASF13:
 13735 0b73 6C6F6E67 		.ascii	"long long int\000"
 13735      206C6F6E 
 13735      6720696E 
 13735      7400
 13736              	.LASF394:
 13737 0b81 5649435F 		.ascii	"VIC_USB_Intr\000"
 13737      5553425F 
 13737      496E7472 
 13737      00
 13738              	.LASF309:
 13739 0b8e 66617431 		.ascii	"fat16_interpret_dir_entry\000"
 13739      365F696E 
 13739      74657270 
 13739      7265745F 
 13739      6469725F 
 13740              	.LASF21:
 13741 0ba8 5F5F7763 		.ascii	"__wch\000"
 13741      6800
 13742              	.LASF228:
 13743 0bae 42617564 		.ascii	"BaudRate38400\000"
 13743      52617465 
 13743      33383430 
 13743      3000
 13744              	.LASF374:
 13745 0bbc 66726565 		.ascii	"free_dir_entries_found\000"
 13745      5F646972 
 13745      5F656E74 
 13745      72696573 
 13745      5F666F75 
 13746              	.LASF3:
 13747 0bd3 75696E74 		.ascii	"uint8_t\000"
 13747      385F7400 
 13748              	.LASF246:
 13749 0bdb 5F5A4E35 		.ascii	"_ZN5UART09WriteCharEh\000"
 13749      55415254 
 13749      30395772 
 13749      69746543 
 13749      68617245 
 13750              	.LASF165:
 13751 0bf1 71756F74 		.ascii	"quot\000"
 13751      00
 13752              	.LASF130:
 13753 0bf6 74696D65 		.ascii	"time_t\000"
 13753      5F7400
 13754              	.LASF272:
 13755 0bfd 726F6F74 		.ascii	"root_dir_offset\000"
 13755      5F646972 
 13755      5F6F6666 
 13755      73657400 
 13756              	.LASF61:
ARM GAS  /tmp/ccwDRvq0.s 			page 290


 13757 0c0d 5F636C6F 		.ascii	"_close\000"
 13757      736500
 13758              	.LASF205:
 13759 0c14 6C6F6361 		.ascii	"localtime\000"
 13759      6C74696D 
 13759      6500
 13760              	.LASF325:
 13761 0c1e 66617431 		.ascii	"fat16_free_clusters\000"
 13761      365F6672 
 13761      65655F63 
 13761      6C757374 
 13761      65727300 
 13762              	.LASF101:
 13763 0c32 5F5F7364 		.ascii	"__sdidinit\000"
 13763      6964696E 
 13763      697400
 13764              	.LASF151:
 13765 0c3d 72656E61 		.ascii	"rename\000"
 13765      6D6500
 13766              	.LASF277:
 13767 0c44 66617431 		.ascii	"fat16_file_struct\000"
 13767      365F6669 
 13767      6C655F73 
 13767      74727563 
 13767      7400
 13768              	.LASF179:
 13769 0c56 72616E64 		.ascii	"rand\000"
 13769      00
 13770              	.LASF255:
 13771 0c5b 64657669 		.ascii	"device_read_interval\000"
 13771      63655F72 
 13771      6561645F 
 13771      696E7465 
 13771      7276616C 
 13772              	.LASF155:
 13773 0c70 67657463 		.ascii	"getchar\000"
 13773      68617200 
 13774              	.LASF207:
 13775 0c78 76615F6C 		.ascii	"va_list\000"
 13775      69737400 
 13776              	.LASF94:
 13777 0c80 5F737464 		.ascii	"_stdin\000"
 13777      696E00
 13778              	.LASF157:
 13779 0c87 746D706E 		.ascii	"tmpnam\000"
 13779      616D00
 13780              	.LASF153:
 13781 0c8e 73657462 		.ascii	"setbuf\000"
 13781      756600
 13782              	.LASF355:
 13783 0c95 5F5A3135 		.ascii	"_Z15fat16_close_dirP16fat16_dir_struct\000"
 13783      66617431 
 13783      365F636C 
 13783      6F73655F 
 13783      64697250 
 13784              	.LASF413:
 13785 0cbc 53535043 		.ascii	"SSPCR0_CPOL\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 291


 13785      52305F43 
 13785      504F4C00 
 13786              	.LASF90:
 13787 0cc8 5F6E6578 		.ascii	"_nextf\000"
 13787      746600
 13788              	.LASF73:
 13789 0ccf 5F617363 		.ascii	"_asctime_buf\000"
 13789      74696D65 
 13789      5F627566 
 13789      00
 13790              	.LASF51:
 13791 0cdc 5F626173 		.ascii	"_base\000"
 13791      6500
 13792              	.LASF106:
 13793 0ce2 5F667265 		.ascii	"_freelist\000"
 13793      656C6973 
 13793      7400
 13794              	.LASF121:
 13795 0cec 5F6D756C 		.ascii	"_mult\000"
 13795      7400
 13796              	.LASF122:
 13797 0cf2 5F616464 		.ascii	"_add\000"
 13797      00
 13798              	.LASF265:
 13799 0cf7 656E7472 		.ascii	"entry_offset\000"
 13799      795F6F66 
 13799      66736574 
 13799      00
 13800              	.LASF264:
 13801 0d04 66696C65 		.ascii	"file_size\000"
 13801      5F73697A 
 13801      6500
 13802              	.LASF280:
 13803 0d0e 66617431 		.ascii	"fat16_dir_struct\000"
 13803      365F6469 
 13803      725F7374 
 13803      72756374 
 13803      00
 13804              	.LASF386:
 13805 0d1f 66696E64 		.ascii	"find_file_in_dir\000"
 13805      5F66696C 
 13805      655F696E 
 13805      5F646972 
 13805      00
 13806              	.LASF87:
 13807 0d30 5F776372 		.ascii	"_wcrtomb_state\000"
 13807      746F6D62 
 13807      5F737461 
 13807      746500
 13808              	.LASF354:
 13809 0d3f 5F5A3136 		.ascii	"_Z16fat16_close_fileP17fat16_file_struct\000"
 13809      66617431 
 13809      365F636C 
 13809      6F73655F 
 13809      66696C65 
 13810              	.LASF202:
 13811 0d68 61736374 		.ascii	"asctime\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 292


 13811      696D6500 
 13812              	.LASF391:
 13813 0d70 66696C65 		.ascii	"file_entry\000"
 13813      5F656E74 
 13813      727900
 13814              	.LASF0:
 13815 0d7b 626F6F6C 		.ascii	"bool\000"
 13815      00
 13816              	.LASF366:
 13817 0d80 63686563 		.ascii	"checksum\000"
 13817      6B73756D 
 13817      00
 13818              	.LASF128:
 13819 0d89 5F5F6170 		.ascii	"__ap\000"
 13819      00
 13820              	.LASF471:
 13821 0d8e 474E5520 		.ascii	"GNU C++ 4.5.2\000"
 13821      432B2B20 
 13821      342E352E 
 13821      3200
 13822              	.LASF333:
 13823 0d9c 66617431 		.ascii	"fat16_read_file\000"
 13823      365F7265 
 13823      61645F66 
 13823      696C6500 
 13824              	.LASF404:
 13825 0dac 55494552 		.ascii	"UIER_ERBFI\000"
 13825      5F455242 
 13825      464900
 13826              	.LASF458:
 13827 0db7 4C455236 		.ascii	"LER6_EN\000"
 13827      5F454E00 
 13828              	.LASF249:
 13829 0dbf 64657669 		.ascii	"device_read_t\000"
 13829      63655F72 
 13829      6561645F 
 13829      7400
 13830              	.LASF143:
 13831 0dcd 66736565 		.ascii	"fseek\000"
 13831      6B00
 13832              	.LASF224:
 13833 0dd3 42617564 		.ascii	"BaudRate2400\000"
 13833      52617465 
 13833      32343030 
 13833      00
 13834              	.LASF173:
 13835 0de0 6C646976 		.ascii	"ldiv\000"
 13835      00
 13836              	.LASF102:
 13837 0de5 5F5F636C 		.ascii	"__cleanup\000"
 13837      65616E75 
 13837      7000
 13838              	.LASF163:
 13839 0def 5F6D6273 		.ascii	"_mbstate_t\000"
 13839      74617465 
 13839      5F7400
 13840              	.LASF376:
ARM GAS  /tmp/ccwDRvq0.s 			page 293


 13841 0dfa 6F666673 		.ascii	"offset_to\000"
 13841      65745F74 
 13841      6F00
 13842              	.LASF124:
 13843 0e04 70747264 		.ascii	"ptrdiff_t\000"
 13843      6966665F 
 13843      7400
 13844              	.LASF398:
 13845 0e0e 5649435F 		.ascii	"VIC_Channel_Timer0\000"
 13845      4368616E 
 13845      6E656C5F 
 13845      54696D65 
 13845      723000
 13846              	.LASF399:
 13847 0e21 5649435F 		.ascii	"VIC_Channel_Timer1\000"
 13847      4368616E 
 13847      6E656C5F 
 13847      54696D65 
 13847      723100
 13848              	.LASF267:
 13849 0e34 73697A65 		.ascii	"size\000"
 13849      00
 13850              	.LASF222:
 13851 0e39 55415254 		.ascii	"UARTBase\000"
 13851      42617365 
 13851      00
 13852              	.LASF241:
 13853 0e42 5F5A4E35 		.ascii	"_ZN5UART011IsCharReadyEv\000"
 13853      55415254 
 13853      30313149 
 13853      73436861 
 13853      72526561 
 13854              	.LASF292:
 13855 0e5b 73656374 		.ascii	"sectors_per_cluster\000"
 13855      6F72735F 
 13855      7065725F 
 13855      636C7573 
 13855      74657200 
 13856              	.LASF25:
 13857 0e6f 5F666C6F 		.ascii	"_flock_t\000"
 13857      636B5F74 
 13857      00
 13858              	.LASF144:
 13859 0e78 66736574 		.ascii	"fsetpos\000"
 13859      706F7300 
 13860              	.LASF41:
 13861 0e80 5F5F746D 		.ascii	"__tm_isdst\000"
 13861      5F697364 
 13861      737400
 13862              	.LASF362:
 13863 0e8b 66617431 		.ascii	"fat16_write_dir_entry\000"
 13863      365F7772 
 13863      6974655F 
 13863      6469725F 
 13863      656E7472 
 13864              	.LASF397:
 13865 0ea1 4343525F 		.ascii	"CCR_CLKSRC_32KHZ\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 294


 13865      434C4B53 
 13865      52435F33 
 13865      324B485A 
 13865      00
 13866              	.LASF215:
 13867 0eb2 4649464F 		.ascii	"FIFO\000"
 13867      00
 13868              	.LASF145:
 13869 0eb7 6674656C 		.ascii	"ftell\000"
 13869      6C00
 13870              	.LASF276:
 13871 0ebd 68656164 		.ascii	"header\000"
 13871      657200
 13872              	.LASF418:
 13873 0ec4 49324378 		.ascii	"I2CxCONCLR_I2ENC\000"
 13873      434F4E43 
 13873      4C525F49 
 13873      32454E43 
 13873      00
 13874              	.LASF89:
 13875 0ed5 5F685F65 		.ascii	"_h_errno\000"
 13875      72726E6F 
 13875      00
 13876              	.LASF400:
 13877 0ede 5649435F 		.ascii	"VIC_Channel_UART0\000"
 13877      4368616E 
 13877      6E656C5F 
 13877      55415254 
 13877      3000
 13878              	.LASF401:
 13879 0ef0 5649435F 		.ascii	"VIC_Channel_UART1\000"
 13879      4368616E 
 13879      6E656C5F 
 13879      55415254 
 13879      3100
 13880              	.LASF137:
 13881 0f02 66676574 		.ascii	"fgetc\000"
 13881      6300
 13882              	.LASF351:
 13883 0f08 66617431 		.ascii	"fat16_open_dir\000"
 13883      365F6F70 
 13883      656E5F64 
 13883      697200
 13884              	.LASF140:
 13885 0f17 666F7065 		.ascii	"fopen\000"
 13885      6E00
 13886              	.LASF349:
 13887 0f1d 73697A65 		.ascii	"size_new\000"
 13887      5F6E6577 
 13887      00
 13888              	.LASF318:
 13889 0f26 6661745F 		.ascii	"fat_entry\000"
 13889      656E7472 
 13889      7900
 13890              	.LASF160:
 13891 0f30 73747265 		.ascii	"strerror\000"
 13891      72726F72 
ARM GAS  /tmp/ccwDRvq0.s 			page 295


 13891      00
 13892              	.LASF139:
 13893 0f39 66676574 		.ascii	"fgets\000"
 13893      7300
 13894              	.LASF359:
 13895 0f3f 5F5A3135 		.ascii	"_Z15fat16_reset_dirP16fat16_dir_struct\000"
 13895      66617431 
 13895      365F7265 
 13895      7365745F 
 13895      64697250 
 13896              	.LASF295:
 13897 0f66 6D61785F 		.ascii	"max_root_entries\000"
 13897      726F6F74 
 13897      5F656E74 
 13897      72696573 
 13897      00
 13898              	.LASF37:
 13899 0f77 5F5F746D 		.ascii	"__tm_mon\000"
 13899      5F6D6F6E 
 13899      00
 13900              	.LASF319:
 13901 0f80 66617431 		.ascii	"fat16_append_clusters\000"
 13901      365F6170 
 13901      70656E64 
 13901      5F636C75 
 13901      73746572 
 13902              	.LASF373:
 13903 0f96 66726565 		.ascii	"free_dir_entries_needed\000"
 13903      5F646972 
 13903      5F656E74 
 13903      72696573 
 13903      5F6E6565 
 13904              	.LASF462:
 13905 0fae 50574D45 		.ascii	"PWMENA4\000"
 13905      4E413400 
 13906              	.LASF445:
 13907 0fb6 54784343 		.ascii	"TxCCR_CAP3RE\000"
 13907      525F4341 
 13907      50335245 
 13907      00
 13908              	.LASF123:
 13909 0fc3 6C6F6E67 		.ascii	"long double\000"
 13909      20646F75 
 13909      626C6500 
 13910              	.LASF260:
 13911 0fcf 66617431 		.ascii	"fat16_dir_entry_struct\000"
 13911      365F6469 
 13911      725F656E 
 13911      7472795F 
 13911      73747275 
 13912              	.LASF438:
 13913 0fe6 54784343 		.ascii	"TxCCR_CAP0I\000"
 13913      525F4341 
 13913      50304900 
 13914              	.LASF7:
 13915 0ff2 75696E74 		.ascii	"uint16_t\000"
 13915      31365F74 
ARM GAS  /tmp/ccwDRvq0.s 			page 296


 13915      00
 13916              	.LASF294:
 13917 0ffb 6661745F 		.ascii	"fat_copies\000"
 13917      636F7069 
 13917      657300
 13918              	.LASF392:
 13919 1006 66617431 		.ascii	"fat16_file_size\000"
 13919      365F6669 
 13919      6C655F73 
 13919      697A6500 
 13920              	.LASF59:
 13921 1016 5F777269 		.ascii	"_write\000"
 13921      746500
 13922              	.LASF363:
 13923 101d 6E616D65 		.ascii	"name_len\000"
 13923      5F6C656E 
 13923      00
 13924              	.LASF253:
 13925 1026 70617274 		.ascii	"partition_struct\000"
 13925      6974696F 
 13925      6E5F7374 
 13925      72756374 
 13925      00
 13926              	.LASF428:
 13927 1037 54784952 		.ascii	"TxIR_MR0_FLAG\000"
 13927      5F4D5230 
 13927      5F464C41 
 13927      4700
 13928              	.LASF448:
 13929 1045 41447843 		.ascii	"ADxCR_PDN\000"
 13929      525F5044 
 13929      4E00
 13930              	.LASF76:
 13931 104f 5F72616E 		.ascii	"_rand_next\000"
 13931      645F6E65 
 13931      787400
 13932              	.LASF433:
 13933 105a 54784952 		.ascii	"TxIR_CR1_FLAG\000"
 13933      5F435231 
 13933      5F464C41 
 13933      4700
 13934              	.LASF453:
 13935 1068 4C455231 		.ascii	"LER1_EN\000"
 13935      5F454E00 
 13936              	.LASF47:
 13937 1070 5F617465 		.ascii	"_atexit\000"
 13937      78697400 
 13938              	.LASF284:
 13939 1078 656E7472 		.ascii	"entry_num\000"
 13939      795F6E75 
 13939      6D00
 13940              	.LASF195:
 13941 1082 746D5F69 		.ascii	"tm_isdst\000"
 13941      73647374 
 13941      00
 13942              	.LASF393:
 13943 108b 5F5A3135 		.ascii	"_Z15fat16_file_sizeP17fat16_file_struct\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 297


 13943      66617431 
 13943      365F6669 
 13943      6C655F73 
 13943      697A6550 
 13944              	.LASF232:
 13945 10b3 5F5A4E34 		.ascii	"_ZN4FIFO5WriteEh\000"
 13945      4649464F 
 13945      35577269 
 13945      74654568 
 13945      00
 13946              	.LASF312:
 13947 10c4 66617431 		.ascii	"fat16_open\000"
 13947      365F6F70 
 13947      656E00
 13948              	.LASF425:
 13949 10cf 54785443 		.ascii	"TxTCR_COUNTER_RESET\000"
 13949      525F434F 
 13949      554E5445 
 13949      525F5245 
 13949      53455400 
 13950              	.LASF304:
 13951 10e3 70617265 		.ascii	"parent\000"
 13951      6E7400
 13952              	.LASF323:
 13953 10ea 636F756E 		.ascii	"count_left\000"
 13953      745F6C65 
 13953      667400
 13954              	.LASF441:
 13955 10f5 54784343 		.ascii	"TxCCR_CAP1I\000"
 13955      525F4341 
 13955      50314900 
 13956              	.LASF6:
 13957 1101 73686F72 		.ascii	"short int\000"
 13957      7420696E 
 13957      7400
 13958              	.LASF410:
 13959 110b 53535053 		.ascii	"SSPSR_TNF\000"
 13959      525F544E 
 13959      4600
 13960              	.LASF217:
 13961 1115 48617344 		.ascii	"HasData\000"
 13961      61746100 
 13962              	.LASF303:
 13963 111d 66617431 		.ascii	"fat16_read_sub_dir_entry\000"
 13963      365F7265 
 13963      61645F73 
 13963      75625F64 
 13963      69725F65 
 13964              	.LASF175:
 13965 1136 6D627374 		.ascii	"mbstowcs\000"
 13965      6F776373 
 13965      00
 13966              	.LASF271:
 13967 113f 636C7573 		.ascii	"cluster_size\000"
 13967      7465725F 
 13967      73697A65 
 13967      00
ARM GAS  /tmp/ccwDRvq0.s 			page 298


 13968              	.LASF358:
 13969 114c 66617431 		.ascii	"fat16_reset_dir\000"
 13969      365F7265 
 13969      7365745F 
 13969      64697200 
 13970              	.LASF259:
 13971 115c 6C656E67 		.ascii	"length\000"
 13971      746800
 13972              	.LASF141:
 13973 1163 66726561 		.ascii	"fread\000"
 13973      6400
 13974              	.LASF435:
 13975 1169 54784952 		.ascii	"TxIR_CR3_FLAG\000"
 13975      5F435233 
 13975      5F464C41 
 13975      4700
 13976              	.LASF450:
 13977 1177 41447847 		.ascii	"ADxGDR_DONE\000"
 13977      44525F44 
 13977      4F4E4500 
 13978              	.LASF113:
 13979 1183 5F5F7366 		.ascii	"__sf\000"
 13979      00
 13980              	.LASF167:
 13981 1188 61746578 		.ascii	"atexit\000"
 13981      697400
 13982              	.LASF479:
 13983 118f 5F5A3130 		.ascii	"_Z10fat16_openP16partition_struct\000"
 13983      66617431 
 13983      365F6F70 
 13983      656E5031 
 13983      36706172 
 13984              	.LASF258:
 13985 11b1 6F666673 		.ascii	"offset\000"
 13985      657400
 13986              	.LASF396:
 13987 11b8 4343525F 		.ascii	"CCR_CTCRST\000"
 13987      43544352 
 13987      535400
 13988              	.LASF451:
 13989 11c3 50574D4D 		.ascii	"PWMMR0R\000"
 13989      52305200 
 13990              	.LASF100:
 13991 11cb 5F637572 		.ascii	"_current_locale\000"
 13991      72656E74 
 13991      5F6C6F63 
 13991      616C6500 
 13992              	.LASF204:
 13993 11db 676D7469 		.ascii	"gmtime\000"
 13993      6D6500
 13994              	.LASF66:
 13995 11e2 5F646174 		.ascii	"_data\000"
 13995      6100
 13996              	.LASF22:
 13997 11e8 5F5F7763 		.ascii	"__wchb\000"
 13997      686200
 13998              	.LASF133:
ARM GAS  /tmp/ccwDRvq0.s 			page 299


 13999 11ef 66636C6F 		.ascii	"fclose\000"
 13999      736500
 14000              	.LASF38:
 14001 11f6 5F5F746D 		.ascii	"__tm_year\000"
 14001      5F796561 
 14001      7200
 14002              	.LASF437:
 14003 1200 54784343 		.ascii	"TxCCR_CAP0FE\000"
 14003      525F4341 
 14003      50304645 
 14003      00
 14004              	.LASF477:
 14005 120d 47657449 		.ascii	"GetInstance\000"
 14005      6E737461 
 14005      6E636500 
 14006              	.LASF55:
 14007 1219 5F66696C 		.ascii	"_file\000"
 14007      6500
 14008              	.LASF456:
 14009 121f 4C455234 		.ascii	"LER4_EN\000"
 14009      5F454E00 
 14010              	.LASF430:
 14011 1227 54784952 		.ascii	"TxIR_MR2_FLAG\000"
 14011      5F4D5232 
 14011      5F464C41 
 14011      4700
 14012              	.LASF439:
 14013 1235 54784343 		.ascii	"TxCCR_CAP1RE\000"
 14013      525F4341 
 14013      50315245 
 14013      00
 14014              	.LASF402:
 14015 1242 5649435F 		.ascii	"VIC_Channel_USB\000"
 14015      4368616E 
 14015      6E656C5F 
 14015      55534200 
 14016              	.LASF395:
 14017 1252 4343525F 		.ascii	"CCR_CLKEN\000"
 14017      434C4B45 
 14017      4E00
 14018              	.LASF166:
 14019 125c 6C646976 		.ascii	"ldiv_t\000"
 14019      5F7400
 14020              	.LASF382:
 14021 1263 66617431 		.ascii	"fat16_get_fs_free\000"
 14021      365F6765 
 14021      745F6673 
 14021      5F667265 
 14021      6500
 14022              	.LASF74:
 14023 1275 5F6C6F63 		.ascii	"_localtime_buf\000"
 14023      616C7469 
 14023      6D655F62 
 14023      756600
 14024              	.LASF446:
 14025 1284 54784343 		.ascii	"TxCCR_CAP3FE\000"
 14025      525F4341 
ARM GAS  /tmp/ccwDRvq0.s 			page 300


 14025      50334645 
 14025      00
 14026              	.LASF135:
 14027 1291 66657272 		.ascii	"ferror\000"
 14027      6F7200
 14028              	.LASF92:
 14029 1298 5F756E75 		.ascii	"_unused\000"
 14029      73656400 
 14030              	.LASF275:
 14031 12a0 70617274 		.ascii	"partition\000"
 14031      6974696F 
 14031      6E00
 14032              	.LASF109:
 14033 12aa 5F6E6577 		.ascii	"_new\000"
 14033      00
 14034              	.LASF152:
 14035 12af 72657769 		.ascii	"rewind\000"
 14035      6E6400
 14036              	.LASF107:
 14037 12b6 5F637674 		.ascii	"_cvtlen\000"
 14037      6C656E00 
 14038              	.LASF278:
 14039 12be 6469725F 		.ascii	"dir_entry\000"
 14039      656E7472 
 14039      7900
 14040              	.LASF81:
 14041 12c8 5F6C3634 		.ascii	"_l64a_buf\000"
 14041      615F6275 
 14041      6600
 14042              	.LASF99:
 14043 12d2 5F637572 		.ascii	"_current_category\000"
 14043      72656E74 
 14043      5F636174 
 14043      65676F72 
 14043      7900
 14044              	.LASF444:
 14045 12e4 54784343 		.ascii	"TxCCR_CAP2I\000"
 14045      525F4341 
 14045      50324900 
 14046              	.LASF221:
 14047 12f0 57726974 		.ascii	"Write\000"
 14047      6500
 14048              	.LASF252:
 14049 12f6 64657669 		.ascii	"device_write_t\000"
 14049      63655F77 
 14049      72697465 
 14049      5F7400
 14050              	.LASF335:
 14051 1305 62756666 		.ascii	"buffer_len\000"
 14051      65725F6C 
 14051      656E00
 14052              	.LASF424:
 14053 1310 54785443 		.ascii	"TxTCR_COUNTER_ENABLE\000"
 14053      525F434F 
 14053      554E5445 
 14053      525F454E 
 14053      41424C45 
ARM GAS  /tmp/ccwDRvq0.s 			page 301


 14054              	.LASF310:
 14055 1325 7261775F 		.ascii	"raw_entry\000"
 14055      656E7472 
 14055      7900
 14056              	.LASF243:
 14057 132f 5F5A4E35 		.ascii	"_ZN5UART08ReadCharEv\000"
 14057      55415254 
 14057      30385265 
 14057      61644368 
 14057      61724576 
 14058              	.LASF247:
 14059 1344 57726974 		.ascii	"WriteLine\000"
 14059      654C696E 
 14059      6500
 14060              	.LASF32:
 14061 134e 5F5F746D 		.ascii	"__tm\000"
 14061      00
 14062              	.LASF330:
 14063 1353 5F5A3135 		.ascii	"_Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_"
 14063      66617431 
 14063      365F6F70 
 14063      656E5F66 
 14063      696C6550 
 14064 1386 656E7472 		.ascii	"entry_struct\000"
 14064      795F7374 
 14064      72756374 
 14064      00
 14065              	.LASF127:
 14066 1393 5F5F7661 		.ascii	"__va_list\000"
 14066      5F6C6973 
 14066      7400
 14067              	.LASF67:
 14068 139d 5F6C6F63 		.ascii	"_lock\000"
 14068      6B00
 14069              	.LASF347:
 14070 13a3 66617431 		.ascii	"fat16_resize_file\000"
 14070      365F7265 
 14070      73697A65 
 14070      5F66696C 
 14070      6500
 14071              	.LASF183:
 14072 13b5 73747274 		.ascii	"strtoul\000"
 14072      6F756C00 
 14073              	.LASF12:
 14074 13bd 6C6F6E67 		.ascii	"long unsigned int\000"
 14074      20756E73 
 14074      69676E65 
 14074      6420696E 
 14074      7400
 14075              	.LASF75:
 14076 13cf 5F67616D 		.ascii	"_gamma_signgam\000"
 14076      6D615F73 
 14076      69676E67 
 14076      616D00
 14077              	.LASF339:
 14078 13de 66617431 		.ascii	"fat16_write_file\000"
 14078      365F7772 
ARM GAS  /tmp/ccwDRvq0.s 			page 302


 14078      6974655F 
 14078      66696C65 
 14078      00
 14079              	.LASF20:
 14080 13ef 77696E74 		.ascii	"wint_t\000"
 14080      5F7400
 14081              	.LASF305:
 14082 13f6 636C7573 		.ascii	"cluster_offset\000"
 14082      7465725F 
 14082      6F666673 
 14082      657400
 14083              	.LASF136:
 14084 1405 66666C75 		.ascii	"fflush\000"
 14084      736800
 14085              	.LASF9:
 14086 140c 696E7433 		.ascii	"int32_t\000"
 14086      325F7400 
 14087              	.LASF34:
 14088 1414 5F5F746D 		.ascii	"__tm_min\000"
 14088      5F6D696E 
 14088      00
 14089              	.LASF455:
 14090 141d 4C455233 		.ascii	"LER3_EN\000"
 14090      5F454E00 
 14091              	.LASF161:
 14092 1425 73747274 		.ascii	"strtok\000"
 14092      6F6B00
 14093              	.LASF269:
 14094 142c 6661745F 		.ascii	"fat_size\000"
 14094      73697A65 
 14094      00
 14095              	.LASF480:
 14096 1435 5F5A3131 		.ascii	"_Z11fat16_closeP15fat16_fs_struct\000"
 14096      66617431 
 14096      365F636C 
 14096      6F736550 
 14096      31356661 
 14097              	.LASF188:
 14098 1457 746D5F6D 		.ascii	"tm_min\000"
 14098      696E00
 14099              	.LASF44:
 14100 145e 5F64736F 		.ascii	"_dso_handle\000"
 14100      5F68616E 
 14100      646C6500 
 14101              	.LASF242:
 14102 146a 52656164 		.ascii	"ReadChar\000"
 14102      43686172 
 14102      00
 14103              	.LASF345:
 14104 1473 7768656E 		.ascii	"whence\000"
 14104      636500
 14105              	.LASF322:
 14106 147a 636C7573 		.ascii	"cluster_next\000"
 14106      7465725F 
 14106      6E657874 
 14106      00
 14107              	.LASF447:
ARM GAS  /tmp/ccwDRvq0.s 			page 303


 14108 1487 54784343 		.ascii	"TxCCR_CAP3I\000"
 14108      525F4341 
 14108      50334900 
 14109              	.LASF257:
 14110 1493 74797065 		.ascii	"type\000"
 14110      00
 14111              	.LASF95:
 14112 1498 5F737464 		.ascii	"_stdout\000"
 14112      6F757400 
 14113              	.LASF196:
 14114 14a0 5F5F6578 		.ascii	"__extra_1\000"
 14114      7472615F 
 14114      3100
 14115              	.LASF197:
 14116 14aa 5F5F6578 		.ascii	"__extra_2\000"
 14116      7472615F 
 14116      3200
 14117              	.LASF4:
 14118 14b4 756E7369 		.ascii	"unsigned char\000"
 14118      676E6564 
 14118      20636861 
 14118      7200
 14119              	.LASF415:
 14120 14c2 49324378 		.ascii	"I2CxCONCLR_AA\000"
 14120      434F4E43 
 14120      4C525F41 
 14120      4100
 14121              	.LASF156:
 14122 14d0 746D7066 		.ascii	"tmpfile\000"
 14122      696C6500 
 14123              	.LASF291:
 14124 14d8 62797465 		.ascii	"bytes_per_sector\000"
 14124      735F7065 
 14124      725F7365 
 14124      63746F72 
 14124      00
 14125              	.LASF411:
 14126 14e9 53535053 		.ascii	"SSPSR_RNE\000"
 14126      525F524E 
 14126      4500
 14127              	.LASF412:
 14128 14f3 53535053 		.ascii	"SSPSR_BSY\000"
 14128      525F4253 
 14128      5900
 14129              	.LASF329:
 14130 14fd 5F5A3237 		.ascii	"_Z27fat16_get_dir_entry_of_pathP15fat16_fs_structPK"
 14130      66617431 
 14130      365F6765 
 14130      745F6469 
 14130      725F656E 
 14131 1530 63503232 		.ascii	"cP22fat16_dir_entry_struct\000"
 14131      66617431 
 14131      365F6469 
 14131      725F656E 
 14131      7472795F 
 14132              	.LASF18:
 14133 154b 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 304


 14133      4B5F5245 
 14133      43555253 
 14133      4956455F 
 14133      5400
 14134              	.LASF262:
 14135 155d 61747472 		.ascii	"attributes\000"
 14135      69627574 
 14135      657300
 14136              	.LASF286:
 14137 1568 66617431 		.ascii	"fat16_usage_count_callback_arg\000"
 14137      365F7573 
 14137      6167655F 
 14137      636F756E 
 14137      745F6361 
 14138              	.LASF134:
 14139 1587 66656F66 		.ascii	"feof\000"
 14139      00
 14140              	.LASF84:
 14141 158c 5F6D6272 		.ascii	"_mbrlen_state\000"
 14141      6C656E5F 
 14141      73746174 
 14141      6500
 14142              	.LASF185:
 14143 159a 77637374 		.ascii	"wcstombs\000"
 14143      6F6D6273 
 14143      00
 14144              	.LASF182:
 14145 15a3 73747274 		.ascii	"strtol\000"
 14145      6F6C00
 14146              	.LASF231:
 14147 15aa 6669666F 		.ascii	"fifo\000"
 14147      00
 14148              	.LASF117:
 14149 15af 5F6E696F 		.ascii	"_niobs\000"
 14149      627300
 14150              	.LASF50:
 14151 15b6 5F5F7362 		.ascii	"__sbuf\000"
 14151      756600
 14152              	.LASF356:
 14153 15bd 66617431 		.ascii	"fat16_read_dir\000"
 14153      365F7265 
 14153      61645F64 
 14153      697200
 14154              	.LASF116:
 14155 15cc 5F676C75 		.ascii	"_glue\000"
 14155      6500
 14156              	.LASF220:
 14157 15d2 5F5A4E34 		.ascii	"_ZN4FIFO4ReadEv\000"
 14157      4649464F 
 14157      34526561 
 14157      64457600 
 14158              	.LASF193:
 14159 15e2 746D5F77 		.ascii	"tm_wday\000"
 14159      64617900 
 14160              	.LASF334:
 14161 15ea 5F5A3135 		.ascii	"_Z15fat16_read_fileP17fat16_file_structPht\000"
 14161      66617431 
ARM GAS  /tmp/ccwDRvq0.s 			page 305


 14161      365F7265 
 14161      61645F66 
 14161      696C6550 
 14162              	.LASF112:
 14163 1615 5F5F7367 		.ascii	"__sglue\000"
 14163      6C756500 
 14164              	.LASF83:
 14165 161d 5F676574 		.ascii	"_getdate_err\000"
 14165      64617465 
 14165      5F657272 
 14165      00
 14166              	.LASF72:
 14167 162a 5F737472 		.ascii	"_strtok_last\000"
 14167      746F6B5F 
 14167      6C617374 
 14167      00
 14168              	.LASF79:
 14169 1637 5F6D6274 		.ascii	"_mbtowc_state\000"
 14169      6F77635F 
 14169      73746174 
 14169      6500
 14170              	.LASF327:
 14171 1645 66617431 		.ascii	"fat16_terminate_clusters\000"
 14171      365F7465 
 14171      726D696E 
 14171      6174655F 
 14171      636C7573 
 14172              	.LASF449:
 14173 165e 41447843 		.ascii	"ADxCR_START_NOW\000"
 14173      525F5354 
 14173      4152545F 
 14173      4E4F5700 
 14174              	.LASF189:
 14175 166e 746D5F68 		.ascii	"tm_hour\000"
 14175      6F757200 
 14176              	.LASF237:
 14177 1676 5F5A4E35 		.ascii	"_ZN5UART07DisableEv\000"
 14177      55415254 
 14177      30374469 
 14177      7361626C 
 14177      65457600 
 14178              	.LASF43:
 14179 168a 5F666E61 		.ascii	"_fnargs\000"
 14179      72677300 
 14180              	.LASF238:
 14181 1692 456E6162 		.ascii	"Enable\000"
 14181      6C6500
 14182              	.LASF1:
 14183 1699 7369676E 		.ascii	"signed char\000"
 14183      65642063 
 14183      68617200 
 14184              	.LASF328:
 14185 16a5 66617431 		.ascii	"fat16_open_file\000"
 14185      365F6F70 
 14185      656E5F66 
 14185      696C6500 
 14186              	.LASF234:
ARM GAS  /tmp/ccwDRvq0.s 			page 306


 14187 16b5 55415254 		.ascii	"UART0\000"
 14187      3000
 14188              	.LASF8:
 14189 16bb 73686F72 		.ascii	"short unsigned int\000"
 14189      7420756E 
 14189      7369676E 
 14189      65642069 
 14189      6E7400
 14190              	.LASF187:
 14191 16ce 746D5F73 		.ascii	"tm_sec\000"
 14191      656300
 14192              	.LASF367:
 14193 16d5 6C666E5F 		.ascii	"lfn_entry\000"
 14193      656E7472 
 14193      7900
 14194              	.LASF235:
 14195 16df 44697361 		.ascii	"Disable\000"
 14195      626C6500 
 14196              	.LASF169:
 14197 16e7 61746F69 		.ascii	"atoi\000"
 14197      00
 14198              	.LASF470:
 14199 16ec 4849445F 		.ascii	"HID_MESSAGE_ID_SYSTEM_DEBUG\000"
 14199      4D455353 
 14199      4147455F 
 14199      49445F53 
 14199      59535445 
 14200              	.LASF227:
 14201 1708 42617564 		.ascii	"BaudRate19200\000"
 14201      52617465 
 14201      31393230 
 14201      3000
 14202              	.LASF149:
 14203 1716 70657272 		.ascii	"perror\000"
 14203      6F7200
 14204              	.LASF45:
 14205 171d 5F666E74 		.ascii	"_fntypes\000"
 14205      79706573 
 14205      00
 14206              	.LASF53:
 14207 1726 5F5F7346 		.ascii	"__sFILE\000"
 14207      494C4500 
 14208              	.LASF138:
 14209 172e 66676574 		.ascii	"fgetpos\000"
 14209      706F7300 
 14210              	.LASF288:
 14211 1736 62756666 		.ascii	"buffer_size\000"
 14211      65725F73 
 14211      697A6500 
 14212              	.LASF274:
 14213 1742 66617431 		.ascii	"fat16_fs_struct\000"
 14213      365F6673 
 14213      5F737472 
 14213      75637400 
 14214              	.LASF16:
 14215 1752 646F7562 		.ascii	"double\000"
 14215      6C6500
ARM GAS  /tmp/ccwDRvq0.s 			page 307


 14216              	.LASF466:
 14217 1759 50574D54 		.ascii	"PWMTCR_RESET\000"
 14217      43525F52 
 14217      45534554 
 14217      00
 14218              	.LASF375:
 14219 1766 6469725F 		.ascii	"dir_entry_offset\000"
 14219      656E7472 
 14219      795F6F66 
 14219      66736574 
 14219      00
 14220              	.LASF308:
 14221 1777 66617431 		.ascii	"fat16_dir_entry_read_callback\000"
 14221      365F6469 
 14221      725F656E 
 14221      7472795F 
 14221      72656164 
 14222              	.LASF440:
 14223 1795 54784343 		.ascii	"TxCCR_CAP1FE\000"
 14223      525F4341 
 14223      50314645 
 14223      00
 14224              	.LASF406:
 14225 17a2 55494952 		.ascii	"UIIR_RDA_INT\000"
 14225      5F524441 
 14225      5F494E54 
 14225      00
 14226              	.LASF63:
 14227 17af 5F6E6275 		.ascii	"_nbuf\000"
 14227      6600
 14228              	.LASF71:
 14229 17b5 5F756E75 		.ascii	"_unused_rand\000"
 14229      7365645F 
 14229      72616E64 
 14229      00
 14230              	.LASF384:
 14231 17c2 636F756E 		.ascii	"count_arg\000"
 14231      745F6172 
 14231      6700
 14232              	.LASF457:
 14233 17cc 4C455235 		.ascii	"LER5_EN\000"
 14233      5F454E00 
 14234              	.LASF131:
 14235 17d4 46494C45 		.ascii	"FILE\000"
 14235      00
 14236              	.LASF476:
 14237 17d9 5F5A4E35 		.ascii	"_ZN5UART03ISREv\000"
 14237      55415254 
 14237      30334953 
 14237      52457600 
 14238              	.LASF164:
 14239 17e9 6469765F 		.ascii	"div_t\000"
 14239      7400
 14240              	.LASF416:
 14241 17ef 49324378 		.ascii	"I2CxCONCLR_SI\000"
 14241      434F4E43 
 14241      4C525F53 
ARM GAS  /tmp/ccwDRvq0.s 			page 308


 14241      4900
 14242              	.LASF69:
 14243 17fd 5F666C61 		.ascii	"_flags2\000"
 14243      67733200 
 14244              	.LASF46:
 14245 1805 5F69735F 		.ascii	"_is_cxa\000"
 14245      63786100 
 14246              	.LASF229:
 14247 180d 42617564 		.ascii	"BaudRate57600\000"
 14247      52617465 
 14247      35373630 
 14247      3000
 14248              	.LASF266:
 14249 181b 66617431 		.ascii	"fat16_header_struct\000"
 14249      365F6865 
 14249      61646572 
 14249      5F737472 
 14249      75637400 
 14250              	.LASF120:
 14251 182f 5F736565 		.ascii	"_seed\000"
 14251      6400
 14252              	.LASF364:
 14253 1835 6C666E5F 		.ascii	"lfn_entry_count\000"
 14253      656E7472 
 14253      795F636F 
 14253      756E7400 
 14254              	.LASF60:
 14255 1845 5F736565 		.ascii	"_seek\000"
 14255      6B00
 14256              	.LASF387:
 14257 184b 5F5A3136 		.ascii	"_Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_"
 14257      66696E64 
 14257      5F66696C 
 14257      655F696E 
 14257      5F646972 
 14258 187e 73747275 		.ascii	"structPKcP22fat16_dir_entry_struct\000"
 14258      6374504B 
 14258      63503232 
 14258      66617431 
 14258      365F6469 
 14259              	.LASF307:
 14260 18a1 66617431 		.ascii	"fat16_dir_entry_seek_callback\000"
 14260      365F6469 
 14260      725F656E 
 14260      7472795F 
 14260      7365656B 
 14261              	.LASF302:
 14262 18bf 66617431 		.ascii	"fat16_read_root_dir_entry\000"
 14262      365F7265 
 14262      61645F72 
 14262      6F6F745F 
 14262      6469725F 
 14263              	.LASF96:
 14264 18d9 5F737464 		.ascii	"_stderr\000"
 14264      65727200 
 14265              	.LASF91:
 14266 18e1 5F6E6D61 		.ascii	"_nmalloc\000"
ARM GAS  /tmp/ccwDRvq0.s 			page 309


 14266      6C6C6F63 
 14266      00
 14267              	.LASF118:
 14268 18ea 5F696F62 		.ascii	"_iobs\000"
 14268      7300
 14269              	.LASF377:
 14270 18f0 66697273 		.ascii	"first_char\000"
 14270      745F6368 
 14270      617200
 14271              	.LASF178:
 14272 18fb 71736F72 		.ascii	"qsort\000"
 14272      7400
 14273              		.ident	"GCC: (Sourcery G++ Lite 2011.03-42) 4.5.2"
ARM GAS  /tmp/ccwDRvq0.s 			page 310


DEFINED SYMBOLS
                            *ABS*:00000000 fat16.cpp
     /tmp/ccwDRvq0.s:56     .rodata:00000000 $d
     /tmp/ccwDRvq0.s:63     .text._Z10fat16_openP16partition_struct:00000000 $a
     /tmp/ccwDRvq0.s:66     .text._Z10fat16_openP16partition_struct:00000000 _Z10fat16_openP16partition_struct
     /tmp/ccwDRvq0.s:213    .text._ZL17fat16_read_headerP15fat16_fs_struct:00000000 _ZL17fat16_read_headerP15fat16_fs_struct
     /tmp/ccwDRvq0.s:160    .text._Z10fat16_openP16partition_struct:000000d8 $d
     /tmp/ccwDRvq0.s:166    .text._Z11fat16_closeP15fat16_fs_struct:00000000 $a
     /tmp/ccwDRvq0.s:169    .text._Z11fat16_closeP15fat16_fs_struct:00000000 _Z11fat16_closeP15fat16_fs_struct
     /tmp/ccwDRvq0.s:211    .text._ZL17fat16_read_headerP15fat16_fs_struct:00000000 $a
     /tmp/ccwDRvq0.s:512    .text._ZL17fat16_read_headerP15fat16_fs_struct:00000374 $d
     /tmp/ccwDRvq0.s:519    .text._ZL25fat16_read_root_dir_entryPK15fat16_fs_structtP22fat16_dir_entry_struct:00000000 $a
     /tmp/ccwDRvq0.s:521    .text._ZL25fat16_read_root_dir_entryPK15fat16_fs_structtP22fat16_dir_entry_struct:00000000 _ZL25fat16_read_root_dir_entryPK15fat16_fs_structtP22fat16_dir_entry_struct
     /tmp/ccwDRvq0.s:672    .text._ZL25fat16_read_root_dir_entryPK15fat16_fs_structtP22fat16_dir_entry_struct:00000198 $d
     /tmp/ccwDRvq0.s:871    .text._ZL29fat16_dir_entry_seek_callbackPhmPv:00000000 _ZL29fat16_dir_entry_seek_callbackPhmPv
     /tmp/ccwDRvq0.s:972    .text._ZL29fat16_dir_entry_read_callbackPhmPv:00000000 _ZL29fat16_dir_entry_read_callbackPhmPv
     /tmp/ccwDRvq0.s:678    .text._ZL24fat16_read_sub_dir_entryPK15fat16_fs_structtPK22fat16_dir_entry_structPS2_:00000000 $a
     /tmp/ccwDRvq0.s:680    .text._ZL24fat16_read_sub_dir_entryPK15fat16_fs_structtPK22fat16_dir_entry_structPS2_:00000000 _ZL24fat16_read_sub_dir_entryPK15fat16_fs_structtPK22fat16_dir_entry_structPS2_
     /tmp/ccwDRvq0.s:1630   .text._ZL22fat16_get_next_clusterPK15fat16_fs_structt:00000000 _ZL22fat16_get_next_clusterPK15fat16_fs_structt
     /tmp/ccwDRvq0.s:863    .text._ZL24fat16_read_sub_dir_entryPK15fat16_fs_structtPK22fat16_dir_entry_structPS2_:00000200 $d
     /tmp/ccwDRvq0.s:869    .text._ZL29fat16_dir_entry_seek_callbackPhmPv:00000000 $a
     /tmp/ccwDRvq0.s:970    .text._ZL29fat16_dir_entry_read_callbackPhmPv:00000000 $a
     /tmp/ccwDRvq0.s:1057   .text._ZL25fat16_interpret_dir_entryP22fat16_dir_entry_structPKh:00000000 _ZL25fat16_interpret_dir_entryP22fat16_dir_entry_structPKh
     /tmp/ccwDRvq0.s:1055   .text._ZL25fat16_interpret_dir_entryP22fat16_dir_entry_structPKh:00000000 $a
     /tmp/ccwDRvq0.s:1425   .text._Z27fat16_get_dir_entry_of_pathP15fat16_fs_structPKcP22fat16_dir_entry_struct:00000000 $a
     /tmp/ccwDRvq0.s:1428   .text._Z27fat16_get_dir_entry_of_pathP15fat16_fs_structPKcP22fat16_dir_entry_struct:00000000 _Z27fat16_get_dir_entry_of_pathP15fat16_fs_structPKcP22fat16_dir_entry_struct
     /tmp/ccwDRvq0.s:3468   .text._Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_entry_struct:00000000 _Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_entry_struct
     /tmp/ccwDRvq0.s:3548   .text._Z15fat16_close_dirP16fat16_dir_struct:00000000 _Z15fat16_close_dirP16fat16_dir_struct
     /tmp/ccwDRvq0.s:3582   .text._Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct:00000000 _Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct
     /tmp/ccwDRvq0.s:1628   .text._ZL22fat16_get_next_clusterPK15fat16_fs_structt:00000000 $a
     /tmp/ccwDRvq0.s:1741   .text._ZL22fat16_get_next_clusterPK15fat16_fs_structt:00000120 $d
     /tmp/ccwDRvq0.s:1748   .text._ZL21fat16_append_clustersPK15fat16_fs_structtt:00000000 $a
     /tmp/ccwDRvq0.s:1750   .text._ZL21fat16_append_clustersPK15fat16_fs_structtt:00000000 _ZL21fat16_append_clustersPK15fat16_fs_structtt
     /tmp/ccwDRvq0.s:1996   .text._ZL19fat16_free_clustersPK15fat16_fs_structt:00000000 _ZL19fat16_free_clustersPK15fat16_fs_structt
     /tmp/ccwDRvq0.s:1994   .text._ZL19fat16_free_clustersPK15fat16_fs_structt:00000000 $a
     /tmp/ccwDRvq0.s:2156   .text._ZL19fat16_free_clustersPK15fat16_fs_structt:000001ac $d
     /tmp/ccwDRvq0.s:2163   .text._ZL24fat16_terminate_clustersPK15fat16_fs_structt:00000000 $a
     /tmp/ccwDRvq0.s:2165   .text._ZL24fat16_terminate_clustersPK15fat16_fs_structt:00000000 _ZL24fat16_terminate_clustersPK15fat16_fs_structt
     /tmp/ccwDRvq0.s:2260   .text._Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_entry_struct:00000000 $a
     /tmp/ccwDRvq0.s:2263   .text._Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_entry_struct:00000000 _Z15fat16_open_fileP15fat16_fs_structPK22fat16_dir_entry_struct
     /tmp/ccwDRvq0.s:2345   .text._Z16fat16_close_fileP17fat16_file_struct:00000000 $a
     /tmp/ccwDRvq0.s:2348   .text._Z16fat16_close_fileP17fat16_file_struct:00000000 _Z16fat16_close_fileP17fat16_file_struct
     /tmp/ccwDRvq0.s:2380   .text._Z15fat16_read_fileP17fat16_file_structPht:00000000 $a
     /tmp/ccwDRvq0.s:2383   .text._Z15fat16_read_fileP17fat16_file_structPht:00000000 _Z15fat16_read_fileP17fat16_file_structPht
     /tmp/ccwDRvq0.s:2686   .text._Z15fat16_read_fileP17fat16_file_structPht:00000368 $d
     /tmp/ccwDRvq0.s:2691   .text._Z16fat16_write_fileP17fat16_file_structPKht:00000000 $a
     /tmp/ccwDRvq0.s:2694   .text._Z16fat16_write_fileP17fat16_file_structPKht:00000000 _Z16fat16_write_fileP17fat16_file_structPKht
     /tmp/ccwDRvq0.s:3771   .text._ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct:00000000 _ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct
     /tmp/ccwDRvq0.s:3087   .text._Z16fat16_write_fileP17fat16_file_structPKht:00000458 $d
     /tmp/ccwDRvq0.s:3092   .text._Z15fat16_seek_fileP17fat16_file_structPlh:00000000 $a
     /tmp/ccwDRvq0.s:3095   .text._Z15fat16_seek_fileP17fat16_file_structPlh:00000000 _Z15fat16_seek_fileP17fat16_file_structPlh
     /tmp/ccwDRvq0.s:3225   .text._Z17fat16_resize_fileP17fat16_file_structm:00000000 _Z17fat16_resize_fileP17fat16_file_structm
     /tmp/ccwDRvq0.s:3222   .text._Z17fat16_resize_fileP17fat16_file_structm:00000000 $a
     /tmp/ccwDRvq0.s:3465   .text._Z14fat16_open_dirP15fat16_fs_structPK22fat16_dir_entry_struct:00000000 $a
     /tmp/ccwDRvq0.s:3545   .text._Z15fat16_close_dirP16fat16_dir_struct:00000000 $a
     /tmp/ccwDRvq0.s:3579   .text._Z14fat16_read_dirP16fat16_dir_structP22fat16_dir_entry_struct:00000000 $a
     /tmp/ccwDRvq0.s:3691   .text._Z15fat16_reset_dirP16fat16_dir_struct:00000000 $a
ARM GAS  /tmp/ccwDRvq0.s 			page 311


     /tmp/ccwDRvq0.s:3694   .text._Z15fat16_reset_dirP16fat16_dir_struct:00000000 _Z15fat16_reset_dirP16fat16_dir_struct
     /tmp/ccwDRvq0.s:3729   .text._Z13fat16_set_dirP16fat16_dir_structt:00000000 $a
     /tmp/ccwDRvq0.s:3732   .text._Z13fat16_set_dirP16fat16_dir_structt:00000000 _Z13fat16_set_dirP16fat16_dir_structt
     /tmp/ccwDRvq0.s:3769   .text._ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct:00000000 $a
     /tmp/ccwDRvq0.s:4238   .text._ZL21fat16_write_dir_entryPK15fat16_fs_structPK22fat16_dir_entry_struct:00000554 $d
     /tmp/ccwDRvq0.s:4243   .text._Z17fat16_create_fileP16fat16_dir_structPKcP22fat16_dir_entry_struct:00000000 $a
     /tmp/ccwDRvq0.s:4246   .text._Z17fat16_create_fileP16fat16_dir_structPKcP22fat16_dir_entry_struct:00000000 _Z17fat16_create_fileP16fat16_dir_structPKcP22fat16_dir_entry_struct
     /tmp/ccwDRvq0.s:4563   .text._Z17fat16_create_fileP16fat16_dir_structPKcP22fat16_dir_entry_struct:0000034c $d
     /tmp/ccwDRvq0.s:4568   .text._Z17fat16_delete_fileP15fat16_fs_structP22fat16_dir_entry_struct:00000000 $a
     /tmp/ccwDRvq0.s:4571   .text._Z17fat16_delete_fileP15fat16_fs_structP22fat16_dir_entry_struct:00000000 _Z17fat16_delete_fileP15fat16_fs_structP22fat16_dir_entry_struct
     /tmp/ccwDRvq0.s:4688   .text._Z17fat16_get_fs_sizePK15fat16_fs_struct:00000000 $a
     /tmp/ccwDRvq0.s:4691   .text._Z17fat16_get_fs_sizePK15fat16_fs_struct:00000000 _Z17fat16_get_fs_sizePK15fat16_fs_struct
     /tmp/ccwDRvq0.s:4728   .text._Z17fat16_get_fs_freePK15fat16_fs_struct:00000000 $a
     /tmp/ccwDRvq0.s:4731   .text._Z17fat16_get_fs_freePK15fat16_fs_struct:00000000 _Z17fat16_get_fs_freePK15fat16_fs_struct
     /tmp/ccwDRvq0.s:4847   .text._Z17fat16_get_fs_freePK15fat16_fs_struct:00000124 $d
     /tmp/ccwDRvq0.s:4854   .text._ZL26fat16_get_fs_free_callbackPhmPv:00000000 _ZL26fat16_get_fs_free_callbackPhmPv
     /tmp/ccwDRvq0.s:4852   .text._ZL26fat16_get_fs_free_callbackPhmPv:00000000 $a
     /tmp/ccwDRvq0.s:4929   .text._Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_structPKcP22fat16_dir_entry_struct:00000000 $a
     /tmp/ccwDRvq0.s:4932   .text._Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_structPKcP22fat16_dir_entry_struct:00000000 _Z16find_file_in_dirP15fat16_fs_structP16fat16_dir_structPKcP22fat16_dir_entry_struct
     /tmp/ccwDRvq0.s:4991   .text._Z16open_file_in_dirP15fat16_fs_structP16fat16_dir_structPKc:00000000 $a
     /tmp/ccwDRvq0.s:4994   .text._Z16open_file_in_dirP15fat16_fs_structP16fat16_dir_structPKc:00000000 _Z16open_file_in_dirP15fat16_fs_structP16fat16_dir_structPKc
     /tmp/ccwDRvq0.s:5046   .text._Z15fat16_file_sizeP17fat16_file_struct:00000000 $a
     /tmp/ccwDRvq0.s:5049   .text._Z15fat16_file_sizeP17fat16_file_struct:00000000 _Z15fat16_file_sizeP17fat16_file_struct
     /tmp/ccwDRvq0.s:5075   .rodata:00000038 _ZL12VIC_USB_Intr
     /tmp/ccwDRvq0.s:5080   .rodata:0000003c _ZL9CCR_CLKEN
     /tmp/ccwDRvq0.s:5085   .rodata:00000040 _ZL10CCR_CTCRST
     /tmp/ccwDRvq0.s:5090   .rodata:00000044 _ZL16CCR_CLKSRC_32KHZ
     /tmp/ccwDRvq0.s:5095   .rodata:00000048 _ZL18VIC_Channel_Timer0
     /tmp/ccwDRvq0.s:5100   .rodata:0000004c _ZL18VIC_Channel_Timer1
     /tmp/ccwDRvq0.s:5105   .rodata:00000050 _ZL17VIC_Channel_UART0
     /tmp/ccwDRvq0.s:5110   .rodata:00000054 _ZL17VIC_Channel_UART1
     /tmp/ccwDRvq0.s:5115   .rodata:00000058 _ZL15VIC_Channel_USB
     /tmp/ccwDRvq0.s:5120   .rodata:0000005c _ZL18VICVectCntl_ENABLE
     /tmp/ccwDRvq0.s:5125   .rodata:00000060 _ZL10UIER_ERBFI
     /tmp/ccwDRvq0.s:5130   .rodata:00000064 _ZL12UIIR_ID_MASK
     /tmp/ccwDRvq0.s:5135   .rodata:00000068 _ZL12UIIR_RDA_INT
     /tmp/ccwDRvq0.s:5140   .rodata:0000006c _ZL8ULSR_RDR
     /tmp/ccwDRvq0.s:5145   .rodata:00000070 _ZL5SSEL1
     /tmp/ccwDRvq0.s:5150   .rodata:00000074 _ZL9SSPSR_TFE
     /tmp/ccwDRvq0.s:5155   .rodata:00000078 _ZL9SSPSR_TNF
     /tmp/ccwDRvq0.s:5160   .rodata:0000007c _ZL9SSPSR_RNE
     /tmp/ccwDRvq0.s:5165   .rodata:00000080 _ZL9SSPSR_BSY
     /tmp/ccwDRvq0.s:5170   .rodata:00000084 _ZL11SSPCR0_CPOL
     /tmp/ccwDRvq0.s:5175   .rodata:00000088 _ZL11SSPCR0_CPHA
     /tmp/ccwDRvq0.s:5180   .rodata:0000008c _ZL13I2CxCONCLR_AA
     /tmp/ccwDRvq0.s:5185   .rodata:00000090 _ZL13I2CxCONCLR_SI
     /tmp/ccwDRvq0.s:5190   .rodata:00000094 _ZL15I2CxCONCLR_STAC
     /tmp/ccwDRvq0.s:5195   .rodata:00000098 _ZL16I2CxCONCLR_I2ENC
     /tmp/ccwDRvq0.s:5200   .rodata:0000009c _ZL13I2CxCONSET_AA
     /tmp/ccwDRvq0.s:5205   .rodata:000000a0 _ZL13I2CxCONSET_SI
     /tmp/ccwDRvq0.s:5210   .rodata:000000a4 _ZL14I2CxCONSET_STO
     /tmp/ccwDRvq0.s:5215   .rodata:000000a8 _ZL14I2CxCONSET_STA
     /tmp/ccwDRvq0.s:5220   .rodata:000000ac _ZL15I2CxCONSET_I2EN
     /tmp/ccwDRvq0.s:5225   .rodata:000000b0 _ZL20TxTCR_COUNTER_ENABLE
     /tmp/ccwDRvq0.s:5230   .rodata:000000b4 _ZL19TxTCR_COUNTER_RESET
     /tmp/ccwDRvq0.s:5235   .rodata:000000b8 _ZL16TxMCR_INT_ON_MR0
     /tmp/ccwDRvq0.s:5240   .rodata:000000bc _ZL18TxMCR_RESET_ON_MR0
ARM GAS  /tmp/ccwDRvq0.s 			page 312


     /tmp/ccwDRvq0.s:5245   .rodata:000000c0 _ZL13TxIR_MR0_FLAG
     /tmp/ccwDRvq0.s:5250   .rodata:000000c4 _ZL13TxIR_MR1_FLAG
     /tmp/ccwDRvq0.s:5255   .rodata:000000c8 _ZL13TxIR_MR2_FLAG
     /tmp/ccwDRvq0.s:5260   .rodata:000000cc _ZL13TxIR_MR3_FLAG
     /tmp/ccwDRvq0.s:5265   .rodata:000000d0 _ZL13TxIR_CR0_FLAG
     /tmp/ccwDRvq0.s:5270   .rodata:000000d4 _ZL13TxIR_CR1_FLAG
     /tmp/ccwDRvq0.s:5275   .rodata:000000d8 _ZL13TxIR_CR2_FLAG
     /tmp/ccwDRvq0.s:5280   .rodata:000000dc _ZL13TxIR_CR3_FLAG
     /tmp/ccwDRvq0.s:5285   .rodata:000000e0 _ZL12TxCCR_CAP0RE
     /tmp/ccwDRvq0.s:5290   .rodata:000000e4 _ZL12TxCCR_CAP0FE
     /tmp/ccwDRvq0.s:5295   .rodata:000000e8 _ZL11TxCCR_CAP0I
     /tmp/ccwDRvq0.s:5300   .rodata:000000ec _ZL12TxCCR_CAP1RE
     /tmp/ccwDRvq0.s:5305   .rodata:000000f0 _ZL12TxCCR_CAP1FE
     /tmp/ccwDRvq0.s:5310   .rodata:000000f4 _ZL11TxCCR_CAP1I
     /tmp/ccwDRvq0.s:5315   .rodata:000000f8 _ZL12TxCCR_CAP2RE
     /tmp/ccwDRvq0.s:5320   .rodata:000000fc _ZL12TxCCR_CAP2FE
     /tmp/ccwDRvq0.s:5325   .rodata:00000100 _ZL11TxCCR_CAP2I
     /tmp/ccwDRvq0.s:5330   .rodata:00000104 _ZL12TxCCR_CAP3RE
     /tmp/ccwDRvq0.s:5335   .rodata:00000108 _ZL12TxCCR_CAP3FE
     /tmp/ccwDRvq0.s:5340   .rodata:0000010c _ZL11TxCCR_CAP3I
     /tmp/ccwDRvq0.s:5345   .rodata:00000110 _ZL9ADxCR_PDN
     /tmp/ccwDRvq0.s:5350   .rodata:00000114 _ZL15ADxCR_START_NOW
     /tmp/ccwDRvq0.s:5355   .rodata:00000118 _ZL11ADxGDR_DONE
     /tmp/ccwDRvq0.s:5360   .rodata:0000011c _ZL7PWMMR0R
     /tmp/ccwDRvq0.s:5365   .rodata:00000120 _ZL7LER0_EN
     /tmp/ccwDRvq0.s:5370   .rodata:00000124 _ZL7LER1_EN
     /tmp/ccwDRvq0.s:5375   .rodata:00000128 _ZL7LER2_EN
     /tmp/ccwDRvq0.s:5380   .rodata:0000012c _ZL7LER3_EN
     /tmp/ccwDRvq0.s:5385   .rodata:00000130 _ZL7LER4_EN
     /tmp/ccwDRvq0.s:5390   .rodata:00000134 _ZL7LER5_EN
     /tmp/ccwDRvq0.s:5395   .rodata:00000138 _ZL7LER6_EN
     /tmp/ccwDRvq0.s:5400   .rodata:0000013c _ZL7PWMENA1
     /tmp/ccwDRvq0.s:5405   .rodata:00000140 _ZL7PWMENA2
     /tmp/ccwDRvq0.s:5410   .rodata:00000144 _ZL7PWMENA3
     /tmp/ccwDRvq0.s:5415   .rodata:00000148 _ZL7PWMENA4
     /tmp/ccwDRvq0.s:5420   .rodata:0000014c _ZL7PWMENA5
     /tmp/ccwDRvq0.s:5425   .rodata:00000150 _ZL7PWMENA6
     /tmp/ccwDRvq0.s:5430   .rodata:00000154 _ZL21PWMTCR_COUNTER_ENABLE
     /tmp/ccwDRvq0.s:5435   .rodata:00000158 _ZL12PWMTCR_RESET
     /tmp/ccwDRvq0.s:5440   .rodata:0000015c _ZL17PWMTCR_PWM_ENABLE
     /tmp/ccwDRvq0.s:5445   .rodata:00000160 _ZL10WDMOD_WDEN
     /tmp/ccwDRvq0.s:5450   .rodata:00000164 _ZL13WDMOD_WDRESET
     /tmp/ccwDRvq0.s:5455   .rodata:00000168 _ZL27HID_MESSAGE_ID_SYSTEM_DEBUG
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN5UART011GetInstanceEv
malloc
_ZN5UART09WriteLineEPKcz
memset
free
__aeabi_idiv
__aeabi_uidiv
strchr
strlen
strncmp
memcpy
ARM GAS  /tmp/ccwDRvq0.s 			page 313


__aeabi_uidivmod
strrchr
strncpy
strcmp
